project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test011,"public void test011() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    int int0 = writerBasedJsonGenerator0.getOutputBuffered();
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test022,"public void test022() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(3954, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test033,"public void test033() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1107, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[0];
    // Undeclared exception!
    try {
        writerBasedJsonGenerator0.writeUTF8String(byteArray0, 55296, 1);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // Operation not supported by generator of type com.fasterxml.jackson.core.json.WriterBasedJsonGenerator
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",1,
project,0,test044,"public void test044() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[0];
    // Undeclared exception!
    try {
        writerBasedJsonGenerator0.writeRawUTF8String(byteArray0, 1, 2514);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // Operation not supported by generator of type com.fasterxml.jackson.core.json.WriterBasedJsonGenerator
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",1,
project,0,test055,"public void test055() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFu|s#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeFieldName(""Can not write a field name, expecting a value"");
    try {
        writerBasedJsonGenerator0.writeFieldName(""nFu|s#Qt^1:"");
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Can not write a field name, expecting a value
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",0,
project,0,test066,"public void test066() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    writerBasedJsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test088,"public void test088() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2322, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0);
    SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator0._rootValueSeparator;
    writerBasedJsonGenerator0.writeFieldName((SerializableString) serializedString0);
    assertEquals(5, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test099,"public void test099() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    JsonGenerator jsonGenerator0 = writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    jsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertEquals(10, jsonGenerator0.getOutputBuffered());
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeFieldName(""Can not write a field name, expecting a value"");
    assertEquals(47, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator0._writeFieldName(defaultPrettyPrinter0.DEFAULT_ROOT_VALUE_SEPARATOR, false);
    assertEquals(4, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 8, (ObjectCodec) null, stringWriter0);
    SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator0._rootValueSeparator;
    writerBasedJsonGenerator0._writeFieldName(serializedString0, false);
    assertEquals(3, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test1313,"public void test1313() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    JsonGenerator jsonGenerator0 = writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    jsonGenerator0.writeStartArray();
    assertEquals(1, jsonGenerator0.getOutputBuffered());
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    try {
        writerBasedJsonGenerator0.writeEndArray();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Current context not an ARRAY but ROOT
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",0,
project,0,test1616,"public void test1616() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator0.writeEndArray();
    assertEquals(3, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test1818,"public void test1818() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber((long) 0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test1919,"public void test1919() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    try {
        writerBasedJsonGenerator0.writeEndObject();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Current context not an object but ROOT
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",0,
project,0,test2020,"public void test2020() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.useDefaultPrettyPrinter();
    writerBasedJsonGenerator0.writeEndObject();
    assertEquals(3, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test2121,"public void test2121() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    char[] charArray0 = iOContext0.allocNameCopyBuffer(32768);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeString(charArray0, 94, 253);
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test2222,"public void test2222() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    // Undeclared exception!
    try {
        writerBasedJsonGenerator0._writePPFieldName(""nFs#Qt^1:"", true);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.json.WriterBasedJsonGenerator"", e);
    }
}",0,
project,0,test2323,"public void test2323() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    JsonGenerator jsonGenerator0 = writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    jsonGenerator0.writeFieldName(""u:UZA>&O:8"");
    assertEquals(13, jsonGenerator0.getOutputBuffered());
}",0,
project,0,test2424,"public void test2424() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.useDefaultPrettyPrinter();
    SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator1._rootValueSeparator;
    writerBasedJsonGenerator0._writeFieldName(serializedString0, true);
    assertEquals(3, writerBasedJsonGenerator1.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator1.getOutputBuffered())"
project,0,test2425,"public void test2425() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.useDefaultPrettyPrinter();
    SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator1._rootValueSeparator;
    writerBasedJsonGenerator0._writeFieldName(serializedString0, true);
    assertEquals(3, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test2526,"public void test2526() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 97, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString((String) null);
    assertEquals(4, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test2627,"public void test2627() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    writerBasedJsonGenerator0.writeFieldName(""Can not write a field name, expecting a value"");
    writerBasedJsonGenerator0.writeNumber((short) 115);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    writerBasedJsonGenerator0.writeString(""1"");
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test2728,"public void test2728() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    SerializedString serializedString0 = new SerializedString(""com.fasterxml.jackson.core.json.WriterBasedJsonGenerator"");
    writerBasedJsonGenerator0.writeString((SerializableString) serializedString0);
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test2930,"public void test2930() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator0._rootValueSeparator;
    writerBasedJsonGenerator0.writeString((SerializableString) serializedString0);
    assertEquals(3, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test3031,"public void test3031() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber((long) 0);
    SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator0._rootValueSeparator;
    writerBasedJsonGenerator0._writeFieldName(serializedString0, true);
    writerBasedJsonGenerator0.writeString((SerializableString) serializedString0);
    assertEquals(2, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test3132,"public void test3132() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    SerializedString serializedString0 = new SerializedString(""JF@&7"");
    writerBasedJsonGenerator0.writeString((SerializableString) serializedString0);
    writerBasedJsonGenerator0.writeNumber(""V"");
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test3233,"public void test3233() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    // Undeclared exception!
    try {
        writerBasedJsonGenerator0.writeRaw("""", 1, 3);
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test3334,"public void test3334() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    // Undeclared exception!
    try {
        writerBasedJsonGenerator0.writeRaw((String) null, 497, 55296);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.json.WriterBasedJsonGenerator"", e);
    }
}",0,
project,0,test3536,"public void test3536() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3987);
    byte[] byteArray0 = new byte[5];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 0);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    SerializedString serializedString0 = new SerializedString("", expecting field name"");
    writerBasedJsonGenerator0._writeFieldName(serializedString0, true);
    assertEquals(22, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test3637,"public void test3637() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator0._rootValueSeparator;
    writerBasedJsonGenerator0._writeFieldName(serializedString0, true);
    writerBasedJsonGenerator0.writeRaw(',');
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test3738,"public void test3738() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber((-203.99656708310306));
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test3839,"public void test3839() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber((long) 0);
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    byte[] byteArray0 = new byte[3];
    writerBasedJsonGenerator0.writeStartArray();
    // Undeclared exception!
    try {
        writerBasedJsonGenerator0.writeBinary(byteArray0, 57343, 3);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 57343
        //
        verifyException(""com.fasterxml.jackson.core.json.WriterBasedJsonGenerator"", e);
    }
}",0,
project,0,test3940,"public void test3940() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    byte[] byteArray0 = new byte[3];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test4041,"public void test4041() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = (-2193);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) mockFileInputStream0, 0);
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test4042,"public void test4042() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = (-2193);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) mockFileInputStream0, 0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test4143,"public void test4143() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    try {
        writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 10);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Too few bytes available: missing 4 bytes (out of 10)
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",0,
project,0,test4244,"public void test4244() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._checkStdFeatureChanges(364, 754);
    writerBasedJsonGenerator0.writeNumber((short) 3930);
    assertEquals(6, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test4345,"public void test4345() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1{"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    writerBasedJsonGenerator0.writeFieldName(""com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer"");
    writerBasedJsonGenerator0.writeNumber((short) 933);
    assertEquals(3, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test4446,"public void test4446() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    writerBasedJsonGenerator0.writeFieldName(""com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer"");
    writerBasedJsonGenerator0._checkStdFeatureChanges(364, 754);
    writerBasedJsonGenerator0.writeNumber((short) 3930);
    assertEquals(6, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test4556,"public void test4556() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test4557,"public void test4557() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test4569,"public void test4569() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test4570,"public void test4570() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test4572,"public void test4572() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test4573,"public void test4573() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test4574,"public void test4574() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test4575,"public void test4575() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test4576,"public void test4576() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test4577,"public void test4577() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test4578,"public void test4578() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test4579,"public void test4579() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test4581,"public void test4581() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test4595,"public void test4595() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertFalse(iOContext0.isResourceManaged())
project,0,test4596,"public void test4596() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test4598,"public void test4598() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test4599,"public void test4599() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test45100,"public void test45100() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test45101,"public void test45101() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test45102,"public void test45102() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test45103,"public void test45103() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test45104,"public void test45104() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test45105,"public void test45105() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test45107,"public void test45107() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test45108,"public void test45108() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test45109,"public void test45109() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test45110,"public void test45110() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test45111,"public void test45111() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test45112,"public void test45112() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test45113,"public void test45113() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test45114,"public void test45114() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test45115,"public void test45115() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test45116,"public void test45116() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test45117,"public void test45117() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test45118,"public void test45118() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test45119,"public void test45119() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(3);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test46129,"public void test46129() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test46130,"public void test46130() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test46142,"public void test46142() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test46143,"public void test46143() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test46145,"public void test46145() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test46146,"public void test46146() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test46147,"public void test46147() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test46148,"public void test46148() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test46149,"public void test46149() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    assertEquals(103, writerBasedJsonGenerator0.getFeatureMask());
}",0,
project,0,test46150,"public void test46150() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test46151,"public void test46151() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test46152,"public void test46152() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test46154,"public void test46154() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test46168,"public void test46168() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test46169,"public void test46169() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test46171,"public void test46171() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test46172,"public void test46172() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test46173,"public void test46173() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(3, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test46174,"public void test46174() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test46175,"public void test46175() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(103, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test46176,"public void test46176() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test46177,"public void test46177() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test46178,"public void test46178() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test46180,"public void test46180() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test46181,"public void test46181() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test46182,"public void test46182() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test46183,"public void test46183() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test46184,"public void test46184() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test46185,"public void test46185() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test46186,"public void test46186() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test46187,"public void test46187() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test46188,"public void test46188() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test46189,"public void test46189() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test46190,"public void test46190() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test46191,"public void test46191() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test46192,"public void test46192() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test47208,"public void test47208() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test47209,"public void test47209() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test47210,"public void test47210() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test47211,"public void test47211() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test47212,"public void test47212() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test47213,"public void test47213() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test47214,"public void test47214() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test47215,"public void test47215() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test47216,"public void test47216() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test47217,"public void test47217() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test47218,"public void test47218() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertNotNull(iOContext0);
}",0,assertNotNull(iOContext0)
project,0,test47221,"public void test47221() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test47222,"public void test47222() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test47223,"public void test47223() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test47224,"public void test47224() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test47225,"public void test47225() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test47226,"public void test47226() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test47228,"public void test47228() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test47229,"public void test47229() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test47230,"public void test47230() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test47231,"public void test47231() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test47232,"public void test47232() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test47248,"public void test47248() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test47249,"public void test47249() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test47250,"public void test47250() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test47251,"public void test47251() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test47252,"public void test47252() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test47253,"public void test47253() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test47255,"public void test47255() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test47256,"public void test47256() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test47257,"public void test47257() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test47258,"public void test47258() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test47259,"public void test47259() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test47262,"public void test47262() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test47263,"public void test47263() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test47264,"public void test47264() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test47265,"public void test47265() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test47266,"public void test47266() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test47267,"public void test47267() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test47269,"public void test47269() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test47270,"public void test47270() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test47271,"public void test47271() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test47272,"public void test47272() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test47273,"public void test47273() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test47274,"public void test47274() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test47275,"public void test47275() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test47276,"public void test47276() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test47277,"public void test47277() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test47278,"public void test47278() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test47279,"public void test47279() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test47280,"public void test47280() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test47281,"public void test47281() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test47282,"public void test47282() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test47283,"public void test47283() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test47284,"public void test47284() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test47285,"public void test47285() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeNumber(2);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test48295,"public void test48295() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test48296,"public void test48296() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test48308,"public void test48308() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test48309,"public void test48309() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test48311,"public void test48311() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test48312,"public void test48312() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(1267, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test48313,"public void test48313() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test48315,"public void test48315() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test48316,"public void test48316() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test48317,"public void test48317() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test48318,"public void test48318() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test48319,"public void test48319() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test48320,"public void test48320() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test48334,"public void test48334() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test48335,"public void test48335() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test48337,"public void test48337() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test48338,"public void test48338() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertEquals(1267, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test48339,"public void test48339() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test48341,"public void test48341() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test48342,"public void test48342() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test48343,"public void test48343() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertEquals(3, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test48344,"public void test48344() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test48345,"public void test48345() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test48346,"public void test48346() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test48347,"public void test48347() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test48348,"public void test48348() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test48349,"public void test48349() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test48350,"public void test48350() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test48351,"public void test48351() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test48352,"public void test48352() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test48353,"public void test48353() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test48354,"public void test48354() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test48355,"public void test48355() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test48356,"public void test48356() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test48357,"public void test48357() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test48358,"public void test48358() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((long) 1);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test49368,"public void test49368() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test49369,"public void test49369() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test49381,"public void test49381() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test49382,"public void test49382() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test49384,"public void test49384() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test49385,"public void test49385() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test49386,"public void test49386() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test49387,"public void test49387() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test49388,"public void test49388() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test49389,"public void test49389() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test49390,"public void test49390() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertEquals((-940), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test49391,"public void test49391() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test49392,"public void test49392() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test49410,"public void test49410() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test49411,"public void test49411() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test49413,"public void test49413() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test49414,"public void test49414() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test49415,"public void test49415() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test49416,"public void test49416() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test49417,"public void test49417() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test49418,"public void test49418() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test49419,"public void test49419() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals((-940), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test49420,"public void test49420() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test49421,"public void test49421() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test49425,"public void test49425() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test49426,"public void test49426() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test49427,"public void test49427() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test49428,"public void test49428() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test49429,"public void test49429() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test49430,"public void test49430() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test49431,"public void test49431() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test49432,"public void test49432() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test49433,"public void test49433() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test49434,"public void test49434() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test49435,"public void test49435() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test49436,"public void test49436() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.ONE;
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test50446,"public void test50446() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test50447,"public void test50447() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test50459,"public void test50459() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test50460,"public void test50460() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test50462,"public void test50462() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test50463,"public void test50463() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test50464,"public void test50464() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test50465,"public void test50465() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test50466,"public void test50466() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test50468,"public void test50468() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test50469,"public void test50469() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    assertEquals((-2164), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test50470,"public void test50470() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test50471,"public void test50471() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test50485,"public void test50485() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test50486,"public void test50486() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test50488,"public void test50488() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test50489,"public void test50489() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test50490,"public void test50490() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test50491,"public void test50491() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test50492,"public void test50492() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test50494,"public void test50494() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertEquals((-2164), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test50495,"public void test50495() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test50496,"public void test50496() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test50497,"public void test50497() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(4, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test50498,"public void test50498() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test50499,"public void test50499() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test50500,"public void test50500() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test50501,"public void test50501() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test50502,"public void test50502() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test50503,"public void test50503() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test50504,"public void test50504() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test50505,"public void test50505() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test50506,"public void test50506() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test50507,"public void test50507() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test50508,"public void test50508() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test50509,"public void test50509() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test51519,"public void test51519() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test51520,"public void test51520() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test51532,"public void test51532() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test51533,"public void test51533() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test51535,"public void test51535() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test51536,"public void test51536() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertEquals(110, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test51537,"public void test51537() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test51538,"public void test51538() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test51540,"public void test51540() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test51541,"public void test51541() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test51542,"public void test51542() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test51543,"public void test51543() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test51544,"public void test51544() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test51563,"public void test51563() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test51564,"public void test51564() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test51566,"public void test51566() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test51567,"public void test51567() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(3, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test51568,"public void test51568() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(110, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test51569,"public void test51569() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test51570,"public void test51570() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test51572,"public void test51572() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test51573,"public void test51573() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test51574,"public void test51574() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test51575,"public void test51575() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test51578,"public void test51578() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertArrayEquals(new byte[] { (byte) 0 }, byteArray0);
}",1,
project,0,test51579,"public void test51579() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test51580,"public void test51580() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test51581,"public void test51581() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test51582,"public void test51582() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test51583,"public void test51583() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test51584,"public void test51584() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test51585,"public void test51585() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test51586,"public void test51586() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test51587,"public void test51587() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test51588,"public void test51588() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test51589,"public void test51589() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test51590,"public void test51590() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test51591,"public void test51591() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    byte[] byteArray0 = new byte[1];
    BigInteger bigInteger0 = new BigInteger(byteArray0);
    writerBasedJsonGenerator0.writeNumber(bigInteger0);
    assertEquals(1, byteArray0.length);
}",1,
project,0,test52601,"public void test52601() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test52602,"public void test52602() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test52614,"public void test52614() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test52615,"public void test52615() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test52617,"public void test52617() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test52618,"public void test52618() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test52619,"public void test52619() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test52620,"public void test52620() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    assertEquals(4000, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test52621,"public void test52621() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test52623,"public void test52623() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test52624,"public void test52624() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test52625,"public void test52625() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test52626,"public void test52626() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test52640,"public void test52640() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test52641,"public void test52641() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test52643,"public void test52643() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test52644,"public void test52644() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,
project,0,test52645,"public void test52645() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertEquals(4000, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test52646,"public void test52646() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test52648,"public void test52648() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test52649,"public void test52649() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertEquals(5, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test52650,"public void test52650() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test52651,"public void test52651() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test52652,"public void test52652() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test52653,"public void test52653() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test52654,"public void test52654() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test52655,"public void test52655() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test52656,"public void test52656() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test52657,"public void test52657() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test52658,"public void test52658() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test52659,"public void test52659() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test52660,"public void test52660() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test52661,"public void test52661() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test52662,"public void test52662() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test52663,"public void test52663() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test52664,"public void test52664() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(0);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((double) 3);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test53674,"public void test53674() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test53675,"public void test53675() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test53687,"public void test53687() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test53688,"public void test53688() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test53690,"public void test53690() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test53691,"public void test53691() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertEquals((-940), writerBasedJsonGenerator0.getFeatureMask());
}",0,
project,0,test53692,"public void test53692() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test53693,"public void test53693() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test53694,"public void test53694() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test53695,"public void test53695() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test53696,"public void test53696() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test53697,"public void test53697() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test53698,"public void test53698() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test53713,"public void test53713() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test53714,"public void test53714() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test53716,"public void test53716() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test53717,"public void test53717() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertEquals((-940), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test53718,"public void test53718() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test53719,"public void test53719() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertEquals(5, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test53720,"public void test53720() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test53721,"public void test53721() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test53722,"public void test53722() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test53723,"public void test53723() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test53724,"public void test53724() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,
project,0,test53726,"public void test53726() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test53727,"public void test53727() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test53728,"public void test53728() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test53729,"public void test53729() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test53730,"public void test53730() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test53731,"public void test53731() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test53732,"public void test53732() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test53733,"public void test53733() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test53734,"public void test53734() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test53735,"public void test53735() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test53736,"public void test53736() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test53737,"public void test53737() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter((byte) 88);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(Double.NaN);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test54747,"public void test54747() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    assertEquals("" "", serializedString0.toString());
}",0,assertNotNull(serializedString0.toString())
project,0,test54748,"public void test54748() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    assertEquals("" "", serializedString0.getValue());
}",0,assertNotNull(serializedString0.getValue())
project,0,test54749,"public void test54749() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    assertEquals(1, serializedString0.charLength());
}",0,"assertEquals(0, serializedString0.charLength())"
project,0,test54753,"public void test54753() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    assertEquals("" "", serializedString0.toString());
}",0,assertNotNull(serializedString0.toString())
project,0,test54754,"public void test54754() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    assertEquals("" "", serializedString0.getValue());
}",0,assertNotNull(serializedString0.getValue())
project,0,test54755,"public void test54755() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    assertEquals(1, serializedString0.charLength());
}",0,"assertEquals(0, serializedString0.charLength())"
project,0,test54756,"public void test54756() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test54757,"public void test54757() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test54767,"public void test54767() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    assertEquals("" "", serializedString0.toString());
}",0,assertNotNull(serializedString0.toString())
project,0,test54768,"public void test54768() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    assertEquals("" "", serializedString0.getValue());
}",0,assertNotNull(serializedString0.getValue())
project,0,test54769,"public void test54769() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    assertEquals(1, serializedString0.charLength());
}",0,"assertEquals(0, serializedString0.charLength())"
project,0,test54771,"public void test54771() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test54772,"public void test54772() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test54773,"public void test54773() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test54774,"public void test54774() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test54775,"public void test54775() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test54777,"public void test54777() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test54778,"public void test54778() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    assertEquals(1380, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test54779,"public void test54779() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test54780,"public void test54780() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test54781,"public void test54781() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test54782,"public void test54782() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test54796,"public void test54796() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals("" "", serializedString0.toString());
}",0,assertNotNull(serializedString0.toString())
project,0,test54797,"public void test54797() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals("" "", serializedString0.getValue());
}",0,assertNotNull(serializedString0.getValue())
project,0,test54798,"public void test54798() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals(1, serializedString0.charLength());
}",0,"assertEquals(0, serializedString0.charLength())"
project,0,test54800,"public void test54800() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test54801,"public void test54801() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test54802,"public void test54802() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test54803,"public void test54803() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,
project,0,test54804,"public void test54804() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test54806,"public void test54806() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals(6, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test54807,"public void test54807() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test54808,"public void test54808() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals(1380, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test54809,"public void test54809() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test54810,"public void test54810() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test54811,"public void test54811() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test54812,"public void test54812() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test54813,"public void test54813() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test54814,"public void test54814() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test54815,"public void test54815() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test54816,"public void test54816() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test54817,"public void test54817() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test54818,"public void test54818() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test54819,"public void test54819() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test54820,"public void test54820() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test54821,"public void test54821() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test54822,"public void test54822() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test54823,"public void test54823() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber((float) 33);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test55835,"public void test55835() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test55836,"public void test55836() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test55847,"public void test55847() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test55848,"public void test55848() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test55849,"public void test55849() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test55850,"public void test55850() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,
project,0,test55851,"public void test55851() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    assertEquals((-2081), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test55852,"public void test55852() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test55853,"public void test55853() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test55854,"public void test55854() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test55856,"public void test55856() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test55857,"public void test55857() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test55858,"public void test55858() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test55873,"public void test55873() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test55874,"public void test55874() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test55875,"public void test55875() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test55876,"public void test55876() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertEquals((-2081), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test55877,"public void test55877() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test55878,"public void test55878() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test55879,"public void test55879() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test55881,"public void test55881() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertEquals(3, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test55882,"public void test55882() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test55883,"public void test55883() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test55884,"public void test55884() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test55885,"public void test55885() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test55886,"public void test55886() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test55887,"public void test55887() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test55888,"public void test55888() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test55889,"public void test55889() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test55890,"public void test55890() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test55891,"public void test55891() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test55892,"public void test55892() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test55893,"public void test55893() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test55894,"public void test55894() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test55895,"public void test55895() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test55896,"public void test55896() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(0.0F);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test56906,"public void test56906() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertFalse(iOContext0.isResourceManaged())
project,0,test56907,"public void test56907() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test56922,"public void test56922() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test56923,"public void test56923() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test56925,"public void test56925() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test56926,"public void test56926() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test56927,"public void test56927() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test56928,"public void test56928() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test56929,"public void test56929() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    assertEquals(2386, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test56930,"public void test56930() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test56931,"public void test56931() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test56932,"public void test56932() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test56933,"public void test56933() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test56948,"public void test56948() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test56949,"public void test56949() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test56953,"public void test56953() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test56954,"public void test56954() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test56955,"public void test56955() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(2, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test56956,"public void test56956() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test56957,"public void test56957() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test56958,"public void test56958() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(2386, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test56959,"public void test56959() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test56960,"public void test56960() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test56961,"public void test56961() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test56963,"public void test56963() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test56964,"public void test56964() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test56965,"public void test56965() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test56966,"public void test56966() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test56967,"public void test56967() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test56968,"public void test56968() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test56969,"public void test56969() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test56970,"public void test56970() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test56971,"public void test56971() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test56972,"public void test56972() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test56973,"public void test56973() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test56974,"public void test56974() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test57984,"public void test57984() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test57985,"public void test57985() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test57997,"public void test57997() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test57998,"public void test57998() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,
project,0,test571000,"public void test571000() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test571001,"public void test571001() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test571002,"public void test571002() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test571003,"public void test571003() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test571005,"public void test571005() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test571006,"public void test571006() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test571007,"public void test571007() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test571008,"public void test571008() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test571009,"public void test571009() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    assertEquals(52, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test571023,"public void test571023() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test571024,"public void test571024() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test571026,"public void test571026() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test571027,"public void test571027() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test571028,"public void test571028() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test571030,"public void test571030() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test571031,"public void test571031() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test571032,"public void test571032() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test571033,"public void test571033() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertEquals(4, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test571034,"public void test571034() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test571035,"public void test571035() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertEquals(52, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test571036,"public void test571036() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test571037,"public void test571037() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test571038,"public void test571038() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test571039,"public void test571039() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test571040,"public void test571040() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test571041,"public void test571041() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test571042,"public void test571042() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test571043,"public void test571043() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test571044,"public void test571044() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test571045,"public void test571045() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test571046,"public void test571046() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test571047,"public void test571047() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumberField("""", (BigDecimal) null);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test581057,"public void test581057() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test581058,"public void test581058() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test581073,"public void test581073() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test581074,"public void test581074() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test581076,"public void test581076() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test581077,"public void test581077() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test581078,"public void test581078() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test581079,"public void test581079() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test581081,"public void test581081() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(1267, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test581082,"public void test581082() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test581083,"public void test581083() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test581084,"public void test581084() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test581085,"public void test581085() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test581099,"public void test581099() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test581100,"public void test581100() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test581104,"public void test581104() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test581105,"public void test581105() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(4, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test581106,"public void test581106() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test581107,"public void test581107() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test581108,"public void test581108() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test581110,"public void test581110() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(1267, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test581111,"public void test581111() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test581112,"public void test581112() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test581113,"public void test581113() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test581114,"public void test581114() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test581115,"public void test581115() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test581116,"public void test581116() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test581117,"public void test581117() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test581118,"public void test581118() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test581119,"public void test581119() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test581120,"public void test581120() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test581121,"public void test581121() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test581122,"public void test581122() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test581123,"public void test581123() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test581124,"public void test581124() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test581125,"public void test581125() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test591135,"public void test591135() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test591136,"public void test591136() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test591151,"public void test591151() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test591152,"public void test591152() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test591154,"public void test591154() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test591155,"public void test591155() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test591156,"public void test591156() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test591157,"public void test591157() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test591158,"public void test591158() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test591159,"public void test591159() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test591160,"public void test591160() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test591162,"public void test591162() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    assertEquals(44, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test591163,"public void test591163() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test591177,"public void test591177() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test591178,"public void test591178() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test591182,"public void test591182() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test591183,"public void test591183() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test591184,"public void test591184() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test591185,"public void test591185() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(4, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test591186,"public void test591186() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test591187,"public void test591187() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test591188,"public void test591188() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test591190,"public void test591190() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(44, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test591191,"public void test591191() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test591192,"public void test591192() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test591193,"public void test591193() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test591194,"public void test591194() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test591195,"public void test591195() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test591196,"public void test591196() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test591197,"public void test591197() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test591198,"public void test591198() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test591199,"public void test591199() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test591200,"public void test591200() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test591201,"public void test591201() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test591202,"public void test591202() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test591203,"public void test591203() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    BigDecimal bigDecimal0 = BigDecimal.TEN;
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test601213,"public void test601213() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test601214,"public void test601214() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test601226,"public void test601226() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test601227,"public void test601227() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test601229,"public void test601229() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,
project,0,test601230,"public void test601230() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test601231,"public void test601231() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test601232,"public void test601232() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test601233,"public void test601233() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test601234,"public void test601234() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test601235,"public void test601235() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test601236,"public void test601236() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test601238,"public void test601238() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test601260,"public void test601260() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test601261,"public void test601261() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test601263,"public void test601263() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test601264,"public void test601264() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test601265,"public void test601265() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertEquals(11, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test601266,"public void test601266() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test601267,"public void test601267() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test601268,"public void test601268() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test601269,"public void test601269() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test601270,"public void test601270() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test601272,"public void test601272() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test601277,"public void test601277() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test601278,"public void test601278() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test601279,"public void test601279() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test601280,"public void test601280() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test601281,"public void test601281() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test601282,"public void test601282() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test601283,"public void test601283() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test601284,"public void test601284() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test601285,"public void test601285() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test601286,"public void test601286() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test601287,"public void test601287() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test601288,"public void test601288() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    BigInteger bigInteger0 = BigInteger.TEN;
    BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    writerBasedJsonGenerator0.writeNumberField(""nFs#Qt^1:"", bigDecimal0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test611298,"public void test611298() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test611299,"public void test611299() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test611311,"public void test611311() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test611312,"public void test611312() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test611314,"public void test611314() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test611315,"public void test611315() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test611316,"public void test611316() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test611317,"public void test611317() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test611318,"public void test611318() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test611319,"public void test611319() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test611320,"public void test611320() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test611321,"public void test611321() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test611323,"public void test611323() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    assertEquals(110, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test611337,"public void test611337() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test611338,"public void test611338() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test611340,"public void test611340() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test611341,"public void test611341() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test611342,"public void test611342() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test611343,"public void test611343() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertFalse(writerBasedJsonGenerator0.canOmitFields())
project,0,test611344,"public void test611344() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test611345,"public void test611345() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test611346,"public void test611346() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test611347,"public void test611347() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertEquals(14, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test611349,"public void test611349() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertEquals(110, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test611350,"public void test611350() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test611351,"public void test611351() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test611352,"public void test611352() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test611353,"public void test611353() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test611354,"public void test611354() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test611355,"public void test611355() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test611356,"public void test611356() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test611357,"public void test611357() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test611358,"public void test611358() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test611359,"public void test611359() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test611360,"public void test611360() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test611361,"public void test611361() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeNumber(""write a null"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test621377,"public void test621377() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test621378,"public void test621378() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test621379,"public void test621379() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test621380,"public void test621380() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test621381,"public void test621381() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test621382,"public void test621382() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test621383,"public void test621383() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test621384,"public void test621384() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test621385,"public void test621385() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test621386,"public void test621386() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test621387,"public void test621387() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertNotNull(iOContext0);
}",0,assertNotNull(iOContext0)
project,0,test621390,"public void test621390() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test621391,"public void test621391() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test621392,"public void test621392() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test621393,"public void test621393() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test621394,"public void test621394() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test621395,"public void test621395() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test621396,"public void test621396() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test621397,"public void test621397() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test621398,"public void test621398() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test621399,"public void test621399() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test621401,"public void test621401() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test621417,"public void test621417() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test621418,"public void test621418() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test621419,"public void test621419() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test621420,"public void test621420() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test621421,"public void test621421() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test621422,"public void test621422() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test621423,"public void test621423() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test621424,"public void test621424() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test621425,"public void test621425() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test621426,"public void test621426() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test621428,"public void test621428() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test621431,"public void test621431() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test621432,"public void test621432() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test621433,"public void test621433() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test621434,"public void test621434() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test621435,"public void test621435() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test621436,"public void test621436() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test621437,"public void test621437() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test621438,"public void test621438() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertEquals(5, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test621439,"public void test621439() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test621440,"public void test621440() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test621442,"public void test621442() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test621443,"public void test621443() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test621444,"public void test621444() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test621445,"public void test621445() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test621446,"public void test621446() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test621447,"public void test621447() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test621448,"public void test621448() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test621449,"public void test621449() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test621450,"public void test621450() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test621451,"public void test621451() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test621452,"public void test621452() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test621453,"public void test621453() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test621454,"public void test621454() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeBoolean(false);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test631470,"public void test631470() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test631471,"public void test631471() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test631472,"public void test631472() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test631473,"public void test631473() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test631474,"public void test631474() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test631475,"public void test631475() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test631476,"public void test631476() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test631477,"public void test631477() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test631478,"public void test631478() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test631479,"public void test631479() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test631480,"public void test631480() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertNotNull(iOContext0);
}",0,assertNotNull(iOContext0)
project,0,test631483,"public void test631483() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test631484,"public void test631484() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test631485,"public void test631485() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test631486,"public void test631486() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test631487,"public void test631487() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test631488,"public void test631488() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test631489,"public void test631489() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test631490,"public void test631490() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test631491,"public void test631491() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test631493,"public void test631493() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test631494,"public void test631494() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test631510,"public void test631510() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test631511,"public void test631511() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test631512,"public void test631512() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test631513,"public void test631513() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test631514,"public void test631514() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test631515,"public void test631515() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test631516,"public void test631516() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test631517,"public void test631517() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test631518,"public void test631518() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test631520,"public void test631520() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test631521,"public void test631521() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test631522,"public void test631522() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test631523,"public void test631523() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test631524,"public void test631524() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test631525,"public void test631525() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test631526,"public void test631526() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test631527,"public void test631527() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test631528,"public void test631528() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test631529,"public void test631529() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test631530,"public void test631530() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test631531,"public void test631531() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test631532,"public void test631532() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test631533,"public void test631533() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test631534,"public void test631534() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    try {
        writerBasedJsonGenerator0.writeStartArray();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Can not start an array, expecting field name
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",1,
project,0,test641544,"public void test641544() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test641545,"public void test641545() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test641555,"public void test641555() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test641556,"public void test641556() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test641557,"public void test641557() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test641558,"public void test641558() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test641559,"public void test641559() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test641560,"public void test641560() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test641561,"public void test641561() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test641562,"public void test641562() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test641563,"public void test641563() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test641564,"public void test641564() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test641565,"public void test641565() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertNotNull(charArray0);
}",1,
project,0,test641566,"public void test641566() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(4000, charArray0.length);
}",1,
project,0,test641569,"public void test641569() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test641570,"public void test641570() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test641572,"public void test641572() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test641573,"public void test641573() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test641574,"public void test641574() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test641575,"public void test641575() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test641576,"public void test641576() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test641577,"public void test641577() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test641578,"public void test641578() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test641579,"public void test641579() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test641580,"public void test641580() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test641595,"public void test641595() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(iOContext0.isResourceManaged());
}",0,
project,0,test641596,"public void test641596() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test641597,"public void test641597() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test641598,"public void test641598() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(3943, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test641599,"public void test641599() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test641600,"public void test641600() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test641601,"public void test641601() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test641602,"public void test641602() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test641603,"public void test641603() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test641604,"public void test641604() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test641605,"public void test641605() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test641607,"public void test641607() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test641608,"public void test641608() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test641609,"public void test641609() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test641610,"public void test641610() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test641611,"public void test641611() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test641612,"public void test641612() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test641613,"public void test641613() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test641614,"public void test641614() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test641615,"public void test641615() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test641616,"public void test641616() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test641617,"public void test641617() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test641618,"public void test641618() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test641619,"public void test641619() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(4000, charArray0.length);
}",1,
project,0,test641624,"public void test641624() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test641625,"public void test641625() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test641626,"public void test641626() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test641627,"public void test641627() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    assertEquals(3943, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test641628,"public void test641628() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test641629,"public void test641629() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test641630,"public void test641630() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test641631,"public void test641631() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test641632,"public void test641632() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test641633,"public void test641633() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test641634,"public void test641634() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test641636,"public void test641636() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test641637,"public void test641637() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test641638,"public void test641638() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test641639,"public void test641639() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test641640,"public void test641640() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test641641,"public void test641641() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test641642,"public void test641642() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(3953, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test641643,"public void test641643() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test641644,"public void test641644() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test641645,"public void test641645() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test641646,"public void test641646() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test641649,"public void test641649() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test641650,"public void test641650() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(6, int0);
}",0,"assertEquals(0, int0)"
project,0,test641651,"public void test641651() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test641652,"public void test641652() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test641653,"public void test641653() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test641654,"public void test641654() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test641655,"public void test641655() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test641656,"public void test641656() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test641657,"public void test641657() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test641658,"public void test641658() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test641659,"public void test641659() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test641660,"public void test641660() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test641661,"public void test641661() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test641662,"public void test641662() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test641663,"public void test641663() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0._rootValueSeparator = null;
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(6, byteArray0.length);
}",0,
project,0,test651679,"public void test651679() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test651680,"public void test651680() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test651681,"public void test651681() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test651682,"public void test651682() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test651683,"public void test651683() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test651684,"public void test651684() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test651685,"public void test651685() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test651686,"public void test651686() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test651687,"public void test651687() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test651688,"public void test651688() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test651689,"public void test651689() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertNotNull(iOContext0);
}",0,assertNotNull(iOContext0)
project,0,test651692,"public void test651692() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test651693,"public void test651693() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test651694,"public void test651694() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test651695,"public void test651695() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test651697,"public void test651697() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test651698,"public void test651698() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test651699,"public void test651699() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test651700,"public void test651700() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test651701,"public void test651701() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test651702,"public void test651702() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test651703,"public void test651703() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test651719,"public void test651719() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test651720,"public void test651720() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test651721,"public void test651721() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test651722,"public void test651722() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test651724,"public void test651724() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test651725,"public void test651725() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test651726,"public void test651726() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test651727,"public void test651727() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test651728,"public void test651728() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test651729,"public void test651729() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test651730,"public void test651730() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test651731,"public void test651731() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test651732,"public void test651732() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test651733,"public void test651733() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test651734,"public void test651734() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test651735,"public void test651735() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test651736,"public void test651736() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test651737,"public void test651737() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test651738,"public void test651738() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test651739,"public void test651739() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test651740,"public void test651740() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test651741,"public void test651741() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test651742,"public void test651742() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test651745,"public void test651745() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test651746,"public void test651746() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test651747,"public void test651747() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test651748,"public void test651748() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test651750,"public void test651750() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test651751,"public void test651751() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test651752,"public void test651752() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test651753,"public void test651753() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test651754,"public void test651754() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test651755,"public void test651755() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test651756,"public void test651756() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test651759,"public void test651759() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test651760,"public void test651760() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test651761,"public void test651761() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test651762,"public void test651762() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test651763,"public void test651763() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(2, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test651765,"public void test651765() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test651766,"public void test651766() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test651767,"public void test651767() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test651768,"public void test651768() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test651769,"public void test651769() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test651770,"public void test651770() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test651771,"public void test651771() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test651772,"public void test651772() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test651773,"public void test651773() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test651774,"public void test651774() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test651775,"public void test651775() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test651776,"public void test651776() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test651777,"public void test651777() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test651778,"public void test651778() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test651779,"public void test651779() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test651780,"public void test651780() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test651781,"public void test651781() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test651782,"public void test651782() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test651785,"public void test651785() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test651786,"public void test651786() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test651787,"public void test651787() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test651788,"public void test651788() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test651790,"public void test651790() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test651791,"public void test651791() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test651792,"public void test651792() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test651793,"public void test651793() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test651794,"public void test651794() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test651795,"public void test651795() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test651796,"public void test651796() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test651797,"public void test651797() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test651798,"public void test651798() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test651799,"public void test651799() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test651800,"public void test651800() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test651801,"public void test651801() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test651802,"public void test651802() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test651803,"public void test651803() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test651804,"public void test651804() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test651805,"public void test651805() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test651806,"public void test651806() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test651807,"public void test651807() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test651808,"public void test651808() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test651811,"public void test651811() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test651812,"public void test651812() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test651813,"public void test651813() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test651814,"public void test651814() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test651815,"public void test651815() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(2, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test651817,"public void test651817() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test651818,"public void test651818() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test651819,"public void test651819() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test651820,"public void test651820() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test651821,"public void test651821() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test651822,"public void test651822() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test651823,"public void test651823() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test651824,"public void test651824() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test651825,"public void test651825() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test651826,"public void test651826() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test651827,"public void test651827() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test651828,"public void test651828() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test651829,"public void test651829() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test651830,"public void test651830() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test651831,"public void test651831() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test651832,"public void test651832() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test651833,"public void test651833() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test651834,"public void test651834() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test651837,"public void test651837() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test651838,"public void test651838() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test651839,"public void test651839() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test651840,"public void test651840() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test651842,"public void test651842() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test651843,"public void test651843() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test651844,"public void test651844() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test651845,"public void test651845() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test651846,"public void test651846() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test651847,"public void test651847() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test651848,"public void test651848() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test651849,"public void test651849() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test651850,"public void test651850() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test651851,"public void test651851() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test651852,"public void test651852() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test651853,"public void test651853() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test651854,"public void test651854() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test651855,"public void test651855() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test651856,"public void test651856() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test651857,"public void test651857() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test651858,"public void test651858() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test651859,"public void test651859() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test651860,"public void test651860() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test651863,"public void test651863() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test651864,"public void test651864() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test651865,"public void test651865() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test651866,"public void test651866() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test651867,"public void test651867() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertEquals(2, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test651869,"public void test651869() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test651870,"public void test651870() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test651871,"public void test651871() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test651872,"public void test651872() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test651873,"public void test651873() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test651874,"public void test651874() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test651875,"public void test651875() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test651876,"public void test651876() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test651877,"public void test651877() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test651878,"public void test651878() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test651879,"public void test651879() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test651880,"public void test651880() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test651881,"public void test651881() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test651882,"public void test651882() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test651883,"public void test651883() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test651884,"public void test651884() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test651885,"public void test651885() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test651886,"public void test651886() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test651889,"public void test651889() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test651890,"public void test651890() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test651891,"public void test651891() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test651892,"public void test651892() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test651894,"public void test651894() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test651895,"public void test651895() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test651896,"public void test651896() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test651897,"public void test651897() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test651898,"public void test651898() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test651899,"public void test651899() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test651900,"public void test651900() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test651901,"public void test651901() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test651902,"public void test651902() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test651903,"public void test651903() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test651904,"public void test651904() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test651905,"public void test651905() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test651906,"public void test651906() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test651907,"public void test651907() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test651908,"public void test651908() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test651909,"public void test651909() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test651910,"public void test651910() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test651911,"public void test651911() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test651912,"public void test651912() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""wr2ite a string"");
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.writeEndArray();
    writerBasedJsonGenerator0.writeEndObject();
    writerBasedJsonGenerator0.writeString(""wr2ite a string"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test661922,"public void test661922() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test661923,"public void test661923() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test661935,"public void test661935() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test661936,"public void test661936() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test661938,"public void test661938() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test661939,"public void test661939() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    assertEquals((-3300), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test661940,"public void test661940() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test661941,"public void test661941() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test661942,"public void test661942() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test661944,"public void test661944() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test661945,"public void test661945() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test661946,"public void test661946() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test661947,"public void test661947() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test661961,"public void test661961() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test661962,"public void test661962() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test661964,"public void test661964() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test661965,"public void test661965() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals((-3300), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test661966,"public void test661966() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,
project,0,test661967,"public void test661967() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test661968,"public void test661968() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test661970,"public void test661970() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test661971,"public void test661971() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test661972,"public void test661972() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test661973,"public void test661973() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test661974,"public void test661974() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test661975,"public void test661975() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test661976,"public void test661976() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test661977,"public void test661977() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test661978,"public void test661978() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test661979,"public void test661979() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test661980,"public void test661980() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test661981,"public void test661981() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test661982,"public void test661982() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test661983,"public void test661983() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test661984,"public void test661984() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test661985,"public void test661985() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test661987,"public void test661987() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test661988,"public void test661988() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test661990,"public void test661990() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test661991,"public void test661991() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals((-3300), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test661992,"public void test661992() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,
project,0,test661993,"public void test661993() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test661994,"public void test661994() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test661996,"public void test661996() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test661997,"public void test661997() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test661998,"public void test661998() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test661999,"public void test661999() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test662000,"public void test662000() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(0, writerBasedJsonGenerator1.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator1.getHighestEscapedChar())"
project,0,test662001,"public void test662001() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertFalse(writerBasedJsonGenerator1.isClosed());
}",0,assertTrue(writerBasedJsonGenerator1.isClosed())
project,0,test662002,"public void test662002() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertTrue(writerBasedJsonGenerator1.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator1.canOmitFields())
project,0,test662004,"public void test662004() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertFalse(writerBasedJsonGenerator1.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator1.canWriteTypeId())
project,0,test662005,"public void test662005() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(0, writerBasedJsonGenerator1.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator1.getFormatFeatures())"
project,0,test662006,"public void test662006() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(1, writerBasedJsonGenerator1.getOutputBuffered());
}",0,
project,0,test662007,"public void test662007() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals((-3300), writerBasedJsonGenerator1.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator1.getFeatureMask())"
project,0,test662008,"public void test662008() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertFalse(writerBasedJsonGenerator1.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator1.canWriteObjectId())
project,0,test662009,"public void test662009() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertFalse(writerBasedJsonGenerator1.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator1.canWriteBinaryNatively())
project,0,test662010,"public void test662010() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test662011,"public void test662011() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test662012,"public void test662012() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test662013,"public void test662013() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test662014,"public void test662014() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test662015,"public void test662015() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test662016,"public void test662016() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test662017,"public void test662017() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test662018,"public void test662018() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test662019,"public void test662019() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test662020,"public void test662020() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test662021,"public void test662021() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test662022,"public void test662022() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test662023,"public void test662023() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test662024,"public void test662024() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test662025,"public void test662025() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test662026,"public void test662026() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertNotNull(writerBasedJsonGenerator1);
}",0,assertNotNull(writerBasedJsonGenerator1)
project,0,test662027,"public void test662027() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertSame(writerBasedJsonGenerator0, writerBasedJsonGenerator1);
}",0,
project,0,test662028,"public void test662028() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    assertSame(writerBasedJsonGenerator1, writerBasedJsonGenerator0);
}",0,
project,0,test662029,"public void test662029() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test662030,"public void test662030() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test662032,"public void test662032() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test662033,"public void test662033() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals((-3300), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test662034,"public void test662034() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test662035,"public void test662035() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test662036,"public void test662036() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(21, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test662037,"public void test662037() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test662039,"public void test662039() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test662040,"public void test662040() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test662041,"public void test662041() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test662042,"public void test662042() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(0, writerBasedJsonGenerator1.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator1.getHighestEscapedChar())"
project,0,test662043,"public void test662043() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertFalse(writerBasedJsonGenerator1.isClosed());
}",0,assertTrue(writerBasedJsonGenerator1.isClosed())
project,0,test662044,"public void test662044() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(21, writerBasedJsonGenerator1.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator1.getOutputBuffered())"
project,0,test662045,"public void test662045() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertTrue(writerBasedJsonGenerator1.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator1.canOmitFields())
project,0,test662047,"public void test662047() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertFalse(writerBasedJsonGenerator1.canWriteTypeId());
}",0,
project,0,test662048,"public void test662048() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(0, writerBasedJsonGenerator1.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator1.getFormatFeatures())"
project,0,test662049,"public void test662049() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals((-3300), writerBasedJsonGenerator1.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator1.getFeatureMask())"
project,0,test662050,"public void test662050() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertFalse(writerBasedJsonGenerator1.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator1.canWriteObjectId())
project,0,test662051,"public void test662051() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertFalse(writerBasedJsonGenerator1.canWriteBinaryNatively());
}",0,
project,0,test662052,"public void test662052() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test662053,"public void test662053() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test662054,"public void test662054() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test662055,"public void test662055() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test662056,"public void test662056() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test662057,"public void test662057() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test662058,"public void test662058() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test662059,"public void test662059() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test662060,"public void test662060() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test662061,"public void test662061() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test662062,"public void test662062() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test662063,"public void test662063() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test662064,"public void test662064() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test662065,"public void test662065() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test662066,"public void test662066() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test662067,"public void test662067() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test662068,"public void test662068() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertSame(writerBasedJsonGenerator0, writerBasedJsonGenerator1);
}",0,
project,0,test662069,"public void test662069() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    assertSame(writerBasedJsonGenerator1, writerBasedJsonGenerator0);
}",0,
project,0,test662070,"public void test662070() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test662071,"public void test662071() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test662073,"public void test662073() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test662074,"public void test662074() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals((-3300), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test662075,"public void test662075() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test662076,"public void test662076() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test662077,"public void test662077() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test662079,"public void test662079() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test662080,"public void test662080() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(34, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test662081,"public void test662081() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test662082,"public void test662082() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test662083,"public void test662083() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(0, writerBasedJsonGenerator1.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator1.getHighestEscapedChar())"
project,0,test662084,"public void test662084() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertFalse(writerBasedJsonGenerator1.isClosed());
}",0,assertTrue(writerBasedJsonGenerator1.isClosed())
project,0,test662085,"public void test662085() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertTrue(writerBasedJsonGenerator1.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator1.canOmitFields())
project,0,test662087,"public void test662087() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertFalse(writerBasedJsonGenerator1.canWriteTypeId());
}",0,
project,0,test662088,"public void test662088() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(0, writerBasedJsonGenerator1.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator1.getFormatFeatures())"
project,0,test662089,"public void test662089() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(34, writerBasedJsonGenerator1.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator1.getOutputBuffered())"
project,0,test662090,"public void test662090() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals((-3300), writerBasedJsonGenerator1.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator1.getFeatureMask())"
project,0,test662091,"public void test662091() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertFalse(writerBasedJsonGenerator1.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator1.canWriteObjectId())
project,0,test662092,"public void test662092() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertFalse(writerBasedJsonGenerator1.canWriteBinaryNatively());
}",0,
project,0,test662093,"public void test662093() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test662094,"public void test662094() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test662095,"public void test662095() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test662096,"public void test662096() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test662097,"public void test662097() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test662098,"public void test662098() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test662099,"public void test662099() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test662100,"public void test662100() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test662101,"public void test662101() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test662102,"public void test662102() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test662103,"public void test662103() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test662104,"public void test662104() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test662105,"public void test662105() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test662106,"public void test662106() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test662107,"public void test662107() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test662108,"public void test662108() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test662109,"public void test662109() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertSame(writerBasedJsonGenerator0, writerBasedJsonGenerator1);
}",1,
project,0,test662110,"public void test662110() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    writerBasedJsonGenerator1.writeString(""nFs#Qt^1:"");
    assertSame(writerBasedJsonGenerator1, writerBasedJsonGenerator0);
}",1,
project,0,test672126,"public void test672126() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test672127,"public void test672127() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test672128,"public void test672128() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test672129,"public void test672129() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test672130,"public void test672130() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test672131,"public void test672131() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test672132,"public void test672132() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test672133,"public void test672133() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test672134,"public void test672134() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test672135,"public void test672135() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test672136,"public void test672136() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertNotNull(iOContext0);
}",0,assertNotNull(iOContext0)
project,0,test672139,"public void test672139() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test672140,"public void test672140() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertTrue(iOContext0.isResourceManaged());
}",0,
project,0,test672141,"public void test672141() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test672142,"public void test672142() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test672143,"public void test672143() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test672144,"public void test672144() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test672145,"public void test672145() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test672146,"public void test672146() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test672147,"public void test672147() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test672149,"public void test672149() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test672150,"public void test672150() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test672166,"public void test672166() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test672167,"public void test672167() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test672168,"public void test672168() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test672169,"public void test672169() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test672170,"public void test672170() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test672171,"public void test672171() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test672172,"public void test672172() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test672173,"public void test672173() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test672174,"public void test672174() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test672176,"public void test672176() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test672177,"public void test672177() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test672178,"public void test672178() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test672179,"public void test672179() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test672180,"public void test672180() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test672181,"public void test672181() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test672182,"public void test672182() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test672183,"public void test672183() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test672184,"public void test672184() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test672185,"public void test672185() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test672186,"public void test672186() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test672187,"public void test672187() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test672188,"public void test672188() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test672189,"public void test672189() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test672192,"public void test672192() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test672193,"public void test672193() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test672194,"public void test672194() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test672195,"public void test672195() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test672196,"public void test672196() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertEquals(15, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test672197,"public void test672197() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test672198,"public void test672198() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test672199,"public void test672199() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test672200,"public void test672200() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test672202,"public void test672202() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test672203,"public void test672203() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test672204,"public void test672204() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test672205,"public void test672205() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test672206,"public void test672206() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test672207,"public void test672207() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test672208,"public void test672208() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test672209,"public void test672209() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test672210,"public void test672210() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test672211,"public void test672211() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test672212,"public void test672212() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test672213,"public void test672213() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test672214,"public void test672214() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test672215,"public void test672215() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test672216,"public void test672216() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.writeFieldName(""write a string"");
    // Undeclared exception!
    try {
        writerBasedJsonGenerator0._verifyPrettyValueWrite("" (R,Q'46;l^"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.fasterxml.jackson.core.json.WriterBasedJsonGenerator"", e);
    }
}",0,
project,0,test682226,"public void test682226() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test682227,"public void test682227() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test682237,"public void test682237() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test682238,"public void test682238() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test682240,"public void test682240() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test682241,"public void test682241() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test682242,"public void test682242() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test682243,"public void test682243() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test682244,"public void test682244() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test682245,"public void test682245() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,
project,0,test682246,"public void test682246() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test682247,"public void test682247() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test682248,"public void test682248() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test682262,"public void test682262() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test682263,"public void test682263() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test682265,"public void test682265() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test682266,"public void test682266() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test682267,"public void test682267() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test682268,"public void test682268() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test682269,"public void test682269() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test682270,"public void test682270() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test682271,"public void test682271() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test682272,"public void test682272() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test682273,"public void test682273() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test682274,"public void test682274() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test682275,"public void test682275() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test682276,"public void test682276() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test682277,"public void test682277() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test682278,"public void test682278() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test682279,"public void test682279() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test682280,"public void test682280() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test682281,"public void test682281() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test682282,"public void test682282() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test682283,"public void test682283() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test682284,"public void test682284() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test682285,"public void test682285() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.flush();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test692295,"public void test692295() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test692296,"public void test692296() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test692308,"public void test692308() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test692309,"public void test692309() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test692311,"public void test692311() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test692313,"public void test692313() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test692314,"public void test692314() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test692315,"public void test692315() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test692316,"public void test692316() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test692317,"public void test692317() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test692318,"public void test692318() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    assertEquals((-1122), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test692319,"public void test692319() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test692320,"public void test692320() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test692334,"public void test692334() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test692335,"public void test692335() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test692337,"public void test692337() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test692339,"public void test692339() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test692340,"public void test692340() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test692341,"public void test692341() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test692342,"public void test692342() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test692343,"public void test692343() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test692344,"public void test692344() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals((-1122), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test692345,"public void test692345() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test692346,"public void test692346() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test692347,"public void test692347() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test692348,"public void test692348() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test692349,"public void test692349() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test692350,"public void test692350() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test692351,"public void test692351() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test692352,"public void test692352() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test692353,"public void test692353() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test692354,"public void test692354() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test692355,"public void test692355() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test692356,"public void test692356() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test692357,"public void test692357() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test692358,"public void test692358() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter(3);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test702374,"public void test702374() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test702375,"public void test702375() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test702376,"public void test702376() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test702377,"public void test702377() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test702378,"public void test702378() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test702379,"public void test702379() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test702380,"public void test702380() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test702381,"public void test702381() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test702382,"public void test702382() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test702383,"public void test702383() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test702384,"public void test702384() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertNotNull(iOContext0);
}",0,assertNotNull(iOContext0)
project,0,test702387,"public void test702387() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test702388,"public void test702388() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test702389,"public void test702389() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test702390,"public void test702390() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test702391,"public void test702391() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    assertEquals(2048, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test702392,"public void test702392() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test702393,"public void test702393() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test702394,"public void test702394() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test702395,"public void test702395() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test702397,"public void test702397() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test702398,"public void test702398() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,
project,0,test702414,"public void test702414() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test702415,"public void test702415() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test702416,"public void test702416() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test702417,"public void test702417() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test702418,"public void test702418() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(2048, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test702419,"public void test702419() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test702420,"public void test702420() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test702421,"public void test702421() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test702422,"public void test702422() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test702424,"public void test702424() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test702425,"public void test702425() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test702426,"public void test702426() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test702427,"public void test702427() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test702428,"public void test702428() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test702429,"public void test702429() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test702430,"public void test702430() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test702431,"public void test702431() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test702432,"public void test702432() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test702433,"public void test702433() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test702434,"public void test702434() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test702435,"public void test702435() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test702436,"public void test702436() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test702437,"public void test702437() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.flush();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test712447,"public void test712447() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test712448,"public void test712448() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test712460,"public void test712460() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test712461,"public void test712461() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test712463,"public void test712463() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test712464,"public void test712464() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test712465,"public void test712465() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test712466,"public void test712466() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test712467,"public void test712467() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test712468,"public void test712468() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test712469,"public void test712469() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test712470,"public void test712470() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test712472,"public void test712472() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test712486,"public void test712486() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test712487,"public void test712487() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test712489,"public void test712489() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test712490,"public void test712490() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test712491,"public void test712491() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertTrue(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test712492,"public void test712492() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test712493,"public void test712493() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test712494,"public void test712494() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test712495,"public void test712495() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test712496,"public void test712496() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test712498,"public void test712498() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test712499,"public void test712499() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test712500,"public void test712500() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test712501,"public void test712501() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test712502,"public void test712502() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test712503,"public void test712503() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test712504,"public void test712504() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test712505,"public void test712505() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test712506,"public void test712506() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test712507,"public void test712507() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test712508,"public void test712508() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test712509,"public void test712509() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test712510,"public void test712510() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test712511,"public void test712511() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test712512,"public void test712512() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test712514,"public void test712514() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test712515,"public void test712515() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test712516,"public void test712516() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertTrue(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test712517,"public void test712517() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test712518,"public void test712518() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test712519,"public void test712519() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test712520,"public void test712520() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test712521,"public void test712521() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test712523,"public void test712523() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test712524,"public void test712524() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test712525,"public void test712525() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test712526,"public void test712526() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test712527,"public void test712527() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test712528,"public void test712528() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test712529,"public void test712529() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test712530,"public void test712530() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test712531,"public void test712531() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test712532,"public void test712532() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test712533,"public void test712533() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test712534,"public void test712534() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test712535,"public void test712535() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    writerBasedJsonGenerator0.close();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test722545,"public void test722545() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test722546,"public void test722546() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test722558,"public void test722558() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test722559,"public void test722559() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test722561,"public void test722561() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test722562,"public void test722562() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test722564,"public void test722564() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    assertEquals((-2097), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test722565,"public void test722565() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test722566,"public void test722566() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test722567,"public void test722567() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test722568,"public void test722568() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test722569,"public void test722569() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test722570,"public void test722570() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test722584,"public void test722584() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test722585,"public void test722585() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test722587,"public void test722587() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test722588,"public void test722588() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test722590,"public void test722590() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals((-2097), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test722591,"public void test722591() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test722592,"public void test722592() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test722593,"public void test722593() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test722594,"public void test722594() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test722595,"public void test722595() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test722596,"public void test722596() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test722597,"public void test722597() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test722598,"public void test722598() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test722599,"public void test722599() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test722600,"public void test722600() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test722601,"public void test722601() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test722602,"public void test722602() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test722603,"public void test722603() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test722604,"public void test722604() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test722605,"public void test722605() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test722606,"public void test722606() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test722607,"public void test722607() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test722608,"public void test722608() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test722609,"public void test722609() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test722610,"public void test722610() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test722612,"public void test722612() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertTrue(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test722613,"public void test722613() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test722614,"public void test722614() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test722616,"public void test722616() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertEquals((-2097), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test722617,"public void test722617() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test722618,"public void test722618() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test722619,"public void test722619() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test722620,"public void test722620() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test722621,"public void test722621() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test722622,"public void test722622() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test722623,"public void test722623() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test722624,"public void test722624() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test722625,"public void test722625() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test722626,"public void test722626() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test722627,"public void test722627() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test722628,"public void test722628() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test722629,"public void test722629() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test722630,"public void test722630() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test722631,"public void test722631() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test722632,"public void test722632() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test722633,"public void test722633() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartArray();
    writerBasedJsonGenerator0.close();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test732643,"public void test732643() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test732644,"public void test732644() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test732656,"public void test732656() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test732657,"public void test732657() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test732659,"public void test732659() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test732660,"public void test732660() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test732661,"public void test732661() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test732662,"public void test732662() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    assertEquals(2, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test732663,"public void test732663() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test732665,"public void test732665() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test732666,"public void test732666() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test732667,"public void test732667() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test732668,"public void test732668() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test732682,"public void test732682() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test732683,"public void test732683() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test732685,"public void test732685() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test732686,"public void test732686() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test732687,"public void test732687() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test732688,"public void test732688() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(1, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test732689,"public void test732689() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(2, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test732691,"public void test732691() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test732692,"public void test732692() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test732693,"public void test732693() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test732694,"public void test732694() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test732695,"public void test732695() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test732696,"public void test732696() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test732697,"public void test732697() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test732698,"public void test732698() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test732699,"public void test732699() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test732700,"public void test732700() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test732701,"public void test732701() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test732702,"public void test732702() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test732703,"public void test732703() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test732704,"public void test732704() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test732705,"public void test732705() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test732706,"public void test732706() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test732707,"public void test732707() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test732708,"public void test732708() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test732710,"public void test732710() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test732711,"public void test732711() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test732712,"public void test732712() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertEquals(2, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test732713,"public void test732713() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test732715,"public void test732715() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test732716,"public void test732716() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertTrue(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test732717,"public void test732717() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test732718,"public void test732718() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test732719,"public void test732719() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test732720,"public void test732720() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test732721,"public void test732721() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test732722,"public void test732722() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test732723,"public void test732723() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test732724,"public void test732724() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test732725,"public void test732725() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test732726,"public void test732726() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test732727,"public void test732727() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test732728,"public void test732728() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test732729,"public void test732729() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test732730,"public void test732730() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test732731,"public void test732731() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeStartObject();
    writerBasedJsonGenerator0.close();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test742741,"public void test742741() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test742742,"public void test742742() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test742752,"public void test742752() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test742753,"public void test742753() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test742754,"public void test742754() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test742755,"public void test742755() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test742756,"public void test742756() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test742757,"public void test742757() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test742759,"public void test742759() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test742760,"public void test742760() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test742761,"public void test742761() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    assertEquals(0, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test742762,"public void test742762() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test742763,"public void test742763() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test742777,"public void test742777() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test742778,"public void test742778() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test742779,"public void test742779() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test742780,"public void test742780() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test742781,"public void test742781() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertTrue(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test742782,"public void test742782() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test742783,"public void test742783() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test742785,"public void test742785() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test742786,"public void test742786() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test742787,"public void test742787() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test742788,"public void test742788() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test742789,"public void test742789() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test742790,"public void test742790() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test742791,"public void test742791() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test742792,"public void test742792() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test742793,"public void test742793() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test742794,"public void test742794() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test742795,"public void test742795() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test742796,"public void test742796() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test742797,"public void test742797() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test742798,"public void test742798() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test742799,"public void test742799() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test742800,"public void test742800() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    writerBasedJsonGenerator0.close();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test752810,"public void test752810() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test752811,"public void test752811() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test752823,"public void test752823() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test752824,"public void test752824() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test752826,"public void test752826() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test752827,"public void test752827() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test752828,"public void test752828() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    assertEquals((-4234), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test752829,"public void test752829() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test752830,"public void test752830() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test752831,"public void test752831() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test752833,"public void test752833() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test752834,"public void test752834() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test752835,"public void test752835() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test752849,"public void test752849() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test752850,"public void test752850() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test752852,"public void test752852() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test752853,"public void test752853() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertTrue(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test752854,"public void test752854() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test752855,"public void test752855() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals((-4234), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test752856,"public void test752856() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test752857,"public void test752857() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test752858,"public void test752858() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test752860,"public void test752860() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test752861,"public void test752861() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test752862,"public void test752862() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test752863,"public void test752863() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test752864,"public void test752864() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test752865,"public void test752865() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test752866,"public void test752866() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test752867,"public void test752867() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test752868,"public void test752868() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test752869,"public void test752869() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test752870,"public void test752870() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test752871,"public void test752871() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test752872,"public void test752872() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test752873,"public void test752873() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.close();
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test762883,"public void test762883() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test762884,"public void test762884() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test762894,"public void test762894() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test762895,"public void test762895() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test762896,"public void test762896() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test762897,"public void test762897() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test762898,"public void test762898() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test762899,"public void test762899() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test762900,"public void test762900() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test762901,"public void test762901() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test762902,"public void test762902() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test762903,"public void test762903() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test762904,"public void test762904() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertNotNull(charArray0);
}",0,assertNotNull(charArray0)
project,0,test762905,"public void test762905() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertEquals(4000, charArray0.length);
}",0,
project,0,test762908,"public void test762908() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test762909,"public void test762909() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test762911,"public void test762911() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test762912,"public void test762912() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test762913,"public void test762913() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test762915,"public void test762915() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test762916,"public void test762916() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test762917,"public void test762917() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test762918,"public void test762918() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test762919,"public void test762919() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test762920,"public void test762920() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test762934,"public void test762934() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test762935,"public void test762935() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test762936,"public void test762936() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test762937,"public void test762937() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test762938,"public void test762938() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test762940,"public void test762940() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test762941,"public void test762941() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(3943, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test762942,"public void test762942() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test762943,"public void test762943() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test762944,"public void test762944() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test762945,"public void test762945() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test762946,"public void test762946() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test762947,"public void test762947() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test762948,"public void test762948() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test762949,"public void test762949() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test762950,"public void test762950() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test762951,"public void test762951() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test762952,"public void test762952() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test762953,"public void test762953() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test762954,"public void test762954() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test762955,"public void test762955() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test762956,"public void test762956() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test762957,"public void test762957() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test762958,"public void test762958() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(4000, charArray0.length);
}",1,
project,0,test762959,"public void test762959() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test762960,"public void test762960() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test762961,"public void test762961() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test762962,"public void test762962() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test762963,"public void test762963() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test762965,"public void test762965() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test762966,"public void test762966() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test762967,"public void test762967() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test762968,"public void test762968() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test762969,"public void test762969() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(3970, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test762970,"public void test762970() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test762971,"public void test762971() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test762972,"public void test762972() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test762973,"public void test762973() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test762974,"public void test762974() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test762975,"public void test762975() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test762976,"public void test762976() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test762977,"public void test762977() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test762978,"public void test762978() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test762979,"public void test762979() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test762980,"public void test762980() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test762981,"public void test762981() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test762982,"public void test762982() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test762983,"public void test762983() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(16, byteArray0.length);
}",0,
project,0,test762984,"public void test762984() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test762985,"public void test762985() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test762986,"public void test762986() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test762987,"public void test762987() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test762988,"public void test762988() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test762990,"public void test762990() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test762991,"public void test762991() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertEquals(3991, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test762992,"public void test762992() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test762993,"public void test762993() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test762994,"public void test762994() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test762995,"public void test762995() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test762996,"public void test762996() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test762997,"public void test762997() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test762998,"public void test762998() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test762999,"public void test762999() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test763000,"public void test763000() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test763001,"public void test763001() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test763002,"public void test763002() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test763003,"public void test763003() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test763004,"public void test763004() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test763005,"public void test763005() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test763006,"public void test763006() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test763007,"public void test763007() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test763008,"public void test763008() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    assertEquals(4000, charArray0.length);
}",1,
project,0,test763009,"public void test763009() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test763010,"public void test763010() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertTrue(iOContext0.isResourceManaged());
}",0,
project,0,test763011,"public void test763011() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test763012,"public void test763012() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test763013,"public void test763013() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertEquals(10, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test763014,"public void test763014() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test763016,"public void test763016() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test763017,"public void test763017() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test763018,"public void test763018() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test763019,"public void test763019() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test763020,"public void test763020() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test763021,"public void test763021() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test763022,"public void test763022() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test763023,"public void test763023() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test763024,"public void test763024() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test763025,"public void test763025() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test763026,"public void test763026() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test763027,"public void test763027() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test763028,"public void test763028() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test763029,"public void test763029() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test763030,"public void test763030() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test763031,"public void test763031() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test763032,"public void test763032() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#t^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    writerBasedJsonGenerator0.writeFieldName(""87'AS!yc)e"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test773048,"public void test773048() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test773049,"public void test773049() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test773050,"public void test773050() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test773051,"public void test773051() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test773052,"public void test773052() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test773053,"public void test773053() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test773054,"public void test773054() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test773055,"public void test773055() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test773056,"public void test773056() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test773057,"public void test773057() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test773058,"public void test773058() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    assertNotNull(iOContext0);
}",0,assertNotNull(iOContext0)
project,0,test773061,"public void test773061() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test773062,"public void test773062() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test773063,"public void test773063() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test773064,"public void test773064() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test773066,"public void test773066() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test773067,"public void test773067() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test773068,"public void test773068() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test773069,"public void test773069() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test773070,"public void test773070() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test773071,"public void test773071() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test773072,"public void test773072() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test773088,"public void test773088() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test773089,"public void test773089() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test773090,"public void test773090() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test773091,"public void test773091() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test773093,"public void test773093() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test773094,"public void test773094() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test773095,"public void test773095() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test773096,"public void test773096() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test773097,"public void test773097() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test773098,"public void test773098() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test773099,"public void test773099() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test773102,"public void test773102() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test773103,"public void test773103() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test773104,"public void test773104() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test773105,"public void test773105() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test773107,"public void test773107() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,
project,0,test773108,"public void test773108() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test773109,"public void test773109() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test773110,"public void test773110() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test773111,"public void test773111() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test773112,"public void test773112() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test773113,"public void test773113() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test773114,"public void test773114() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test773115,"public void test773115() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test773116,"public void test773116() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test773117,"public void test773117() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test773118,"public void test773118() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test773119,"public void test773119() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test773120,"public void test773120() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test773121,"public void test773121() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test773122,"public void test773122() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test773123,"public void test773123() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test773124,"public void test773124() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test773125,"public void test773125() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    StringWriter stringWriter0 = new StringWriter(2048);
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputEnd = 2;
    writerBasedJsonGenerator0.writeFieldName("",!\u0007ExlysP>"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test783135,"public void test783135() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,
project,0,test783136,"public void test783136() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test783148,"public void test783148() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test783149,"public void test783149() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test783151,"public void test783151() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test783152,"public void test783152() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test783153,"public void test783153() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test783154,"public void test783154() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test783155,"public void test783155() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test783156,"public void test783156() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test783157,"public void test783157() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test783158,"public void test783158() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test783160,"public void test783160() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test783174,"public void test783174() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[8];
    charArray0[5] = '\u0084';
    // Undeclared exception!
    try {
        writerBasedJsonGenerator0.writeString(charArray0, 2, 56320);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 8
        //
        verifyException(""com.fasterxml.jackson.core.json.WriterBasedJsonGenerator"", e);
    }
}",0,
project,0,test793184,"public void test793184() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test793185,"public void test793185() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test793197,"public void test793197() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test793198,"public void test793198() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test793201,"public void test793201() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test793202,"public void test793202() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test793203,"public void test793203() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test793204,"public void test793204() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test793205,"public void test793205() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test793206,"public void test793206() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test793207,"public void test793207() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test793208,"public void test793208() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test793209,"public void test793209() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test793223,"public void test793223() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""XI"", false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[8];
    charArray0[2] = '0';
    // Undeclared exception!
    try {
        writerBasedJsonGenerator0.writeString(charArray0, 2, 56320);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 8
        //
        verifyException(""com.fasterxml.jackson.core.json.WriterBasedJsonGenerator"", e);
    }
}",1,
project,0,test803233,"public void test803233() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test803234,"public void test803234() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test803246,"public void test803246() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test803247,"public void test803247() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test803249,"public void test803249() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test803250,"public void test803250() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test803251,"public void test803251() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    assertEquals(596, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test803252,"public void test803252() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test803253,"public void test803253() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test803254,"public void test803254() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test803255,"public void test803255() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test803256,"public void test803256() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test803257,"public void test803257() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test803272,"public void test803272() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test803273,"public void test803273() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test803275,"public void test803275() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test803276,"public void test803276() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,
project,0,test803277,"public void test803277() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertEquals(596, writerBasedJsonGenerator0.getFeatureMask());
}",0,
project,0,test803278,"public void test803278() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test803279,"public void test803279() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test803280,"public void test803280() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertEquals(3, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test803281,"public void test803281() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test803282,"public void test803282() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertFalse(writerBasedJsonGenerator0.canOmitFields())
project,0,test803283,"public void test803283() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test803285,"public void test803285() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertArrayEquals(new char[] { '\u0000', '\u0000', '^' }, charArray0);
}",0,
project,0,test803286,"public void test803286() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test803287,"public void test803287() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test803288,"public void test803288() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test803289,"public void test803289() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test803290,"public void test803290() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test803291,"public void test803291() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test803292,"public void test803292() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test803293,"public void test803293() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test803294,"public void test803294() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test803295,"public void test803295() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test803296,"public void test803296() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test803297,"public void test803297() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test803298,"public void test803298() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[3];
    charArray0[2] = '^';
    writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    assertEquals(3, charArray0.length);
}",0,
project,0,test813308,"public void test813308() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test813309,"public void test813309() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test813321,"public void test813321() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test813322,"public void test813322() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test813324,"public void test813324() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test813325,"public void test813325() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test813326,"public void test813326() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test813327,"public void test813327() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test813329,"public void test813329() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test813330,"public void test813330() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test813331,"public void test813331() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test813332,"public void test813332() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test813333,"public void test813333() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test813347,"public void test813347() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test813348,"public void test813348() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test813350,"public void test813350() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test813351,"public void test813351() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test813352,"public void test813352() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test813353,"public void test813353() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test813355,"public void test813355() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test813356,"public void test813356() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test813357,"public void test813357() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test813358,"public void test813358() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(3, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test813359,"public void test813359() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test813360,"public void test813360() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(0, writerBasedJsonGenerator1.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator1.getFormatFeatures())"
project,0,test813361,"public void test813361() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(0, writerBasedJsonGenerator1.getOutputBuffered());
}",0,
project,0,test813362,"public void test813362() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertFalse(writerBasedJsonGenerator1.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator1.canWriteBinaryNatively())
project,0,test813364,"public void test813364() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertFalse(writerBasedJsonGenerator1.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator1.canWriteTypeId())
project,0,test813365,"public void test813365() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(1, writerBasedJsonGenerator1.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator1.getFeatureMask())"
project,0,test813366,"public void test813366() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertFalse(writerBasedJsonGenerator1.canWriteObjectId());
}",0,
project,0,test813367,"public void test813367() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertFalse(writerBasedJsonGenerator1.isClosed());
}",0,assertTrue(writerBasedJsonGenerator1.isClosed())
project,0,test813368,"public void test813368() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertTrue(writerBasedJsonGenerator1.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator1.canOmitFields())
project,0,test813369,"public void test813369() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(3, writerBasedJsonGenerator1.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator1.getHighestEscapedChar())"
project,0,test813370,"public void test813370() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test813371,"public void test813371() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test813372,"public void test813372() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test813373,"public void test813373() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test813374,"public void test813374() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test813375,"public void test813375() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test813376,"public void test813376() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test813377,"public void test813377() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test813378,"public void test813378() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test813379,"public void test813379() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test813380,"public void test813380() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test813381,"public void test813381() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test813382,"public void test813382() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test813383,"public void test813383() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test813384,"public void test813384() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test813385,"public void test813385() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test813386,"public void test813386() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertNotNull(writerBasedJsonGenerator1);
}",0,assertNotNull(writerBasedJsonGenerator1)
project,0,test813387,"public void test813387() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertSame(writerBasedJsonGenerator0, writerBasedJsonGenerator1);
}",0,
project,0,test813388,"public void test813388() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertSame(writerBasedJsonGenerator1, writerBasedJsonGenerator0);
}",0,
project,0,test813389,"public void test813389() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test813390,"public void test813390() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test813392,"public void test813392() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test813393,"public void test813393() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test813394,"public void test813394() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertEquals(6, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test813395,"public void test813395() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test813396,"public void test813396() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test813398,"public void test813398() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test813399,"public void test813399() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test813400,"public void test813400() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertEquals(3, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test813401,"public void test813401() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test813402,"public void test813402() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test813403,"public void test813403() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test813404,"public void test813404() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test813405,"public void test813405() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test813406,"public void test813406() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test813407,"public void test813407() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test813408,"public void test813408() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test813409,"public void test813409() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test813410,"public void test813410() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test813411,"public void test813411() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test813412,"public void test813412() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test813413,"public void test813413() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test813414,"public void test813414() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeFieldName(""^!mQh4s8eN[~(hT5ovd"");
    assertSame(writerBasedJsonGenerator0, writerBasedJsonGenerator1);
}",0,
project,0,test823424,"public void test823424() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test823425,"public void test823425() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test823437,"public void test823437() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test823438,"public void test823438() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test823440,"public void test823440() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test823441,"public void test823441() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(1267, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test823443,"public void test823443() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test823444,"public void test823444() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test823445,"public void test823445() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test823446,"public void test823446() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test823447,"public void test823447() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test823448,"public void test823448() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test823449,"public void test823449() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test823463,"public void test823463() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test823464,"public void test823464() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test823466,"public void test823466() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test823467,"public void test823467() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertEquals(1267, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test823469,"public void test823469() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test823470,"public void test823470() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test823471,"public void test823471() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test823472,"public void test823472() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test823473,"public void test823473() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test823474,"public void test823474() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test823475,"public void test823475() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test823476,"public void test823476() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test823477,"public void test823477() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test823479,"public void test823479() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test823480,"public void test823480() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertEquals(1267, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test823482,"public void test823482() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test823483,"public void test823483() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test823484,"public void test823484() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test823485,"public void test823485() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test823486,"public void test823486() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertEquals(21, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test823487,"public void test823487() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test823488,"public void test823488() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test823489,"public void test823489() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test823490,"public void test823490() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test823491,"public void test823491() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test823492,"public void test823492() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test823493,"public void test823493() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test823494,"public void test823494() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test823495,"public void test823495() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test823496,"public void test823496() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test823497,"public void test823497() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test823498,"public void test823498() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test823499,"public void test823499() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test823500,"public void test823500() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    writerBasedJsonGenerator0.writeString(""v[~T2S<Z2b=/_2I.gGF"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test833510,"public void test833510() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertNull(iOContext0.getEncoding());
}",0,
project,0,test833511,"public void test833511() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test833525,"public void test833525() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test833526,"public void test833526() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test833528,"public void test833528() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test833529,"public void test833529() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test833530,"public void test833530() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test833531,"public void test833531() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test833532,"public void test833532() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test833533,"public void test833533() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test833535,"public void test833535() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test833536,"public void test833536() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test833537,"public void test833537() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test833551,"public void test833551() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test833552,"public void test833552() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test833554,"public void test833554() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test833555,"public void test833555() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test833556,"public void test833556() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test833557,"public void test833557() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test833558,"public void test833558() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test833559,"public void test833559() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test833561,"public void test833561() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test833562,"public void test833562() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(3, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test833563,"public void test833563() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test833564,"public void test833564() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(0, writerBasedJsonGenerator1.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator1.getOutputBuffered())"
project,0,test833565,"public void test833565() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertFalse(writerBasedJsonGenerator1.isClosed());
}",0,assertTrue(writerBasedJsonGenerator1.isClosed())
project,0,test833566,"public void test833566() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertFalse(writerBasedJsonGenerator1.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator1.canWriteTypeId())
project,0,test833567,"public void test833567() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(0, writerBasedJsonGenerator1.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator1.getFormatFeatures())"
project,0,test833568,"public void test833568() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(1, writerBasedJsonGenerator1.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator1.getFeatureMask())"
project,0,test833570,"public void test833570() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertFalse(writerBasedJsonGenerator1.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator1.canWriteObjectId())
project,0,test833571,"public void test833571() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertTrue(writerBasedJsonGenerator1.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator1.canOmitFields())
project,0,test833572,"public void test833572() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(3, writerBasedJsonGenerator1.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator1.getHighestEscapedChar())"
project,0,test833573,"public void test833573() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertFalse(writerBasedJsonGenerator1.canWriteBinaryNatively());
}",0,
project,0,test833574,"public void test833574() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test833575,"public void test833575() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test833576,"public void test833576() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test833577,"public void test833577() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test833578,"public void test833578() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test833579,"public void test833579() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test833580,"public void test833580() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test833581,"public void test833581() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test833582,"public void test833582() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test833583,"public void test833583() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test833584,"public void test833584() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test833585,"public void test833585() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test833586,"public void test833586() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test833587,"public void test833587() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test833588,"public void test833588() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test833589,"public void test833589() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test833590,"public void test833590() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertNotNull(writerBasedJsonGenerator1);
}",0,assertNotNull(writerBasedJsonGenerator1)
project,0,test833591,"public void test833591() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertSame(writerBasedJsonGenerator0, writerBasedJsonGenerator1);
}",0,
project,0,test833592,"public void test833592() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    assertSame(writerBasedJsonGenerator1, writerBasedJsonGenerator0);
}",0,
project,0,test833593,"public void test833593() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test833594,"public void test833594() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test833596,"public void test833596() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test833597,"public void test833597() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test833598,"public void test833598() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test833599,"public void test833599() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test833600,"public void test833600() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test833602,"public void test833602() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertEquals(20, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test833603,"public void test833603() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test833604,"public void test833604() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertEquals(3, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test833605,"public void test833605() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test833606,"public void test833606() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test833607,"public void test833607() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test833608,"public void test833608() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test833609,"public void test833609() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test833610,"public void test833610() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test833611,"public void test833611() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test833612,"public void test833612() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test833613,"public void test833613() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test833614,"public void test833614() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test833615,"public void test833615() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test833616,"public void test833616() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test833617,"public void test833617() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test833618,"public void test833618() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertSame(writerBasedJsonGenerator0, writerBasedJsonGenerator1);
}",0,
project,0,test833619,"public void test833619() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    assertEquals(16, charArray0.length);
}",0,
project,0,test843629,"public void test843629() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test843630,"public void test843630() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test843642,"public void test843642() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test843643,"public void test843643() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test843645,"public void test843645() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test843646,"public void test843646() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test843647,"public void test843647() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test843649,"public void test843649() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(1267, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test843650,"public void test843650() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test843651,"public void test843651() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test843652,"public void test843652() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test843653,"public void test843653() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test843654,"public void test843654() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test843668,"public void test843668() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[7];
    charArray0[4] = 'M';
    // Undeclared exception!
    try {
        writerBasedJsonGenerator0.writeString(charArray0, 2, 11);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 7
        //
        verifyException(""com.fasterxml.jackson.core.json.WriterBasedJsonGenerator"", e);
    }
}",1,
project,0,test853678,"public void test853678() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test853679,"public void test853679() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test853691,"public void test853691() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test853692,"public void test853692() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test853694,"public void test853694() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(1267, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test853695,"public void test853695() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test853696,"public void test853696() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test853698,"public void test853698() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test853699,"public void test853699() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test853700,"public void test853700() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test853701,"public void test853701() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test853702,"public void test853702() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test853703,"public void test853703() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test853717,"public void test853717() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test853718,"public void test853718() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test853720,"public void test853720() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertEquals(1267, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test853721,"public void test853721() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test853722,"public void test853722() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test853724,"public void test853724() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test853725,"public void test853725() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test853726,"public void test853726() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test853727,"public void test853727() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test853728,"public void test853728() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test853729,"public void test853729() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test853730,"public void test853730() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""v[~T2S<Z2b=/_2I.gGF"", true);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    int[] intArray0 = new int[7];
    writerBasedJsonGenerator0._outputEscapes = intArray0;
    char[] charArray0 = new char[9];
    charArray0[2] = '_';
    // Undeclared exception!
    try {
        writerBasedJsonGenerator0.writeString(charArray0, 0, 56320);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 9
        //
        verifyException(""com.fasterxml.jackson.core.json.WriterBasedJsonGenerator"", e);
    }
}",1,
project,0,test863740,"public void test863740() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test863741,"public void test863741() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test863753,"public void test863753() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test863754,"public void test863754() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test863756,"public void test863756() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test863757,"public void test863757() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test863758,"public void test863758() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test863759,"public void test863759() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(1267, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test863760,"public void test863760() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test863761,"public void test863761() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test863763,"public void test863763() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test863764,"public void test863764() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test863765,"public void test863765() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test863779,"public void test863779() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test863780,"public void test863780() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test863782,"public void test863782() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test863783,"public void test863783() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertEquals(3, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test863784,"public void test863784() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test863785,"public void test863785() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertEquals(1267, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test863786,"public void test863786() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test863787,"public void test863787() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test863789,"public void test863789() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test863790,"public void test863790() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test863791,"public void test863791() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test863792,"public void test863792() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertArrayEquals(new char[] { '*', '\u0000' }, charArray0);
}",0,
project,0,test863793,"public void test863793() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test863794,"public void test863794() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test863795,"public void test863795() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test863796,"public void test863796() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test863797,"public void test863797() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test863798,"public void test863798() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test863799,"public void test863799() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test863800,"public void test863800() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test863801,"public void test863801() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test863802,"public void test863802() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test863803,"public void test863803() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test863804,"public void test863804() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test863805,"public void test863805() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", true);
    StringWriter stringWriter0 = new StringWriter(1);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[2];
    charArray0[0] = '*';
    writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    assertEquals(2, charArray0.length);
}",0,
project,0,test873815,"public void test873815() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test873816,"public void test873816() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test873826,"public void test873826() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test873827,"public void test873827() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test873828,"public void test873828() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test873829,"public void test873829() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test873830,"public void test873830() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test873831,"public void test873831() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test873832,"public void test873832() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test873833,"public void test873833() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test873834,"public void test873834() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test873835,"public void test873835() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test873836,"public void test873836() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertNotNull(charArray0);
}",0,assertNotNull(charArray0)
project,0,test873837,"public void test873837() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    assertEquals(4000, charArray0.length);
}",0,
project,0,test873840,"public void test873840() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test873841,"public void test873841() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test873843,"public void test873843() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test873844,"public void test873844() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test873845,"public void test873845() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test873846,"public void test873846() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test873847,"public void test873847() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test873848,"public void test873848() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test873850,"public void test873850() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test873851,"public void test873851() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test873852,"public void test873852() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test873866,"public void test873866() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test873867,"public void test873867() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test873869,"public void test873869() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test873870,"public void test873870() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test873871,"public void test873871() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test873872,"public void test873872() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test873873,"public void test873873() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test873875,"public void test873875() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertEquals(4, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test873876,"public void test873876() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test873877,"public void test873877() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test873878,"public void test873878() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test873879,"public void test873879() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test873880,"public void test873880() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test873881,"public void test873881() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test873882,"public void test873882() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test873883,"public void test873883() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test873884,"public void test873884() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test873885,"public void test873885() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test873886,"public void test873886() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test873887,"public void test873887() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test873888,"public void test873888() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test873889,"public void test873889() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test873890,"public void test873890() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test873891,"public void test873891() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test873892,"public void test873892() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test873893,"public void test873893() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(3949, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test873894,"public void test873894() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test873895,"public void test873895() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test873896,"public void test873896() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test873897,"public void test873897() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test873898,"public void test873898() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test873900,"public void test873900() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test873901,"public void test873901() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test873902,"public void test873902() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test873903,"public void test873903() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test873904,"public void test873904() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test873905,"public void test873905() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test873906,"public void test873906() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test873907,"public void test873907() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test873908,"public void test873908() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test873909,"public void test873909() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test873910,"public void test873910() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test873911,"public void test873911() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test873912,"public void test873912() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test873913,"public void test873913() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test873914,"public void test873914() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test873915,"public void test873915() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(4000, charArray0.length);
}",1,
project,0,test873916,"public void test873916() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test873917,"public void test873917() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test873918,"public void test873918() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test873919,"public void test873919() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test873920,"public void test873920() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test873921,"public void test873921() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test873922,"public void test873922() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test873924,"public void test873924() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test873925,"public void test873925() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(3976, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test873926,"public void test873926() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test873927,"public void test873927() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test873928,"public void test873928() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test873929,"public void test873929() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test873930,"public void test873930() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test873931,"public void test873931() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test873932,"public void test873932() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test873933,"public void test873933() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test873934,"public void test873934() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test873935,"public void test873935() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test873936,"public void test873936() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test873937,"public void test873937() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test873938,"public void test873938() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test873939,"public void test873939() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test873940,"public void test873940() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(16, byteArray0.length);
}",0,
project,0,test873941,"public void test873941() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test873942,"public void test873942() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertTrue(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test873943,"public void test873943() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test873944,"public void test873944() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test873945,"public void test873945() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test873946,"public void test873946() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test873947,"public void test873947() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test873949,"public void test873949() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test873950,"public void test873950() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test873951,"public void test873951() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(5, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test873952,"public void test873952() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test873953,"public void test873953() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test873954,"public void test873954() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test873955,"public void test873955() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test873956,"public void test873956() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test873957,"public void test873957() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test873958,"public void test873958() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test873959,"public void test873959() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test873960,"public void test873960() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test873961,"public void test873961() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test873962,"public void test873962() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test873963,"public void test873963() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test873964,"public void test873964() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test873965,"public void test873965() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", true);
    char[] charArray0 = iOContext0.allocTokenBuffer();
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBoolean(true);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[16];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(16, byteArray0.length);
}",0,
project,0,test883975,"public void test883975() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test883976,"public void test883976() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test883988,"public void test883988() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test883989,"public void test883989() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertFalse(iOContext0.isResourceManaged())
project,0,test883990,"public void test883990() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test883991,"public void test883991() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test883992,"public void test883992() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test883993,"public void test883993() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test883994,"public void test883994() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test883995,"public void test883995() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test883996,"public void test883996() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test883997,"public void test883997() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test883998,"public void test883998() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertNotNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test883999,"public void test883999() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(8000, byteArray0.length);
}",0,
project,0,test884000,"public void test884000() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test884001,"public void test884001() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test884003,"public void test884003() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test884004,"public void test884004() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test884006,"public void test884006() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test884007,"public void test884007() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test884008,"public void test884008() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test884009,"public void test884009() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test884010,"public void test884010() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test884011,"public void test884011() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test884012,"public void test884012() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test884026,"public void test884026() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test884027,"public void test884027() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test884028,"public void test884028() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test884029,"public void test884029() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test884031,"public void test884031() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test884032,"public void test884032() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test884033,"public void test884033() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(2677, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test884034,"public void test884034() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test884035,"public void test884035() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test884036,"public void test884036() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test884037,"public void test884037() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test884038,"public void test884038() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test884039,"public void test884039() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test884040,"public void test884040() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test884041,"public void test884041() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test884042,"public void test884042() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test884043,"public void test884043() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test884044,"public void test884044() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test884045,"public void test884045() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test884046,"public void test884046() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test884047,"public void test884047() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test884048,"public void test884048() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test884049,"public void test884049() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test884050,"public void test884050() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(8000, byteArray0.length);
}",0,
project,0,test884051,"public void test884051() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test884052,"public void test884052() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test884064,"public void test884064() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test884065,"public void test884065() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test884077,"public void test884077() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test884078,"public void test884078() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test884079,"public void test884079() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test884080,"public void test884080() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test884082,"public void test884082() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test884083,"public void test884083() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test884084,"public void test884084() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertEquals(2405, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test884085,"public void test884085() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test884086,"public void test884086() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test884087,"public void test884087() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test884088,"public void test884088() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test884090,"public void test884090() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertEquals(2789, int0);
}",0,"assertEquals(0, int0)"
project,0,test884091,"public void test884091() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test884092,"public void test884092() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test884093,"public void test884093() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test884094,"public void test884094() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test884095,"public void test884095() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test884096,"public void test884096() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test884097,"public void test884097() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test884098,"public void test884098() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test884099,"public void test884099() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test884100,"public void test884100() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test884101,"public void test884101() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test884102,"public void test884102() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test884103,"public void test884103() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    assertEquals(8000, byteArray0.length);
}",0,
project,0,test894113,"public void test894113() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test894114,"public void test894114() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test894124,"public void test894124() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test894125,"public void test894125() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test894126,"public void test894126() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test894127,"public void test894127() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test894128,"public void test894128() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test894129,"public void test894129() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test894130,"public void test894130() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test894131,"public void test894131() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test894132,"public void test894132() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test894133,"public void test894133() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test894134,"public void test894134() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertNotNull(charArray0);
}",0,assertNotNull(charArray0)
project,0,test894135,"public void test894135() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(4000, charArray0.length);
}",0,
project,0,test894138,"public void test894138() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test894139,"public void test894139() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test894141,"public void test894141() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test894142,"public void test894142() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test894143,"public void test894143() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test894145,"public void test894145() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test894146,"public void test894146() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test894147,"public void test894147() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test894148,"public void test894148() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test894149,"public void test894149() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test894150,"public void test894150() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test894164,"public void test894164() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test894165,"public void test894165() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test894166,"public void test894166() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test894167,"public void test894167() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test894169,"public void test894169() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(3943, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test894170,"public void test894170() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test894171,"public void test894171() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test894172,"public void test894172() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test894173,"public void test894173() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test894174,"public void test894174() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test894175,"public void test894175() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test894176,"public void test894176() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test894177,"public void test894177() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test894178,"public void test894178() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test894179,"public void test894179() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test894180,"public void test894180() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test894181,"public void test894181() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test894182,"public void test894182() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test894183,"public void test894183() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test894184,"public void test894184() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test894185,"public void test894185() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test894186,"public void test894186() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test894187,"public void test894187() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test894188,"public void test894188() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(4000, charArray0.length);
}",1,
project,0,test894189,"public void test894189() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test894190,"public void test894190() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test894191,"public void test894191() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test894192,"public void test894192() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(3954, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test894193,"public void test894193() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test894195,"public void test894195() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test894196,"public void test894196() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test894197,"public void test894197() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test894198,"public void test894198() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test894199,"public void test894199() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test894200,"public void test894200() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test894201,"public void test894201() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test894202,"public void test894202() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test894203,"public void test894203() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test894204,"public void test894204() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test894205,"public void test894205() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test894206,"public void test894206() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test894207,"public void test894207() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test894208,"public void test894208() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test894209,"public void test894209() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test894210,"public void test894210() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test894211,"public void test894211() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test894212,"public void test894212() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test894213,"public void test894213() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test894214,"public void test894214() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(6, byteArray0.length);
}",0,
project,0,test894215,"public void test894215() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test894216,"public void test894216() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test894217,"public void test894217() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test894218,"public void test894218() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test894220,"public void test894220() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test894221,"public void test894221() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test894222,"public void test894222() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test894223,"public void test894223() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test894224,"public void test894224() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test894225,"public void test894225() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test894226,"public void test894226() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertEquals(3974, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test894227,"public void test894227() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test894228,"public void test894228() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test894229,"public void test894229() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test894230,"public void test894230() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test894231,"public void test894231() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test894232,"public void test894232() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test894233,"public void test894233() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test894234,"public void test894234() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test894235,"public void test894235() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test894236,"public void test894236() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test894237,"public void test894237() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test894238,"public void test894238() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test894239,"public void test894239() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test894240,"public void test894240() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test894241,"public void test894241() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test894242,"public void test894242() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test894243,"public void test894243() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertEquals(3979, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test894245,"public void test894245() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test894246,"public void test894246() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test894247,"public void test894247() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test894248,"public void test894248() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test894249,"public void test894249() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test894250,"public void test894250() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test894251,"public void test894251() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test894252,"public void test894252() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test894253,"public void test894253() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test894254,"public void test894254() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test894255,"public void test894255() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test894256,"public void test894256() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test894257,"public void test894257() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test894258,"public void test894258() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test894259,"public void test894259() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test894260,"public void test894260() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test894261,"public void test894261() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test894262,"public void test894262() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test894263,"public void test894263() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test894264,"public void test894264() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test894265,"public void test894265() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test894266,"public void test894266() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test894267,"public void test894267() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertEquals(3980, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test894269,"public void test894269() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test894270,"public void test894270() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test894271,"public void test894271() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test894272,"public void test894272() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test894273,"public void test894273() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test894274,"public void test894274() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test894275,"public void test894275() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test894276,"public void test894276() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test894277,"public void test894277() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test894278,"public void test894278() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test894279,"public void test894279() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test894280,"public void test894280() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test894281,"public void test894281() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test894282,"public void test894282() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test894283,"public void test894283() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test894284,"public void test894284() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test894285,"public void test894285() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test894286,"public void test894286() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test894295,"public void test894295() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test894296,"public void test894296() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test894297,"public void test894297() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test894298,"public void test894298() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test894300,"public void test894300() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test894301,"public void test894301() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test894302,"public void test894302() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test894303,"public void test894303() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test894304,"public void test894304() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test894305,"public void test894305() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test894306,"public void test894306() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertEquals(3989, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test894307,"public void test894307() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test894308,"public void test894308() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test894309,"public void test894309() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test894310,"public void test894310() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test894311,"public void test894311() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test894312,"public void test894312() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test894313,"public void test894313() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test894314,"public void test894314() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test894315,"public void test894315() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test894316,"public void test894316() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test894317,"public void test894317() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test894318,"public void test894318() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test894319,"public void test894319() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, "")Rb5E.KPv*t/R$q_%s^"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[6];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName("")Rb5E.KPv*t/R$q_%s^"");
    writerBasedJsonGenerator0.writeNumber((short) 2401);
    writerBasedJsonGenerator0.writeRaw('L');
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    int int0 = byteArrayInputStream0.read();
    writerBasedJsonGenerator0.writeString(""u%Th*A"");
    try {
        writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 10);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Too few bytes available: missing 5 bytes (out of 10)
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",1,
project,0,test904329,"public void test904329() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertFalse(iOContext0.isResourceManaged())
project,0,test904330,"public void test904330() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test904342,"public void test904342() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test904343,"public void test904343() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test904344,"public void test904344() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test904345,"public void test904345() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test904346,"public void test904346() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test904347,"public void test904347() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test904348,"public void test904348() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test904349,"public void test904349() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test904350,"public void test904350() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test904351,"public void test904351() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test904352,"public void test904352() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertNotNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test904353,"public void test904353() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(8000, byteArray0.length);
}",0,
project,0,test904354,"public void test904354() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertFalse(iOContext0.isResourceManaged())
project,0,test904355,"public void test904355() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test904357,"public void test904357() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test904358,"public void test904358() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(1267, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test904359,"public void test904359() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test904360,"public void test904360() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test904362,"public void test904362() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test904363,"public void test904363() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test904364,"public void test904364() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test904365,"public void test904365() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test904366,"public void test904366() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test904380,"public void test904380() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test904381,"public void test904381() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test904393,"public void test904393() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, """", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    try {
        writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 56319);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Too few bytes available: missing 48320 bytes (out of 56319)
        //
        verifyException(""com.fasterxml.jackson.core.JsonGenerator"", e);
    }
}",0,
project,0,test914403,"public void test914403() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertFalse(iOContext0.isResourceManaged())
project,0,test914404,"public void test914404() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test914416,"public void test914416() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test914417,"public void test914417() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test914418,"public void test914418() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test914419,"public void test914419() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test914420,"public void test914420() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test914421,"public void test914421() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test914422,"public void test914422() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test914423,"public void test914423() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test914424,"public void test914424() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test914425,"public void test914425() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test914426,"public void test914426() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    assertNotNull(byteArray0);
}",0,
project,0,test914427,"public void test914427() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    assertEquals(8000, byteArray0.length);
}",0,
project,0,test914428,"public void test914428() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test914429,"public void test914429() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test914431,"public void test914431() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test914432,"public void test914432() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test914433,"public void test914433() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test914434,"public void test914434() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test914435,"public void test914435() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(1267, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test914436,"public void test914436() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test914437,"public void test914437() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test914438,"public void test914438() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test914440,"public void test914440() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test914454,"public void test914454() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test914455,"public void test914455() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test914467,"public void test914467() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test914468,"public void test914468() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test914469,"public void test914469() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test914470,"public void test914470() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test914471,"public void test914471() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test914472,"public void test914472() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test914473,"public void test914473() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertEquals(1267, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test914474,"public void test914474() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertEquals(2677, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test914475,"public void test914475() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test914476,"public void test914476() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test914478,"public void test914478() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test914480,"public void test914480() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertEquals(7999, int0);
}",0,"assertEquals(0, int0)"
project,0,test914481,"public void test914481() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test914482,"public void test914482() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test914483,"public void test914483() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test914484,"public void test914484() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test914485,"public void test914485() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test914486,"public void test914486() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test914487,"public void test914487() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test914488,"public void test914488() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test914489,"public void test914489() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test914490,"public void test914490() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test914491,"public void test914491() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test914492,"public void test914492() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test914493,"public void test914493() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""*:"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    assertEquals(8000, byteArray0.length);
}",0,
project,0,test924503,"public void test924503() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test924504,"public void test924504() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test924514,"public void test924514() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test924515,"public void test924515() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test924516,"public void test924516() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test924517,"public void test924517() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test924518,"public void test924518() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test924519,"public void test924519() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test924520,"public void test924520() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test924521,"public void test924521() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test924522,"public void test924522() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test924523,"public void test924523() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test924524,"public void test924524() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertNotNull(charArray0);
}",1,
project,0,test924525,"public void test924525() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    assertEquals(4000, charArray0.length);
}",1,
project,0,test924528,"public void test924528() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test924529,"public void test924529() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test924531,"public void test924531() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test924532,"public void test924532() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test924533,"public void test924533() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test924534,"public void test924534() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test924535,"public void test924535() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test924536,"public void test924536() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test924537,"public void test924537() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test924539,"public void test924539() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test924540,"public void test924540() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test924554,"public void test924554() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test924555,"public void test924555() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test924556,"public void test924556() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test924557,"public void test924557() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test924558,"public void test924558() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test924559,"public void test924559() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(3943, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test924560,"public void test924560() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test924561,"public void test924561() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test924562,"public void test924562() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test924564,"public void test924564() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test924565,"public void test924565() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test924566,"public void test924566() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test924567,"public void test924567() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test924568,"public void test924568() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test924569,"public void test924569() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test924570,"public void test924570() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test924571,"public void test924571() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test924572,"public void test924572() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test924573,"public void test924573() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test924574,"public void test924574() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test924575,"public void test924575() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test924576,"public void test924576() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test924577,"public void test924577() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test924578,"public void test924578() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    assertEquals(4000, charArray0.length);
}",1,
project,0,test924579,"public void test924579() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test924580,"public void test924580() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test924581,"public void test924581() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test924582,"public void test924582() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test924583,"public void test924583() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test924584,"public void test924584() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test924585,"public void test924585() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test924586,"public void test924586() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test924588,"public void test924588() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test924589,"public void test924589() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test924590,"public void test924590() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(3958, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test924591,"public void test924591() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test924592,"public void test924592() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test924593,"public void test924593() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test924594,"public void test924594() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test924595,"public void test924595() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test924596,"public void test924596() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test924597,"public void test924597() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test924598,"public void test924598() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test924599,"public void test924599() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test924600,"public void test924600() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test924601,"public void test924601() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test924602,"public void test924602() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test924603,"public void test924603() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test924604,"public void test924604() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    assertEquals(7, byteArray0.length);
}",0,
project,0,test924605,"public void test924605() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test924606,"public void test924606() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test924607,"public void test924607() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test924608,"public void test924608() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertEquals(3968, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test924609,"public void test924609() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test924610,"public void test924610() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test924611,"public void test924611() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test924612,"public void test924612() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test924613,"public void test924613() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test924615,"public void test924615() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test924616,"public void test924616() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test924617,"public void test924617() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test924618,"public void test924618() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test924619,"public void test924619() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test924620,"public void test924620() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test924621,"public void test924621() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test924622,"public void test924622() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test924623,"public void test924623() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test924624,"public void test924624() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test924625,"public void test924625() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test924626,"public void test924626() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test924627,"public void test924627() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test924628,"public void test924628() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test924629,"public void test924629() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test924630,"public void test924630() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test924631,"public void test924631() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test924632,"public void test924632() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test924633,"public void test924633() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test924634,"public void test924634() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test924635,"public void test924635() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test924636,"public void test924636() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test924638,"public void test924638() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test924639,"public void test924639() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test924640,"public void test924640() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertEquals(3973, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test924641,"public void test924641() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test924642,"public void test924642() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test924643,"public void test924643() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test924644,"public void test924644() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test924645,"public void test924645() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test924646,"public void test924646() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test924647,"public void test924647() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test924648,"public void test924648() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test924649,"public void test924649() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test924650,"public void test924650() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test924651,"public void test924651() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test924652,"public void test924652() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test924657,"public void test924657() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test924658,"public void test924658() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test924659,"public void test924659() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test924660,"public void test924660() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test924661,"public void test924661() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertEquals(3985, writerBasedJsonGenerator0.getOutputBuffered());
}",0,
project,0,test924662,"public void test924662() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test924663,"public void test924663() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test924664,"public void test924664() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test924665,"public void test924665() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test924667,"public void test924667() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test924668,"public void test924668() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test924669,"public void test924669() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",1,
project,0,test924670,"public void test924670() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",1,
project,0,test924671,"public void test924671() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",1,
project,0,test924672,"public void test924672() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",1,
project,0,test924673,"public void test924673() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",1,
project,0,test924674,"public void test924674() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",1,
project,0,test924675,"public void test924675() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",1,
project,0,test924676,"public void test924676() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",1,
project,0,test924677,"public void test924677() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",1,
project,0,test924678,"public void test924678() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",1,
project,0,test924679,"public void test924679() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",1,
project,0,test924680,"public void test924680() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",1,
project,0,test924681,"public void test924681() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test924682,"public void test924682() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test924683,"public void test924683() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test924684,"public void test924684() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test924685,"public void test924685() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test924686,"public void test924686() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test924687,"public void test924687() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test924688,"public void test924688() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,
project,0,test924690,"public void test924690() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test924691,"public void test924691() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(5, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test924692,"public void test924692() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test924694,"public void test924694() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test924695,"public void test924695() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(7, int0);
}",0,"assertEquals(0, int0)"
project,0,test924696,"public void test924696() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test924697,"public void test924697() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test924698,"public void test924698() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test924699,"public void test924699() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test924700,"public void test924700() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test924701,"public void test924701() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test924702,"public void test924702() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test924703,"public void test924703() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test924704,"public void test924704() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test924705,"public void test924705() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test924706,"public void test924706() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test924707,"public void test924707() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test924708,"public void test924708() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFs#Qt^1:"", false);
    char[] charArray0 = iOContext0.allocTokenBuffer(0);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    byte[] byteArray0 = new byte[7];
    writerBasedJsonGenerator0.writeBinary(byteArray0);
    writerBasedJsonGenerator0.writeFieldName(""nFs#Qt^1:"");
    writerBasedJsonGenerator0.writeNumber((short) 2415);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    writerBasedJsonGenerator0.writeString(""nFs#Qt^1:"");
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    assertEquals(7, byteArray0.length);
}",0,
project,0,test934718,"public void test934718() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test934719,"public void test934719() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test934731,"public void test934731() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test934732,"public void test934732() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test934733,"public void test934733() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test934734,"public void test934734() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test934735,"public void test934735() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test934736,"public void test934736() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test934737,"public void test934737() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test934738,"public void test934738() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test934739,"public void test934739() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test934740,"public void test934740() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test934741,"public void test934741() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertNotNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test934742,"public void test934742() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(8000, byteArray0.length);
}",0,
project,0,test934743,"public void test934743() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test934744,"public void test934744() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test934746,"public void test934746() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test934747,"public void test934747() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test934748,"public void test934748() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test934749,"public void test934749() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test934750,"public void test934750() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test934751,"public void test934751() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test934753,"public void test934753() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test934754,"public void test934754() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    assertEquals((-3793), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test934755,"public void test934755() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test934769,"public void test934769() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test934770,"public void test934770() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test934782,"public void test934782() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test934783,"public void test934783() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertFalse(iOContext0.isResourceManaged());
}",0,
project,0,test934785,"public void test934785() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test934786,"public void test934786() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertEquals(50, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test934787,"public void test934787() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test934788,"public void test934788() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test934789,"public void test934789() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test934790,"public void test934790() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test934792,"public void test934792() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test934793,"public void test934793() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertEquals((-3793), writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test934794,"public void test934794() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test934796,"public void test934796() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertEquals(35, int0);
}",0,"assertEquals(0, int0)"
project,0,test934797,"public void test934797() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test934798,"public void test934798() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test934799,"public void test934799() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test934800,"public void test934800() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test934801,"public void test934801() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test934802,"public void test934802() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test934803,"public void test934803() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test934804,"public void test934804() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test934805,"public void test934805() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test934806,"public void test934806() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test934807,"public void test934807() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test934808,"public void test934808() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test934809,"public void test934809() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, ""nFsQt^1{"", false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    assertEquals(8000, byteArray0.length);
}",0,
project,0,test944819,"public void test944819() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test944820,"public void test944820() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test944832,"public void test944832() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test944833,"public void test944833() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test944834,"public void test944834() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test944835,"public void test944835() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test944836,"public void test944836() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test944837,"public void test944837() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test944838,"public void test944838() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test944839,"public void test944839() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test944840,"public void test944840() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test944841,"public void test944841() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test944842,"public void test944842() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertNotNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test944843,"public void test944843() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    assertEquals(8000, byteArray0.length);
}",0,
project,0,test944844,"public void test944844() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test944845,"public void test944845() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test944848,"public void test944848() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test944849,"public void test944849() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test944850,"public void test944850() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test944851,"public void test944851() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test944852,"public void test944852() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test944853,"public void test944853() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test944854,"public void test944854() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test944855,"public void test944855() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test944856,"public void test944856() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test944870,"public void test944870() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test944871,"public void test944871() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test944883,"public void test944883() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test944884,"public void test944884() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test944887,"public void test944887() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test944888,"public void test944888() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertEquals(6, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test944889,"public void test944889() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertEquals(3, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test944890,"public void test944890() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,
project,0,test944891,"public void test944891() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test944892,"public void test944892() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test944893,"public void test944893() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test944894,"public void test944894() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test944895,"public void test944895() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test944897,"public void test944897() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertEquals(2, int0);
}",0,"assertEquals(0, int0)"
project,0,test944898,"public void test944898() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertEquals(0, BufferRecycler.BYTE_READ_IO_BUFFER);
}",0,
project,0,test944899,"public void test944899() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertEquals(1, BufferRecycler.CHAR_CONCAT_BUFFER);
}",0,
project,0,test944900,"public void test944900() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertEquals(2, BufferRecycler.CHAR_TEXT_BUFFER);
}",0,
project,0,test944901,"public void test944901() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertEquals(0, BufferRecycler.CHAR_TOKEN_BUFFER);
}",0,
project,0,test944902,"public void test944902() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertEquals(3, BufferRecycler.BYTE_BASE64_CODEC_BUFFER);
}",0,
project,0,test944903,"public void test944903() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertEquals(3, BufferRecycler.CHAR_NAME_COPY_BUFFER);
}",0,
project,0,test944904,"public void test944904() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertEquals(1, BufferRecycler.BYTE_WRITE_ENCODING_BUFFER);
}",0,
project,0,test944905,"public void test944905() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertEquals(2, BufferRecycler.BYTE_WRITE_CONCAT_BUFFER);
}",0,
project,0,test944906,"public void test944906() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertEquals(56319, GeneratorBase.SURR1_LAST);
}",0,
project,0,test944907,"public void test944907() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertEquals(55296, GeneratorBase.SURR1_FIRST);
}",0,
project,0,test944908,"public void test944908() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertEquals(56320, GeneratorBase.SURR2_FIRST);
}",0,
project,0,test944909,"public void test944909() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertEquals(57343, GeneratorBase.SURR2_LAST);
}",0,
project,0,test944910,"public void test944910() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    assertEquals(8000, byteArray0.length);
}",0,
project,0,test954920,"public void test954920() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test954921,"public void test954921() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test954933,"public void test954933() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test954934,"public void test954934() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test954936,"public void test954936() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test954937,"public void test954937() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test954938,"public void test954938() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test954939,"public void test954939() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    assertEquals(4519, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test954940,"public void test954940() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test954941,"public void test954941() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test954942,"public void test954942() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test954943,"public void test954943() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test954945,"public void test954945() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test954959,"public void test954959() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputTail = 56319;
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test954960,"public void test954960() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputTail = 56319;
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test954962,"public void test954962() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputTail = 56319;
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteBinaryNatively())
project,0,test954963,"public void test954963() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputTail = 56319;
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test954964,"public void test954964() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputTail = 56319;
    assertEquals(127, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test954965,"public void test954965() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputTail = 56319;
    assertEquals(4519, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test954966,"public void test954966() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputTail = 56319;
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test954967,"public void test954967() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputTail = 56319;
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test954968,"public void test954968() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputTail = 56319;
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test954969,"public void test954969() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputTail = 56319;
    assertEquals(56319, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test954971,"public void test954971() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputTail = 56319;
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test954972,"public void test954972() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    writerBasedJsonGenerator0._outputTail = 56319;
    // Undeclared exception!
    try {
        writerBasedJsonGenerator0.writeNull();
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.io.StringWriter"", e);
    }
}",1,
project,0,test964982,"public void test964982() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test964983,"public void test964983() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test964995,"public void test964995() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(iOContext0.isResourceManaged());
}",0,assertTrue(iOContext0.isResourceManaged())
project,0,test964996,"public void test964996() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertNull(iOContext0.getEncoding());
}",0,assertNotNull(iOContext0.getEncoding())
project,0,test964998,"public void test964998() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteBinaryNatively());
}",0,
project,0,test964999,"public void test964999() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getFormatFeatures());
}",0,"assertEquals(1, writerBasedJsonGenerator0.getFormatFeatures())"
project,0,test965000,"public void test965000() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getOutputBuffered())"
project,0,test965001,"public void test965001() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteObjectId());
}",0,assertFalse(writerBasedJsonGenerator0.canWriteObjectId())
project,0,test965002,"public void test965002() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getHighestEscapedChar())"
project,0,test965003,"public void test965003() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertEquals(1, writerBasedJsonGenerator0.getFeatureMask());
}",0,"assertEquals(0, writerBasedJsonGenerator0.getFeatureMask())"
project,0,test965004,"public void test965004() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.canWriteTypeId());
}",0,assertTrue(writerBasedJsonGenerator0.canWriteTypeId())
project,0,test965006,"public void test965006() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertTrue(writerBasedJsonGenerator0.canOmitFields());
}",0,assertTrue(writerBasedJsonGenerator0.canOmitFields())
project,0,test965007,"public void test965007() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    assertFalse(writerBasedJsonGenerator0.isClosed());
}",0,assertTrue(writerBasedJsonGenerator0.isClosed())
project,0,test965021,"public void test965021() throws Throwable {
    BufferRecycler bufferRecycler0 = new BufferRecycler();
    IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    StringWriter stringWriter0 = new StringWriter();
    WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    char[] charArray0 = new char[7];
    charArray0[5] = '\""';
    // Undeclared exception!
    try {
        writerBasedJsonGenerator0.writeString(charArray0, 1, 482);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 7
        //
        verifyException(""com.fasterxml.jackson.core.json.WriterBasedJsonGenerator"", e);
    }
}",0,
