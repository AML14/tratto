/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 20 02:59:16 GMT 2023
 */
package com.fasterxml.jackson.core.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.core.SerializableString;
import com.fasterxml.jackson.core.base.GeneratorBase;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.io.SerializedString;
import com.fasterxml.jackson.core.json.UTF8JsonGenerator;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.ByteArrayBuilder;
import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class UTF8JsonGenerator_ESTest extends UTF8JsonGenerator_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", true);
        File file0 = MockFile.createTempFile("RyxR&5%n*9%D1/z|", "4", (File) null);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, mockFileOutputStream0);
        int int0 = uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", true);
        File file0 = MockFile.createTempFile("RyxR&5%n*9%D1/z|", "4", (File) null);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, mockFileOutputStream0);
        int int0 = uTF8JsonGenerator0.getOutputBuffered();
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 58, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, false);
        uTF8JsonGenerator0.useDefaultPrettyPrinter();
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 58, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, false);
        uTF8JsonGenerator0.useDefaultPrettyPrinter();
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0024() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayBuilder0);
        Object object0 = uTF8JsonGenerator0.getOutputTarget();
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0025() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayBuilder0);
        Object object0 = uTF8JsonGenerator0.getOutputTarget();
        assertNotNull(object0);
    }

    @Test(timeout = 4000)
    public void test0036() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        JsonGenerator jsonGenerator0 = uTF8JsonGenerator0.useDefaultPrettyPrinter();
        int[] intArray0 = new int[5];
        jsonGenerator0.writeArray(intArray0, 56319, 56320);
    }

    @Test(timeout = 4000)
    public void test0047() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeNullField("");
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0058() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, "9&w", false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-2610), (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeBooleanField("9&w", false);
        uTF8JsonGenerator0.writeFieldName("?L.y+#mX<i~*");
    }

    @Test(timeout = 4000)
    public void test0079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[2];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinaryField(".OopaW8G[R#4", byteArray0);
    }

    @Test(timeout = 4000)
    public void test00810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("%");
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("");
    }

    @Test(timeout = 4000)
    public void test00811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("%");
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("");
        uTF8JsonGenerator0.getOutputBuffered();
        assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
    }

    @Test(timeout = 4000)
    public void test00912() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeFieldName("0[YyCnZpe(A|TOY");
        SerializedString serializedString0 = new SerializedString("0[YyCnZpe(A|TOY");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test01013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeString((char[]) null, 2, 0);
        SerializedString serializedString0 = new SerializedString("com.fasterxml.jackson.core.JsonEncoding");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test01114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        PipedInputStream pipedInputStream0 = new PipedInputStream();
        PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, pipedOutputStream0);
        uTF8JsonGenerator0.writeNumber(1.0F);
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test01215() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("%");
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeStartObject();
        SerializedString serializedString0 = new SerializedString("%");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test01216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("%");
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeStartObject();
        SerializedString serializedString0 = new SerializedString("%");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test01317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = new SerializedString("expected a valid value (number, String, array, object, 'true', 'false' or 'null')");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test01418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeStartObject();
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test01419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeStartObject();
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test01520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeStartArray();
        uTF8JsonGenerator0.writeEndArray();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test01521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeStartArray();
        uTF8JsonGenerator0.writeEndArray();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test01622() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArray((int[]) null, 1, 0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test01723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, false);
        uTF8JsonGenerator0.writeEndArray();
    }

    @Test(timeout = 4000)
    public void test01824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        JsonGenerator jsonGenerator0 = uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeStartObject();
        char[] charArray0 = iOContext0.allocTokenBuffer(981);
        SerializedString serializedString0 = new SerializedString("expected a valid value (number, String, array, object, 'true', 'false' or 'null')");
        jsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0.writeString(charArray0, 931, 56320);
    }

    @Test(timeout = 4000)
    public void test01925() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-3893), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, true);
        uTF8JsonGenerator0.writeNumber(48);
        uTF8JsonGenerator0.writeFieldName("~G");
        uTF8JsonGenerator0.writeStartObject();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test01926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-3893), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, true);
        uTF8JsonGenerator0.writeNumber(48);
        uTF8JsonGenerator0.writeFieldName("~G");
        uTF8JsonGenerator0.writeStartObject();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test02027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeEndObject();
    }

    @Test(timeout = 4000)
    public void test02128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
        uTF8JsonGenerator0._writePPFieldName("pAc!_U]ga(C7v");
    }

    @Test(timeout = 4000)
    public void test02229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 0);
        uTF8JsonGenerator0._writePPFieldName("LDp?Z6>o?]`c$Ut?h");
    }

    @Test(timeout = 4000)
    public void test02430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._writePPFieldName(serializedString0);
    }

    @Test(timeout = 4000)
    public void test02531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((double) 2);
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        uTF8JsonGenerator0._writePPFieldName(serializedString0);
    }

    @Test(timeout = 4000)
    public void test02632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 58, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, false);
        uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeStartObject();
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test02633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 58, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, false);
        uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeStartObject();
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test02734() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeString("oFW-E/GNu3&kS#O");
    }

    @Test(timeout = 4000)
    public void test02735() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeString("oFW-E/GNu3&kS#O");
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test02836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeString((String) null);
    }

    @Test(timeout = 4000)
    public void test02937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeString("");
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test02938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeString("");
    }

    @Test(timeout = 4000)
    public void test03039() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        char[] charArray0 = iOContext0.allocTokenBuffer(981);
        uTF8JsonGenerator0.writeString(charArray0, 931, 56320);
    }

    @Test(timeout = 4000)
    public void test03140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test03141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test03142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test03143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test03144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test03145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test03146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test03147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test03148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test03149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test03150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test03151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test03152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test03153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test03154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test03155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test03156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test03157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test03158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test03159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test03160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    }

    @Test(timeout = 4000)
    public void test03161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    }

    @Test(timeout = 4000)
    public void test03162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    }

    @Test(timeout = 4000)
    public void test03163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    }

    @Test(timeout = 4000)
    public void test03164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    }

    @Test(timeout = 4000)
    public void test03165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    }

    @Test(timeout = 4000)
    public void test03166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    }

    @Test(timeout = 4000)
    public void test03167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    }

    @Test(timeout = 4000)
    public void test03168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    }

    @Test(timeout = 4000)
    public void test03169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
    }

    @Test(timeout = 4000)
    public void test03170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test03171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        iOContext0.isResourceManaged();
        assertFalse(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test03172() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    }

    @Test(timeout = 4000)
    public void test03173() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test03174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test03175() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test03176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test03177() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test03178() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test03179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test03180() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test03181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test03182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test03183() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test03184() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test03185() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test03186() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test03187() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test03188() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test03189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertFalse(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test03190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test03191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test03192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test03193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test03194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test03195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test03196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test03197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test03198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test03199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test031100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test031101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test031102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    }

    @Test(timeout = 4000)
    public void test031103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    }

    @Test(timeout = 4000)
    public void test031104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    }

    @Test(timeout = 4000)
    public void test031105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    }

    @Test(timeout = 4000)
    public void test031106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    }

    @Test(timeout = 4000)
    public void test031107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    }

    @Test(timeout = 4000)
    public void test031108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    }

    @Test(timeout = 4000)
    public void test031109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    }

    @Test(timeout = 4000)
    public void test031110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    }

    @Test(timeout = 4000)
    public void test031111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    }

    @Test(timeout = 4000)
    public void test031112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    }

    @Test(timeout = 4000)
    public void test031113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    }

    @Test(timeout = 4000)
    public void test031114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
    }

    @Test(timeout = 4000)
    public void test031115() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test031116() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test031117() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test031118() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test031119() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test031120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test031121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test031122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test031123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test031124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test031125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test031126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test031127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test031128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        char[] charArray0 = iOContext0.allocNameCopyBuffer(0);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeString(charArray0, 1, 3);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test032129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test032130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test032131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test032132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test032133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test032134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test032135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test032136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test032137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test032138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
    }

    @Test(timeout = 4000)
    public void test032139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    }

    @Test(timeout = 4000)
    public void test032140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test032141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test032142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test032143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test032144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test032145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test032146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test032147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test032148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test032149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test032150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test032151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test032152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test032153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test032154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test032155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test032156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test032157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test032158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test032159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test032160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test032161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test032162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test032163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test032164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test032165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test032166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.length();
    }

    @Test(timeout = 4000)
    public void test032167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.isHidden();
    }

    @Test(timeout = 4000)
    public void test032168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.canWrite();
    }

    @Test(timeout = 4000)
    public void test032169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.getParent();
    }

    @Test(timeout = 4000)
    public void test032170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.getUsableSpace();
    }

    @Test(timeout = 4000)
    public void test032171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test032172() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.getFreeSpace();
    }

    @Test(timeout = 4000)
    public void test032173() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.toString();
    }

    @Test(timeout = 4000)
    public void test032174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.isAbsolute();
    }

    @Test(timeout = 4000)
    public void test032175() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.canExecute();
    }

    @Test(timeout = 4000)
    public void test032176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.getName();
    }

    @Test(timeout = 4000)
    public void test032177() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.exists();
    }

    @Test(timeout = 4000)
    public void test032178() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.isFile();
    }

    @Test(timeout = 4000)
    public void test032179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.canRead();
    }

    @Test(timeout = 4000)
    public void test032180() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.getTotalSpace();
    }

    @Test(timeout = 4000)
    public void test032181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.lastModified();
    }

    @Test(timeout = 4000)
    public void test032182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test032183() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test032184() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test032185() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test032186() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test032187() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test032188() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test032189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test032190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test032191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test032192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test032193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test032194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        SerializedString serializedString0 = new SerializedString("#j+lVyQ79t");
    }

    @Test(timeout = 4000)
    public void test032195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        SerializedString serializedString0 = new SerializedString("#j+lVyQ79t");
        serializedString0.charLength();
        assertEquals(0, serializedString0.charLength());
    }

    @Test(timeout = 4000)
    public void test032196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        SerializedString serializedString0 = new SerializedString("#j+lVyQ79t");
        serializedString0.toString();
        assertNotNull(serializedString0.toString());
    }

    @Test(timeout = 4000)
    public void test032197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        SerializedString serializedString0 = new SerializedString("#j+lVyQ79t");
        serializedString0.getValue();
        assertNotNull(serializedString0.getValue());
    }

    @Test(timeout = 4000)
    public void test032198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        SerializedString serializedString0 = new SerializedString("#j+lVyQ79t");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test033199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test033200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test033201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test033202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test033203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test033204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test033205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test033206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test033207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test033208() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test033209() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test033210() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test033211() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test033212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test033213() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test033214() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test033215() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test033216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test033217() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test033218() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test033219() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    }

    @Test(timeout = 4000)
    public void test033220() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test033221() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test033222() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
    }

    @Test(timeout = 4000)
    public void test033223() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        serializedString0.getValue();
        assertNotNull(serializedString0.getValue());
    }

    @Test(timeout = 4000)
    public void test033224() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        serializedString0.charLength();
        assertEquals(0, serializedString0.charLength());
    }

    @Test(timeout = 4000)
    public void test033225() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        serializedString0.toString();
        assertNotNull(serializedString0.toString());
    }

    @Test(timeout = 4000)
    public void test033226() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    }

    @Test(timeout = 4000)
    public void test033227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    }

    @Test(timeout = 4000)
    public void test033228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    }

    @Test(timeout = 4000)
    public void test033229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    }

    @Test(timeout = 4000)
    public void test033230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    }

    @Test(timeout = 4000)
    public void test033231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    }

    @Test(timeout = 4000)
    public void test033232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    }

    @Test(timeout = 4000)
    public void test033233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    }

    @Test(timeout = 4000)
    public void test033234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    }

    @Test(timeout = 4000)
    public void test033235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    }

    @Test(timeout = 4000)
    public void test033236() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    }

    @Test(timeout = 4000)
    public void test033237() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    }

    @Test(timeout = 4000)
    public void test033238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    }

    @Test(timeout = 4000)
    public void test033239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    }

    @Test(timeout = 4000)
    public void test033240() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
    }

    @Test(timeout = 4000)
    public void test033241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test033242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test033243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test033244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test033245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test033246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test033247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test033248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test033249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test033250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test033251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test033252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test033253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test033254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test033255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        SerializedString serializedString0 = new SerializedString("Qqj_MZWi|R<Ys");
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 55296, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 55296, true);
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test034256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test034257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test034258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test034259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test034260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test034261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test034262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test034263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test034264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test034265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test034266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test034267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test034268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test034269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test034270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test034271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test034272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test034273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test034274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test034275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test034276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
    }

    @Test(timeout = 4000)
    public void test034277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test034278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test034279() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test034280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test034281() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test034282() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test034283() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test034284() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test034285() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test034286() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test034287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test034288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test034289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test034290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test034291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test034292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test034293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test034294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test034295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test034296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test034297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test034298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test034299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test034300() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test034301() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test034302() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test034303() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test034304() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test034305() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test034306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test034307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test034308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    }

    @Test(timeout = 4000)
    public void test034309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    }

    @Test(timeout = 4000)
    public void test034310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
    }

    @Test(timeout = 4000)
    public void test034311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        serializedString0.toString();
        assertNotNull(serializedString0.toString());
    }

    @Test(timeout = 4000)
    public void test034312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        serializedString0.getValue();
        assertNotNull(serializedString0.getValue());
    }

    @Test(timeout = 4000)
    public void test034313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        serializedString0.charLength();
        assertEquals(0, serializedString0.charLength());
    }

    @Test(timeout = 4000)
    public void test034314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
    }

    @Test(timeout = 4000)
    public void test034315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
    }

    @Test(timeout = 4000)
    public void test034316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
    }

    @Test(timeout = 4000)
    public void test034317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
    }

    @Test(timeout = 4000)
    public void test034318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
    }

    @Test(timeout = 4000)
    public void test034319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
    }

    @Test(timeout = 4000)
    public void test034320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
    }

    @Test(timeout = 4000)
    public void test034321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
    }

    @Test(timeout = 4000)
    public void test034322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
    }

    @Test(timeout = 4000)
    public void test034323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
    }

    @Test(timeout = 4000)
    public void test034324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
    }

    @Test(timeout = 4000)
    public void test034325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
    }

    @Test(timeout = 4000)
    public void test034326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
    }

    @Test(timeout = 4000)
    public void test034327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
    }

    @Test(timeout = 4000)
    public void test034328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test034329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test034330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test034331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test034332() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test034333() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test034334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test034335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test034336() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test034337() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test034338() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test034339() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test034340() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test034341() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test034342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test034343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test034344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test034345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test034346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test034347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test034348() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test034349() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test034350() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test034351() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test034352() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test034353() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test034354() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test034355() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test034356() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test034357() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test034358() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test034359() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test034360() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test034361() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test034362() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test034363() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test034364() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test034365() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test034366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test034367() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test034368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test034369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test034370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        serializedString0.toString();
        assertNotNull(serializedString0.toString());
    }

    @Test(timeout = 4000)
    public void test034371() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        serializedString0.getValue();
        assertNotNull(serializedString0.getValue());
    }

    @Test(timeout = 4000)
    public void test034372() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3137);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        SerializedString serializedString0 = (SerializedString) uTF8JsonGenerator0._rootValueSeparator;
        uTF8JsonGenerator0.writeRaw("s");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        serializedString0.charLength();
        assertEquals(0, serializedString0.charLength());
    }

    @Test(timeout = 4000)
    public void test035373() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test035374() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test035375() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test035376() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test035377() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test035378() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test035379() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test035380() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test035381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test035382() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
    }

    @Test(timeout = 4000)
    public void test035383() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
    }

    @Test(timeout = 4000)
    public void test035384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
    }

    @Test(timeout = 4000)
    public void test035385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
    }

    @Test(timeout = 4000)
    public void test035386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
    }

    @Test(timeout = 4000)
    public void test035387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
    }

    @Test(timeout = 4000)
    public void test035388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
    }

    @Test(timeout = 4000)
    public void test035389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
    }

    @Test(timeout = 4000)
    public void test035390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
    }

    @Test(timeout = 4000)
    public void test035391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test035392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test035393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test035394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test035395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test035396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test035397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test035398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test035399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test035400() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test035401() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test035402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test035403() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test035404() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test035405() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test035406() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test035407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test035408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test035409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test035410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test035411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test035412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test035413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test035414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test035415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test035416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test035417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test035418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test035419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test035420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test035421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test035422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test035423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
    }

    @Test(timeout = 4000)
    public void test035424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        serializedString0.toString();
        assertNotNull(serializedString0.toString());
    }

    @Test(timeout = 4000)
    public void test035425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        serializedString0.charLength();
    }

    @Test(timeout = 4000)
    public void test035426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        serializedString0.getValue();
        assertNotNull(serializedString0.getValue());
    }

    @Test(timeout = 4000)
    public void test035427() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test035428() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test035429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test035430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test035431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test035432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test035433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test035434() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test035435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test035436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test035437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test035438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test035439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test035440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test035441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test035442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test035443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test035444() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test035445() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test035446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test035447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test035448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test035449() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test035450() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test035451() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test035452() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test035453() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        serializedString0.toString();
        assertNotNull(serializedString0.toString());
    }

    @Test(timeout = 4000)
    public void test035454() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        serializedString0.charLength();
    }

    @Test(timeout = 4000)
    public void test035455() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("lehtU'S(");
        uTF8JsonGenerator0.writeString((SerializableString) serializedString0);
        serializedString0.getValue();
        assertNotNull(serializedString0.getValue());
    }

    @Test(timeout = 4000)
    public void test036456() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test036457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test036458() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test036459() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test036460() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test036461() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test036462() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test036463() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test036464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test036465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test036466() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test036467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test036468() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test036469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test036470() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test036471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test036472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test036473() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test036474() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test036475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test036476() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
    }

    @Test(timeout = 4000)
    public void test036477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    }

    @Test(timeout = 4000)
    public void test036478() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test036479() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test036480() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test036481() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test036482() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test036483() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test036484() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test036485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test036486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test036487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test036488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test036489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test036490() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test036491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test036492() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test036493() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test036494() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test036495() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getUsableSpace();
    }

    @Test(timeout = 4000)
    public void test036496() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.toString();
    }

    @Test(timeout = 4000)
    public void test036497() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.canWrite();
    }

    @Test(timeout = 4000)
    public void test036498() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.isHidden();
    }

    @Test(timeout = 4000)
    public void test036499() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.length();
    }

    @Test(timeout = 4000)
    public void test036500() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test036501() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getName();
    }

    @Test(timeout = 4000)
    public void test036502() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getFreeSpace();
    }

    @Test(timeout = 4000)
    public void test036503() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.isAbsolute();
    }

    @Test(timeout = 4000)
    public void test036504() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.canExecute();
    }

    @Test(timeout = 4000)
    public void test036505() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getTotalSpace();
    }

    @Test(timeout = 4000)
    public void test036506() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getParent();
    }

    @Test(timeout = 4000)
    public void test036507() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.exists();
    }

    @Test(timeout = 4000)
    public void test036508() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.lastModified();
    }

    @Test(timeout = 4000)
    public void test036509() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.canRead();
    }

    @Test(timeout = 4000)
    public void test036510() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.isFile();
    }

    @Test(timeout = 4000)
    public void test036511() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test036512() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test036513() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test036514() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test036515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test036516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test036517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test036518() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test036519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test036520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test036521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    }

    @Test(timeout = 4000)
    public void test036522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    }

    @Test(timeout = 4000)
    public void test036523() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    }

    @Test(timeout = 4000)
    public void test036524() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    }

    @Test(timeout = 4000)
    public void test036525() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    }

    @Test(timeout = 4000)
    public void test036526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    }

    @Test(timeout = 4000)
    public void test036527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    }

    @Test(timeout = 4000)
    public void test036528() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    }

    @Test(timeout = 4000)
    public void test036529() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    }

    @Test(timeout = 4000)
    public void test036530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    }

    @Test(timeout = 4000)
    public void test036531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    }

    @Test(timeout = 4000)
    public void test036532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    }

    @Test(timeout = 4000)
    public void test036533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    }

    @Test(timeout = 4000)
    public void test036534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
    }

    @Test(timeout = 4000)
    public void test036535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test036536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test036537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        mockFile0.getUsableSpace();
    }

    @Test(timeout = 4000)
    public void test036538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        mockFile0.length();
    }

    @Test(timeout = 4000)
    public void test036539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        mockFile0.toString();
    }

    @Test(timeout = 4000)
    public void test036540() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        mockFile0.canWrite();
    }

    @Test(timeout = 4000)
    public void test036541() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        mockFile0.isHidden();
    }

    @Test(timeout = 4000)
    public void test036542() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        mockFile0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test036543() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        mockFile0.getName();
    }

    @Test(timeout = 4000)
    public void test036544() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        mockFile0.getFreeSpace();
    }

    @Test(timeout = 4000)
    public void test036545() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        mockFile0.isAbsolute();
    }

    @Test(timeout = 4000)
    public void test036546() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        mockFile0.canExecute();
    }

    @Test(timeout = 4000)
    public void test036547() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        mockFile0.getTotalSpace();
    }

    @Test(timeout = 4000)
    public void test036548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        mockFile0.getParent();
    }

    @Test(timeout = 4000)
    public void test036549() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        mockFile0.exists();
    }

    @Test(timeout = 4000)
    public void test036550() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        mockFile0.lastModified();
    }

    @Test(timeout = 4000)
    public void test036551() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        mockFile0.canRead();
    }

    @Test(timeout = 4000)
    public void test036552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        mockFile0.isFile();
    }

    @Test(timeout = 4000)
    public void test036553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test036554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test036555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test036556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test036557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test036558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        uTF8JsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test036559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test036560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test036561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test036562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        byte[] byteArray0 = new byte[4];
        MockFile mockFile0 = new MockFile("~k>>S%\"5HLfkrblp");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-797), (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test037563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test037564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test037565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test037566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test037567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test037568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test037569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test037570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test037571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test037572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test037573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test037574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test037575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test037576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test037577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test037578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test037579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test037580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test037581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test037582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test037583() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
    }

    @Test(timeout = 4000)
    public void test037584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    }

    @Test(timeout = 4000)
    public void test037585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test037586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test037587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test037588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test037589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test037590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test037591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test037592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test037593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test037594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test037595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test037596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test037597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test037598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test037599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test037600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test037601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test037602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getParent();
    }

    @Test(timeout = 4000)
    public void test037603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.isAbsolute();
    }

    @Test(timeout = 4000)
    public void test037604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.canExecute();
    }

    @Test(timeout = 4000)
    public void test037605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.lastModified();
    }

    @Test(timeout = 4000)
    public void test037606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getTotalSpace();
    }

    @Test(timeout = 4000)
    public void test037607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.isFile();
    }

    @Test(timeout = 4000)
    public void test037608() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.canRead();
    }

    @Test(timeout = 4000)
    public void test037609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.exists();
    }

    @Test(timeout = 4000)
    public void test037610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getUsableSpace();
    }

    @Test(timeout = 4000)
    public void test037611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.isHidden();
    }

    @Test(timeout = 4000)
    public void test037612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.canWrite();
    }

    @Test(timeout = 4000)
    public void test037613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.toString();
    }

    @Test(timeout = 4000)
    public void test037614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.length();
    }

    @Test(timeout = 4000)
    public void test037615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getFreeSpace();
    }

    @Test(timeout = 4000)
    public void test037616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getName();
    }

    @Test(timeout = 4000)
    public void test037617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test037618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test037619() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test037620() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test037621() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test037622() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test037623() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test037624() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getOutputBuffered();
        assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
    }

    @Test(timeout = 4000)
    public void test037625() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test037626() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test037627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test037628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    }

    @Test(timeout = 4000)
    public void test037629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    }

    @Test(timeout = 4000)
    public void test037630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    }

    @Test(timeout = 4000)
    public void test037631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    }

    @Test(timeout = 4000)
    public void test037632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    }

    @Test(timeout = 4000)
    public void test037633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    }

    @Test(timeout = 4000)
    public void test037634() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    }

    @Test(timeout = 4000)
    public void test037635() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    }

    @Test(timeout = 4000)
    public void test037636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    }

    @Test(timeout = 4000)
    public void test037637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    }

    @Test(timeout = 4000)
    public void test037638() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    }

    @Test(timeout = 4000)
    public void test037639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    }

    @Test(timeout = 4000)
    public void test037640() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    }

    @Test(timeout = 4000)
    public void test037641() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
    }

    @Test(timeout = 4000)
    public void test037642() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test037643() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        iOContext0.isResourceManaged();
        assertFalse(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test037644() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        mockFile0.getParent();
    }

    @Test(timeout = 4000)
    public void test037645() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        mockFile0.isAbsolute();
    }

    @Test(timeout = 4000)
    public void test037646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        mockFile0.canExecute();
    }

    @Test(timeout = 4000)
    public void test037647() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        mockFile0.lastModified();
    }

    @Test(timeout = 4000)
    public void test037648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        mockFile0.getTotalSpace();
    }

    @Test(timeout = 4000)
    public void test037649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        mockFile0.isFile();
    }

    @Test(timeout = 4000)
    public void test037650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        mockFile0.canRead();
    }

    @Test(timeout = 4000)
    public void test037651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        mockFile0.exists();
    }

    @Test(timeout = 4000)
    public void test037652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        mockFile0.getUsableSpace();
    }

    @Test(timeout = 4000)
    public void test037653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        mockFile0.isHidden();
    }

    @Test(timeout = 4000)
    public void test037654() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        mockFile0.canWrite();
    }

    @Test(timeout = 4000)
    public void test037655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        mockFile0.toString();
    }

    @Test(timeout = 4000)
    public void test037656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        mockFile0.getFreeSpace();
    }

    @Test(timeout = 4000)
    public void test037657() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        mockFile0.length();
    }

    @Test(timeout = 4000)
    public void test037658() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        mockFile0.getName();
    }

    @Test(timeout = 4000)
    public void test037659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        mockFile0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test037660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test037661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test037662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test037663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test037664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test037665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test037666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test037667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test037668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test037669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 2, 779);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test038670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test038671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test038672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test038673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test038674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test038675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test038676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test038677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test038678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test038679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
    }

    @Test(timeout = 4000)
    public void test038680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test038681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test038682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test038683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test038684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test038685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test038686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test038687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test038688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test038689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test038690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test038691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test038692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test038693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test038694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test038695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test038696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test038697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test038698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test038699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test038700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test038701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test038702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test038703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test038704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test038705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test038706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test038707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test038708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test038709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test038710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test038711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test038712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test038713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test038714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test038715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test038716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test038717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test038718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test038719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test038720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test038721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test038722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test038723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test038724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test038725() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test038726() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test038727() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test038728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test038729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test038730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test038731() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test038732() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test038733() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test038734() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test038735() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test038736() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test038737() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test038738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test038739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test038740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test038741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test038742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test038743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test039744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test039745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test039746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test039747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test039748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test039749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test039750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test039751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test039752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test039753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test039754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test039755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test039756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test039757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test039758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test039759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test039760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test039761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test039762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test039763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertFalse(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test039764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test039765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test039766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test039767() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test039768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test039769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test039770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test039771() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test039772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test039773() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test039774() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test039775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test039776() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test039777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test039778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test039779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test039780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test039781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test039782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test039783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test039784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test039785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test039786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test039787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test039788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test039789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test039790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test039791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test039792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test039793() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test039794() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test039795() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test039796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    }

    @Test(timeout = 4000)
    public void test039797() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    }

    @Test(timeout = 4000)
    public void test039798() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    }

    @Test(timeout = 4000)
    public void test039799() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    }

    @Test(timeout = 4000)
    public void test039800() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    }

    @Test(timeout = 4000)
    public void test039801() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    }

    @Test(timeout = 4000)
    public void test039802() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    }

    @Test(timeout = 4000)
    public void test039803() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    }

    @Test(timeout = 4000)
    public void test039804() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    }

    @Test(timeout = 4000)
    public void test039805() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    }

    @Test(timeout = 4000)
    public void test039806() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    }

    @Test(timeout = 4000)
    public void test039807() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    }

    @Test(timeout = 4000)
    public void test039808() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    }

    @Test(timeout = 4000)
    public void test039809() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
    }

    @Test(timeout = 4000)
    public void test039810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test039811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test039812() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test039813() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test039814() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test039815() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test039816() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test039817() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test039818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test039819() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test039820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test039821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test039822() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test039823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1222, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 1, 0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test040824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test040825() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test040826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test040827() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test040828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test040829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test040830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test040831() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test040832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test040833() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test040834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test040835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test040836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test040837() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test040838() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test040839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test040840() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test040841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test040842() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test040843() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test040844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    }

    @Test(timeout = 4000)
    public void test040845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test040846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test040847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test040848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test040849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test040850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test040851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test040852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test040853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test040854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test040855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test040856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test040857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test040858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test040859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test040860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test040861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test040862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test040863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test040864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test040865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test040866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test040867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test040868() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test040869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test040870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test040871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test040872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test040873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test040874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("Too few bytes available: missing ", 55296, 55296);
    }

    @Test(timeout = 4000)
    public void test041875() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test041876() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test041877() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test041878() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test041879() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test041880() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test041881() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test041882() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test041883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test041884() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test041885() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test041886() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test041887() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test041888() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test041889() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test041890() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test041891() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test041892() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test041893() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test041894() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test041895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test041896() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test041897() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test041898() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test041899() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test041900() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test041901() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test041902() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test041903() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test041904() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test041905() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test041906() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test041907() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test041908() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test041909() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test041910() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test041911() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test041912() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test041913() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test041914() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test041915() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test041916() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test041917() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test041918() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test041919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test041920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test041921() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test041922() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test041923() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test041924() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test041925() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test041926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test041927() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
    }

    @Test(timeout = 4000)
    public void test041928() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
    }

    @Test(timeout = 4000)
    public void test041929() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
    }

    @Test(timeout = 4000)
    public void test041930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
    }

    @Test(timeout = 4000)
    public void test041931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
    }

    @Test(timeout = 4000)
    public void test041932() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
    }

    @Test(timeout = 4000)
    public void test041933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
    }

    @Test(timeout = 4000)
    public void test041934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
    }

    @Test(timeout = 4000)
    public void test041935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
    }

    @Test(timeout = 4000)
    public void test041936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
    }

    @Test(timeout = 4000)
    public void test041937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
    }

    @Test(timeout = 4000)
    public void test041938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
    }

    @Test(timeout = 4000)
    public void test041939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
    }

    @Test(timeout = 4000)
    public void test041940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
    }

    @Test(timeout = 4000)
    public void test041941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test041942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
        iOContext0.isResourceManaged();
        assertFalse(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test041943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test041944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test041945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test041946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test041947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test041948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test041949() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test041950() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test041951() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test041952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test041953() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test041954() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRaw("LSczc;<-3rzo^z", 0, 1);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test042955() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test042956() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test042957() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test042958() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test042959() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test042960() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test042961() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test042962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test042963() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test042964() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
    }

    @Test(timeout = 4000)
    public void test042965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
    }

    @Test(timeout = 4000)
    public void test042966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
    }

    @Test(timeout = 4000)
    public void test042967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
    }

    @Test(timeout = 4000)
    public void test042968() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
    }

    @Test(timeout = 4000)
    public void test042969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
    }

    @Test(timeout = 4000)
    public void test042970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
    }

    @Test(timeout = 4000)
    public void test042971() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
    }

    @Test(timeout = 4000)
    public void test042972() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
    }

    @Test(timeout = 4000)
    public void test042973() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test042974() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test042975() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
    }

    @Test(timeout = 4000)
    public void test042976() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    }

    @Test(timeout = 4000)
    public void test042977() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
    }

    @Test(timeout = 4000)
    public void test042978() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        serializedString0.charLength();
        assertEquals(0, serializedString0.charLength());
    }

    @Test(timeout = 4000)
    public void test042979() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        serializedString0.toString();
        assertNotNull(serializedString0.toString());
    }

    @Test(timeout = 4000)
    public void test042980() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        serializedString0.getValue();
        assertNotNull(serializedString0.getValue());
    }

    @Test(timeout = 4000)
    public void test042981() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
    }

    @Test(timeout = 4000)
    public void test042982() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        mockFile0.getName();
    }

    @Test(timeout = 4000)
    public void test042983() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        mockFile0.getParent();
    }

    @Test(timeout = 4000)
    public void test042984() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        mockFile0.canWrite();
    }

    @Test(timeout = 4000)
    public void test042985() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        mockFile0.length();
    }

    @Test(timeout = 4000)
    public void test042986() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        mockFile0.getFreeSpace();
    }

    @Test(timeout = 4000)
    public void test042987() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        mockFile0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test042988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        mockFile0.getUsableSpace();
    }

    @Test(timeout = 4000)
    public void test042989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        mockFile0.isHidden();
    }

    @Test(timeout = 4000)
    public void test042990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        mockFile0.isAbsolute();
    }

    @Test(timeout = 4000)
    public void test042991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        mockFile0.canExecute();
    }

    @Test(timeout = 4000)
    public void test042992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        mockFile0.toString();
    }

    @Test(timeout = 4000)
    public void test042993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        mockFile0.getTotalSpace();
    }

    @Test(timeout = 4000)
    public void test042994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        mockFile0.lastModified();
    }

    @Test(timeout = 4000)
    public void test042995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        mockFile0.isFile();
    }

    @Test(timeout = 4000)
    public void test042996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        mockFile0.canRead();
    }

    @Test(timeout = 4000)
    public void test042997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        mockFile0.exists();
    }

    @Test(timeout = 4000)
    public void test042998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    }

    @Test(timeout = 4000)
    public void test042999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0421000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0421001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0421002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0421003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0421004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0421005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0421006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0421007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0421008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0421009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0421010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0421011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0421012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0421013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        mockFile0.getName();
    }

    @Test(timeout = 4000)
    public void test0421014() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        mockFile0.getParent();
    }

    @Test(timeout = 4000)
    public void test0421015() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        mockFile0.canWrite();
    }

    @Test(timeout = 4000)
    public void test0421016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        mockFile0.length();
    }

    @Test(timeout = 4000)
    public void test0421017() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        mockFile0.getFreeSpace();
    }

    @Test(timeout = 4000)
    public void test0421018() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        mockFile0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test0421019() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        mockFile0.getUsableSpace();
    }

    @Test(timeout = 4000)
    public void test0421020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        mockFile0.isHidden();
    }

    @Test(timeout = 4000)
    public void test0421021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        mockFile0.isAbsolute();
    }

    @Test(timeout = 4000)
    public void test0421022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        mockFile0.canExecute();
    }

    @Test(timeout = 4000)
    public void test0421023() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        mockFile0.toString();
    }

    @Test(timeout = 4000)
    public void test0421024() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        mockFile0.getTotalSpace();
    }

    @Test(timeout = 4000)
    public void test0421025() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        mockFile0.lastModified();
    }

    @Test(timeout = 4000)
    public void test0421026() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        mockFile0.isFile();
    }

    @Test(timeout = 4000)
    public void test0421027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        mockFile0.canRead();
    }

    @Test(timeout = 4000)
    public void test0421028() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        mockFile0.exists();
    }

    @Test(timeout = 4000)
    public void test0421029() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0421030() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0421031() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0421032() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0421033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0421034() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0421035() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0421036() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0421037() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0421038() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0421039() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0421040() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0421041() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0421042() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0421043() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0421044() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0421045() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0421046() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0421047() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0421048() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0421049() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0421050() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0421051() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0421052() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0421053() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        mockFile0.getName();
    }

    @Test(timeout = 4000)
    public void test0421054() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        mockFile0.getParent();
    }

    @Test(timeout = 4000)
    public void test0421055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        mockFile0.canWrite();
    }

    @Test(timeout = 4000)
    public void test0421056() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        mockFile0.length();
    }

    @Test(timeout = 4000)
    public void test0421057() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        mockFile0.getFreeSpace();
    }

    @Test(timeout = 4000)
    public void test0421058() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        mockFile0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test0421059() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        mockFile0.getUsableSpace();
    }

    @Test(timeout = 4000)
    public void test0421060() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        mockFile0.isHidden();
    }

    @Test(timeout = 4000)
    public void test0421061() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        mockFile0.isAbsolute();
    }

    @Test(timeout = 4000)
    public void test0421062() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        mockFile0.canExecute();
    }

    @Test(timeout = 4000)
    public void test0421063() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        mockFile0.toString();
    }

    @Test(timeout = 4000)
    public void test0421064() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        mockFile0.getTotalSpace();
    }

    @Test(timeout = 4000)
    public void test0421065() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        mockFile0.lastModified();
    }

    @Test(timeout = 4000)
    public void test0421066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        mockFile0.isFile();
    }

    @Test(timeout = 4000)
    public void test0421067() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        mockFile0.canRead();
    }

    @Test(timeout = 4000)
    public void test0421068() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        mockFile0.exists();
    }

    @Test(timeout = 4000)
    public void test0421069() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        serializedString0.charLength();
        assertEquals(0, serializedString0.charLength());
    }

    @Test(timeout = 4000)
    public void test0421070() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        serializedString0.toString();
        assertNotNull(serializedString0.toString());
    }

    @Test(timeout = 4000)
    public void test0421071() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        serializedString0.getValue();
        assertNotNull(serializedString0.getValue());
    }

    @Test(timeout = 4000)
    public void test0421072() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0421073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0421074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0421075() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0421076() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0421077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0421078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0421079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0421080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0421081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        MockFile mockFile0 = new MockFile("", "Split surrogate on writeRaw() input (last character): first character 0x%4x");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        SerializedString serializedString0 = new SerializedString("");
        BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, bufferedOutputStream0);
        uTF8JsonGenerator0.writeRaw((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0431082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0431083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0431084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0431085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0431086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0431087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0431088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0431089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0431090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0431091() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0431092() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0431093() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0431094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0431095() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0431096() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0431097() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0431098() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0431099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0431100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0431101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0431102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    }

    @Test(timeout = 4000)
    public void test0431103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0431104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0431105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0431106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0431107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0431108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0431109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0431110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0431111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0431112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0431113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0431114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0431115() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0431116() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0431117() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0431118() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0431119() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0431120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0431121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0431122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0431123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0431124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0431125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0431126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0431127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0431128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0431129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0431130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0431131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0431132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
    }

    @Test(timeout = 4000)
    public void test0431133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        serializedString0.charLength();
        assertEquals(0, serializedString0.charLength());
    }

    @Test(timeout = 4000)
    public void test0431134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        serializedString0.toString();
        assertNotNull(serializedString0.toString());
    }

    @Test(timeout = 4000)
    public void test0431135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        serializedString0.getValue();
        assertNotNull(serializedString0.getValue());
    }

    @Test(timeout = 4000)
    public void test0431136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0431137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0431138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0431139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0431140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0431141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0431142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0431143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0431144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0431145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0431146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0431147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0431148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0431149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0431150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0431151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0431152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0431153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0431154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0431155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0431156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0431157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0431158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0431159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0431160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0431161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0431162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        serializedString0.charLength();
        assertEquals(0, serializedString0.charLength());
    }

    @Test(timeout = 4000)
    public void test0431163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        serializedString0.toString();
        assertNotNull(serializedString0.toString());
    }

    @Test(timeout = 4000)
    public void test0431164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        serializedString0.getValue();
        assertNotNull(serializedString0.getValue());
    }

    @Test(timeout = 4000)
    public void test0441165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0441166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0441167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0441168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0441169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0441170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0441171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0441172() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0441173() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0441174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0441175() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0441176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0441177() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0441178() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0441179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0441180() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0441181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0441182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0441183() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0441184() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0441185() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    }

    @Test(timeout = 4000)
    public void test0441186() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0441187() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0441188() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0441189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0441190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0441191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0441192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0441193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0441194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0441195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0441196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0441197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0441198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0441199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0441200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0441201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0441202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0441203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0441204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0441205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0441206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0441207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0441208() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0441209() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0441210() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0441211() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0441212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0441213() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0441214() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0441215() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
    }

    @Test(timeout = 4000)
    public void test0441216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        serializedString0.charLength();
    }

    @Test(timeout = 4000)
    public void test0441217() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        serializedString0.toString();
        assertNotNull(serializedString0.toString());
    }

    @Test(timeout = 4000)
    public void test0441218() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        serializedString0.getValue();
        assertNotNull(serializedString0.getValue());
    }

    @Test(timeout = 4000)
    public void test0441219() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0441220() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0441221() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0441222() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0441223() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0441224() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0441225() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0441226() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0441227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0441228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0441229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0441230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test0441231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0441232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0441233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0441234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0441235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0441236() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0441237() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0441238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0441239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0441240() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0441241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0441242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0441243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0441244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0441245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        serializedString0.charLength();
    }

    @Test(timeout = 4000)
    public void test0441246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        serializedString0.toString();
        assertNotNull(serializedString0.toString());
    }

    @Test(timeout = 4000)
    public void test0441247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 115, (ObjectCodec) null, byteArrayOutputStream0);
        SerializedString serializedString0 = new SerializedString("8");
        uTF8JsonGenerator0.writeRawValue((SerializableString) serializedString0);
        serializedString0.getValue();
        assertNotNull(serializedString0.getValue());
    }

    @Test(timeout = 4000)
    public void test0451248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0451249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0451250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0451251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0451252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0451253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0451254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0451255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0451256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0451257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0451258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0451259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0451260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0451261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0451262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0451263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0451264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0451265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0451266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0451267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0451268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test0451269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0451270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0451271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0451272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0451273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0451274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0451275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0451276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0451277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0451278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0451279() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0451280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0451281() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0451282() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0451283() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0451284() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0451285() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0451286() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0451287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0451288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0451289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0451290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0451291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0451292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0451293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0451294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0451295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0451296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0451297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0451298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
    }

    @Test(timeout = 4000)
    public void test0451299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
    }

    @Test(timeout = 4000)
    public void test0451300() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
    }

    @Test(timeout = 4000)
    public void test0451301() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
    }

    @Test(timeout = 4000)
    public void test0451302() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
    }

    @Test(timeout = 4000)
    public void test0451303() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
    }

    @Test(timeout = 4000)
    public void test0451304() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
    }

    @Test(timeout = 4000)
    public void test0451305() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
    }

    @Test(timeout = 4000)
    public void test0451306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
    }

    @Test(timeout = 4000)
    public void test0451307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
    }

    @Test(timeout = 4000)
    public void test0451308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
    }

    @Test(timeout = 4000)
    public void test0451309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
    }

    @Test(timeout = 4000)
    public void test0451310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0451311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0451312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0451313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0451314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0451315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0451316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0451317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0451318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0451319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0451320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0451321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0451322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0451323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw("");
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0461324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0461325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0461326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0461327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0461328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0461329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0461330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0461331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0461332() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0461333() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0461334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0461335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0461336() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0461337() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0461338() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0461339() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0461340() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0461341() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0461342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0461343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0461344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    }

    @Test(timeout = 4000)
    public void test0461345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0461346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0461347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0461348() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0461349() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0461350() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0461351() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0461352() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0461353() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0461354() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0461355() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0461356() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0461357() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0461358() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0461359() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0461360() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0461361() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0461362() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0461363() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0461364() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0461365() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0461366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0461367() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0461368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0461369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0461370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0461371() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0461372() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0461373() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0461374() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        char[] charArray0 = new char[5];
        charArray0[3] = '\u0097';
        uTF8JsonGenerator0.writeRaw(charArray0, 3, 235);
    }

    @Test(timeout = 4000)
    public void test0471375() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0471376() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0471377() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0471378() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0471379() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0471380() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0471381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0471382() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0471383() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0471384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0471385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0471386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0471387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0471388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0471389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0471390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0471391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0471392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0471393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0471394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0471395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    }

    @Test(timeout = 4000)
    public void test0471396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0471397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0471398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0471399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0471400() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0471401() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0471402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0471403() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0471404() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0471405() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0471406() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0471407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0471408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0471409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0471410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0471411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0471412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0471413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0471414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0471415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0471416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0471417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0471418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0471419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0471420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0471421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0471422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0471423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0471424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0471425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
    }

    @Test(timeout = 4000)
    public void test0471426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
    }

    @Test(timeout = 4000)
    public void test0471427() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
    }

    @Test(timeout = 4000)
    public void test0471428() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
    }

    @Test(timeout = 4000)
    public void test0471429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
    }

    @Test(timeout = 4000)
    public void test0471430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
    }

    @Test(timeout = 4000)
    public void test0471431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
    }

    @Test(timeout = 4000)
    public void test0471432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
    }

    @Test(timeout = 4000)
    public void test0471433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
    }

    @Test(timeout = 4000)
    public void test0471434() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
    }

    @Test(timeout = 4000)
    public void test0471435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
    }

    @Test(timeout = 4000)
    public void test0471436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
    }

    @Test(timeout = 4000)
    public void test0471437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0471438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0471439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0471440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0471441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0471442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0471443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0471444() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0471445() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0471446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0471447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0471448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0471449() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0471450() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeRaw('\u0097');
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0481451() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0481452() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0481453() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0481454() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0481455() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0481456() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0481457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0481458() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0481459() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0481460() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
    }

    @Test(timeout = 4000)
    public void test0481461() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
    }

    @Test(timeout = 4000)
    public void test0481462() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
    }

    @Test(timeout = 4000)
    public void test0481463() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
    }

    @Test(timeout = 4000)
    public void test0481464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
    }

    @Test(timeout = 4000)
    public void test0481465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
    }

    @Test(timeout = 4000)
    public void test0481466() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
    }

    @Test(timeout = 4000)
    public void test0481467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
    }

    @Test(timeout = 4000)
    public void test0481468() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
    }

    @Test(timeout = 4000)
    public void test0481469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0481470() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0481471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
    }

    @Test(timeout = 4000)
    public void test0481472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0481473() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0481474() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0481475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0481476() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0481477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0481478() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0481479() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0481480() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0481481() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0481482() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0481483() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0481484() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0481485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0481486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0481487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0481488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0481489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0481490() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0481491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0481492() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0481493() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0481494() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0481495() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0481496() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0481497() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getOutputBuffered();
        assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
    }

    @Test(timeout = 4000)
    public void test0481498() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0481499() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    }

    @Test(timeout = 4000)
    public void test0481500() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    }

    @Test(timeout = 4000)
    public void test0481501() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    }

    @Test(timeout = 4000)
    public void test0481502() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    }

    @Test(timeout = 4000)
    public void test0481503() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    }

    @Test(timeout = 4000)
    public void test0481504() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    }

    @Test(timeout = 4000)
    public void test0481505() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    }

    @Test(timeout = 4000)
    public void test0481506() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    }

    @Test(timeout = 4000)
    public void test0481507() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    }

    @Test(timeout = 4000)
    public void test0481508() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    }

    @Test(timeout = 4000)
    public void test0481509() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    }

    @Test(timeout = 4000)
    public void test0481510() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    }

    @Test(timeout = 4000)
    public void test0481511() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    }

    @Test(timeout = 4000)
    public void test0481512() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    }

    @Test(timeout = 4000)
    public void test0481513() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    }

    @Test(timeout = 4000)
    public void test0481514() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
    }

    @Test(timeout = 4000)
    public void test0481515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0481516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0481517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0481518() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0481519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0481520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0481521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0481522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0481523() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0481524() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0481525() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
        uTF8JsonGenerator0.getOutputBuffered();
        assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
    }

    @Test(timeout = 4000)
    public void test0481526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "[", false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("[");
        byte[] byteArray0 = new byte[5];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        char[] charArray0 = new char[7];
        charArray0[2] = '\u0089';
        uTF8JsonGenerator0.writeRaw(charArray0, 1, 2);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0491527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0491528() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0491529() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0491530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0491531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0491532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0491533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0491534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0491535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0491536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0491537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0491538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0491539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0491540() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0491541() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0491542() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0491543() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0491544() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0491545() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0491546() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0491547() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    }

    @Test(timeout = 4000)
    public void test0491548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    }

    @Test(timeout = 4000)
    public void test0491549() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    }

    @Test(timeout = 4000)
    public void test0491550() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    }

    @Test(timeout = 4000)
    public void test0491551() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    }

    @Test(timeout = 4000)
    public void test0491552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    }

    @Test(timeout = 4000)
    public void test0491553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    }

    @Test(timeout = 4000)
    public void test0491554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    }

    @Test(timeout = 4000)
    public void test0491555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    }

    @Test(timeout = 4000)
    public void test0491556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test0491557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    }

    @Test(timeout = 4000)
    public void test0491558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    }

    @Test(timeout = 4000)
    public void test0491559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    }

    @Test(timeout = 4000)
    public void test0491560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    }

    @Test(timeout = 4000)
    public void test0491561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    }

    @Test(timeout = 4000)
    public void test0491562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    }

    @Test(timeout = 4000)
    public void test0491563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    }

    @Test(timeout = 4000)
    public void test0491564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    }

    @Test(timeout = 4000)
    public void test0491565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    }

    @Test(timeout = 4000)
    public void test0491566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    }

    @Test(timeout = 4000)
    public void test0491567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    }

    @Test(timeout = 4000)
    public void test0491568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    }

    @Test(timeout = 4000)
    public void test0491569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
    }

    @Test(timeout = 4000)
    public void test0491570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0491571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0491572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test0491573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0491574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0491575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0491576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0491577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0491578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0491579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0491580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0491581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0491582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0491583() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-730), (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 229, false);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 0, 4);
    }

    @Test(timeout = 4000)
    public void test0501584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0501585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0501586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0501587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0501588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0501589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0501590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0501591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0501592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0501593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0501594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0501595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0501596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0501597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0501598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0501599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0501600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0501601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0501602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0501603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0501604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test0501605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0501606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0501607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0501608() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0501609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0501610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0501611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0501612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0501613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0501614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0501615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0501616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0501617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0501618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0501619() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0501620() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0501621() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0501622() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0501623() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0501624() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0501625() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0501626() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0501627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0501628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0501629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0501630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0501631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0501632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0501633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0501634() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0501635() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0501636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test0501637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test0501638() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test0501639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test0501640() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test0501641() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test0501642() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test0501643() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test0501644() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test0501645() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test0501646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test0501647() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test0501648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test0501649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test0501650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0501651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0501652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0501653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0501654() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0501655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0501656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0501657() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0501658() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0501659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0501660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0501661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0501662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0501663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBinary(byteArray0, 1, 1);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0511664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0511665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0511666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0511667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0511668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0511669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0511670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0511671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0511672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0511673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0511674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0511675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0511676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0511677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0511678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0511679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0511680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0511681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0511682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0511683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0511684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
    }

    @Test(timeout = 4000)
    public void test0511685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0511686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0511687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test0511688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test0511689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test0511690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test0511691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0511692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0511693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0511694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0511695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0511696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0511697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0511698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0511699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0511700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0511701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0511702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0511703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0511704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0511705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0511706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0511707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0511708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0511709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0511710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0511711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0511712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0511713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0511714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0511715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0511716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0511717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0511718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0511719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0511720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    }

    @Test(timeout = 4000)
    public void test0511721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    }

    @Test(timeout = 4000)
    public void test0511722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    }

    @Test(timeout = 4000)
    public void test0511723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    }

    @Test(timeout = 4000)
    public void test0511724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    }

    @Test(timeout = 4000)
    public void test0511725() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    }

    @Test(timeout = 4000)
    public void test0511726() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    }

    @Test(timeout = 4000)
    public void test0511727() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    }

    @Test(timeout = 4000)
    public void test0511728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    }

    @Test(timeout = 4000)
    public void test0511729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    }

    @Test(timeout = 4000)
    public void test0511730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    }

    @Test(timeout = 4000)
    public void test0511731() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    }

    @Test(timeout = 4000)
    public void test0511732() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    }

    @Test(timeout = 4000)
    public void test0511733() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
    }

    @Test(timeout = 4000)
    public void test0511734() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test0511735() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0511736() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0511737() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0511738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0511739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test0511740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0511741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0511742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0511743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0511744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0511745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0511746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0511747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0511748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0511749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0511750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
    }

    @Test(timeout = 4000)
    public void test0511751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
    }

    @Test(timeout = 4000)
    public void test0511752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
    }

    @Test(timeout = 4000)
    public void test0511753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
    }

    @Test(timeout = 4000)
    public void test0511754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
    }

    @Test(timeout = 4000)
    public void test0511755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
    }

    @Test(timeout = 4000)
    public void test0511756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
    }

    @Test(timeout = 4000)
    public void test0511757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
    }

    @Test(timeout = 4000)
    public void test0511758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
    }

    @Test(timeout = 4000)
    public void test0511759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
    }

    @Test(timeout = 4000)
    public void test0511760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
    }

    @Test(timeout = 4000)
    public void test0511761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
    }

    @Test(timeout = 4000)
    public void test0511762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
    }

    @Test(timeout = 4000)
    public void test0511763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
    }

    @Test(timeout = 4000)
    public void test0511764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0511765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0511766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0511767() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0511768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0511769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0511770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0511771() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0511772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0511773() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0511774() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0511775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0511776() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0511777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0511778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    }

    @Test(timeout = 4000)
    public void test0511779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    }

    @Test(timeout = 4000)
    public void test0511780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    }

    @Test(timeout = 4000)
    public void test0511781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    }

    @Test(timeout = 4000)
    public void test0511782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    }

    @Test(timeout = 4000)
    public void test0511783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    }

    @Test(timeout = 4000)
    public void test0511784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    }

    @Test(timeout = 4000)
    public void test0511785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    }

    @Test(timeout = 4000)
    public void test0511786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    }

    @Test(timeout = 4000)
    public void test0511787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    }

    @Test(timeout = 4000)
    public void test0511788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    }

    @Test(timeout = 4000)
    public void test0511789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    }

    @Test(timeout = 4000)
    public void test0511790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    }

    @Test(timeout = 4000)
    public void test0511791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    }

    @Test(timeout = 4000)
    public void test0511792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
    }

    @Test(timeout = 4000)
    public void test0511793() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
        assertEquals(1, int1);
    }

    @Test(timeout = 4000)
    public void test0511794() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0511795() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0511796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0511797() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0511798() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test0511799() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0511800() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0511801() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0511802() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0511803() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0511804() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0511805() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0511806() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0511807() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0511808() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(244);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 278, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, true);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 3);
        uTF8JsonGenerator0.writeNumber("`R;[jlIS3|>-3");
        int int1 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-399));
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0521809() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0521810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0521811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0521812() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0521813() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0521814() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0521815() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0521816() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0521817() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0521818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0521819() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0521820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0521821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0521822() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0521823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0521824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0521825() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0521826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0521827() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0521828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0521829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    }

    @Test(timeout = 4000)
    public void test0521830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0521831() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0521832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test0521833() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test0521834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test0521835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test0521836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0521837() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0521838() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0521839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0521840() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0521841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0521842() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0521843() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0521844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0521845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0521846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0521847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0521848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0521849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0521850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0521851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0521852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0521853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0521854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0521855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0521856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0521857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0521858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0521859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0521860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0521861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0521862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0521863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[8];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (int) (byte) 16);
    }

    @Test(timeout = 4000)
    public void test0531864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0531865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0531866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0531867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0531868() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0531869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0531870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0531871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0531872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0531873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
    }

    @Test(timeout = 4000)
    public void test0531874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    }

    @Test(timeout = 4000)
    public void test0531875() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0531876() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0531877() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0531878() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0531879() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0531880() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0531881() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0531882() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0531883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0531884() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0531885() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0531886() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0531887() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0531888() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0531889() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0531890() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0531891() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0531892() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0531893() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0531894() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0531895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0531896() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0531897() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0531898() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0531899() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0531900() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0531901() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.toString();
    }

    @Test(timeout = 4000)
    public void test0531902() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test0531903() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.length();
    }

    @Test(timeout = 4000)
    public void test0531904() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.exists();
    }

    @Test(timeout = 4000)
    public void test0531905() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.getFreeSpace();
    }

    @Test(timeout = 4000)
    public void test0531906() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.getTotalSpace();
    }

    @Test(timeout = 4000)
    public void test0531907() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.lastModified();
    }

    @Test(timeout = 4000)
    public void test0531908() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.isAbsolute();
    }

    @Test(timeout = 4000)
    public void test0531909() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.canExecute();
    }

    @Test(timeout = 4000)
    public void test0531910() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.getName();
    }

    @Test(timeout = 4000)
    public void test0531911() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.canRead();
    }

    @Test(timeout = 4000)
    public void test0531912() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.canWrite();
    }

    @Test(timeout = 4000)
    public void test0531913() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.isFile();
    }

    @Test(timeout = 4000)
    public void test0531914() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.isHidden();
    }

    @Test(timeout = 4000)
    public void test0531915() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.getUsableSpace();
    }

    @Test(timeout = 4000)
    public void test0531916() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        mockFile0.getParent();
    }

    @Test(timeout = 4000)
    public void test0531917() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0531918() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0531919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test0531920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0531921() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0531922() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0531923() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0531924() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0531925() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0531926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0531927() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getOutputBuffered();
        assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
    }

    @Test(timeout = 4000)
    public void test0531928() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0531929() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockFile mockFile0 = new MockFile("Z");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber((short) 1065);
    }

    @Test(timeout = 4000)
    public void test0541930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0541931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0541932() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0541933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0541934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0541935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0541936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0541937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0541938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0541939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0541940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0541941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0541942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0541943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0541944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0541945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0541946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0541947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0541948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0541949() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0541950() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    }

    @Test(timeout = 4000)
    public void test0541951() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0541952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0541953() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    }

    @Test(timeout = 4000)
    public void test0541954() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    }

    @Test(timeout = 4000)
    public void test0541955() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    }

    @Test(timeout = 4000)
    public void test0541956() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    }

    @Test(timeout = 4000)
    public void test0541957() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    }

    @Test(timeout = 4000)
    public void test0541958() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    }

    @Test(timeout = 4000)
    public void test0541959() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    }

    @Test(timeout = 4000)
    public void test0541960() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    }

    @Test(timeout = 4000)
    public void test0541961() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    }

    @Test(timeout = 4000)
    public void test0541962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    }

    @Test(timeout = 4000)
    public void test0541963() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    }

    @Test(timeout = 4000)
    public void test0541964() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    }

    @Test(timeout = 4000)
    public void test0541965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    }

    @Test(timeout = 4000)
    public void test0541966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    }

    @Test(timeout = 4000)
    public void test0541967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
    }

    @Test(timeout = 4000)
    public void test0541968() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0541969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0541970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0541971() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0541972() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0541973() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0541974() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0541975() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0541976() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0541977() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0541978() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0541979() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0541980() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0541981() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0541982() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1587, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (-1445), true);
        uTF8JsonGenerator0.writeNumber((short) 16);
    }

    @Test(timeout = 4000)
    public void test0551983() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0551984() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0551985() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0551986() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0551987() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0551988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0551989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0551990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0551991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0551992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
    }

    @Test(timeout = 4000)
    public void test0551993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
    }

    @Test(timeout = 4000)
    public void test0551994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
    }

    @Test(timeout = 4000)
    public void test0551995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
    }

    @Test(timeout = 4000)
    public void test0551996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
    }

    @Test(timeout = 4000)
    public void test0551997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
    }

    @Test(timeout = 4000)
    public void test0551998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
    }

    @Test(timeout = 4000)
    public void test0551999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
    }

    @Test(timeout = 4000)
    public void test0552000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
    }

    @Test(timeout = 4000)
    public void test0552001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0552002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0552003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    }

    @Test(timeout = 4000)
    public void test0552004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0552005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0552006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0552007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0552008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0552009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0552010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0552011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0552012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0552013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0552014() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0552015() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0552016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0552017() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0552018() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0552019() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0552020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0552021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0552022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0552023() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0552024() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0552025() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0552026() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0552027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0552028() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0552029() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0552030() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0552031() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0552032() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0552033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0552034() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0552035() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    }

    @Test(timeout = 4000)
    public void test0552036() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    }

    @Test(timeout = 4000)
    public void test0552037() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    }

    @Test(timeout = 4000)
    public void test0552038() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    }

    @Test(timeout = 4000)
    public void test0552039() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    }

    @Test(timeout = 4000)
    public void test0552040() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    }

    @Test(timeout = 4000)
    public void test0552041() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    }

    @Test(timeout = 4000)
    public void test0552042() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    }

    @Test(timeout = 4000)
    public void test0552043() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    }

    @Test(timeout = 4000)
    public void test0552044() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    }

    @Test(timeout = 4000)
    public void test0552045() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    }

    @Test(timeout = 4000)
    public void test0552046() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    }

    @Test(timeout = 4000)
    public void test0552047() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    }

    @Test(timeout = 4000)
    public void test0552048() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
    }

    @Test(timeout = 4000)
    public void test0552049() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0552050() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0552051() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0552052() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0552053() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0552054() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0552055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0552056() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0552057() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0552058() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0552059() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0552060() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0552061() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0552062() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "RyxR&5%n*9%D1/z|", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[7];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 36, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumber((short) (byte) 17);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0562063() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0562064() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0562065() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0562066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0562067() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0562068() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0562069() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0562070() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0562071() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0562072() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0562073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0562074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0562075() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0562076() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0562077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0562078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0562079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0562080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0562081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0562082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0562083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    }

    @Test(timeout = 4000)
    public void test0562084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0562085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0562086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0562087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0562088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0562089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0562090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0562091() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0562092() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0562093() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0562094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0562095() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0562096() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0562097() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0562098() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0562099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0562100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0562101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0562102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0562103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0562104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0562105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0562106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0562107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0562108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0562109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0562110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0562111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0562112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0562113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
    }

    @Test(timeout = 4000)
    public void test0562114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
    }

    @Test(timeout = 4000)
    public void test0562115() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
    }

    @Test(timeout = 4000)
    public void test0562116() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
    }

    @Test(timeout = 4000)
    public void test0562117() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
    }

    @Test(timeout = 4000)
    public void test0562118() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
    }

    @Test(timeout = 4000)
    public void test0562119() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
    }

    @Test(timeout = 4000)
    public void test0562120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
    }

    @Test(timeout = 4000)
    public void test0562121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
    }

    @Test(timeout = 4000)
    public void test0562122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
    }

    @Test(timeout = 4000)
    public void test0562123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
    }

    @Test(timeout = 4000)
    public void test0562124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
    }

    @Test(timeout = 4000)
    public void test0562125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0562126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0562127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0562128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0562129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0562130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0562131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0562132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0562133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0562134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0562135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0562136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0562137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0562138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(255);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0572139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0572140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0572141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0572142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0572143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0572144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0572145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0572146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0572147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0572148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0572149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0572150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0572151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0572152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0572153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0572154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0572155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0572156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0572157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0572158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        iOContext0.isResourceManaged();
        assertFalse(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0572159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
    }

    @Test(timeout = 4000)
    public void test0572160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    }

    @Test(timeout = 4000)
    public void test0572161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0572162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0572163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0572164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0572165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0572166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0572167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0572168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0572169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0572170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0572171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0572172() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0572173() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0572174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0572175() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0572176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0572177() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        iOContext0.isResourceManaged();
        assertFalse(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0572178() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getUsableSpace();
    }

    @Test(timeout = 4000)
    public void test0572179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.canRead();
    }

    @Test(timeout = 4000)
    public void test0572180() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.canExecute();
    }

    @Test(timeout = 4000)
    public void test0572181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.isFile();
    }

    @Test(timeout = 4000)
    public void test0572182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getTotalSpace();
    }

    @Test(timeout = 4000)
    public void test0572183() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.lastModified();
    }

    @Test(timeout = 4000)
    public void test0572184() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.toString();
    }

    @Test(timeout = 4000)
    public void test0572185() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.exists();
    }

    @Test(timeout = 4000)
    public void test0572186() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getFreeSpace();
    }

    @Test(timeout = 4000)
    public void test0572187() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getParent();
    }

    @Test(timeout = 4000)
    public void test0572188() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getName();
    }

    @Test(timeout = 4000)
    public void test0572189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.length();
    }

    @Test(timeout = 4000)
    public void test0572190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.isAbsolute();
    }

    @Test(timeout = 4000)
    public void test0572191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test0572192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.canWrite();
    }

    @Test(timeout = 4000)
    public void test0572193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.isHidden();
    }

    @Test(timeout = 4000)
    public void test0572194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0572195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0572196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0572197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0572198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0572199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0572200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0572201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0572202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0572203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0572204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "C_n not currentlr override name during filtering read", false);
        MockFile mockFile0 = new MockFile("C_n not currentlr override name during filtering read", "C_n not currentlr override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        long[] longArray0 = new long[2];
        uTF8JsonGenerator0.writeArray(longArray0, 0, 339);
    }

    @Test(timeout = 4000)
    public void test0582205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0582206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0582207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0582208() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0582209() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0582210() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0582211() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0582212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0582213() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0582214() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0582215() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0582216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0582217() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0582218() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0582219() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0582220() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0582221() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0582222() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0582223() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0582224() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0582225() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
    }

    @Test(timeout = 4000)
    public void test0582226() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0582227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0582228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0582229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0582230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0582231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0582232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0582233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0582234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0582235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0582236() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0582237() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0582238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0582239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0582240() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0582241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0582242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test0582243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0582244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0582245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0582246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0582247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0582248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0582249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0582250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0582251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0582252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0582253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0582254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0582255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0582256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0582257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
    }

    @Test(timeout = 4000)
    public void test0582258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
    }

    @Test(timeout = 4000)
    public void test0582259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
    }

    @Test(timeout = 4000)
    public void test0582260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
    }

    @Test(timeout = 4000)
    public void test0582261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
    }

    @Test(timeout = 4000)
    public void test0582262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
    }

    @Test(timeout = 4000)
    public void test0582263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
    }

    @Test(timeout = 4000)
    public void test0582264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
    }

    @Test(timeout = 4000)
    public void test0582265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
    }

    @Test(timeout = 4000)
    public void test0582266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
    }

    @Test(timeout = 4000)
    public void test0582267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
    }

    @Test(timeout = 4000)
    public void test0582268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
    }

    @Test(timeout = 4000)
    public void test0582269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
    }

    @Test(timeout = 4000)
    public void test0582270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
    }

    @Test(timeout = 4000)
    public void test0582271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0582272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0582273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0582274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0582275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0582276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0582277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0582278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0582279() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0582280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0582281() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0582282() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0582283() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0582284() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(229);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 63, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.writeNumberField("", (long) 2);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0592285() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0592286() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0592287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0592288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0592289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0592290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0592291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0592292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0592293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0592294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0592295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0592296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0592297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0592298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0592299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0592300() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0592301() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0592302() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0592303() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0592304() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0592305() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    }

    @Test(timeout = 4000)
    public void test0592306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0592307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0592308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0592309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0592310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0592311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0592312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0592313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0592314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0592315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0592316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0592317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0592318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0592319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0592320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0592321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0592322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0592323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0592324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0592325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0592326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test0592327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0592328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0592329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0592330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0592331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0592332() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0592333() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0592334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0592335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
    }

    @Test(timeout = 4000)
    public void test0592336() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
    }

    @Test(timeout = 4000)
    public void test0592337() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
    }

    @Test(timeout = 4000)
    public void test0592338() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
    }

    @Test(timeout = 4000)
    public void test0592339() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
    }

    @Test(timeout = 4000)
    public void test0592340() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
    }

    @Test(timeout = 4000)
    public void test0592341() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
    }

    @Test(timeout = 4000)
    public void test0592342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
    }

    @Test(timeout = 4000)
    public void test0592343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
    }

    @Test(timeout = 4000)
    public void test0592344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
    }

    @Test(timeout = 4000)
    public void test0592345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
    }

    @Test(timeout = 4000)
    public void test0592346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
    }

    @Test(timeout = 4000)
    public void test0592347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0592348() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0592349() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0592350() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0592351() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0592352() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0592353() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0592354() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0592355() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0592356() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0592357() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0592358() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0592359() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0592360() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((long) 2);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0602361() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0602362() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0602363() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0602364() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0602365() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0602366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0602367() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0602368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0602369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0602370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0602371() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0602372() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0602373() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0602374() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0602375() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0602376() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0602377() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0602378() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0602379() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0602380() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0602381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    }

    @Test(timeout = 4000)
    public void test0602382() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    }

    @Test(timeout = 4000)
    public void test0602383() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    }

    @Test(timeout = 4000)
    public void test0602384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    }

    @Test(timeout = 4000)
    public void test0602385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    }

    @Test(timeout = 4000)
    public void test0602386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    }

    @Test(timeout = 4000)
    public void test0602387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    }

    @Test(timeout = 4000)
    public void test0602388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    }

    @Test(timeout = 4000)
    public void test0602389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    }

    @Test(timeout = 4000)
    public void test0602390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test0602391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0602392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0602393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0602394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0602395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0602396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0602397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0602398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0602399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0602400() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0602401() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0602402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0602403() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0602404() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0602405() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0602406() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test0602407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0602408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0602409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0602410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0602411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0602412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0602413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0602414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0602415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0602416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0602417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
    }

    @Test(timeout = 4000)
    public void test0602418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
    }

    @Test(timeout = 4000)
    public void test0602419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
    }

    @Test(timeout = 4000)
    public void test0602420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
    }

    @Test(timeout = 4000)
    public void test0602421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
    }

    @Test(timeout = 4000)
    public void test0602422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
    }

    @Test(timeout = 4000)
    public void test0602423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
    }

    @Test(timeout = 4000)
    public void test0602424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
    }

    @Test(timeout = 4000)
    public void test0602425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
    }

    @Test(timeout = 4000)
    public void test0602426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
    }

    @Test(timeout = 4000)
    public void test0602427() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
    }

    @Test(timeout = 4000)
    public void test0602428() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
    }

    @Test(timeout = 4000)
    public void test0602429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0602430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0602431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test0602432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0602433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0602434() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0602435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0602436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0602437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0602438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0602439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0602440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0602441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber((-745L));
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0612442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0612443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0612444() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0612445() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0612446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0612447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0612448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0612449() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0612450() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0612451() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0612452() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0612453() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0612454() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0612455() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0612456() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0612457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0612458() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0612459() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0612460() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0612461() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0612462() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    }

    @Test(timeout = 4000)
    public void test0612463() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0612464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0612465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0612466() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0612467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0612468() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0612469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0612470() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0612471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0612472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0612473() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0612474() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0612475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0612476() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0612477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0612478() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0612479() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0612480() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0612481() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0612482() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0612483() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0612484() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0612485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0612486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0612487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0612488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0612489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0612490() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0612491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0612492() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
    }

    @Test(timeout = 4000)
    public void test0612493() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test0612494() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test0612495() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0612496() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0612497() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0612498() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0612499() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0612500() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0612501() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0612502() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0612503() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0612504() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0612505() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0612506() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0612507() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0612508() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0612509() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0612510() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0612511() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0612512() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0612513() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0612514() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0612515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0612516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0612517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0612518() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0612519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0612520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0612521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test0612522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test0622523() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0622524() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0622525() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0622526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0622527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0622528() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0622529() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0622530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0622531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0622532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0622533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0622534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0622535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0622536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0622537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0622538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0622539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0622540() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0622541() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0622542() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0622543() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    }

    @Test(timeout = 4000)
    public void test0622544() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0622545() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0622546() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0622547() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0622548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0622549() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0622550() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0622551() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0622552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0622553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0622554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0622555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0622556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0622557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0622558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0622559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0622560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0622561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0622562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0622563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0622564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0622565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0622566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0622567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0622568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0622569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0622570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0622571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0622572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0622573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test0622574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test0622575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test0622576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test0622577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test0622578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test0622579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test0622580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test0622581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test0622582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test0622583() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test0622584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test0622585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0622586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0622587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0622588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0622589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0622590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0622591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0622592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0622593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0622594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0622595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0622596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0622597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0622598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((BigInteger) null);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0632599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0632600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0632601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0632602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0632603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0632604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0632605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0632606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0632607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0632608() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0632609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0632610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0632611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0632612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0632613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0632614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0632615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0632616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test0632617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0632618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0632619() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
    }

    @Test(timeout = 4000)
    public void test0632620() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0632621() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0632622() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0632623() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0632624() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0632625() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0632626() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0632627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0632628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0632629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0632630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0632631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0632632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0632633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0632634() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0632635() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0632636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0632637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0632638() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0632639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0632640() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0632641() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0632642() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0632643() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0632644() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0632645() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0632646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0632647() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0632648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0632649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
    }

    @Test(timeout = 4000)
    public void test0632650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test0632651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test0632652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0632653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0632654() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0632655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0632656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0632657() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0632658() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0632659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0632660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0632661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0632662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0632663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test0632664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0632665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0632666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0632667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0632668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0632669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0632670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0632671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0632672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0632673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0632674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0632675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0632676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0632677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0632678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test0632679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        BigInteger bigInteger0 = BigInteger.ZERO;
        uTF8JsonGenerator0.writeNumber(bigInteger0);
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test0642680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0642681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0642682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0642683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0642684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0642685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0642686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0642687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0642688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0642689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
    }

    @Test(timeout = 4000)
    public void test0642690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
    }

    @Test(timeout = 4000)
    public void test0642691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
    }

    @Test(timeout = 4000)
    public void test0642692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
    }

    @Test(timeout = 4000)
    public void test0642693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
    }

    @Test(timeout = 4000)
    public void test0642694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
    }

    @Test(timeout = 4000)
    public void test0642695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
    }

    @Test(timeout = 4000)
    public void test0642696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
    }

    @Test(timeout = 4000)
    public void test0642697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
    }

    @Test(timeout = 4000)
    public void test0642698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0642699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0642700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    }

    @Test(timeout = 4000)
    public void test0642701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0642702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0642703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0642704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0642705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0642706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0642707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0642708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0642709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0642710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0642711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0642712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0642713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0642714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0642715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0642716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0642717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0642718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0642719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0642720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0642721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0642722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0642723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0642724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0642725() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0642726() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0642727() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0642728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0642729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0642730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test0642731() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test0642732() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test0642733() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test0642734() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test0642735() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test0642736() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test0642737() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test0642738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test0642739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test0642740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test0642741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test0642742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0642743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0642744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0642745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0642746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0642747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0642748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0642749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0642750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0642751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0642752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0642753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0642754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0642755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.NaN);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0652756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0652757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0652758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0652759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0652760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0652761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0652762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0652763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0652764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0652765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0652766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0652767() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0652768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0652769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0652770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0652771() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0652772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0652773() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0652774() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0652775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0652776() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    }

    @Test(timeout = 4000)
    public void test0652777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0652778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0652779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0652780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0652781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0652782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0652783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0652784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0652785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0652786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0652787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0652788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0652789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0652790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0652791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0652792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0652793() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0652794() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0652795() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0652796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0652797() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0652798() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
        assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
    }

    @Test(timeout = 4000)
    public void test0652799() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0652800() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0652801() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0652802() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0652803() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0652804() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0652805() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0652806() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0652807() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0652808() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0652809() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0652810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0652811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0652812() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0652813() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0652814() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0652815() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0652816() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0652817() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0652818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0652819() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0652820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0652821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0652822() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0652823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0652824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0652825() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0652826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0652827() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0652828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0652829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0652830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0652831() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0662832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0662833() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0662834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0662835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0662836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0662837() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0662838() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0662839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0662840() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0662841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0662842() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0662843() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0662844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0662845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0662846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0662847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0662848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0662849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0662850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0662851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0662852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
    }

    @Test(timeout = 4000)
    public void test0662853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0662854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0662855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0662856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0662857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0662858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0662859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0662860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0662861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0662862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0662863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0662864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0662865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0662866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0662867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0662868() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0662869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0662870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0662871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0662872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0662873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0662874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
        assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
    }

    @Test(timeout = 4000)
    public void test0662875() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0662876() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0662877() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0662878() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0662879() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0662880() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0662881() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0662882() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0662883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0662884() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0662885() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0662886() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0662887() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0662888() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0662889() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0662890() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0662891() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0662892() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0662893() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
    }

    @Test(timeout = 4000)
    public void test0662894() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0662895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0662896() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0662897() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0662898() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0662899() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0662900() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0662901() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0662902() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0662903() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0662904() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0662905() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0662906() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0662907() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2047);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 21, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber(Double.POSITIVE_INFINITY);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0672908() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0672909() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0672910() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0672911() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0672912() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0672913() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0672914() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0672915() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0672916() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0672917() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0672918() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0672919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0672920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0672921() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0672922() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0672923() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0672924() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0672925() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0672926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0672927() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0672928() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test0672929() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0672930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0672931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0672932() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0672933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0672934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0672935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0672936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0672937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0672938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0672939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0672940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0672941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0672942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0672943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0672944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0672945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0672946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0672947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0672948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0672949() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0672950() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0672951() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0672952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0672953() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0672954() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0672955() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0672956() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0672957() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0672958() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
    }

    @Test(timeout = 4000)
    public void test0672959() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
    }

    @Test(timeout = 4000)
    public void test0672960() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
    }

    @Test(timeout = 4000)
    public void test0672961() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
    }

    @Test(timeout = 4000)
    public void test0672962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
    }

    @Test(timeout = 4000)
    public void test0672963() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
    }

    @Test(timeout = 4000)
    public void test0672964() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
    }

    @Test(timeout = 4000)
    public void test0672965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
    }

    @Test(timeout = 4000)
    public void test0672966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
    }

    @Test(timeout = 4000)
    public void test0672967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
    }

    @Test(timeout = 4000)
    public void test0672968() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
    }

    @Test(timeout = 4000)
    public void test0672969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
    }

    @Test(timeout = 4000)
    public void test0672970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0672971() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0672972() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0672973() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0672974() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0672975() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0672976() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0672977() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0672978() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0672979() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0672980() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0672981() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0672982() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0672983() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 877, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeNumber((float) 2);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0682984() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0682985() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0682986() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0682987() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0682988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0682989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0682990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0682991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0682992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0682993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0682994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0682995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0682996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0682997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0682998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0682999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0683000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0683001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0683002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0683003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0683004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    }

    @Test(timeout = 4000)
    public void test0683005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test0683006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    }

    @Test(timeout = 4000)
    public void test0683007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    }

    @Test(timeout = 4000)
    public void test0683008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    }

    @Test(timeout = 4000)
    public void test0683009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    }

    @Test(timeout = 4000)
    public void test0683010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    }

    @Test(timeout = 4000)
    public void test0683011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    }

    @Test(timeout = 4000)
    public void test0683012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    }

    @Test(timeout = 4000)
    public void test0683013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    }

    @Test(timeout = 4000)
    public void test0683014() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    }

    @Test(timeout = 4000)
    public void test0683015() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    }

    @Test(timeout = 4000)
    public void test0683016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    }

    @Test(timeout = 4000)
    public void test0683017() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    }

    @Test(timeout = 4000)
    public void test0683018() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
    }

    @Test(timeout = 4000)
    public void test0683019() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0683020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0683021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
        byteArrayBuilder0.getCurrentSegmentLength();
    }

    @Test(timeout = 4000)
    public void test0683022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0683023() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0683024() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0683025() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0683026() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0683027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0683028() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0683029() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0683030() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0683031() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0683032() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
        BigDecimal bigDecimal0 = BigDecimal.ZERO;
    }

    @Test(timeout = 4000)
    public void test0683033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
        BigDecimal bigDecimal0 = BigDecimal.ZERO;
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test0683034() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
        BigDecimal bigDecimal0 = BigDecimal.ZERO;
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test0683035() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 0, false);
        BigDecimal bigDecimal0 = BigDecimal.ZERO;
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0693036() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0693037() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0693038() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0693039() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0693040() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0693041() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0693042() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0693043() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0693044() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0693045() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0693046() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0693047() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0693048() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0693049() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0693050() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0693051() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0693052() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0693053() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0693054() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0693055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0693056() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
    }

    @Test(timeout = 4000)
    public void test0693057() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0693058() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0693059() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0693060() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0693061() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0693062() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0693063() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0693064() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0693065() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0693066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0693067() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0693068() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0693069() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0693070() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0693071() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0693072() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0693073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0693074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0693075() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0693076() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0693077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0693078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0693079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0693080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0693081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0693082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0693083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0693084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("{^`>tHpj*ic");
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockFileOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeNumber((BigDecimal) null);
    }

    @Test(timeout = 4000)
    public void test0703085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0703086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0703087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0703088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0703089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0703090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0703091() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0703092() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0703093() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0703094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0703095() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0703096() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0703097() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0703098() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0703099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0703100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0703101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0703102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0703103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0703104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0703105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
    }

    @Test(timeout = 4000)
    public void test0703106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test0703107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    }

    @Test(timeout = 4000)
    public void test0703108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    }

    @Test(timeout = 4000)
    public void test0703109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    }

    @Test(timeout = 4000)
    public void test0703110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    }

    @Test(timeout = 4000)
    public void test0703111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    }

    @Test(timeout = 4000)
    public void test0703112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    }

    @Test(timeout = 4000)
    public void test0703113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    }

    @Test(timeout = 4000)
    public void test0703114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    }

    @Test(timeout = 4000)
    public void test0703115() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    }

    @Test(timeout = 4000)
    public void test0703116() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    }

    @Test(timeout = 4000)
    public void test0703117() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    }

    @Test(timeout = 4000)
    public void test0703118() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    }

    @Test(timeout = 4000)
    public void test0703119() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
    }

    @Test(timeout = 4000)
    public void test0703120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0703121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0703122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test0703123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0703124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0703125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0703126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0703127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0703128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0703129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0703130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0703131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0703132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0703133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
        BigDecimal bigDecimal0 = BigDecimal.ZERO;
    }

    @Test(timeout = 4000)
    public void test0703134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
        BigDecimal bigDecimal0 = BigDecimal.ZERO;
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test0703135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
        BigDecimal bigDecimal0 = BigDecimal.ZERO;
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test0703136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 43, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 2, false);
        BigDecimal bigDecimal0 = BigDecimal.ZERO;
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0713137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0713138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0713139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0713140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0713141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0713142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0713143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0713144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0713145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0713146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0713147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0713148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0713149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0713150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0713151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0713152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0713153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0713154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test0713155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0713156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0713157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    }

    @Test(timeout = 4000)
    public void test0713158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    }

    @Test(timeout = 4000)
    public void test0713159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    }

    @Test(timeout = 4000)
    public void test0713160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    }

    @Test(timeout = 4000)
    public void test0713161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    }

    @Test(timeout = 4000)
    public void test0713162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    }

    @Test(timeout = 4000)
    public void test0713163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    }

    @Test(timeout = 4000)
    public void test0713164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    }

    @Test(timeout = 4000)
    public void test0713165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
    }

    @Test(timeout = 4000)
    public void test0713166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(1, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test0713167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0713168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0713169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0713170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0713171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0713172() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0713173() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0713174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0713175() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0713176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0713177() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0713178() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0713179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0713180() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0713181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0713182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test0713183() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0713184() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0713185() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0713186() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0713187() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0713188() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0713189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0713190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0713191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0713192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0713193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
    }

    @Test(timeout = 4000)
    public void test0713194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test0713195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test0713196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0713197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0713198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0713199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0713200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0713201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0713202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0713203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0713204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0713205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0713206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0713207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0713208() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0713209() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0713210() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(1, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test0713211() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0713212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0713213() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0713214() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0713215() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0713216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0713217() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0713218() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0713219() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0713220() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0713221() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test0713222() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-15), (ObjectCodec) null, byteArrayBuilder0);
        BigDecimal bigDecimal0 = new BigDecimal(3);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test0723223() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0723224() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0723225() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0723226() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0723227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0723228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0723229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0723230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0723231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0723232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    }

    @Test(timeout = 4000)
    public void test0723233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    }

    @Test(timeout = 4000)
    public void test0723234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    }

    @Test(timeout = 4000)
    public void test0723235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    }

    @Test(timeout = 4000)
    public void test0723236() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    }

    @Test(timeout = 4000)
    public void test0723237() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    }

    @Test(timeout = 4000)
    public void test0723238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    }

    @Test(timeout = 4000)
    public void test0723239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    }

    @Test(timeout = 4000)
    public void test0723240() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
    }

    @Test(timeout = 4000)
    public void test0723241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test0723242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0723243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0723244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0723245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0723246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0723247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0723248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0723249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0723250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0723251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0723252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0723253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
    }

    @Test(timeout = 4000)
    public void test0723254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test0723255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test0723256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0723257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0723258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0723259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0723260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0723261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0723262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0723263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0723264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0723265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0723266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0723267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0723268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test0723269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test0723270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0723271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0723272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0723273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0723274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0723275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0723276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0723277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0723278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0723279() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0723280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0723281() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0723282() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0723283() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0723284() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0723285() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0723286() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0723287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0723288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0723289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0723290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0723291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0723292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0723293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test0723294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test0723295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0723296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0723297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test0723298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test0723299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0723300() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0723301() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0723302() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0723303() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0723304() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0723305() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0723306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0723307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0723308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0, 0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        BigDecimal bigDecimal0 = new BigDecimal(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 78, (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeNumber(bigDecimal0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0733309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0733310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0733311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0733312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0733313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0733314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0733315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0733316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0733317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0733318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0733319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0733320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0733321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0733322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0733323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0733324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0733325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0733326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0733327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0733328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0733329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test0733330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0733331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0733332() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0733333() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0733334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0733335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0733336() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0733337() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0733338() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0733339() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0733340() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0733341() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0733342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0733343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0733344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0733345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0733346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0733347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0733348() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0733349() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0733350() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0733351() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0733352() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0733353() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0733354() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0733355() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0733356() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0733357() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0733358() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0733359() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0733360() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0733361() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
    }

    @Test(timeout = 4000)
    public void test0733362() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
    }

    @Test(timeout = 4000)
    public void test0733363() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
    }

    @Test(timeout = 4000)
    public void test0733364() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
    }

    @Test(timeout = 4000)
    public void test0733365() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
    }

    @Test(timeout = 4000)
    public void test0733366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
    }

    @Test(timeout = 4000)
    public void test0733367() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
    }

    @Test(timeout = 4000)
    public void test0733368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
    }

    @Test(timeout = 4000)
    public void test0733369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
    }

    @Test(timeout = 4000)
    public void test0733370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
    }

    @Test(timeout = 4000)
    public void test0733371() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
    }

    @Test(timeout = 4000)
    public void test0733372() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
    }

    @Test(timeout = 4000)
    public void test0733373() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
    }

    @Test(timeout = 4000)
    public void test0733374() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
    }

    @Test(timeout = 4000)
    public void test0733375() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0733376() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0733377() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0733378() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0733379() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0733380() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0733381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0733382() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0733383() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0733384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0733385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0733386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0733387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0733388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 41, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeNumber("DCZg4I}d-?+}||V");
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0743389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0743390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0743391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0743392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0743393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0743394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0743395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0743396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0743397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0743398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0743399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0743400() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0743401() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0743402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0743403() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0743404() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0743405() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0743406() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0743407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test0743408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0743409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
    }

    @Test(timeout = 4000)
    public void test0743410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    }

    @Test(timeout = 4000)
    public void test0743411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0743412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0743413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0743414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0743415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0743416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0743417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0743418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0743419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0743420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0743421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0743422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0743423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0743424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0743425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test0743426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0743427() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0743428() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test0743429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.isHidden();
    }

    @Test(timeout = 4000)
    public void test0743430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getFreeSpace();
    }

    @Test(timeout = 4000)
    public void test0743431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.canWrite();
    }

    @Test(timeout = 4000)
    public void test0743432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getName();
    }

    @Test(timeout = 4000)
    public void test0743433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getUsableSpace();
    }

    @Test(timeout = 4000)
    public void test0743434() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.isAbsolute();
    }

    @Test(timeout = 4000)
    public void test0743435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getParent();
    }

    @Test(timeout = 4000)
    public void test0743436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.canRead();
    }

    @Test(timeout = 4000)
    public void test0743437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.isFile();
    }

    @Test(timeout = 4000)
    public void test0743438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.length();
    }

    @Test(timeout = 4000)
    public void test0743439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.exists();
    }

    @Test(timeout = 4000)
    public void test0743440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.toString();
    }

    @Test(timeout = 4000)
    public void test0743441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.lastModified();
    }

    @Test(timeout = 4000)
    public void test0743442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.canExecute();
    }

    @Test(timeout = 4000)
    public void test0743443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        mockFile0.getTotalSpace();
    }

    @Test(timeout = 4000)
    public void test0743444() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0743445() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0743446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0743447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0743448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0743449() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0743450() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0743451() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0743452() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0743453() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0743454() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile("Can not currently override name during filtering read", "Can not currently override name during filtering read");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, mockPrintStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.writeBoolean(true);
    }

    @Test(timeout = 4000)
    public void test0753455() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0753456() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0753457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0753458() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0753459() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0753460() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0753461() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0753462() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0753463() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0753464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test0753465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0753466() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0753467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
    }

    @Test(timeout = 4000)
    public void test0753468() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
    }

    @Test(timeout = 4000)
    public void test0753469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
    }

    @Test(timeout = 4000)
    public void test0753470() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
    }

    @Test(timeout = 4000)
    public void test0753471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
    }

    @Test(timeout = 4000)
    public void test0753472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
    }

    @Test(timeout = 4000)
    public void test0753473() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
    }

    @Test(timeout = 4000)
    public void test0753474() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
    }

    @Test(timeout = 4000)
    public void test0753475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
    }

    @Test(timeout = 4000)
    public void test0753476() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0753477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0753478() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0753479() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0753480() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0753481() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0753482() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0753483() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0753484() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0753485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0753486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0753487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0753488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0753489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0753490() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0753491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0753492() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0753493() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0753494() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0753495() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0753496() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0753497() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0753498() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0753499() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0753500() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0753501() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0753502() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0753503() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0753504() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0753505() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0753506() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0753507() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0753508() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0753509() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0753510() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0753511() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0753512() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0753513() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0753514() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0753515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0753516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0753517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0753518() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0753519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0753520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0753521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0753522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0753523() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0753524() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0753525() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0753526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0753527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0753528() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0753529() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0753530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0753531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0753532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0753533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0753534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0753535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0763536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0763537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0763538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0763539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0763540() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0763541() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0763542() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0763543() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0763544() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0763545() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0763546() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0763547() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0763548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0763549() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0763550() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0763551() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0763552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0763553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0763554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0763555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0763556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test0763557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0763558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0763559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    }

    @Test(timeout = 4000)
    public void test0763560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        assertNotNull(byteArray0);
    }

    @Test(timeout = 4000)
    public void test0763561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    }

    @Test(timeout = 4000)
    public void test0763562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    }

    @Test(timeout = 4000)
    public void test0763563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    }

    @Test(timeout = 4000)
    public void test0763564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    }

    @Test(timeout = 4000)
    public void test0763565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    }

    @Test(timeout = 4000)
    public void test0763566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    }

    @Test(timeout = 4000)
    public void test0763567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    }

    @Test(timeout = 4000)
    public void test0763568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
    }

    @Test(timeout = 4000)
    public void test0763569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0763570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0763571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0763572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0763573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0763574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0763575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0763576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0763577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0763578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0763579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0763580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0763581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0763582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0763583() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0763584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0763585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0763586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0763587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0763588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0763589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0763590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0763591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0763592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0763593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0763594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0763595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0763596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0763597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0763598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
    }

    @Test(timeout = 4000)
    public void test0763599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
    }

    @Test(timeout = 4000)
    public void test0763600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
    }

    @Test(timeout = 4000)
    public void test0763601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
    }

    @Test(timeout = 4000)
    public void test0763602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
    }

    @Test(timeout = 4000)
    public void test0763603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
    }

    @Test(timeout = 4000)
    public void test0763604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
    }

    @Test(timeout = 4000)
    public void test0763605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
    }

    @Test(timeout = 4000)
    public void test0763606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
    }

    @Test(timeout = 4000)
    public void test0763607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
    }

    @Test(timeout = 4000)
    public void test0763608() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
    }

    @Test(timeout = 4000)
    public void test0763609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
    }

    @Test(timeout = 4000)
    public void test0763610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0763611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0763612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0763613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0763614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0763615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0763616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0763617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0763618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0763619() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0763620() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0763621() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0763622() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0763623() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0763624() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0763625() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0763626() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0763627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0763628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0763629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0763630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0763631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0763632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0763633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0763634() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0763635() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0763636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0763637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0763638() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0763639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0763640() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0763641() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0763642() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0763643() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0763644() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0763645() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0763646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0763647() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0763648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0763649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = iOContext0.allocReadIOBuffer();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1114111, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeObjectFieldStart("TdV23");
        uTF8JsonGenerator0.writeBinaryField("\"@k9u4Dki2z.EZ3&", byteArray0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0773650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0773651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0773652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0773653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0773654() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0773655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0773656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0773657() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0773658() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0773659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
    }

    @Test(timeout = 4000)
    public void test0773660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
    }

    @Test(timeout = 4000)
    public void test0773661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
    }

    @Test(timeout = 4000)
    public void test0773662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
    }

    @Test(timeout = 4000)
    public void test0773663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
    }

    @Test(timeout = 4000)
    public void test0773664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
    }

    @Test(timeout = 4000)
    public void test0773665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
    }

    @Test(timeout = 4000)
    public void test0773666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
    }

    @Test(timeout = 4000)
    public void test0773667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
    }

    @Test(timeout = 4000)
    public void test0773668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0773669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0773670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    }

    @Test(timeout = 4000)
    public void test0773671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0773672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0773673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0773674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0773675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0773676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0773677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0773678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0773679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0773680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0773681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0773682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0773683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0773684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0773685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0773686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0773687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0773688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0773689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0773690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0773691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0773692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0773693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0773694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0773695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0773696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0773697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0773698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0773699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0773700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "lehtU'S(", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0._verifyPrettyValueWrite("lehtU'S(", 1);
    }

    @Test(timeout = 4000)
    public void test0783701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0783702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0783703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0783704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0783705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0783706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0783707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0783708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0783709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0783710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0783711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0783712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0783713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0783714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0783715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0783716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0783717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0783718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0783719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0783720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0783721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test0783722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0783723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0783724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0783725() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0783726() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0783727() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0783728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0783729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0783730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0783731() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0783732() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0783733() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0783734() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0783735() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0783736() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0783737() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0783738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0783739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0783740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0783741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0783742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0783743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0783744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0783745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0783746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0783747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0783748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0783749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0783750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0783751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0783752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0783753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0._verifyPrettyValueWrite(")", 192);
    }

    @Test(timeout = 4000)
    public void test0793754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0793755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0793756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0793757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0793758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0793759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0793760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0793761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0793762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0793763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0793764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0793765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0793766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0793767() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0793768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0793769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0793770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0793771() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0793772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0793773() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0793774() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test0793775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0793776() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0793777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0793778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0793779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0793780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0793781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0793782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0793783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0793784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0793785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0793786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0793787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0793788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0793789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0793790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0793791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0793792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0793793() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0793794() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0793795() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0793796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0793797() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0793798() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0793799() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0793800() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0793801() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0793802() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0793803() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0793804() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
    }

    @Test(timeout = 4000)
    public void test0793805() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
    }

    @Test(timeout = 4000)
    public void test0793806() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
    }

    @Test(timeout = 4000)
    public void test0793807() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
    }

    @Test(timeout = 4000)
    public void test0793808() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
    }

    @Test(timeout = 4000)
    public void test0793809() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
    }

    @Test(timeout = 4000)
    public void test0793810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
    }

    @Test(timeout = 4000)
    public void test0793811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
    }

    @Test(timeout = 4000)
    public void test0793812() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
    }

    @Test(timeout = 4000)
    public void test0793813() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
    }

    @Test(timeout = 4000)
    public void test0793814() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
    }

    @Test(timeout = 4000)
    public void test0793815() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
    }

    @Test(timeout = 4000)
    public void test0793816() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0793817() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0793818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0793819() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0793820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0793821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0793822() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0793823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0793824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0793825() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0793826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0793827() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0793828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0793829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0793830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeArrayFieldStart("NZM`WCVO05cB}iX");
        uTF8JsonGenerator0._verifyPrettyValueWrite("NZM`WCVO05cB}iX", 0);
    }

    @Test(timeout = 4000)
    public void test0803831() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0803832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0803833() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0803834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0803835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0803836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0803837() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0803838() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0803839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0803840() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0803841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0803842() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0803843() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0803844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0803845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0803846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0803847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0803848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0803849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0803850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0803851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    }

    @Test(timeout = 4000)
    public void test0803852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0803853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0803854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0803855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0803856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0803857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0803858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0803859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0803860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0803861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0803862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0803863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0803864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0803865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0803866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0803867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0803868() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
    }

    @Test(timeout = 4000)
    public void test0803869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0803870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0803871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0803872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0803873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0803874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0803875() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0803876() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0803877() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0803878() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0803879() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0803880() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0803881() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0803882() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0803883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0803884() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0803885() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0803886() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0803887() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0803888() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0803889() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0803890() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0803891() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0803892() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0803893() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0803894() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0803895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0803896() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0803897() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0803898() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0803899() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0803900() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0803901() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0803902() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0803903() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0803904() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0803905() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0803906() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0803907() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0803908() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0803909() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0803910() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0803911() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 0, false);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0._verifyPrettyValueWrite("rO3U2rv5,}x.", 0);
    }

    @Test(timeout = 4000)
    public void test0813912() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0813913() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0813914() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0813915() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0813916() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0813917() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0813918() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0813919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0813920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0813921() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0813922() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0813923() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0813924() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0813925() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0813926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0813927() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0813928() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0813929() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0813930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0813931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0813932() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0813933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0813934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0813935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0813936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0813937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0813938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0813939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0813940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0813941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0813942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0813943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0813944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0813945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0813946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0813947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0813948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0813949() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0813950() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0813951() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0813952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0813953() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0813954() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0813955() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0813956() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test0813957() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0813958() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0813959() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0813960() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0813961() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0813962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0813963() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0813964() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0813965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0813966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0813967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0813968() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0813969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0813970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0813971() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0813972() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0813973() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0813974() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0813975() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0813976() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0813977() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0813978() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0813979() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0813980() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 4, (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0823981() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0823982() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0823983() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0823984() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0823985() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0823986() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0823987() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0823988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0823989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0823990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0823991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0823992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0823993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0823994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0823995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0823996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0823997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0823998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0823999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0824000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0824001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    }

    @Test(timeout = 4000)
    public void test0824002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0824003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0824004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0824005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0824006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0824007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0824008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0824009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0824010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0824011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0824012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0824013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0824014() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0824015() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0824016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0824017() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0824018() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0824019() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0824020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0824021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0824022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0824023() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0824024() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0824025() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0824026() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0824027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0824028() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0824029() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0824030() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0824031() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0824032() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0824033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0824034() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0824035() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0824036() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0824037() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0824038() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0824039() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0824040() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0824041() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0824042() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0824043() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0824044() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0824045() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0824046() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0824047() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0824048() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0824049() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0824050() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0824051() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0824052() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0824053() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0824054() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0824055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0824056() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 574, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0834057() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0834058() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0834059() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0834060() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0834061() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0834062() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0834063() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0834064() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0834065() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0834066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0834067() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0834068() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0834069() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0834070() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0834071() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0834072() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0834073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0834074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0834075() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0834076() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0834077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    }

    @Test(timeout = 4000)
    public void test0834078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0834079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0834080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0834081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0834082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0834083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0834084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0834085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0834086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0834087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0834088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0834089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0834090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0834091() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0834092() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0834093() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0834094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0834095() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0834096() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0834097() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0834098() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0834099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0834100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0834101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0834102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0834103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0834104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0834105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0834106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0834107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0834108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0834109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0834110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0834111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0834112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0834113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0834114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0834115() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0834116() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0834117() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0834118() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test0834119() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0834120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0834121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0834122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0834123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0834124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0834125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0834126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0834127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0834128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0834129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0834130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0834131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0834132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.flush();
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0844133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0844134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0844135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0844136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0844137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0844138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0844139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0844140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0844141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0844142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0844143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0844144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0844145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0844146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0844147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0844148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0844149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0844150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
    }

    @Test(timeout = 4000)
    public void test0844151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0844152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0844153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
    }

    @Test(timeout = 4000)
    public void test0844154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0844155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0844156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0844157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0844158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0844159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0844160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0844161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0844162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0844163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0844164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0844165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0844166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0844167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0844168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0844169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0844170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0844171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0844172() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0844173() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0844174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0844175() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0844176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0844177() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0844178() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0844179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0844180() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0844181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0844182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0844183() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844184() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844185() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844186() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844187() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844188() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0844196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0844197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0844198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0844199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0844200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0844201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0844202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0844203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0844204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0844205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0844206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0844207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0844208() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0844209() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844210() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844211() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844213() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844214() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844215() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844217() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844218() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844219() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844220() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0844221() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0844222() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0844223() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0844224() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0844225() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0844226() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0844227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0844228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0844229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0844230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0844231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0844232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0844233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0844234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "7.e`", true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(240);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 255, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0854235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0854236() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0854237() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0854238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0854239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0854240() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0854241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0854242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0854243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0854244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0854245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0854246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0854247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0854248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0854249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0854250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0854251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0854252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0854253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0854254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0854255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test0854256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0854257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0854258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0854259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0854260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0854261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0854262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0854263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0854264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0854265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0854266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0854267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0854268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0854269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0854270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0854271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0854272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0854273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0854274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0854275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0854276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0854277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0854278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0854279() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0854280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0854281() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0854282() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0854283() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0854284() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0854285() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0854286() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0854287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0854288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0854289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0854290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0854291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0854292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0854293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0854294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0854295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0854296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0854297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0854298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0854299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0854300() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0854301() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0854302() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0854303() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0854304() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0854305() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0854306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0854307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0854308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0854309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0854310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 28, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0864311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0864312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0864313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0864314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0864315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0864316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0864317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0864318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0864319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0864320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0864321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0864322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0864323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0864324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0864325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0864326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0864327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0864328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0864329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0864330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0864331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    }

    @Test(timeout = 4000)
    public void test0864332() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0864333() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0864334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0864335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0864336() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0864337() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0864338() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0864339() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0864340() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0864341() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0864342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0864343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0864344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0864345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0864346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0864347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0864348() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0864349() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0864350() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0864351() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0864352() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0864353() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0864354() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0864355() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0864356() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0864357() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0864358() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0864359() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0864360() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0864361() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0864362() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0864363() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0864364() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0864365() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0864366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0864367() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0864368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0864369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0864370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0864371() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0864372() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test0864373() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0864374() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0864375() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0864376() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0864377() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0864378() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0864379() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0864380() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0864381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0864382() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0864383() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0864384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0864385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0864386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0864387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0864388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0864389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0864390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0864391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0864392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0864393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0864394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0864395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0864396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0864397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0864398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0864399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0864400() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0864401() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0864402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0864403() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0864404() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test0864405() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0864406() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0864407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0864408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0864409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0864410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0864411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0864412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeStartObject();
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0874413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0874414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0874415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0874416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0874417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0874418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0874419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0874420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0874421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0874422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0874423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0874424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0874425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0874426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0874427() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0874428() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0874429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0874430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0874431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0874432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0874433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0874434() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0874435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0874436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0874437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0874438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0874439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0874440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0874441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0874442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0874443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0874444() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0874445() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
    }

    @Test(timeout = 4000)
    public void test0874446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0874447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0874448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0874449() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0874450() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0874451() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0874452() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0874453() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0874454() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0874455() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0874456() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0874457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0874458() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0874459() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0874460() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0874461() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0874462() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0874463() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0874464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0874465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0874466() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0874467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0874468() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0874469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0874470() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0874471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0874472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0874473() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0874474() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0874475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0874476() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0874477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0874478() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0874479() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0874480() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0874481() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-4479), (ObjectCodec) null, (OutputStream) null);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0884482() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0884483() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0884484() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0884485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0884486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0884487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0884488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0884489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0884490() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0884491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0884492() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0884493() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0884494() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0884495() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0884496() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0884497() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0884498() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0884499() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0884500() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0884501() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0884502() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test0884503() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0884504() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0884505() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0884506() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0884507() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0884508() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0884509() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0884510() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0884511() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0884512() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0884513() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0884514() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0884515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0884516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0884517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0884518() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0884519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0884520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0884521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0884522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0884523() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0884524() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0884525() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0884526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0884527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0884528() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0884529() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0884530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0884531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0884532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0884533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0884534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0884535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0884536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0884537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0884538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0884539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0884540() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0884541() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0884542() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0884543() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0884544() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0884545() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0884546() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0884547() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0884548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0884549() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0884550() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0884551() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0884552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0884553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0884554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0884555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0884556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0884557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 175, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0894558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0894559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0894560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0894561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0894562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0894563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0894564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0894565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0894566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0894567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0894568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0894569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0894570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0894571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0894572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0894573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0894574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0894575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0894576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0894577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0894578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test0894579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0894580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0894581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0894582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0894583() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0894584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0894585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0894586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0894587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0894588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0894589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0894590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0894591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0894592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0894593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0894594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0894595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0894596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0894597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0894598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0894599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0894600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0894601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test0894602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0894603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0894604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0894605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0894606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0894607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0894608() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0894609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0894610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0894611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0894612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0894613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0894614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0894615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0894616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0894617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0894618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0894619() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0894620() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0894621() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0894622() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0894623() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test0894624() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0894625() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0894626() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0894627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0894628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0894629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test0894630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0894631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0894632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0894633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0894634() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0894635() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0894636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0894637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[1];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 0, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.close();
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0904638() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0904639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0904640() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0904641() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0904642() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0904643() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0904644() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0904645() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0904646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0904647() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0904648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0904649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0904650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0904651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0904652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0904653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0904654() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0904655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
    }

    @Test(timeout = 4000)
    public void test0904656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0904657() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0904658() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
    }

    @Test(timeout = 4000)
    public void test0904659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    }

    @Test(timeout = 4000)
    public void test0904660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0904661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0904662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0904663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0904664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0904665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0904666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0904667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0904668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0904669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0904670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0904671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0904672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0904673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0904674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0904675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        iOContext0.isResourceManaged();
        assertFalse(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0904676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0904677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        mockFile0.isHidden();
    }

    @Test(timeout = 4000)
    public void test0904678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        mockFile0.getUsableSpace();
    }

    @Test(timeout = 4000)
    public void test0904679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        mockFile0.canRead();
    }

    @Test(timeout = 4000)
    public void test0904680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        mockFile0.isFile();
    }

    @Test(timeout = 4000)
    public void test0904681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        mockFile0.canWrite();
    }

    @Test(timeout = 4000)
    public void test0904682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        mockFile0.isAbsolute();
    }

    @Test(timeout = 4000)
    public void test0904683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        mockFile0.getName();
    }

    @Test(timeout = 4000)
    public void test0904684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        mockFile0.canExecute();
    }

    @Test(timeout = 4000)
    public void test0904685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        mockFile0.length();
    }

    @Test(timeout = 4000)
    public void test0904686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        mockFile0.exists();
    }

    @Test(timeout = 4000)
    public void test0904687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        mockFile0.getFreeSpace();
    }

    @Test(timeout = 4000)
    public void test0904688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        mockFile0.getTotalSpace();
    }

    @Test(timeout = 4000)
    public void test0904689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        mockFile0.getParent();
    }

    @Test(timeout = 4000)
    public void test0904690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        mockFile0.lastModified();
    }

    @Test(timeout = 4000)
    public void test0904691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        mockFile0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test0904692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        mockFile0.toString();
    }

    @Test(timeout = 4000)
    public void test0904693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0904694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0904695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0904696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0904697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0904698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0904699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0904700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0904701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0904702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0904703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Can not currently override name during filtering read", false);
        MockFile mockFile0 = new MockFile(" in character escape sequence");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        byte[] byteArray0 = new byte[3];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 72, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeRawUTF8String(byteArray0, 436, 436);
    }

    @Test(timeout = 4000)
    public void test0914704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0914705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0914706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0914707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0914708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0914709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0914710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0914711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0914712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0914713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0914714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0914715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0914716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0914717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0914718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0914719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0914720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0914721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test0914722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0914723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0914724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    }

    @Test(timeout = 4000)
    public void test0914725() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    }

    @Test(timeout = 4000)
    public void test0914726() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    }

    @Test(timeout = 4000)
    public void test0914727() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    }

    @Test(timeout = 4000)
    public void test0914728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    }

    @Test(timeout = 4000)
    public void test0914729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    }

    @Test(timeout = 4000)
    public void test0914730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    }

    @Test(timeout = 4000)
    public void test0914731() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    }

    @Test(timeout = 4000)
    public void test0914732() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
    }

    @Test(timeout = 4000)
    public void test0914733() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test0914734() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    }

    @Test(timeout = 4000)
    public void test0914735() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    }

    @Test(timeout = 4000)
    public void test0914736() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    }

    @Test(timeout = 4000)
    public void test0914737() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    }

    @Test(timeout = 4000)
    public void test0914738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    }

    @Test(timeout = 4000)
    public void test0914739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    }

    @Test(timeout = 4000)
    public void test0914740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    }

    @Test(timeout = 4000)
    public void test0914741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    }

    @Test(timeout = 4000)
    public void test0914742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    }

    @Test(timeout = 4000)
    public void test0914743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    }

    @Test(timeout = 4000)
    public void test0914744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    }

    @Test(timeout = 4000)
    public void test0914745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    }

    @Test(timeout = 4000)
    public void test0914746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
    }

    @Test(timeout = 4000)
    public void test0914747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0914748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0914749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test0914750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0914751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0914752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0914753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0914754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0914755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0914756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0914757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0914758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0914759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0914760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(bufferRecycler0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, byteArrayBuilder0, byteArrayBuilder0.NO_BYTES, 155, false);
        uTF8JsonGenerator0.writeString("5C=");
    }

    @Test(timeout = 4000)
    public void test0924761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0924762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0924763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0924764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0924765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0924766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0924767() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0924768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0924769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0924770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
    }

    @Test(timeout = 4000)
    public void test0924771() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0924772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0924773() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0924774() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0924775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0924776() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0924777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0924778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0924779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0924780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0924781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0924782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0924783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0924784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0924785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0924786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0924787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0924788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0924789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0924790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0924791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0924792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0924793() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0924794() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0924795() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0924796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
    }

    @Test(timeout = 4000)
    public void test0924797() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0924798() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0924799() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0924800() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0924801() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getOutputBuffered();
        assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
    }

    @Test(timeout = 4000)
    public void test0924802() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0924803() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0924804() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0924805() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0924806() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0924807() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0924808() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0924809() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0924810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0924811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0924812() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0924813() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0924814() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0924815() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0924816() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0924817() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0924818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0924819() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0924820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0924821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0924822() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0924823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0924824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0924825() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0924826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0924827() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.getOutputBuffered();
        assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
    }

    @Test(timeout = 4000)
    public void test0924828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0924829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0924830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0924831() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0924832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0924833() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0924834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0924835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
    }

    @Test(timeout = 4000)
    public void test0924836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
    }

    @Test(timeout = 4000)
    public void test0924837() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
    }

    @Test(timeout = 4000)
    public void test0924838() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
    }

    @Test(timeout = 4000)
    public void test0924839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
    }

    @Test(timeout = 4000)
    public void test0924840() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
    }

    @Test(timeout = 4000)
    public void test0924841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
    }

    @Test(timeout = 4000)
    public void test0924842() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
    }

    @Test(timeout = 4000)
    public void test0924843() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
    }

    @Test(timeout = 4000)
    public void test0924844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
    }

    @Test(timeout = 4000)
    public void test0924845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
    }

    @Test(timeout = 4000)
    public void test0924846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
    }

    @Test(timeout = 4000)
    public void test0924847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
    }

    @Test(timeout = 4000)
    public void test0924848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
    }

    @Test(timeout = 4000)
    public void test0924849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0924850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0924851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0924852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0924853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0924854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0924855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0924856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0924857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0924858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0924859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0924860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0924861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
    }

    @Test(timeout = 4000)
    public void test0924862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
    }

    @Test(timeout = 4000)
    public void test0924863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
    }

    @Test(timeout = 4000)
    public void test0924864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
    }

    @Test(timeout = 4000)
    public void test0924865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
    }

    @Test(timeout = 4000)
    public void test0924866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
    }

    @Test(timeout = 4000)
    public void test0924867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
    }

    @Test(timeout = 4000)
    public void test0924868() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
    }

    @Test(timeout = 4000)
    public void test0924869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
    }

    @Test(timeout = 4000)
    public void test0924870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
    }

    @Test(timeout = 4000)
    public void test0924871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
    }

    @Test(timeout = 4000)
    public void test0924872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
    }

    @Test(timeout = 4000)
    public void test0924873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
    }

    @Test(timeout = 4000)
    public void test0924874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
    }

    @Test(timeout = 4000)
    public void test0924875() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0924876() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0924877() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0924878() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0924879() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
        uTF8JsonGenerator0.getOutputBuffered();
        assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
    }

    @Test(timeout = 4000)
    public void test0924880() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0924881() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0924882() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0924883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0924884() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0924885() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0924886() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-76), (ObjectCodec) null, mockPrintStream0, byteArray0, 1, false);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeFieldName("W");
        uTF8JsonGenerator0.writeNumber((double) 0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0934887() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0934888() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0934889() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0934890() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0934891() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0934892() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0934893() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0934894() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0934895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0934896() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test0934897() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0934898() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0934899() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
    }

    @Test(timeout = 4000)
    public void test0934900() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
    }

    @Test(timeout = 4000)
    public void test0934901() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
    }

    @Test(timeout = 4000)
    public void test0934902() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
    }

    @Test(timeout = 4000)
    public void test0934903() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
    }

    @Test(timeout = 4000)
    public void test0934904() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
    }

    @Test(timeout = 4000)
    public void test0934905() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
    }

    @Test(timeout = 4000)
    public void test0934906() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
    }

    @Test(timeout = 4000)
    public void test0934907() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
    }

    @Test(timeout = 4000)
    public void test0934908() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0934909() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0934910() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0934911() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0934912() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0934913() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0934914() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0934915() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0934916() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0934917() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0934918() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0934919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0934920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0934921() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0934922() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0934923() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0934924() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
    }

    @Test(timeout = 4000)
    public void test0934925() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0934926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0934927() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0934928() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0934929() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0934930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0934931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0934932() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0934933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0934934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0934935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0934936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0934937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0934938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0934939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0934940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0934941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0934942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0934943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0934944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0934945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0934946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0934947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0934948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0934949() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0934950() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0934951() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0934952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
    }

    @Test(timeout = 4000)
    public void test0934953() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0934954() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0934955() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0934956() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0934957() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0934958() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0934959() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0934960() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0934961() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0934962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0934963() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0934964() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0934965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0934966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "!V?3I76gB*]4a+", false);
        byte[] byteArray0 = new byte[8];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1624, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, (byte) 5, false);
        uTF8JsonGenerator0.writeBinaryField("write a string", byteArray0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0944967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0944968() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0944969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0944970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0944971() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0944972() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0944973() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0944974() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0944975() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0944976() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0944977() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0944978() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0944979() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0944980() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0944981() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0944982() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0944983() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0944984() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0944985() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0944986() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0944987() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
    }

    @Test(timeout = 4000)
    public void test0944988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0944989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0944990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0944991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0944992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0944993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0944994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0944995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0944996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0944997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0944998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0944999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0945000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0945001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0945002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0945003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0945004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0945005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0945006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0945007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0945008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0945009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0945010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0945011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0945012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0945013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0945014() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0945015() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0945016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0945017() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(235);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0);
        char[] charArray0 = new char[5];
        charArray0[3] = '\u0097';
        uTF8JsonGenerator0.writeString(charArray0, 3, 4);
    }

    @Test(timeout = 4000)
    public void test0955018() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0955019() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0955020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0955021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0955022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0955023() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0955024() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0955025() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0955026() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0955027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0955028() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0955029() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0955030() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0955031() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0955032() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0955033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0955034() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0955035() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test0955036() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0955037() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0955038() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
    }

    @Test(timeout = 4000)
    public void test0955039() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0955040() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0955041() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0955042() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0955043() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0955044() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0955045() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0955046() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0955047() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0955048() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0955049() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0955050() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0955051() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0955052() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0955053() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0955054() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0955055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0955056() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0955057() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0955058() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0955059() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0955060() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0955061() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0955062() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0955063() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0955064() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0955065() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0955066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0955067() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0955068() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        assertNotNull(uTF8JsonGenerator1);
    }

    @Test(timeout = 4000)
    public void test0955069() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test0955070() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test0955071() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test0955072() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test0955073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test0955074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test0955075() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test0955076() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test0955077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test0955078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test0955079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test0955080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test0955081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test0955082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test0955083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test0955084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test0955085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test0955086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test0955087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0955088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0955089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0955090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0955091() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0955092() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0955093() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0955094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0955095() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0955096() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0955097() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0955098() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0955099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0955100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0955101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator1.canOmitFields();
        assertTrue(uTF8JsonGenerator1.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0955102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator1.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0955103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator1.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator1.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0955104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator1.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator1.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0955105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator1.isClosed();
        assertTrue(uTF8JsonGenerator1.isClosed());
    }

    @Test(timeout = 4000)
    public void test0955106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator1.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator1.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0955107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator1.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0955108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator1.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0955109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator1.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0955110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator1.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator1.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0955111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
    }

    @Test(timeout = 4000)
    public void test0955112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
    }

    @Test(timeout = 4000)
    public void test0955113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
    }

    @Test(timeout = 4000)
    public void test0955114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
    }

    @Test(timeout = 4000)
    public void test0955115() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
    }

    @Test(timeout = 4000)
    public void test0955116() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
    }

    @Test(timeout = 4000)
    public void test0955117() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
    }

    @Test(timeout = 4000)
    public void test0955118() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
    }

    @Test(timeout = 4000)
    public void test0955119() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
    }

    @Test(timeout = 4000)
    public void test0955120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
    }

    @Test(timeout = 4000)
    public void test0955121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
    }

    @Test(timeout = 4000)
    public void test0955122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
    }

    @Test(timeout = 4000)
    public void test0955123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
    }

    @Test(timeout = 4000)
    public void test0955124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0955125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0955126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0955127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0955128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0955129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0955130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0955131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0955132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0955133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0955134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0955135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0955136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0955137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(3);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 248, (ObjectCodec) null, byteArrayOutputStream0);
        UTF8JsonGenerator uTF8JsonGenerator1 = (UTF8JsonGenerator) uTF8JsonGenerator0.useDefaultPrettyPrinter();
        uTF8JsonGenerator0.writeFieldName("pAc!_U]ga(C7v");
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0965138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0965139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0965140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0965141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0965142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0965143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0965144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0965145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0965146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0965147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    }

    @Test(timeout = 4000)
    public void test0965148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
    }

    @Test(timeout = 4000)
    public void test0965149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test0965150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test0965151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test0965152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test0965153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test0965154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test0965155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test0965156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test0965157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test0965158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0965159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0965160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test0965161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0965162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0965163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0965164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0965165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0965166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0965167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0965168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0965169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0965170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0965171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0965172() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0965173() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0965174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0965175() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0965176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0965177() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0965178() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0965179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0965180() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0965181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0965182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
        assertEquals(0, uTF8JsonGenerator0.getOutputBuffered());
    }

    @Test(timeout = 4000)
    public void test0965183() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0965184() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0965185() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0965186() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0965187() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0965188() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0965189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0965190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferedInputStream0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3478, (ObjectCodec) null, byteArrayOutputStream0);
        char[] charArray0 = new char[8];
        charArray0[5] = '\\';
        uTF8JsonGenerator0.writeString(charArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test0975191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0975192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0975193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0975194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0975195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0975196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0975197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0975198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0975199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0975200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0975201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0975202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0975203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0975204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0975205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0975206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0975207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0975208() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test0975209() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0975210() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0975211() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
    }

    @Test(timeout = 4000)
    public void test0975212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0975213() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0975214() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0975215() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0975216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0975217() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0975218() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0975219() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0975220() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0975221() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0975222() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0975223() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0975224() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0975225() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0975226() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0975227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test0975228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0975229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0975230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0975231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0975232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0975233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0975234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0975235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0975236() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0975237() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0975238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0975239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0975240() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0975241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test0975242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test0975243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test0975244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test0975245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test0975246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test0975247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test0975248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test0975249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test0975250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test0975251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test0975252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test0975253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test0975254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test0975255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0975256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0975257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test0975258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test0975259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0975260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0975261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0975262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0975263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0975264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0975265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0975266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0975267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0975268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) (-4);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 1, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0985269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0985270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0985271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0985272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0985273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0985274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0985275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0985276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0985277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0985278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
    }

    @Test(timeout = 4000)
    public void test0985279() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0985280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0985281() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0985282() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0985283() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0985284() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0985285() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0985286() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0985287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0985288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0985289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0985290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0985291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0985292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0985293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0985294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0985295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0985296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0985297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0985298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0985299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0985300() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0985301() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0985302() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0985303() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0985304() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0985305() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0985306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0985307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0985308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0985309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0985310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0985311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0985312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0985313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0985314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0985315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test0985316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0985317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0985318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0985319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0985320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0985321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0985322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0985323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0985324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0985325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0985326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0985327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0985328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0985329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0985330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test0985331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0985332() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0985333() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0985334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0985335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0985336() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0985337() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0985338() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0985339() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0985340() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0985341() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0985342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0985343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test0985344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test0985345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test0985346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test0985347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test0985348() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test0985349() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test0985350() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test0985351() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test0985352() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test0985353() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test0985354() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test0985355() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test0985356() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
    }

    @Test(timeout = 4000)
    public void test0985357() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0985358() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0985359() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test0985360() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0985361() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0985362() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0985363() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test0985364() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0985365() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0985366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0985367() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0985368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        MockPrintStream mockPrintStream0 = new MockPrintStream("Z");
        byte[] byteArray0 = new byte[10];
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 333, (ObjectCodec) null, mockPrintStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeNumber(2);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 2);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0995369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0995370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0995371() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0995372() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0995373() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0995374() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0995375() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0995376() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0995377() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test0995378() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
    }

    @Test(timeout = 4000)
    public void test0995379() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
    }

    @Test(timeout = 4000)
    public void test0995380() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
    }

    @Test(timeout = 4000)
    public void test0995381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
    }

    @Test(timeout = 4000)
    public void test0995382() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
    }

    @Test(timeout = 4000)
    public void test0995383() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
    }

    @Test(timeout = 4000)
    public void test0995384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
    }

    @Test(timeout = 4000)
    public void test0995385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
    }

    @Test(timeout = 4000)
    public void test0995386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
    }

    @Test(timeout = 4000)
    public void test0995387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0995388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0995389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
    }

    @Test(timeout = 4000)
    public void test0995390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
    }

    @Test(timeout = 4000)
    public void test0995391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0995392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0995393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0995394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0995395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0995396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0995397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0995398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0995399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0995400() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0995401() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0995402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0995403() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0995404() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0995405() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
    }

    @Test(timeout = 4000)
    public void test0995406() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test0995407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test0995408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test0995409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test0995410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test0995411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test0995412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test0995413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0995414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test0995415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0995416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test0995417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test0995418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFW-E/GNu3&kS#O", true);
        MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("oFW-E/GNu3&kS#O");
        DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
        byte[] byteArray0 = new byte[9];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 0, (ObjectCodec) null, dataOutputStream0, byteArray0, 1, true);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 3, (byte) 48);
    }

    @Test(timeout = 4000)
    public void test1005419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1005420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1005421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1005422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1005423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1005424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1005425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1005426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1005427() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1005428() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1005429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1005430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1005431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1005432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1005433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1005434() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1005435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1005436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1005437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1005438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1005439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test1005440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test1005441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test1005442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1005443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1005444() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1005445() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1005446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1005447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1005448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1005449() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1005450() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1005451() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1005452() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1005453() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1005454() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1005455() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1005456() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1005457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test1005458() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test1005459() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test1005460() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test1005461() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1005462() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test1005463() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test1005464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test1005465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test1005466() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test1005467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test1005468() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test1005469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test1005470() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test1005471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test1005472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test1005473() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test1005474() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test1005475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test1005476() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test1005477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test1005478() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test1005479() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test1005480() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test1005481() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test1005482() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
    }

    @Test(timeout = 4000)
    public void test1005483() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1005484() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1005485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test1005486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test1005487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test1005488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test1005489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test1005490() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1005491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test1005492() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test1005493() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test1005494() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test1005495() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test1005496() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        byteArray0[0] = (byte) 67;
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2819, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.writeUTF8String(byteArray0, 0, 3);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test1015497() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1015498() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1015499() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1015500() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1015501() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1015502() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1015503() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1015504() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1015505() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1015506() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test1015507() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test1015508() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test1015509() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test1015510() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test1015511() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test1015512() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test1015513() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test1015514() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test1015515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1015516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1015517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    }

    @Test(timeout = 4000)
    public void test1015518() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(1, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test1015519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1015520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1015521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1015522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1015523() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1015524() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1015525() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1015526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1015527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1015528() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1015529() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1015530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1015531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1015532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1015533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1015534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(1, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test1015535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test1015536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test1015537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test1015538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test1015539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test1015540() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test1015541() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1015542() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test1015543() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test1015544() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test1015545() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    }

    @Test(timeout = 4000)
    public void test1015546() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    }

    @Test(timeout = 4000)
    public void test1015547() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    }

    @Test(timeout = 4000)
    public void test1015548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    }

    @Test(timeout = 4000)
    public void test1015549() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    }

    @Test(timeout = 4000)
    public void test1015550() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    }

    @Test(timeout = 4000)
    public void test1015551() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    }

    @Test(timeout = 4000)
    public void test1015552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    }

    @Test(timeout = 4000)
    public void test1015553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    }

    @Test(timeout = 4000)
    public void test1015554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    }

    @Test(timeout = 4000)
    public void test1015555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    }

    @Test(timeout = 4000)
    public void test1015556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
    }

    @Test(timeout = 4000)
    public void test1015557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1015558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1015559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(1, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test1015560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test1015561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test1015562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test1015563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test1015564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test1015565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test1015566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test1015567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1015568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test1015569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.writeBinary(byteArrayBuilder0.NO_BYTES, 2997, 0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test1025570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1025571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1025572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1025573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1025574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1025575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1025576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1025577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1025578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1025579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1025580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1025581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1025582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1025583() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1025584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1025585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1025586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1025587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1025588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test1025589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1025590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test1025591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test1025592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test1025593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1025594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1025595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1025596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1025597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1025598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1025599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1025600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1025601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1025602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1025603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1025604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1025605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1025606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1025607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1025608() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1025609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1025610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test1025611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test1025612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test1025613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test1025614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test1025615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(1, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test1025616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test1025617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test1025618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test1025619() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1025620() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test1025621() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test1025622() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1025623() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1025624() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1025625() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test1025626() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        long long0 = byteArrayInputStream0.skip(724L);
    }

    @Test(timeout = 4000)
    public void test1025627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        long long0 = byteArrayInputStream0.skip(724L);
    }

    @Test(timeout = 4000)
    public void test1025628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        long long0 = byteArrayInputStream0.skip(724L);
    }

    @Test(timeout = 4000)
    public void test1025629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        long long0 = byteArrayInputStream0.skip(724L);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test1025630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        long long0 = byteArrayInputStream0.skip(724L);
        uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 56319);
    }

    @Test(timeout = 4000)
    public void test1035631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1035632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1035633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1035634() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1035635() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1035636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1035637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1035638() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1035639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1035640() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1035641() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1035642() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1035643() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1035644() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1035645() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1035646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1035647() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1035648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test1035649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1035650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1035651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test1035652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test1035653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test1035654() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1035655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1035656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1035657() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1035658() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1035659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1035660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1035661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1035662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1035663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1035664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1035665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1035666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1035667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1035668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
    }

    @Test(timeout = 4000)
    public void test1035669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1035670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1035671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test1035672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test1035673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test1035674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test1035675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test1035676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test1035677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test1035678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test1035679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test1035680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1035681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test1035682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test1035683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1035684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1035685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1035686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test1035687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test1035688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test1035689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test1035690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test1035691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test1035692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test1035693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test1035694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test1035695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test1035696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test1035697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test1035698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test1035699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test1035700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test1035701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test1035702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1035703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test1035704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test1035705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test1035706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test1035707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertFalse(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test1035708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test1035709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test1035710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test1035711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test1035712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1035713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test1035714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test1035715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test1035716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[4];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 2, (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 2, true);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 1);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test1045717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1045718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1045719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1045720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1045721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1045722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1045723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1045724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1045725() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1045726() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1045727() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1045728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1045729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1045730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1045731() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1045732() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1045733() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1045734() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1045735() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1045736() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1045737() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test1045738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test1045739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test1045740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1045741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1045742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test1045743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1045744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1045745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1045746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1045747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1045748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1045749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1045750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1045751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1045752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1045753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1045754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1045755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test1045756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1045757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1045758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test1045759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test1045760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1045761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test1045762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test1045763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test1045764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test1045765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test1045766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test1045767() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test1045768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test1045769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test1045770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    }

    @Test(timeout = 4000)
    public void test1045771() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    }

    @Test(timeout = 4000)
    public void test1045772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    }

    @Test(timeout = 4000)
    public void test1045773() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    }

    @Test(timeout = 4000)
    public void test1045774() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    }

    @Test(timeout = 4000)
    public void test1045775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    }

    @Test(timeout = 4000)
    public void test1045776() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    }

    @Test(timeout = 4000)
    public void test1045777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    }

    @Test(timeout = 4000)
    public void test1045778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    }

    @Test(timeout = 4000)
    public void test1045779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    }

    @Test(timeout = 4000)
    public void test1045780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    }

    @Test(timeout = 4000)
    public void test1045781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    }

    @Test(timeout = 4000)
    public void test1045782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
    }

    @Test(timeout = 4000)
    public void test1045783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test1045784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1045785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1045786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test1045787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test1045788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test1045789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(1, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test1045790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test1045791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test1045792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test1045793() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test1045794() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test1045795() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test1045796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test1045797() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test1045798() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byte[] byteArray0 = new byte[11];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (byte) 16, (ObjectCodec) null, byteArrayOutputStream0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-402));
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1055799() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1055800() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1055801() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1055802() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1055803() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1055804() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1055805() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1055806() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1055807() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1055808() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
    }

    @Test(timeout = 4000)
    public void test1055809() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test1055810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test1055811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1055812() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1055813() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    }

    @Test(timeout = 4000)
    public void test1055814() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test1055815() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    }

    @Test(timeout = 4000)
    public void test1055816() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    }

    @Test(timeout = 4000)
    public void test1055817() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    }

    @Test(timeout = 4000)
    public void test1055818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    }

    @Test(timeout = 4000)
    public void test1055819() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    }

    @Test(timeout = 4000)
    public void test1055820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    }

    @Test(timeout = 4000)
    public void test1055821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    }

    @Test(timeout = 4000)
    public void test1055822() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    }

    @Test(timeout = 4000)
    public void test1055823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    }

    @Test(timeout = 4000)
    public void test1055824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    }

    @Test(timeout = 4000)
    public void test1055825() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
    }

    @Test(timeout = 4000)
    public void test1055826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test1055827() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1055828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1055829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test1055830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test1055831() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test1055832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test1055833() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test1055834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test1055835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test1055836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test1055837() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test1055838() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test1055839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test1055840() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test1055841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test1055842() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test1055843() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
    }

    @Test(timeout = 4000)
    public void test1055844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test1055845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test1055846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test1055847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1055848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1055849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test1055850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test1055851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test1055852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test1055853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test1055854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test1055855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1055856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test1055857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test1055858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test1055859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    }

    @Test(timeout = 4000)
    public void test1055860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    }

    @Test(timeout = 4000)
    public void test1055861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    }

    @Test(timeout = 4000)
    public void test1055862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    }

    @Test(timeout = 4000)
    public void test1055863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    }

    @Test(timeout = 4000)
    public void test1055864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    }

    @Test(timeout = 4000)
    public void test1055865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    }

    @Test(timeout = 4000)
    public void test1055866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    }

    @Test(timeout = 4000)
    public void test1055867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    }

    @Test(timeout = 4000)
    public void test1055868() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    }

    @Test(timeout = 4000)
    public void test1055869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    }

    @Test(timeout = 4000)
    public void test1055870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    }

    @Test(timeout = 4000)
    public void test1055871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    }

    @Test(timeout = 4000)
    public void test1055872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    }

    @Test(timeout = 4000)
    public void test1055873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
    }

    @Test(timeout = 4000)
    public void test1055874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test1055875() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test1055876() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test1055877() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1055878() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1055879() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test1055880() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test1055881() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(1, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test1055882() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test1055883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1055884() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test1055885() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test1055886() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test1055887() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test1055888() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
        byte[] byteArray0 = new byte[4];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, byteArrayInputStream0, false);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-128), (ObjectCodec) null, byteArrayOutputStream0, byteArray0, 3, false);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1306));
        uTF8JsonGenerator0.canWriteTypeId();
        assertFalse(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test1065889() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1065890() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1065891() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1065892() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1065893() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1065894() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1065895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1065896() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1065897() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1065898() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test1065899() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test1065900() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test1065901() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test1065902() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test1065903() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test1065904() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test1065905() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test1065906() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
    }

    @Test(timeout = 4000)
    public void test1065907() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1065908() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1065909() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
    }

    @Test(timeout = 4000)
    public void test1065910() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(0, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test1065911() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
    }

    @Test(timeout = 4000)
    public void test1065912() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(1, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test1065913() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test1065914() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1065915() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1065916() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1065917() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1065918() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1065919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1065920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1065921() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1065922() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1065923() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1065924() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1065925() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1065926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test1065927() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1065928() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1065929() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(1, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test1065930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test1065931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test1065932() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test1065933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test1065934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test1065935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteObjectId();
        assertTrue(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test1065936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1065937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test1065938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test1065939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test1065940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    }

    @Test(timeout = 4000)
    public void test1065941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    }

    @Test(timeout = 4000)
    public void test1065942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    }

    @Test(timeout = 4000)
    public void test1065943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    }

    @Test(timeout = 4000)
    public void test1065944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    }

    @Test(timeout = 4000)
    public void test1065945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    }

    @Test(timeout = 4000)
    public void test1065946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    }

    @Test(timeout = 4000)
    public void test1065947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    }

    @Test(timeout = 4000)
    public void test1065948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    }

    @Test(timeout = 4000)
    public void test1065949() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    }

    @Test(timeout = 4000)
    public void test1065950() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    }

    @Test(timeout = 4000)
    public void test1065951() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
    }

    @Test(timeout = 4000)
    public void test1065952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
        assertEquals(1, int0);
    }

    @Test(timeout = 4000)
    public void test1065953() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1065954() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1065955() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
        byteArrayBuilder0.getCurrentSegmentLength();
        assertEquals(1, byteArrayBuilder0.getCurrentSegmentLength());
    }

    @Test(timeout = 4000)
    public void test1065956() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test1065957() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test1065958() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test1065959() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test1065960() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test1065961() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test1065962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1065963() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test1065964() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test1065965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test1065966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "oFWE/GNu3&kS#O", false);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArrayBuilder0.NO_BYTES);
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, (-814), (ObjectCodec) null, byteArrayBuilder0);
        int int0 = uTF8JsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1385));
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test1075967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1075968() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1075969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1075970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1075971() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1075972() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1075973() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1075974() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1075975() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1075976() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1075977() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1075978() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1075979() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1075980() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1075981() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1075982() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1075983() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1075984() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1075985() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1075986() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1075987() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
    }

    @Test(timeout = 4000)
    public void test1075988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1075989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1075990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1075991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1075992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1075993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1075994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1075995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1075996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1075997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1075998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1075999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1076000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1076001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1076002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1076003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1076004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1076005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test1076006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test1076007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test1076008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test1076009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test1076010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test1076011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertFalse(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test1076012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1076013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test1076014() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test1076015() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
    }

    @Test(timeout = 4000)
    public void test1076016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        serializedString0.toString();
        assertNotNull(serializedString0.toString());
    }

    @Test(timeout = 4000)
    public void test1076017() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        serializedString0.getValue();
        assertNotNull(serializedString0.getValue());
    }

    @Test(timeout = 4000)
    public void test1076018() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        serializedString0.charLength();
        assertEquals(0, serializedString0.charLength());
    }

    @Test(timeout = 4000)
    public void test1076019() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test1076020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test1076021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test1076022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test1076023() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test1076024() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test1076025() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test1076026() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test1076027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test1076028() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test1076029() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test1076030() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test1076031() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test1076032() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test1076033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1076034() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1076035() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test1076036() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1076037() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test1076038() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test1076039() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteTypeId();
        assertTrue(uTF8JsonGenerator0.canWriteTypeId());
    }

    @Test(timeout = 4000)
    public void test1076040() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test1076041() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test1076042() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test1076043() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test1076044() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test1076045() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        serializedString0.toString();
        assertNotNull(serializedString0.toString());
    }

    @Test(timeout = 4000)
    public void test1076046() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        serializedString0.getValue();
        assertNotNull(serializedString0.getValue());
    }

    @Test(timeout = 4000)
    public void test1076047() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        serializedString0.charLength();
        assertEquals(0, serializedString0.charLength());
    }

    @Test(timeout = 4000)
    public void test1076048() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1076049() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1076050() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1076051() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1076052() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1076053() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1076054() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1076055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1076056() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1076057() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1076058() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1076059() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1076060() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1076061() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1076062() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1076063() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1076064() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test1076065() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test1076066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test1076067() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test1076068() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test1076069() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test1076070() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test1076071() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1076072() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test1076073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        SerializedString serializedString0 = new SerializedString("RS");
        uTF8JsonGenerator0.writeFieldName((SerializableString) serializedString0);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test1086074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1086075() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1086076() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1086077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1086078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1086079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1086080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1086081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1086082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test1086083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1086084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1086085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1086086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1086087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1086088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1086089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1086090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1086091() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test1086092() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1086093() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1086094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
    }

    @Test(timeout = 4000)
    public void test1086095() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1086096() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1086097() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1086098() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1086099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1086100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1086101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1086102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1086103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1086104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1086105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1086106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1086107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1086108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1086109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
    }

    @Test(timeout = 4000)
    public void test1086110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1086111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1086112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test1086113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test1086114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test1086115() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test1086116() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test1086117() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test1086118() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test1086119() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test1086120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1086121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }

    @Test(timeout = 4000)
    public void test1086122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1086123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1086124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1086125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1086126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1086127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1086128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1086129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1086130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1086131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1086132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1086133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1086134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1086135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
    }

    @Test(timeout = 4000)
    public void test1086136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        iOContext0.isResourceManaged();
        assertTrue(iOContext0.isResourceManaged());
    }

    @Test(timeout = 4000)
    public void test1086137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        iOContext0.getEncoding();
        assertNotNull(iOContext0.getEncoding());
    }

    @Test(timeout = 4000)
    public void test1086138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.canWriteBinaryNatively();
        assertTrue(uTF8JsonGenerator0.canWriteBinaryNatively());
    }

    @Test(timeout = 4000)
    public void test1086139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.canWriteFormattedNumbers();
        assertTrue(uTF8JsonGenerator0.canWriteFormattedNumbers());
    }

    @Test(timeout = 4000)
    public void test1086140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.getFormatFeatures();
        assertEquals(0, uTF8JsonGenerator0.getFormatFeatures());
    }

    @Test(timeout = 4000)
    public void test1086141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.getFeatureMask();
        assertEquals(0, uTF8JsonGenerator0.getFeatureMask());
    }

    @Test(timeout = 4000)
    public void test1086142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.canWriteObjectId();
        assertFalse(uTF8JsonGenerator0.canWriteObjectId());
    }

    @Test(timeout = 4000)
    public void test1086143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test1086144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.isClosed();
        assertTrue(uTF8JsonGenerator0.isClosed());
    }

    @Test(timeout = 4000)
    public void test1086145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.canOmitFields();
        assertTrue(uTF8JsonGenerator0.canOmitFields());
    }

    @Test(timeout = 4000)
    public void test1086146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1086147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        MockPrintStream mockPrintStream0 = new MockPrintStream("RS");
        byte[] byteArray0 = new byte[6];
        UTF8JsonGenerator uTF8JsonGenerator0 = new UTF8JsonGenerator(iOContext0, 3, (ObjectCodec) null, mockPrintStream0, byteArray0, 102, false);
        uTF8JsonGenerator0._outputSurrogates(1, 57343);
        uTF8JsonGenerator0.getHighestEscapedChar();
        assertEquals(0, uTF8JsonGenerator0.getHighestEscapedChar());
    }
}
