project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    CommandLine commandLine0 = new CommandLine();
    boolean boolean0 = commandLine0.hasOption('t');
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test011,"public void test011() throws Throwable {
    CommandLine commandLine0 = new CommandLine();
    Option[] optionArray0 = commandLine0.getOptions();
    assertEquals(0, optionArray0.length);
}",0,
project,0,test022,"public void test022() throws Throwable {
    CommandLine commandLine0 = new CommandLine();
    Iterator iterator0 = commandLine0.iterator();
    assertNotNull(iterator0);
}",0,assertNotNull(iterator0)
project,0,test033,"public void test033() throws Throwable {
    CommandLine commandLine0 = new CommandLine();
    String[] stringArray0 = commandLine0.getOptionValues('O');
    assertNull(stringArray0);
}",0,assertNotNull(stringArray0)
project,0,test044,"public void test044() throws Throwable {
    CommandLine commandLine0 = new CommandLine();
    String string0 = commandLine0.getOptionValue('\""');
    assertNull(string0);
}",0,
project,0,test055,"public void test055() throws Throwable {
    CommandLine commandLine0 = new CommandLine();
    String string0 = commandLine0.getOptionValue('p', ""NO_ARGS_ALLOWED"");
    assertEquals(""NO_ARGS_ALLOWED"", string0);
}",0,
project,0,test056,"public void test056() throws Throwable {
    CommandLine commandLine0 = new CommandLine();
    String string0 = commandLine0.getOptionValue('p', ""NO_ARGS_ALLOWED"");
    assertNotNull(string0);
}",0,
project,0,test078,"public void test078() throws Throwable {
    CommandLine commandLine0 = new CommandLine();
    Object object0 = commandLine0.getOptionObject('U');
    assertNull(object0);
}",0,
project,0,test089,"public void test089() throws Throwable {
    CommandLine commandLine0 = new CommandLine();
    String[] stringArray0 = commandLine0.getArgs();
    assertEquals(0, stringArray0.length);
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    CommandLine commandLine0 = new CommandLine();
    Option option0 = new Option(""mvZl"", true, (String) null);
    commandLine0.addOption(option0);
    boolean boolean0 = commandLine0.hasOption(""mvZl"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test1111,"public void test1111() throws Throwable {
    CommandLine commandLine0 = new CommandLine();
    Option option0 = new Option("""", true, """");
    commandLine0.addOption(option0);
    Object object0 = commandLine0.getOptionObject("""");
    assertNull(object0);
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    CommandLine commandLine0 = new CommandLine();
    Option option0 = new Option("""", true, """");
    option0.addValue(""hA:a#%yP V$HK"");
    commandLine0.addOption(option0);
    Object object0 = commandLine0.getOptionObject("""");
    assertNull(object0);
}",0,assertNotNull(object0)
project,0,test1313,"public void test1313() throws Throwable {
    CommandLine commandLine0 = new CommandLine();
    Option option0 = new Option("""", true, """");
    option0.setLongOpt("""");
    commandLine0.addOption(option0);
    String string0 = commandLine0.getOptionValue("""", ""Strings must not be null"");
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test1314,"public void test1314() throws Throwable {
    CommandLine commandLine0 = new CommandLine();
    Option option0 = new Option("""", true, """");
    option0.setLongOpt("""");
    commandLine0.addOption(option0);
    String string0 = commandLine0.getOptionValue("""", ""Strings must not be null"");
    assertEquals(""Strings must not be null"", string0);
}",0,assertNotNull(string0)
project,0,test1415,"public void test1415() throws Throwable {
    CommandLine commandLine0 = new CommandLine();
    Option option0 = new Option("""", true, """");
    option0.addValue(""hA:a#%yP V$HK"");
    commandLine0.addOption(option0);
    String string0 = commandLine0.getOptionValue("""", ""Strings must not be null"");
    assertEquals(""hA:a#%yP V$HK"", string0);
}",0,assertNotNull(string0)
project,0,test1516,"public void test1516() throws Throwable {
    CommandLine commandLine0 = new CommandLine();
    Option option0 = new Option((String) null, false, """");
    commandLine0.addOption(option0);
    assertEquals((-2), Option.UNLIMITED_VALUES);
}",0,
