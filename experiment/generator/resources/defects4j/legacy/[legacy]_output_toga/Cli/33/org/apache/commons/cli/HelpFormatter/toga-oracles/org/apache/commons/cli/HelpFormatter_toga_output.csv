project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(74, int0);
}",0,
project,0,test001,"public void test001() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test002,"public void test002() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test003,"public void test003() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test004,"public void test004() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test005,"public void test005() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test006,"public void test006() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test007,"public void test007() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getWidth();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test018,"public void test018() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setLongOptPrefix(""--"");
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test019,"public void test019() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setLongOptPrefix(""--"");
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test0110,"public void test0110() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setLongOptPrefix(""--"");
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test0111,"public void test0111() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setLongOptPrefix(""--"");
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test0112,"public void test0112() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setLongOptPrefix(""--"");
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test0113,"public void test0113() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setLongOptPrefix(""--"");
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test0114,"public void test0114() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setLongOptPrefix(""--"");
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test0115,"public void test0115() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setLongOptPrefix(""--"");
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test0216,"public void test0216() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test0217,"public void test0217() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(3, int0);
}",0,"assertEquals(0, int0)"
project,0,test0218,"public void test0218() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,
project,0,test0219,"public void test0219() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test0220,"public void test0220() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test0221,"public void test0221() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test0222,"public void test0222() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test0223,"public void test0223() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getDescPadding();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test0324,"public void test0324() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setLongOptSeparator(""arg"");
    assertEquals(""arg"", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test0425,"public void test0425() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setNewLine(""-"");
    assertEquals(""-"", helpFormatter0.getNewLine());
}",0,
project,0,test0526,"public void test0526() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setLeftPadding(3);
    assertEquals(3, helpFormatter0.defaultLeftPad);
}",0,
project,0,test0627,"public void test0627() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setArgName(""-"");
    assertEquals(""-"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test0728,"public void test0728() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setSyntaxPrefix("" "");
    assertEquals("" "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test0829,"public void test0829() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.printHelp(""--"", options0);
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test0830,"public void test0830() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.printHelp(""--"", options0);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test0931,"public void test0931() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptSeparator();
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test0932,"public void test0932() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptSeparator();
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test0933,"public void test0933() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptSeparator();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test0934,"public void test0934() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptSeparator();
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test0935,"public void test0935() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptSeparator();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test0936,"public void test0936() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptSeparator();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test0937,"public void test0937() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptSeparator();
    assertEquals("" "", string0);
}",0,
project,0,test0938,"public void test0938() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptSeparator();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test1039,"public void test1039() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setWidth(1);
    assertEquals(1, helpFormatter0.defaultWidth);
}",0,
project,0,test1140,"public void test1140() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptPrefix(""-"");
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test1141,"public void test1141() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptPrefix(""-"");
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test1142,"public void test1142() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptPrefix(""-"");
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test1143,"public void test1143() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptPrefix(""-"");
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test1144,"public void test1144() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptPrefix(""-"");
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test1145,"public void test1145() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptPrefix(""-"");
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test1146,"public void test1146() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptPrefix(""-"");
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test1147,"public void test1147() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptPrefix(""-"");
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test1248,"public void test1248() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test1249,"public void test1249() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(1, int0);
}",0,
project,0,test1250,"public void test1250() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test1251,"public void test1251() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test1252,"public void test1252() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test1253,"public void test1253() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test1254,"public void test1254() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test1255,"public void test1255() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    int int0 = helpFormatter0.getLeftPadding();
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test1356,"public void test1356() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""usage: "");
    helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 2577, ""--"", ""arg"", options0, 2577, 2577, ""\n"");
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test1357,"public void test1357() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""usage: "");
    helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 2577, ""--"", ""arg"", options0, 2577, 2577, ""\n"");
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test1459,"public void test1459() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setDescPadding(1);
    assertEquals(1, helpFormatter0.defaultDescPad);
}",0,
project,0,test1560,"public void test1560() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.printHelp(""arg"", ""arg"", options0, ""arg"");
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test1661,"public void test1661() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test1662,"public void test1662() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test1663,"public void test1663() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test1664,"public void test1664() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test1665,"public void test1665() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""\n"", string0);
}",0,
project,0,test1666,"public void test1666() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test1667,"public void test1667() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test1668,"public void test1668() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test1669,"public void test1669() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getNewLine();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test1770,"public void test1770() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.printHelp(""--"", options0, true);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test1771,"public void test1771() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.printHelp(""--"", options0, true);
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test1872,"public void test1872() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(""--"", string0);
}",0,assertNotNull(string0)
project,0,test1873,"public void test1873() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test1874,"public void test1874() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test1875,"public void test1875() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test1876,"public void test1876() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test1877,"public void test1877() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test1878,"public void test1878() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test1879,"public void test1879() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getLongOptPrefix();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test1980,"public void test1980() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,
project,0,test1981,"public void test1981() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,
project,0,test1982,"public void test1982() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test1983,"public void test1983() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,
project,0,test1984,"public void test1984() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test1985,"public void test1985() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test1986,"public void test1986() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(""usage: "", string0);
}",0,
project,0,test1987,"public void test1987() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getSyntaxPrefix();
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test2088,"public void test2088() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test2089,"public void test2089() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test2090,"public void test2090() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test2091,"public void test2091() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(""-"", string0);
}",0,
project,0,test2092,"public void test2092() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,
project,0,test2093,"public void test2093() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test2094,"public void test2094() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test2095,"public void test2095() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.getOptPrefix();
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
project,0,test2196,"public void test2196() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    options0.addOption(""iR1uAxi"", "" "", true, ""--"");
    Options options1 = options0.addOption(""R"", true, ""-"");
    // Undeclared exception!
    try {
        helpFormatter0.renderOptions((StringBuffer) null, 1, options1, 3, 3);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test2297,"public void test2297() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test2298,"public void test2298() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test2299,"public void test2299() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test22100,"public void test22100() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test22101,"public void test22101() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test22102,"public void test22102() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test22103,"public void test22103() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test22104,"public void test22104() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
    helpFormatter0.setOptionComparator(comparator0);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test23105,"public void test23105() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test23106,"public void test23106() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test23107,"public void test23107() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test23108,"public void test23108() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test23109,"public void test23109() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test23110,"public void test23110() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test23111,"public void test23111() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test23112,"public void test23112() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    helpFormatter0.setOptionComparator((Comparator) null);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test24113,"public void test24113() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    // Undeclared exception!
    try {
        helpFormatter0.printHelp(1, (String) null, (String) null, options0, (String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cmdLineSyntax not provided
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test25114,"public void test25114() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    // Undeclared exception!
    try {
        helpFormatter0.printHelp(1, """", """", options0, """");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // cmdLineSyntax not provided
        //
        verifyException(""org.apache.commons.cli.HelpFormatter"", e);
    }
}",0,
project,0,test26115,"public void test26115() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    helpFormatter0.printHelp(24, ""[ option:  arg  [ARG] :: \n ]"", """", options0, "" "");
    assertEquals(3, HelpFormatter.DEFAULT_DESC_PAD);
}",0,
project,0,test28116,"public void test28116() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    OptionGroup optionGroup0 = new OptionGroup();
    Option option0 = new Option(""arg"", ""--"", true, ""arg"");
    OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    Option option1 = new Option((String) null, "" "", true, """");
    optionGroup1.addOption(option1);
    Options options1 = options0.addOptionGroup(optionGroup1);
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""arg"");
    helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 6575, ""--"", options1);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test29117,"public void test29117() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option(""arg"", ""arg"", true, ""\n"");
    OptionGroup optionGroup0 = new OptionGroup();
    OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    optionGroup0.setRequired(true);
    Options options1 = options0.addOptionGroup(optionGroup1);
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""arg"");
    helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, ""line.separator"", options1);
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test29118,"public void test29118() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option(""arg"", ""arg"", true, ""\n"");
    OptionGroup optionGroup0 = new OptionGroup();
    OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    optionGroup0.setRequired(true);
    Options options1 = options0.addOptionGroup(optionGroup1);
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""arg"");
    helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, ""line.separator"", options1);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test30119,"public void test30119() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option(""arg"", ""arg"", false, ""\n"");
    OptionGroup optionGroup0 = new OptionGroup();
    OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    Options options1 = options0.addOptionGroup(optionGroup1);
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""\n"");
    helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, ""--"", options1);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test30120,"public void test30120() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option(""arg"", ""arg"", false, ""\n"");
    OptionGroup optionGroup0 = new OptionGroup();
    OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    Options options1 = options0.addOptionGroup(optionGroup1);
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""\n"");
    helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, ""--"", options1);
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test30121,"public void test30121() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option(""arg"", ""arg"", false, ""\n"");
    OptionGroup optionGroup0 = new OptionGroup();
    OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    Options options1 = options0.addOptionGroup(optionGroup1);
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""\n"");
    helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, ""--"", options1);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test30122,"public void test30122() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option(""arg"", ""arg"", false, ""\n"");
    OptionGroup optionGroup0 = new OptionGroup();
    OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    Options options1 = options0.addOptionGroup(optionGroup1);
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""\n"");
    helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, ""--"", options1);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test32123,"public void test32123() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option(""arg"", ""arg"", true, ""\n"");
    option0.setArgName("" "");
    OptionGroup optionGroup0 = new OptionGroup();
    OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    Options options1 = options0.addOptionGroup(optionGroup1);
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""arg"");
    helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, ""line.separator"", options1);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test32124,"public void test32124() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option(""arg"", ""arg"", true, ""\n"");
    option0.setArgName("" "");
    OptionGroup optionGroup0 = new OptionGroup();
    OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    Options options1 = options0.addOptionGroup(optionGroup1);
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""arg"");
    helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, ""line.separator"", options1);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test32125,"public void test32125() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option(""arg"", ""arg"", true, ""\n"");
    option0.setArgName("" "");
    OptionGroup optionGroup0 = new OptionGroup();
    OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    Options options1 = options0.addOptionGroup(optionGroup1);
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""arg"");
    helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, ""line.separator"", options1);
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test32126,"public void test32126() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option(""arg"", ""arg"", true, ""\n"");
    option0.setArgName("" "");
    OptionGroup optionGroup0 = new OptionGroup();
    OptionGroup optionGroup1 = optionGroup0.addOption(option0);
    Options options1 = options0.addOptionGroup(optionGroup1);
    MockPrintWriter mockPrintWriter0 = new MockPrintWriter(""arg"");
    helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, ""line.separator"", options1);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test33128,"public void test33128() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    options0.addOption((String) null, ""arg"", true, ""arg"");
    helpFormatter0.printHelp(3, ""arg"", ""arg"", options0, ""arg"");
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test33129,"public void test33129() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    options0.addOption((String) null, ""arg"", true, ""arg"");
    helpFormatter0.printHelp(3, ""arg"", ""arg"", options0, ""arg"");
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test34130,"public void test34130() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option("""", ""arg"", true, ""\n"");
    option0.setArgName("" "");
    Options options1 = options0.addOption(option0);
    helpFormatter0.printHelp(74, ""[ option:  arg  [ARG] :: \n ]"", ""[ option:  arg  [ARG] :: \n ]"", options1, ""[ option:  arg  [ARG] :: \n ]"");
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test34131,"public void test34131() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option("""", ""arg"", true, ""\n"");
    option0.setArgName("" "");
    Options options1 = options0.addOption(option0);
    helpFormatter0.printHelp(74, ""[ option:  arg  [ARG] :: \n ]"", ""[ option:  arg  [ARG] :: \n ]"", options1, ""[ option:  arg  [ARG] :: \n ]"");
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test35132,"public void test35132() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option("""", ""usage: "", true, ""--"");
    option0.setArgName("""");
    Options options1 = options0.addOption(option0);
    helpFormatter0.printHelp(393, ""--"", """", options1, """");
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,assertNotNull(helpFormatter0.getArgName())
project,0,test35133,"public void test35133() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option("""", ""usage: "", true, ""--"");
    option0.setArgName("""");
    Options options1 = options0.addOption(option0);
    helpFormatter0.printHelp(393, ""--"", """", options1, """");
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test35134,"public void test35134() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    Option option0 = new Option("""", ""usage: "", true, ""--"");
    option0.setArgName("""");
    Options options1 = options0.addOption(option0);
    helpFormatter0.printHelp(393, ""--"", """", options1, """");
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test37136,"public void test37136() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    options0.addOption(""arg"", false, (String) null);
    helpFormatter0.printHelp(3, ""arg"", "" "", options0, ""--"");
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test38137,"public void test38137() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    Options options0 = new Options();
    options0.addOption(""arg"", false, ""--"");
    options0.addOption("""", false, ""-"");
    helpFormatter0.printHelp(3, ""arg"", ""L!2}Y/?r-pkLY"", options0, ""--"");
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test40138,"public void test40138() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""--"", helpFormatter0.getLongOptPrefix());
}",0,assertNotNull(helpFormatter0.getLongOptPrefix())
project,0,test40139,"public void test40139() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(74, helpFormatter0.defaultWidth);
}",0,
project,0,test40140,"public void test40140() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals("" "", helpFormatter0.getLongOptSeparator());
}",0,assertNotNull(helpFormatter0.getLongOptSeparator())
project,0,test40141,"public void test40141() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""usage: "", helpFormatter0.getSyntaxPrefix());
}",0,assertNotNull(helpFormatter0.getSyntaxPrefix())
project,0,test40142,"public void test40142() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""-"", helpFormatter0.getOptPrefix());
}",0,assertNotNull(helpFormatter0.getOptPrefix())
project,0,test40143,"public void test40143() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertNull(string0);
}",0,
project,0,test40144,"public void test40144() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(1, helpFormatter0.defaultLeftPad);
}",0,
project,0,test40145,"public void test40145() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(3, helpFormatter0.defaultDescPad);
}",0,
project,0,test40146,"public void test40146() throws Throwable {
    HelpFormatter helpFormatter0 = new HelpFormatter();
    String string0 = helpFormatter0.rtrim((String) null);
    assertEquals(""arg"", helpFormatter0.getArgName());
}",0,
