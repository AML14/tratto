/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 20:37:04 GMT 2023
 */
package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class Node_ESTest extends Node_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test030() throws Throwable {
        Document document0 = new Document("m9e");
        Document document1 = document0.normalise();
        document0.setParentNode(document1);
        document0.removeChild(document0);
        document0.nodeName();
        assertNotNull(document0.nodeName());
    }

    @Test(timeout = 4000)
    public void test041() throws Throwable {
        Document document0 = new Document("");
        StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
        document0.outerHtml(stringBuilder0);
        document0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test052() throws Throwable {
        DataNode dataNode0 = new DataNode("Xfr", ",\u0000Twq9");
        Node[] nodeArray0 = new Node[4];
        nodeArray0[0] = (Node) dataNode0;
        nodeArray0[1] = (Node) dataNode0;
        nodeArray0[2] = (Node) dataNode0;
        nodeArray0[3] = (Node) dataNode0;
        dataNode0.addChildren(0, nodeArray0);
        dataNode0.baseUri();
    }

    @Test(timeout = 4000)
    public void test063() throws Throwable {
        Document document0 = new Document("");
        document0.setSiblingIndex(31);
        document0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test074() throws Throwable {
        Document document0 = Document.createShell("\u0007");
        Element element0 = document0.empty();
        String string0 = element0.toString();
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test085() throws Throwable {
        TextNode textNode0 = TextNode.createFromEncoded("n", "Ropf");
        Node node0 = textNode0.removeAttr("8N");
    }

    @Test(timeout = 4000)
    public void test096() throws Throwable {
        TextNode textNode0 = new TextNode("", "");
        String string0 = textNode0.outerHtml();
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test107() throws Throwable {
        Document document0 = new Document("93nFD{n");
        String string0 = document0.nodeName();
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test118() throws Throwable {
        XmlDeclaration xmlDeclaration0 = new XmlDeclaration("`?d^=c@jraB?~;tI", "#text", true);
        Node node0 = xmlDeclaration0.doClone(xmlDeclaration0);
    }

    @Test(timeout = 4000)
    public void test119() throws Throwable {
        XmlDeclaration xmlDeclaration0 = new XmlDeclaration("`?d^=c@jraB?~;tI", "#text", true);
        Node node0 = xmlDeclaration0.doClone(xmlDeclaration0);
        node0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test1210() throws Throwable {
        Document document0 = Document.createShell("");
        Node[] nodeArray0 = document0.childNodesAsArray();
    }

    @Test(timeout = 4000)
    public void test1311() throws Throwable {
        XmlDeclaration xmlDeclaration0 = new XmlDeclaration("", "", false);
        Node[] nodeArray0 = xmlDeclaration0.childNodesAsArray();
    }

    @Test(timeout = 4000)
    public void test1412() throws Throwable {
        Document document0 = new Document("}n(Ukq@WGXV$h5ie");
        Comment comment0 = new Comment(";&W!X{SVUl>Kh,s=rC(", ";&W!X{SVUl>Kh,s=rC(");
        comment0.replaceChild((Node) null, document0);
    }

    @Test(timeout = 4000)
    public void test1513() throws Throwable {
        Document document0 = Document.createShell("3mZ");
        document0.appendChild(document0);
        document0.replaceChild(document0, document0);
    }

    @Test(timeout = 4000)
    public void test1614() throws Throwable {
        DataNode dataNode0 = DataNode.createFromEncoded("M6\"5q`Y", "WPd2<)?~t`{2\"");
        dataNode0.removeChild((Node) null);
    }

    @Test(timeout = 4000)
    public void test1715() throws Throwable {
        Document document0 = Document.createShell("abs:trie");
        document0.previousSibling();
    }

    @Test(timeout = 4000)
    public void test1816() throws Throwable {
        Document document0 = Document.createShell("(.s>>e");
        document0.indent((StringBuilder) null, 0, (Document.OutputSettings) null);
    }

    @Test(timeout = 4000)
    public void test1917() throws Throwable {
        Document document0 = Document.createShell("vf?Qd*`9`KeVb_@7");
        StringBuilder stringBuilder0 = new StringBuilder();
        Document.OutputSettings document_OutputSettings0 = document0.new OutputSettings();
        document0.indent(stringBuilder0, (-2322), document_OutputSettings0);
    }

    @Test(timeout = 4000)
    public void test2018() throws Throwable {
        Document document0 = new Document("abs:");
        document0.childNode((-138728127));
    }

    @Test(timeout = 4000)
    public void test2119() throws Throwable {
        XmlDeclaration xmlDeclaration0 = new XmlDeclaration("`?d^=c@jraB?~;tI", "#text", true);
        xmlDeclaration0.attr("", "#text");
    }

    @Test(timeout = 4000)
    public void test2220() throws Throwable {
        Document document0 = new Document("planck");
        document0.attr((String) null);
    }

    @Test(timeout = 4000)
    public void test2321() throws Throwable {
        TextNode textNode0 = TextNode.createFromEncoded("", "\n");
        Node[] nodeArray0 = new Node[5];
        nodeArray0[0] = (Node) textNode0;
        textNode0.addChildren(nodeArray0);
    }

    @Test(timeout = 4000)
    public void test2422() throws Throwable {
        Document document0 = new Document("4>3");
        Node[] nodeArray0 = new Node[2];
        document0.addChildren(nodeArray0);
    }

    @Test(timeout = 4000)
    public void test2523() throws Throwable {
        Document document0 = Document.createShell("fszc/xF-2");
        TextNode textNode0 = TextNode.createFromEncoded("#comment", "fszc/xF-2");
        Node[] nodeArray0 = new Node[4];
        nodeArray0[0] = (Node) textNode0;
        nodeArray0[1] = (Node) document0;
        nodeArray0[2] = (Node) document0;
        nodeArray0[3] = (Node) textNode0;
        textNode0.addChildren(0, nodeArray0);
    }

    @Test(timeout = 4000)
    public void test2624() throws Throwable {
        Document document0 = new Document("abs:{y7)^b@^jfpkq]$ g");
        Node[] nodeArray0 = new Node[9];
        nodeArray0[0] = (Node) document0;
        nodeArray0[1] = (Node) document0;
        nodeArray0[2] = (Node) document0;
        nodeArray0[3] = (Node) document0;
        nodeArray0[4] = (Node) document0;
        TextNode textNode0 = new TextNode("Colon", " km");
        nodeArray0[5] = (Node) textNode0;
        nodeArray0[6] = (Node) document0;
        nodeArray0[7] = (Node) document0;
        nodeArray0[8] = (Node) document0;
        document0.addChildren((-2217), nodeArray0);
    }

    @Test(timeout = 4000)
    public void test2725() throws Throwable {
        Document document0 = new Document("abs:");
        Node[] nodeArray0 = new Node[4];
        document0.addChildren((-264984309), nodeArray0);
    }

    @Test(timeout = 4000)
    public void test2826() throws Throwable {
        Document document0 = new Document("{y7)^B@^JfPkQ]$ g");
        document0.absUrl("");
    }

    @Test(timeout = 4000)
    public void test2927() throws Throwable {
        Document document0 = Document.createShell("");
        Document document1 = document0.clone();
        document1.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test2928() throws Throwable {
        Document document0 = Document.createShell("");
        Document document1 = document0.clone();
    }

    @Test(timeout = 4000)
    public void test3129() throws Throwable {
        Comment comment0 = new Comment("", "e\"9(GQMW*:PsQsP|6");
        boolean boolean0 = comment0.equals("e\"9(GQMW*:PsQsP|6");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test3230() throws Throwable {
        Document document0 = new Document("{~ HodE");
        XmlDeclaration xmlDeclaration0 = new XmlDeclaration("", "", false);
        Element element0 = document0.appendChild(xmlDeclaration0);
        Element element1 = element0.prependElement("xhArr");
        element1.parentNode.parentNode = (Node) element0;
        element1.parentNode.parentNode.nextSibling();
        xmlDeclaration0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test3331() throws Throwable {
        Document document0 = Document.createShell(",#$0(65,'V',^MFM\"");
        Node node0 = document0.nextSibling();
    }

    @Test(timeout = 4000)
    public void test3432() throws Throwable {
        Document document0 = Document.createShell("#com");
        Element element0 = document0.appendElement("#com");
        Node node0 = element0.nextSibling();
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test3433() throws Throwable {
        Document document0 = Document.createShell("#com");
        Element element0 = document0.appendElement("#com");
        Node node0 = element0.nextSibling();
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test3534() throws Throwable {
        TextNode textNode0 = new TextNode("=\"", "=\"");
        Document document0 = textNode0.ownerDocument();
    }

    @Test(timeout = 4000)
    public void test3635() throws Throwable {
        Document document0 = Document.createShell("");
        Element element0 = document0.appendElement("Ufr");
        element0.ownerDocument();
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test3736() throws Throwable {
        Document document0 = Document.createShell("abs:q`");
        Document document1 = document0.ownerDocument();
        document1.baseUri();
        assertNotNull(document1.baseUri());
    }

    @Test(timeout = 4000)
    public void test3837() throws Throwable {
        Comment comment0 = new Comment("F,9VdJTEq#", "Dj<7o=#");
        String string0 = comment0.absUrl("Dj<7o=#");
    }

    @Test(timeout = 4000)
    public void test3938() throws Throwable {
        Document document0 = Document.createShell("abs:q`");
        String string0 = document0.attr("@u");
    }

    @Test(timeout = 4000)
    public void test4039() throws Throwable {
        Comment comment0 = new Comment("F,9VdJTEq#", "Dj<7o=#");
        List<Node> list0 = comment0.childNodes();
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test4140() throws Throwable {
        Document document0 = new Document("abs:q`");
        Integer integer0 = document0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test4241() throws Throwable {
        TextNode textNode0 = TextNode.createFromEncoded("t<*hB:-f3ha", "F,9VdJTEq#");
        String string0 = textNode0.outerHtml();
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test4342() throws Throwable {
        Comment comment0 = new Comment("", "e\"9(GQMW*:PsQsP|6");
        comment0.outerHtml((StringBuilder) null);
    }

    @Test(timeout = 4000)
    public void test4443() throws Throwable {
        TextNode textNode0 = TextNode.createFromEncoded("swnwar", "swnwar");
        Node node0 = textNode0.clone();
        node0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test4444() throws Throwable {
        TextNode textNode0 = TextNode.createFromEncoded("swnwar", "swnwar");
        Node node0 = textNode0.clone();
    }

    @Test(timeout = 4000)
    public void test4545() throws Throwable {
        Document document0 = Document.createShell("");
        document0.removeAttr("");
    }

    @Test(timeout = 4000)
    public void test4646() throws Throwable {
        DataNode dataNode0 = new DataNode("mgg;c", "e");
        String string0 = dataNode0.baseUri();
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test4747() throws Throwable {
        XmlDeclaration xmlDeclaration0 = new XmlDeclaration("aB:", "aB:", true);
        Node node0 = xmlDeclaration0.parent();
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test4848() throws Throwable {
        Document document0 = Document.createShell("abs:");
        document0.childNode(228);
    }

    @Test(timeout = 4000)
    public void test4949() throws Throwable {
        Document document0 = new Document("sA9Xq:+rC}_al#b@D)");
        Attributes attributes0 = document0.attributes();
        assertNotNull(attributes0);
    }

    @Test(timeout = 4000)
    public void test5050() throws Throwable {
        XmlDeclaration xmlDeclaration0 = new XmlDeclaration("`?d^=c@jraB?~;tI", "#text", true);
        Node node0 = xmlDeclaration0.attr("#text", "#text");
        node0.nodeName();
        assertNotNull(node0.nodeName());
    }

    @Test(timeout = 4000)
    public void test5151() throws Throwable {
        XmlDeclaration xmlDeclaration0 = new XmlDeclaration("", "", false);
        boolean boolean0 = xmlDeclaration0.hasAttr("kr8s2");
    }

    @Test(timeout = 4000)
    public void test5252() throws Throwable {
        Document document0 = new Document("abs:");
        document0.html("abs:");
        String string0 = document0.toString();
    }

    @Test(timeout = 4000)
    public void test5553() throws Throwable {
        Document document0 = new Document("{~ HodE");
        XmlDeclaration xmlDeclaration0 = new XmlDeclaration("", "", false);
        document0.appendChild(xmlDeclaration0);
        Node node0 = xmlDeclaration0.previousSibling();
        assertNotNull(node0);
    }

    @Test(timeout = 4000)
    public void test5654() throws Throwable {
        Document document0 = new Document("m9e");
        document0.removeChild(document0);
    }

    @Test(timeout = 4000)
    public void test5755() throws Throwable {
        Document document0 = new Document("{~ HodE");
        Element element0 = document0.prependElement("xhArr");
        element0.parentNode.parentNode = (Node) document0;
        element0.replaceWith(document0);
    }

    @Test(timeout = 4000)
    public void test5856() throws Throwable {
        Document document0 = new Document("{~ HodE");
        Element element0 = document0.prependElement("xhArr");
        element0.replaceWith(document0);
        document0.isBlock();
        assertTrue(document0.isBlock());
    }

    @Test(timeout = 4000)
    public void test5957() throws Throwable {
        Document document0 = new Document("\u0007");
        document0.replaceChild(document0, document0);
    }

    @Test(timeout = 4000)
    public void test6058() throws Throwable {
        Document document0 = Document.createShell("org.jsoup.nodes.Node$OuterHtmlVisitor");
        Element element0 = document0.appendElement("org.jsoup.nodes.Node$OuterHtmlVisitor");
        element0.setParentNode(document0);
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test6159() throws Throwable {
        Document document0 = new Document("abs:");
        String string0 = document0.attr("abs:trie");
    }

    @Test(timeout = 4000)
    public void test6260() throws Throwable {
        Document document0 = new Document("m9e");
        Element element0 = document0.attr("m9e", "m9e");
        Elements elements0 = element0.getElementsByAttributeValueContaining("m9e", "m9e");
        elements0.size();
        assertEquals(1, elements0.size());
    }

    @Test(timeout = 4000)
    public void test6361() throws Throwable {
        XmlDeclaration xmlDeclaration0 = new XmlDeclaration("aB:", "aB:", true);
        xmlDeclaration0.remove();
    }

    @Test(timeout = 4000)
    public void test6462() throws Throwable {
        DataNode dataNode0 = new DataNode("@LNr`+O6Q$", "@LNr`+O6Q$");
        dataNode0.siblingNodes();
    }

    @Test(timeout = 4000)
    public void test6563() throws Throwable {
        Document document0 = Document.createShell("&26/x&<_x`RJmtmiH");
        document0.replaceWith(document0);
    }

    @Test(timeout = 4000)
    public void test6664() throws Throwable {
        XmlDeclaration xmlDeclaration0 = new XmlDeclaration("A#)Clg8&#", "", false);
        xmlDeclaration0.setBaseUri("");
        xmlDeclaration0.baseUri();
        assertNotNull(xmlDeclaration0.baseUri());
    }
}
