project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test140,"public void test140() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    tokenQueue0.consumeElementSelector();
    tokenQueue0.consumeAttributeKey();
    assertEquals(""["", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test151,"public void test151() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    tokenQueue0.consumeTagName();
    tokenQueue0.consume();
    char char0 = tokenQueue0.consume();
    assertEquals('>', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test152,"public void test152() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    tokenQueue0.consumeTagName();
    tokenQueue0.consume();
    char char0 = tokenQueue0.consume();
    assertEquals('1', char0);
}",0,assertNotNull(char0)
project,0,test163,"public void test163() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.chompToIgnoreCase(""ZPENtVIS-1O4V"");
    assertEquals('#', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test174,"public void test174() throws Throwable {
    // Undeclared exception!
    try {
        TokenQueue.unescape((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test185,"public void test185() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    // Undeclared exception!
    try {
        tokenQueue0.matchesCS((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
    }
}",0,
project,0,test196,"public void test196() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""zV}gOohc<nl"");
    // Undeclared exception!
    try {
        tokenQueue0.matchesAny((char[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test207,"public void test207() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue did not match expected sequence"");
    // Undeclared exception!
    try {
        tokenQueue0.matches((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test218,"public void test218() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    // Undeclared exception!
    try {
        tokenQueue0.matchChomp((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test229,"public void test229() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    // Undeclared exception!
    try {
        tokenQueue0.consumeToIgnoreCase("""");
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test2310,"public void test2310() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""1^=$YvJ?!Czi]S{%s"");
    // Undeclared exception!
    try {
        tokenQueue0.consumeToIgnoreCase((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test2411,"public void test2411() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""WPI"");
    // Undeclared exception!
    try {
        tokenQueue0.consumeToAny((String[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test2512,"public void test2512() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    // Undeclared exception!
    try {
        tokenQueue0.consumeTo((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test2613,"public void test2613() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7LS<jn2]+9v"");
    // Undeclared exception!
    try {
        tokenQueue0.consume((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test2714,"public void test2714() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    // Undeclared exception!
    try {
        tokenQueue0.consume();
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",1,
project,0,test2815,"public void test2815() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    // Undeclared exception!
    try {
        tokenQueue0.chompToIgnoreCase("""");
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test2916,"public void test2916() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""foma::+6g|fqwm}a"");
    // Undeclared exception!
    try {
        tokenQueue0.chompToIgnoreCase((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test3017,"public void test3017() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    // Undeclared exception!
    try {
        tokenQueue0.chompTo((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test3118,"public void test3118() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    // Undeclared exception!
    try {
        tokenQueue0.addFirst((Character) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test3219,"public void test3219() throws Throwable {
    TokenQueue tokenQueue0 = null;
    try {
        tokenQueue0 = new TokenQueue((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test3320,"public void test3320() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""_U\u0006"");
    tokenQueue0.chompBalanced('_', 'c');
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test3421,"public void test3421() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""\""xiJ&`M[0Y_* x"");
    tokenQueue0.consumeToIgnoreCase(""*`l@X17Z["");
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test3522,"public void test3522() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$t/2XW"");
    tokenQueue0.consumeToIgnoreCase(""$t/2XW"");
    assertEquals('$', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test3623,"public void test3623() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    tokenQueue0.consumeWord();
    tokenQueue0.consumeTo(""PsQsP"");
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test3724,"public void test3724() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    tokenQueue0.consumeTo("""");
    assertEquals(""8rVVhr["", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test3825,"public void test3825() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    boolean boolean0 = tokenQueue0.matchesWord();
    assertEquals(""#f"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test3826,"public void test3826() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    boolean boolean0 = tokenQueue0.matchesWord();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3927,"public void test3927() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue did not match expected sequence"");
    tokenQueue0.chompToIgnoreCase(""(@#fgg0X"");
    boolean boolean0 = tokenQueue0.matchesWord();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test3928,"public void test3928() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue did not match expected sequence"");
    tokenQueue0.chompToIgnoreCase(""(@#fgg0X"");
    boolean boolean0 = tokenQueue0.matchesWord();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4029,"public void test4029() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    boolean boolean0 = tokenQueue0.matchesWord();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4130,"public void test4130() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue did not match expected sequence"");
    tokenQueue0.consumeWord();
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertEquals("" did not match expected sequence"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test4131,"public void test4131() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue did not match expected sequence"");
    tokenQueue0.consumeWord();
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4232,"public void test4232() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4233,"public void test4233() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test4334,"public void test4334() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    Character character0 = Character.valueOf('u');
    tokenQueue0.addFirst(character0);
    boolean boolean0 = tokenQueue0.matchChomp(""PsQsP"");
    assertEquals('u', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test4335,"public void test4335() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    Character character0 = Character.valueOf('u');
    tokenQueue0.addFirst(character0);
    boolean boolean0 = tokenQueue0.matchChomp(""PsQsP"");
    assertFalse(boolean0);
}",0,
project,0,test4436,"public void test4436() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    boolean boolean0 = tokenQueue0.matchChomp("""");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test4437,"public void test4437() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    boolean boolean0 = tokenQueue0.matchChomp("""");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4538,"public void test4538() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    char[] charArray0 = new char[6];
    charArray0[0] = '!';
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertEquals(""!"", tokenQueue0.toString());
}",0,
project,0,test4539,"public void test4539() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    char[] charArray0 = new char[6];
    charArray0[0] = '!';
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4640,"public void test4640() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    char[] charArray0 = new char[6];
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertEquals(""!"", tokenQueue0.toString());
}",0,
project,0,test4641,"public void test4641() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    char[] charArray0 = new char[6];
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4742,"public void test4742() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    String[] stringArray0 = new String[8];
    stringArray0[0] = """";
    boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4843,"public void test4843() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""MKf2*BS>:okK]H<"");
    String[] stringArray0 = new String[1];
    stringArray0[0] = ""y9?Q{4"";
    boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4944,"public void test4944() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    String[] stringArray0 = new String[8];
    // Undeclared exception!
    try {
        tokenQueue0.matchesAny(stringArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test5045,"public void test5045() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s@zD6]"");
    Character character0 = new Character('L');
    tokenQueue0.addFirst(character0);
    tokenQueue0.chompBalanced('L', 'L');
    boolean boolean0 = tokenQueue0.isEmpty();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test5046,"public void test5046() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s@zD6]"");
    Character character0 = new Character('L');
    tokenQueue0.addFirst(character0);
    tokenQueue0.chompBalanced('L', 'L');
    boolean boolean0 = tokenQueue0.isEmpty();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test5147,"public void test5147() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    boolean boolean0 = tokenQueue0.isEmpty();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5248,"public void test5248() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s@zD6]"");
    String string0 = tokenQueue0.remainder();
    assertEquals(""s@zD6]"", string0);
}",0,assertNotNull(string0)
project,0,test5349,"public void test5349() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s@zD6]"");
    boolean boolean0 = tokenQueue0.matches(""s@zD6]"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test5450,"public void test5450() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.chompBalanced('/', '/');
    tokenQueue0.consumeAttributeKey();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test5551,"public void test5551() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""0Z-T~R7~7 izo"");
    tokenQueue0.consumeCssIdentifier();
    assertEquals('~', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test5652,"public void test5652() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue did not match expected sequence"");
    tokenQueue0.consume();
    tokenQueue0.consumeToIgnoreCase(""Queue did not match expected sequence"");
    tokenQueue0.consumeCssIdentifier();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test5753,"public void test5753() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    tokenQueue0.consumeElementSelector();
    assertEquals('$', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test5854,"public void test5854() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.chompBalanced('/', '/');
    tokenQueue0.consumeElementSelector();
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test5955,"public void test5955() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""I:xt}ChItIVC=~!{"");
    tokenQueue0.consumeTagName();
    assertEquals(""}ChItIVC=~!{"", tokenQueue0.toString());
}",0,
project,0,test6056,"public void test6056() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    tokenQueue0.consumeTagName();
    tokenQueue0.chompToIgnoreCase(""X"");
    tokenQueue0.consumeTagName();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test6157,"public void test6157() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""_U\u0006"");
    tokenQueue0.chompBalanced('c', '_');
    assertTrue(tokenQueue0.matchesWord());
}",0,
project,0,test6258,"public void test6258() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""String must not be empty"");
    tokenQueue0.advance();
    String[] stringArray0 = new String[7];
    stringArray0[0] = ""String must not be empty"";
    stringArray0[1] = ""String must not be empty"";
    stringArray0[2] = ""]NF"";
    stringArray0[3] = ""String must not be empty"";
    stringArray0[4] = ""String must not be empty"";
    stringArray0[5] = ""String must not be empty"";
    stringArray0[6] = ""String must not be empty"";
    tokenQueue0.consumeToAny(stringArray0);
    tokenQueue0.chompBalanced('\""', '\""');
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test6359,"public void test6359() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("".Rw %Y-cF[9:Oy"");
    Character character0 = Character.valueOf('#');
    tokenQueue0.addFirst(character0);
    // Undeclared exception!
    try {
        tokenQueue0.consume("".Rw %Y-cF[9:Oy"");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Queue did not match expected sequence
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test6460,"public void test6460() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consume("""");
    assertEquals('Z', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test6561,"public void test6561() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue did not match expected sequence"");
    tokenQueue0.consume();
    tokenQueue0.consumeToIgnoreCase(""Queue did not match expected sequence"");
    tokenQueue0.advance();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test6662,"public void test6662() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""String must not be empty"");
    tokenQueue0.consumeTagName();
    boolean boolean0 = tokenQueue0.consumeWhitespace();
    assertEquals(""must not be empty"", tokenQueue0.toString());
}",0,
project,0,test6663,"public void test6663() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""String must not be empty"");
    tokenQueue0.consumeTagName();
    boolean boolean0 = tokenQueue0.consumeWhitespace();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test6764,"public void test6764() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    boolean boolean0 = tokenQueue0.consumeWhitespace();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test6765,"public void test6765() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    boolean boolean0 = tokenQueue0.consumeWhitespace();
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test6866,"public void test6866() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.chompBalanced('/', '/');
    tokenQueue0.consumeWord();
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test6867,"public void test6867() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.chompBalanced('/', '/');
    tokenQueue0.consumeWord();
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test6968,"public void test6968() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.chompTo("""");
    assertEquals('Z', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test7069,"public void test7069() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""<]CY\""1}kOU&tb3>#)*"");
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test7070,"public void test7070() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""<]CY\""1}kOU&tb3>#)*"");
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test7171,"public void test7171() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""FL<x48V1,UNy`}6o"");
    tokenQueue0.consumeTagName();
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertEquals(""<x48V1,UNy`}6o"", tokenQueue0.toString());
}",0,
project,0,test7172,"public void test7172() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""FL<x48V1,UNy`}6o"");
    tokenQueue0.consumeTagName();
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test7273,"public void test7273() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.chompBalanced('/', '/');
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertEquals('f', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test7274,"public void test7274() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.chompBalanced('/', '/');
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test7375,"public void test7375() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    String[] stringArray0 = new String[18];
    stringArray0[0] = """";
    tokenQueue0.consumeToAny(stringArray0);
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test7476,"public void test7476() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""String must not be empty"");
    tokenQueue0.advance();
    String[] stringArray0 = new String[7];
    stringArray0[0] = ""String must not be empty"";
    stringArray0[1] = ""String must not be empty"";
    stringArray0[2] = ""]NF"";
    stringArray0[3] = ""String must not be empty"";
    stringArray0[4] = ""String must not be empty"";
    stringArray0[5] = ""String must not be empty"";
    stringArray0[6] = ""String must not be empty"";
    tokenQueue0.consumeToAny(stringArray0);
    char[] charArray0 = new char[3];
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test7477,"public void test7477() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""String must not be empty"");
    tokenQueue0.advance();
    String[] stringArray0 = new String[7];
    stringArray0[0] = ""String must not be empty"";
    stringArray0[1] = ""String must not be empty"";
    stringArray0[2] = ""]NF"";
    stringArray0[3] = ""String must not be empty"";
    stringArray0[4] = ""String must not be empty"";
    stringArray0[5] = ""String must not be empty"";
    stringArray0[6] = ""String must not be empty"";
    tokenQueue0.consumeToAny(stringArray0);
    char[] charArray0 = new char[3];
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test7578,"public void test7578() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.chompBalanced('/', '/');
    tokenQueue0.consumeWord();
    char char0 = tokenQueue0.peek();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test7579,"public void test7579() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    tokenQueue0.consumeAttributeKey();
    tokenQueue0.chompBalanced('/', '/');
    tokenQueue0.consumeWord();
    char char0 = tokenQueue0.peek();
    assertEquals('\u0000', char0);
}",0,assertNotNull(char0)
project,0,test7680,"public void test7680() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    char char0 = tokenQueue0.peek();
    assertEquals('Z', char0);
}",0,assertNotNull(char0)
project,0,test7781,"public void test7781() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    String string0 = tokenQueue0.toString();
    assertEquals(""ZPENtVIS-1O4V#f"", string0);
}",0,assertNotNull(string0)
project,0,test7882,"public void test7882() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    boolean boolean0 = tokenQueue0.matchesCS("""");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
