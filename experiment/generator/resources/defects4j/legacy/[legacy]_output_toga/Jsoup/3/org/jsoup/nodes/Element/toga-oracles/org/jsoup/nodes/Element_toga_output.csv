project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Document document0 = new Document("")I-k+2/TyiSO"");
    // Undeclared exception!
    try {
        document0.html("")I-k+2/TyiSO"");
        fail(""Expecting exception: NoSuchElementException"");
    } catch (NoSuchElementException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.LinkedList"", e);
    }
}",0,
project,0,test011,"public void test011() throws Throwable {
    Document document0 = new Document(""script"");
    document0.appendText(""script"");
    document0.prependElement(""script"");
    document0.prependText(""script"");
    String string0 = document0.text();
    assertEquals(""script script"", string0);
}",0,
project,0,test022,"public void test022() throws Throwable {
    Document document0 = new Document(""#*cl08)A"");
    Element element0 = document0.attr(""id"", ""#*cl08)A"");
    Element element1 = element0.getElementById(""#*cl08)A"");
    assertSame(element1, element0);
}",0,
project,0,test033,"public void test033() throws Throwable {
    Document document0 = new Document(""dB){nb"");
    Element element0 = document0.prependElement(""P"");
    assertEquals(""p"", element0.nodeName());
}",0,assertNotNull(element0.nodeName())
project,0,test034,"public void test034() throws Throwable {
    Document document0 = new Document(""dB){nb"");
    Element element0 = document0.prependElement(""P"");
    document0.prependText("" "");
    String string0 = document0.text();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test045,"public void test045() throws Throwable {
    Document document0 = new Document(""Dq>se,A"");
    Elements elements0 = document0.getElementsByAttributeValueEnding(""Dq>se,A"", ""Dq>se,A"");
    assertTrue(elements0.isEmpty());
}",0,assertTrue(elements0.isEmpty())
project,0,test056,"public void test056() throws Throwable {
    Document document0 = new Document(""L"");
    Elements elements0 = document0.select(""org.jsoup.nodes.Element"");
    assertTrue(elements0.isEmpty());
}",0,assertTrue(elements0.isEmpty())
project,0,test067,"public void test067() throws Throwable {
    Document document0 = new Document(""3"");
    // Undeclared exception!
    try {
        document0.child((-1792631324));
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test078,"public void test078() throws Throwable {
    Tag tag0 = Tag.valueOf(""PARAM"");
    Element element0 = new Element(tag0, ""PARAM"");
    Element element1 = element0.prependElement(""PARAM"");
    String string0 = element1.outerHtml();
    assertEquals(""<param />"", string0);
}",0,assertNotNull(string0)
project,0,test089,"public void test089() throws Throwable {
    Document document0 = new Document(""["");
    Elements elements0 = document0.getElementsByAttributeValueContaining(""["", ""["");
    assertEquals(0, elements0.size());
}",0,"assertEquals(0, elements0.size())"
project,0,test0910,"public void test0910() throws Throwable {
    Document document0 = new Document(""mM0V7i]N"");
    Elements elements0 = document0.getElementsByAttributeValueNot(""mM0V7i]N"", ""mM0V7i]N"");
    assertFalse(elements0.isEmpty());
}",0,assertTrue(elements0.isEmpty())
project,0,test1011,"public void test1011() throws Throwable {
    Document document0 = new Document(""4p"");
    String string0 = document0.toString();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test1112,"public void test1112() throws Throwable {
    Document document0 = new Document(""<"");
    Elements elements0 = document0.getElementsByAttribute(""<"");
    assertEquals(0, elements0.size());
}",0,"assertEquals(1, elements0.size())"
project,0,test1213,"public void test1213() throws Throwable {
    Document document0 = new Document(""$"");
    Element element0 = document0.addClass(""$"");
    assertEquals(""$"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test1314,"public void test1314() throws Throwable {
    Document document0 = new Document(""4p"");
    Elements elements0 = document0.getElementsByAttributeValue(""4p"", ""4p"");
    assertEquals(0, elements0.size());
}",0,"assertEquals(0, elements0.size())"
project,0,test1415,"public void test1415() throws Throwable {
    Document document0 = new Document("" />"");
    // Undeclared exception!
    try {
        document0.siblingElements();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Element"", e);
    }
}",0,
project,0,test1516,"public void test1516() throws Throwable {
    Document document0 = new Document(""!p{uwkz<"");
    Elements elements0 = document0.getElementsByAttributeValueStarting(""!p{uwkz<"", ""!p{uwkz<"");
    assertEquals(0, elements0.size());
}",0,"assertEquals(1, elements0.size())"
project,0,test1617,"public void test1617() throws Throwable {
    Tag tag0 = Tag.valueOf(""4p"");
    Element element0 = new Element(tag0, ""4p"");
    String string0 = element0.nodeName();
    assertEquals(""4p"", string0);
}",0,assertNotNull(string0)
project,0,test1718,"public void test1718() throws Throwable {
    Document document0 = new Document(""4p"");
    Element element0 = document0.removeClass(""4p"");
    assertEquals(""#root"", element0.tagName());
}",0,assertNotNull(element0.tagName())
project,0,test1819,"public void test1819() throws Throwable {
    Document document0 = new Document(""L"");
    Elements elements0 = document0.getAllElements();
    assertFalse(elements0.isEmpty());
}",0,assertTrue(elements0.isEmpty())
project,0,test1920,"public void test1920() throws Throwable {
    Document document0 = new Document(""?"");
    Elements elements0 = document0.getElementsByIndexLessThan(3706);
    assertEquals(1, elements0.size());
}",0,
project,0,test2021,"public void test2021() throws Throwable {
    Document document0 = new Document(""value"");
    Elements elements0 = document0.getElementsByIndexGreaterThan((-2));
    assertFalse(elements0.isEmpty());
}",0,assertTrue(elements0.isEmpty())
project,0,test2122,"public void test2122() throws Throwable {
    Document document0 = new Document(""$"");
    Elements elements0 = document0.getElementsByIndexEquals(612);
    assertEquals(0, elements0.size());
}",0,"assertEquals(0, elements0.size())"
project,0,test2223,"public void test2223() throws Throwable {
    Document document0 = new Document(""#*cl08)A"");
    Element element0 = document0.getElementById(""#*cl08)A"");
    assertNull(element0);
}",0,
project,0,test2324,"public void test2324() throws Throwable {
    Document document0 = new Document(""?"");
    Elements elements0 = document0.parents();
    assertEquals(0, elements0.size());
}",0,"assertEquals(0, elements0.size())"
project,0,test2425,"public void test2425() throws Throwable {
    Document document0 = new Document(""script"");
    Element element0 = document0.prependElement(""script"");
    element0.addChild(document0);
    Elements elements0 = document0.parents();
    assertEquals(1, elements0.size());
}",0,"assertEquals(1, elements0.size())"
project,0,test2526,"public void test2526() throws Throwable {
    Document document0 = new Document(""}a3L|0+W~"");
    document0.addChild(document0);
    Element element0 = document0.previousElementSibling();
    assertNull(element0);
}",0,assertNotNull(element0)
project,0,test2627,"public void test2627() throws Throwable {
    Document document0 = new Document(""<"");
    document0.prependText(""<"");
    // Undeclared exception!
    try {
        document0.normalise();
        fail(""Expecting exception: NoSuchElementException"");
    } catch (NoSuchElementException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.LinkedList"", e);
    }
}",0,
project,0,test2728,"public void test2728() throws Throwable {
    Document document0 = new Document(""$W"");
    Element element0 = document0.prependElement(""$W"");
    Element element1 = element0.nextElementSibling();
    assertNull(element1);
}",0,
project,0,test2829,"public void test2829() throws Throwable {
    Document document0 = new Document(""4p"");
    Element element0 = document0.appendChild(document0);
    Element element1 = document0.prependElement(""4p"");
    Element element2 = element1.nextElementSibling();
    assertSame(element2, element0);
}",0,
project,0,test2930,"public void test2930() throws Throwable {
    Document document0 = new Document(""}a3L|0+W~"");
    document0.addChild(document0);
    document0.prependElement(""}a3L|0+W~"");
    Element element0 = document0.previousElementSibling();
    assertEquals(""}a3l|0+w~"", element0.nodeName());
}",0,assertNotNull(element0.nodeName())
project,0,test3031,"public void test3031() throws Throwable {
    Document document0 = new Document(""982"");
    Element element0 = document0.prependElement(""982"");
    Element element1 = element0.firstElementSibling();
    assertNull(element1);
}",0,
project,0,test3132,"public void test3132() throws Throwable {
    Tag tag0 = Tag.valueOf(""4p"");
    Element element0 = new Element(tag0, ""4p"");
    Element element1 = element0.appendChild(element0);
    Element element2 = element1.appendElement(""4p"");
    Element element3 = element2.firstElementSibling();
    assertNotSame(element3, element2);
}",0,
project,0,test3133,"public void test3133() throws Throwable {
    Tag tag0 = Tag.valueOf(""4p"");
    Element element0 = new Element(tag0, ""4p"");
    Element element1 = element0.appendChild(element0);
    Element element2 = element1.appendElement(""4p"");
    Element element3 = element2.firstElementSibling();
    assertNotNull(element3);
}",0,
project,0,test3234,"public void test3234() throws Throwable {
    Document document0 = new Document(""L"");
    Element element0 = document0.prependElement(""L"");
    Integer integer0 = element0.elementSiblingIndex();
    assertEquals(0, (int) integer0);
}",0,
project,0,test3335,"public void test3335() throws Throwable {
    Document document0 = new Document(""$"");
    Element element0 = document0.prependElement(""$"");
    Element element1 = element0.lastElementSibling();
    assertNull(element1);
}",0,
project,0,test3436,"public void test3436() throws Throwable {
    Document document0 = new Document(""964"");
    document0.prependChild(document0);
    Element element0 = document0.prependElement(""964"");
    Element element1 = element0.lastElementSibling();
    assertSame(element1, document0);
}",0,
project,0,test3637,"public void test3637() throws Throwable {
    Document document0 = new Document(""XBq\fJ-9m7]J5?@>"");
    Comment comment0 = new Comment(""XBq\fJ-9m7]J5?@>"", ""XBq\fJ-9m7]J5?@>"");
    document0.appendChild(comment0);
    String string0 = document0.text();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test3738,"public void test3738() throws Throwable {
    Document document0 = new Document(""script"");
    document0.prependElement(""script"");
    String string0 = document0.text();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test3839,"public void test3839() throws Throwable {
    Document document0 = new Document(""L"");
    Element element0 = document0.prependElement(""L"");
    boolean boolean0 = element0.preserveWhitespace();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3940,"public void test3940() throws Throwable {
    Document document0 = new Document(""c"");
    DataNode dataNode0 = DataNode.createFromEncoded(""c"", ""c"");
    document0.addChild(dataNode0);
    boolean boolean0 = document0.hasText();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4041,"public void test4041() throws Throwable {
    Document document0 = new Document("""");
    document0.appendText("""");
    boolean boolean0 = document0.hasText();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4142,"public void test4142() throws Throwable {
    Document document0 = new Document(""O)@ofCBU"");
    document0.prependElement(""O)@ofCBU"");
    boolean boolean0 = document0.hasText();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4243,"public void test4243() throws Throwable {
    Document document0 = new Document(""O)@ofCBU"");
    Element element0 = document0.prependElement(""O)@ofCBU"");
    element0.text(""O)@ofCBU"");
    boolean boolean0 = document0.hasText();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4344,"public void test4344() throws Throwable {
    Document document0 = new Document(""!o?`4_;LM#Z0DXM"");
    DataNode dataNode0 = DataNode.createFromEncoded(""!o?`4_;LM#Z0DXM"", ""!o?`4_;LM#Z0DXM"");
    document0.addChild(dataNode0);
    String string0 = document0.data();
    assertEquals(""!o?`4_;LM#Z0DXM"", string0);
}",0,
project,0,test4445,"public void test4445() throws Throwable {
    Document document0 = new Document(""$>"");
    document0.prependElement(""$>"");
    String string0 = document0.data();
    assertEquals("""", string0);
}",0,
project,0,test4546,"public void test4546() throws Throwable {
    Document document0 = new Document(""W"");
    Element element0 = document0.appendText(""W"");
    String string0 = element0.data();
    assertEquals("""", string0);
}",0,
project,0,test4647,"public void test4647() throws Throwable {
    Document document0 = new Document(""$W"");
    document0.toggleClass(""$W"");
    String string0 = document0.className();
    assertEquals("" $W"", string0);
}",0,
project,0,test4748,"public void test4748() throws Throwable {
    Document document0 = new Document("""");
    boolean boolean0 = document0.hasClass("""");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4849,"public void test4849() throws Throwable {
    Document document0 = new Document("""");
    Element element0 = document0.toggleClass("""");
    assertFalse(element0.isBlock());
}",0,assertTrue(element0.isBlock())
project,0,test4950,"public void test4950() throws Throwable {
    Document document0 = new Document(""j#"");
    String string0 = document0.val();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test5051,"public void test5051() throws Throwable {
    Document document0 = new Document(""4p"");
    Element element0 = document0.createElement(""textarea"");
    String string0 = element0.val();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test5152,"public void test5152() throws Throwable {
    Document document0 = new Document(""W"");
    Element element0 = document0.val(""W"");
    assertFalse(element0.isBlock());
}",0,
project,0,test5253,"public void test5253() throws Throwable {
    Tag tag0 = Tag.valueOf(""textarea"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""textarea"", attributes0);
    Element element1 = element0.val(""textarea"");
    assertFalse(element1.isBlock());
}",0,assertFalse(element1.isBlock())
project,0,test5354,"public void test5354() throws Throwable {
    Document document0 = new Document(""P"");
    document0.prependElement(""meta"");
    String string0 = document0.outerHtml();
    assertEquals(""<meta />"", string0);
}",0,
project,0,test5455,"public void test5455() throws Throwable {
    Document document0 = new Document(""e["");
    document0.prependElement(""e["");
    String string0 = document0.outerHtml();
    assertEquals(""<e[>\n</e[>"", string0);
}",0,assertNotNull(string0)
project,0,test5556,"public void test5556() throws Throwable {
    Document document0 = new Document(""e["");
    document0.prependElement(""e["");
    Element element0 = document0.prependText(""e["");
    String string0 = element0.outerHtml();
    assertEquals(""e[<e[>\n</e[>"", string0);
}",0,assertNotNull(string0)
project,0,test5758,"public void test5758() throws Throwable {
    Document document0 = new Document(""script"");
    document0.prependElement(""script"");
    String string0 = document0.outerHtml();
    assertEquals(""<script></script>"", string0);
}",0,assertNotNull(string0)
project,0,test5859,"public void test5859() throws Throwable {
    Document document0 = new Document(""J<dzT,U'~mWOg?*4[T"");
    boolean boolean0 = document0.equals(""J<dzT,U'~mWOg?*4[T"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
