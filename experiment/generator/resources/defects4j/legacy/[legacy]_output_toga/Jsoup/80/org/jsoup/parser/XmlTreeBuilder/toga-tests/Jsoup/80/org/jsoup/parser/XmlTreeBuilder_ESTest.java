/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 23:18:13 GMT 2023
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.parser.CharacterReader;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Token;
import org.jsoup.parser.Tokeniser;
import org.jsoup.parser.XmlTreeBuilder;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class XmlTreeBuilder_ESTest extends XmlTreeBuilder_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        Document document0 = xmlTreeBuilder0.parse("^", "^");
        xmlTreeBuilder0.processStartTag("^");
        Elements elements0 = document0.getElementsByTag("^");
        xmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
        boolean boolean0 = xmlTreeBuilder0.processEndTag("^");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test021() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        StringReader stringReader0 = new StringReader("");
        ParseErrorList parseErrorList0 = new ParseErrorList(3, 12);
        ParseSettings parseSettings0 = ParseSettings.htmlDefault;
        xmlTreeBuilder0.initialiseParse(stringReader0, "", parseErrorList0, parseSettings0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test032() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        StringReader stringReader0 = new StringReader("6`=!;_v");
        CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
        ParseErrorList parseErrorList0 = new ParseErrorList(0, 67);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        xmlTreeBuilder0.parse(stringReader0, "6`=!;_v");
        Token.Doctype token_Doctype0 = tokeniser0.doctypePending;
        boolean boolean0 = xmlTreeBuilder0.process(token_Doctype0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test043() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        StringReader stringReader0 = new StringReader("6`=!;_v");
        CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
        ParseErrorList parseErrorList0 = new ParseErrorList(0, 67);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        xmlTreeBuilder0.parse(stringReader0, "6`=!;_v");
        Token.Doctype token_Doctype0 = tokeniser0.doctypePending;
        xmlTreeBuilder0.insert(token_Doctype0);
        token_Doctype0.isForceQuirks();
    }

    @Test(timeout = 4000)
    public void test054() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        StringReader stringReader0 = new StringReader("");
        Document document0 = xmlTreeBuilder0.parse(stringReader0, "");
        document0.nodeName();
        assertNotNull(document0.nodeName());
    }

    @Test(timeout = 4000)
    public void test065() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        xmlTreeBuilder0.parse("<h5xDRirQxe&hfA.", "<h5xDRirQxe&hfA.");
        Tokeniser tokeniser0 = xmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Element element0 = xmlTreeBuilder0.insert(token_StartTag0);
        element0.baseUri();
        assertNotNull(element0.baseUri());
    }

    @Test(timeout = 4000)
    public void test076() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        xmlTreeBuilder0.process(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test087() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        Token.CData token_CData0 = new Token.CData("<!--");
        Token.TokenType token_TokenType0 = Token.TokenType.Doctype;
        token_CData0.type = token_TokenType0;
        xmlTreeBuilder0.process(token_CData0);
    }

    @Test(timeout = 4000)
    public void test098() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = new ParseSettings(true, false);
        xmlTreeBuilder0.parseFragment((String) null, ">", parseErrorList0, parseSettings0);
    }

    @Test(timeout = 4000)
    public void test109() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        xmlTreeBuilder0.parseFragment(";", (String) null, (ParseErrorList) null, parseSettings0);
    }

    @Test(timeout = 4000)
    public void test1110() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        xmlTreeBuilder0.parse((String) null, "@tlf$1");
    }

    @Test(timeout = 4000)
    public void test1211() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        xmlTreeBuilder0.parse("cD@LCr`-tuV?;1L@Y", (String) null);
    }

    @Test(timeout = 4000)
    public void test1312() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        StringReader stringReader0 = new StringReader("6`=!;_v");
        stringReader0.close();
        xmlTreeBuilder0.parse(stringReader0, "6`=!;_v");
    }

    @Test(timeout = 4000)
    public void test1413() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        CDataNode cDataNode0 = new CDataNode("i#IWVpcB''hy7");
        Attributes attributes0 = cDataNode0.attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("i#IWVpcB''hy7", attributes0);
        xmlTreeBuilder0.insert(token_StartTag1);
    }

    @Test(timeout = 4000)
    public void test1514() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        xmlTreeBuilder0.insert(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test1615() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        Token.Doctype token_Doctype0 = new Token.Doctype();
        xmlTreeBuilder0.insert(token_Doctype0);
    }

    @Test(timeout = 4000)
    public void test1716() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        Token.Comment token_Comment0 = new Token.Comment();
        xmlTreeBuilder0.insert(token_Comment0);
    }

    @Test(timeout = 4000)
    public void test1817() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        Token.CData token_CData0 = new Token.CData("~");
        xmlTreeBuilder0.insert(token_CData0);
    }

    @Test(timeout = 4000)
    public void test1918() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        xmlTreeBuilder0.initialiseParse((Reader) null, (String) null, (ParseErrorList) null, parseSettings0);
    }

    @Test(timeout = 4000)
    public void test2019() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        xmlTreeBuilder0.parse("_", "_");
        xmlTreeBuilder0.processStartTag("_");
        xmlTreeBuilder0.processStartTag("a");
        boolean boolean0 = xmlTreeBuilder0.processEndTag("_");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2120() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        xmlTreeBuilder0.parse("y:u,=jJZmotx%", "y:u,=jJZmotx%");
        boolean boolean0 = xmlTreeBuilder0.processEndTag("y:u,=jJZmotx%");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test2221() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        Token.CData token_CData0 = new Token.CData("x3`?~O_#o@Y{XT");
        xmlTreeBuilder0.process(token_CData0);
    }

    @Test(timeout = 4000)
    public void test2422() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        StringReader stringReader0 = new StringReader("li");
        CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
        ParseErrorList parseErrorList0 = new ParseErrorList(0, 0);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        xmlTreeBuilder0.parse(stringReader0, "li");
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        CDataNode cDataNode0 = new CDataNode("li");
        Attributes attributes0 = cDataNode0.attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("li", attributes0);
        token_StartTag1.selfClosing = true;
        Element element0 = xmlTreeBuilder0.insert(token_StartTag1);
        element0.hasParent();
    }

    @Test(timeout = 4000)
    public void test2523() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        StringReader stringReader0 = new StringReader("6`=!;_v");
        CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, (ParseErrorList) null);
        xmlTreeBuilder0.parse(stringReader0, "6`=!;_v");
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        CDataNode cDataNode0 = new CDataNode("6`=!;_v");
        Attributes attributes0 = cDataNode0.attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("6`=!;_v", attributes0);
        token_StartTag1.selfClosing = true;
        Element element0 = xmlTreeBuilder0.insert(token_StartTag1);
        element0.isBlock();
    }

    @Test(timeout = 4000)
    public void test2624() throws Throwable {
        XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
        PipedWriter pipedWriter0 = new PipedWriter();
        PipedReader pipedReader0 = new PipedReader(pipedWriter0);
        xmlTreeBuilder0.parse(pipedReader0, ">cz@9R");
    }
}
