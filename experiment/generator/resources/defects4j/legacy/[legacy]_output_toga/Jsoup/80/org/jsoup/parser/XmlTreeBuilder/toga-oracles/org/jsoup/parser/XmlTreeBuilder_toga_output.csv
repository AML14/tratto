project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Document document0 = xmlTreeBuilder0.parse(""^"", ""^"");
    xmlTreeBuilder0.processStartTag(""^"");
    Elements elements0 = document0.getElementsByTag(""^"");
    xmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
    boolean boolean0 = xmlTreeBuilder0.processEndTag(""^"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test032,"public void test032() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""6`=!;_v"");
    CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
    ParseErrorList parseErrorList0 = new ParseErrorList(0, 67);
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    xmlTreeBuilder0.parse(stringReader0, ""6`=!;_v"");
    Token.Doctype token_Doctype0 = tokeniser0.doctypePending;
    boolean boolean0 = xmlTreeBuilder0.process(token_Doctype0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test054,"public void test054() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    StringReader stringReader0 = new StringReader("""");
    Document document0 = xmlTreeBuilder0.parse(stringReader0, """");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test065,"public void test065() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    xmlTreeBuilder0.parse(""<h5xDRirQxe&hfA."", ""<h5xDRirQxe&hfA."");
    Tokeniser tokeniser0 = xmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Element element0 = xmlTreeBuilder0.insert(token_StartTag0);
    assertEquals(""<h5xDRirQxe&hfA."", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test076,"public void test076() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.process(token_StartTag0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test087,"public void test087() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.CData token_CData0 = new Token.CData(""<!--"");
    Token.TokenType token_TokenType0 = Token.TokenType.Doctype;
    token_CData0.type = token_TokenType0;
    // Undeclared exception!
    try {
        xmlTreeBuilder0.process(token_CData0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jsoup.parser.Token$CData cannot be cast to org.jsoup.parser.Token$Doctype
        //
        verifyException(""org.jsoup.parser.Token"", e);
    }
}",0,
project,0,test098,"public void test098() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = new ParseSettings(true, false);
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parseFragment((String) null, "">"", parseErrorList0, parseSettings0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.io.StringReader"", e);
    }
}",0,
project,0,test109,"public void test109() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parseFragment("";"", (String) null, (ParseErrorList) null, parseSettings0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // BaseURI must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test1110,"public void test1110() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parse((String) null, ""@tlf$1"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.io.StringReader"", e);
    }
}",0,
project,0,test1211,"public void test1211() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parse(""cD@LCr`-tuV?;1L@Y"", (String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // BaseURI must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test1312,"public void test1312() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""6`=!;_v"");
    stringReader0.close();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parse(stringReader0, ""6`=!;_v"");
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // java.io.IOException: Stream closed
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test1413,"public void test1413() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    CDataNode cDataNode0 = new CDataNode(""i#IWVpcB''hy7"");
    Attributes attributes0 = cDataNode0.attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""i#IWVpcB''hy7"", attributes0);
    // Undeclared exception!
    try {
        xmlTreeBuilder0.insert(token_StartTag1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.Tag"", e);
    }
}",0,
project,0,test1514,"public void test1514() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.insert(token_StartTag0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test1615,"public void test1615() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.Doctype token_Doctype0 = new Token.Doctype();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.insert(token_Doctype0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.XmlTreeBuilder"", e);
    }
}",0,
project,0,test1716,"public void test1716() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.Comment token_Comment0 = new Token.Comment();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.insert(token_Comment0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test1817,"public void test1817() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.CData token_CData0 = new Token.CData(""~"");
    // Undeclared exception!
    try {
        xmlTreeBuilder0.insert(token_CData0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test1918,"public void test1918() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    // Undeclared exception!
    try {
        xmlTreeBuilder0.initialiseParse((Reader) null, (String) null, (ParseErrorList) null, parseSettings0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String input must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test2019,"public void test2019() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    xmlTreeBuilder0.parse(""_"", ""_"");
    xmlTreeBuilder0.processStartTag(""_"");
    xmlTreeBuilder0.processStartTag(""a"");
    boolean boolean0 = xmlTreeBuilder0.processEndTag(""_"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2120,"public void test2120() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    xmlTreeBuilder0.parse(""y:u,=jJZmotx%"", ""y:u,=jJZmotx%"");
    boolean boolean0 = xmlTreeBuilder0.processEndTag(""y:u,=jJZmotx%"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2221,"public void test2221() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.CData token_CData0 = new Token.CData(""x3`?~O_#o@Y{XT"");
    // Undeclared exception!
    try {
        xmlTreeBuilder0.process(token_CData0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test2422,"public void test2422() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""li"");
    CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
    ParseErrorList parseErrorList0 = new ParseErrorList(0, 0);
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    xmlTreeBuilder0.parse(stringReader0, ""li"");
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    CDataNode cDataNode0 = new CDataNode(""li"");
    Attributes attributes0 = cDataNode0.attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""li"", attributes0);
    token_StartTag1.selfClosing = true;
    Element element0 = xmlTreeBuilder0.insert(token_StartTag1);
    assertTrue(element0.hasParent());
}",0,
project,0,test2523,"public void test2523() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""6`=!;_v"");
    CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, (ParseErrorList) null);
    xmlTreeBuilder0.parse(stringReader0, ""6`=!;_v"");
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    CDataNode cDataNode0 = new CDataNode(""6`=!;_v"");
    Attributes attributes0 = cDataNode0.attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""6`=!;_v"", attributes0);
    token_StartTag1.selfClosing = true;
    Element element0 = xmlTreeBuilder0.insert(token_StartTag1);
    assertFalse(element0.isBlock());
}",0,
project,0,test2624,"public void test2624() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    PipedWriter pipedWriter0 = new PipedWriter();
    PipedReader pipedReader0 = new PipedReader(pipedWriter0);
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parse(pipedReader0, "">cz@9R"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
