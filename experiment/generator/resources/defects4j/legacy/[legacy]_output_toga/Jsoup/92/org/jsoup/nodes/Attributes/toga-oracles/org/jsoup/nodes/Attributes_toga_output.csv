project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.dataset();
    assertEquals(0, attributes0.size());
}",0,"assertEquals(0, attributes0.size())"
project,0,test011,"public void test011() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.hashCode();
    assertEquals(0, attributes0.size());
}",0,
project,0,test022,"public void test022() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.clone();
    boolean boolean0 = attributes1.equals(attributes0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test023,"public void test023() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.clone();
    boolean boolean0 = attributes1.equals(attributes0);
    assertNotSame(attributes1, attributes0);
}",0,
project,0,test034,"public void test034() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.put(""(k$x {"", ""R54DlR@:L@<"");
    attributes1.put(""org.jsoup.nodes.Attributes$Dataset"", ""org.jsoup.nodes.Attributes$Dataset"");
    Attributes attributes2 = attributes0.put(""R54DlR@:L@<"", ""org.jsoup.nodes.Attributes$Dataset"");
    attributes2.addAll(attributes0);
    assertEquals(3, attributes0.size());
}",0,"assertEquals(1, attributes0.size())"
project,0,test045,"public void test045() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.put(""(k$x {"", ""R54DlR@:L@<"");
    attributes1.put(""org.jsoup.nodes.Attributes$Dataset"", ""org.jsoup.nodes.Attributes$Dataset"");
    Attributes attributes2 = attributes0.put(""R54DlR@:L@<"", ""org.jsoup.nodes.Attributes$Dataset"");
    Attributes attributes3 = attributes2.clone();
    attributes2.addAll(attributes3);
    assertEquals(3, attributes0.size());
}",0,"assertEquals(0, attributes0.size())"
project,0,test056,"public void test056() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.put(""[5h1d0."", ""=\"""");
    attributes1.putIgnoreCase(""=\"""", ""[5h1d0."");
    attributes0.remove(""[5h1d0."");
    assertEquals(1, attributes0.size());
}",0,"assertEquals(0, attributes0.size())"
project,0,test067,"public void test067() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.put(""J{rc"", ""J{rc"");
    String string0 = attributes1.getIgnoreCase(""J{rc"");
    assertEquals(1, attributes0.size());
}",0,"assertEquals(0, attributes0.size())"
project,0,test068,"public void test068() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.put(""J{rc"", ""J{rc"");
    String string0 = attributes1.getIgnoreCase(""J{rc"");
    assertEquals(""J{rc"", string0);
}",0,
project,0,test079,"public void test079() throws Throwable {
    String string0 = Attributes.checkNotNull((String) null);
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test0810,"public void test0810() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.put(""K3R2a'68P3E"", ""K3R2a'68P3E"");
    String string0 = attributes1.get(""K3R2a'68P3E"");
    assertEquals(1, attributes0.size());
}",0,
project,0,test0811,"public void test0811() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.put(""K3R2a'68P3E"", ""K3R2a'68P3E"");
    String string0 = attributes1.get(""K3R2a'68P3E"");
    assertEquals(""K3R2a'68P3E"", string0);
}",0,assertNotNull(string0)
project,0,test0912,"public void test0912() throws Throwable {
    Attributes attributes0 = new Attributes();
    String string0 = attributes0.get(""K3R2a'68P3E"");
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test1013,"public void test1013() throws Throwable {
    Attributes attributes0 = new Attributes();
    String string0 = attributes0.getIgnoreCase(""+g[K8fPGWL "");
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test1114,"public void test1114() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.put(""A<rU;("", ""A<rU;("");
    attributes1.putIgnoreCase(""A<rU;("", ""A<rU;("");
    assertEquals(1, attributes0.size());
}",0,"assertEquals(0, attributes0.size())"
project,0,test1215,"public void test1215() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.put(""A<rU;("", ""A<rU;("");
    attributes1.normalize();
    attributes1.putIgnoreCase(""A<rU;("", ""A<rU;("");
    assertEquals(1, attributes0.size());
}",0,"assertEquals(1, attributes0.size())"
project,0,test1316,"public void test1316() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.put("""", false);
    assertEquals(0, attributes1.size());
}",0,"assertEquals(0, attributes1.size())"
project,0,test1417,"public void test1417() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.put(""s9NZ"", true);
    List<Attribute> list0 = attributes1.asList();
    assertEquals(1, attributes0.size());
}",0,"assertEquals(1, attributes0.size())"
project,0,test1519,"public void test1519() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""[5h1d0."", ""=\"""");
    assertEquals(1, attributes0.size());
}",0,"assertEquals(0, attributes0.size())"
project,0,test1520,"public void test1520() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put(""[5h1d0."", ""=\"""");
    attributes0.remove(""[5h1d0."");
    assertEquals(0, attributes0.size());
}",0,"assertEquals(0, attributes0.size())"
project,0,test1621,"public void test1621() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.removeIgnoreCase(""Je{rc"");
    assertEquals(0, attributes0.size());
}",0,"assertEquals(0, attributes0.size())"
project,0,test1722,"public void test1722() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put("",8z{|"", "",8z{|"");
    assertEquals(1, attributes0.size());
}",0,"assertEquals(0, attributes0.size())"
project,0,test1723,"public void test1723() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.put("",8z{|"", "",8z{|"");
    attributes0.removeIgnoreCase("",8z{|"");
    assertEquals(0, attributes0.size());
}",0,"assertEquals(0, attributes0.size())"
project,0,test1824,"public void test1824() throws Throwable {
    Attributes attributes0 = new Attributes();
    boolean boolean0 = attributes0.hasKey(""q"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1925,"public void test1925() throws Throwable {
    Attributes attributes0 = new Attributes();
    String string0 = ""I\\uJVldf"";
    Attributes attributes1 = attributes0.put(string0, string0);
    boolean boolean0 = attributes1.hasKey(string0);
    assertEquals(1, attributes0.size());
}",0,"assertEquals(0, attributes0.size())"
project,0,test1926,"public void test1926() throws Throwable {
    Attributes attributes0 = new Attributes();
    String string0 = ""I\\uJVldf"";
    Attributes attributes1 = attributes0.put(string0, string0);
    boolean boolean0 = attributes1.hasKey(string0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2027,"public void test2027() throws Throwable {
    Attributes attributes0 = new Attributes();
    boolean boolean0 = attributes0.hasKeyIgnoreCase(""R5*HlR@:L@4"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2128,"public void test2128() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.put(""K3R2a'68P3E"", ""K3R2a'68P3E"");
    boolean boolean0 = attributes1.hasKeyIgnoreCase(""K3R2a'68P3E"");
    assertEquals(1, attributes0.size());
}",0,"assertEquals(1, attributes0.size())"
project,0,test2129,"public void test2129() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.put(""K3R2a'68P3E"", ""K3R2a'68P3E"");
    boolean boolean0 = attributes1.hasKeyIgnoreCase(""K3R2a'68P3E"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2230,"public void test2230() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.addAll(attributes0);
    assertEquals(0, attributes0.size());
}",0,"assertEquals(0, attributes0.size())"
project,0,test2432,"public void test2432() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.putIgnoreCase("""", """");
    // Undeclared exception!
    try {
        attributes0.asList();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test2533,"public void test2533() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.put(""3cP}?q_-/0 UQbP"", true);
    StringWriter stringWriter0 = new StringWriter();
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    attributes1.html((Appendable) stringWriter0, document_OutputSettings0);
    assertEquals(1, attributes0.size());
}",0,
project,0,test2635,"public void test2635() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.put(""3cP}?q_-/0 UQbP"", true);
    StringWriter stringWriter0 = new StringWriter();
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
    document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
    attributes1.html((Appendable) stringWriter0, document_OutputSettings0);
    assertEquals(1, attributes0.size());
}",0,
project,0,test2737,"public void test2737() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.put("",8z{|"", "",8z{|"");
    String string0 = attributes1.toString();
    assertEquals(1, attributes0.size());
}",0,"assertEquals(0, attributes0.size())"
project,0,test2738,"public void test2738() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.put("",8z{|"", "",8z{|"");
    String string0 = attributes1.toString();
    assertEquals("" ,8z{|=\"",8z{|\"""", string0);
}",0,
project,0,test2839,"public void test2839() throws Throwable {
    Attributes attributes0 = new Attributes();
    boolean boolean0 = attributes0.equals(attributes0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2940,"public void test2940() throws Throwable {
    Attributes attributes0 = new Attributes();
    boolean boolean0 = attributes0.equals((Object) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3041,"public void test3041() throws Throwable {
    Attributes attributes0 = new Attributes();
    Object object0 = new Object();
    boolean boolean0 = attributes0.equals(object0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3142,"public void test3142() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.clone();
    assertEquals(0, attributes1.size());
}",0,
project,0,test3143,"public void test3143() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.clone();
    attributes1.put(""0:&PV ?z=Uf"", ""0:&PV ?z=Uf"");
    boolean boolean0 = attributes1.equals(attributes0);
    assertEquals(1, attributes1.size());
}",0,
project,0,test3144,"public void test3144() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attributes attributes1 = attributes0.clone();
    attributes1.put(""0:&PV ?z=Uf"", ""0:&PV ?z=Uf"");
    boolean boolean0 = attributes1.equals(attributes0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3245,"public void test3245() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.putIgnoreCase(""34`~^]*/"", ""34`~^]*/"");
    Attributes attributes1 = attributes0.clone();
    boolean boolean0 = attributes1.equals(attributes0);
    assertEquals(1, attributes0.size());
}",0,"assertEquals(0, attributes0.size())"
project,0,test3246,"public void test3246() throws Throwable {
    Attributes attributes0 = new Attributes();
    attributes0.putIgnoreCase(""34`~^]*/"", ""34`~^]*/"");
    Attributes attributes1 = attributes0.clone();
    boolean boolean0 = attributes1.equals(attributes0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
