/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 22:29:57 GMT 2023
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.TextNode;
import org.jsoup.parser.CharacterReader;
import org.jsoup.parser.HtmlTreeBuilder;
import org.jsoup.parser.HtmlTreeBuilderState;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Token;
import org.jsoup.parser.Tokeniser;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class HtmlTreeBuilder_ESTest extends HtmlTreeBuilder_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Token.Tag token_Tag0 = token_StartTag0.name("b");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
        htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
        htmlTreeBuilder0.process(token_StartTag0, htmlTreeBuilderState0);
        Element element0 = htmlTreeBuilder0.getActiveFormattingElement(".snBr2DXG0");
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test0012() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Token.Tag token_Tag0 = token_StartTag0.name("b");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
        htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
        boolean boolean0 = htmlTreeBuilder0.inSelectScope("39|<Y");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test0023() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("6<v;\"na3/E/)sX^");
        htmlTreeBuilder0.replaceActiveFormattingElement(document0, (Element) null);
    }

    @Test(timeout = 4000)
    public void test0034() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("");
        Document document1 = document0.clone();
        htmlTreeBuilder0.insertOnStackAfter(document0, document1);
    }

    @Test(timeout = 4000)
    public void test0045() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", (Element) null, "dl", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.insertInFosterParent((Node) null);
    }

    @Test(timeout = 4000)
    public void test0056() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        document0.updateMetaCharsetElement();
        assertFalse(document0.updateMetaCharsetElement());
    }

    @Test(timeout = 4000)
    public void test0067() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.Character token_Character0 = tokeniser0.charPending;
        htmlTreeBuilder0.insert(token_Character0);
        token_Character0.toString();
    }

    @Test(timeout = 4000)
    public void test0078() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("iframe");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.insert(document0);
        document0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test0109() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("marquee");
        htmlTreeBuilder0.setHeadElement(document0);
        document0.location();
        assertNotNull(document0.location());
    }

    @Test(timeout = 4000)
    public void test01310() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.insertInFosterParent(document0);
        document0.siblingIndex();
        assertEquals(0, document0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test01611() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        String string0 = htmlTreeBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test01812() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Token.Tag token_Tag0 = token_StartTag0.name("b");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
        htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
        htmlTreeBuilder0.process(token_StartTag0, htmlTreeBuilderState0);
        Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
        assertNotNull(element0);
    }

    @Test(timeout = 4000)
    public void test01813() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Token.Tag token_Tag0 = token_StartTag0.name("b");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
        htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
        htmlTreeBuilder0.process(token_StartTag0, htmlTreeBuilderState0);
        Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test01914() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Token.Tag token_Tag0 = token_StartTag0.name("b");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
        htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
        Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
        element0.isBlock();
    }

    @Test(timeout = 4000)
    public void test02015() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Token.Tag token_Tag0 = token_StartTag0.name("w&b");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InSelectInTable;
        boolean boolean0 = htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test02116() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.onStack(document0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test02217() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.lastFormattingElement();
    }

    @Test(timeout = 4000)
    public void test02318() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test02319() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Token.Tag token_Tag0 = token_StartTag0.name("b");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
        htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
        htmlTreeBuilder0.process(token_StartTag0, htmlTreeBuilderState0);
        Element element0 = htmlTreeBuilder0.lastFormattingElement();
        assertNotNull(element0);
    }

    @Test(timeout = 4000)
    public void test02320() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Token.Tag token_Tag0 = token_StartTag0.name("b");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
        htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
        htmlTreeBuilder0.process(token_StartTag0, htmlTreeBuilderState0);
        Element element0 = htmlTreeBuilder0.lastFormattingElement();
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test02421() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Token.Tag token_Tag0 = token_StartTag0.name("b");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
        htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
        Element element0 = htmlTreeBuilder0.lastFormattingElement();
        element0.baseUri();
        assertNotNull(element0.baseUri());
    }

    @Test(timeout = 4000)
    public void test02522() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("param");
        boolean boolean0 = htmlTreeBuilder0.isSpecial(element0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test02623() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("pre");
        boolean boolean0 = htmlTreeBuilder0.isSpecial(document0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test02724() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test02725() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test02726() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test02827() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        boolean boolean0 = htmlTreeBuilder0.isFosterInserts();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test02928() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test02929() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Token.Tag token_Tag0 = token_StartTag0.name("b");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
        htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
        Element element0 = htmlTreeBuilder0.insertStartTag(";/");
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test03030() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
        ParseSettings parseSettings0 = new ParseSettings(false, false);
        htmlTreeBuilder0.parseFragment("InTableText", (Element) null, "noresize", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.insertStartTag("frameset");
        element0.baseUri();
        assertNotNull(element0.baseUri());
    }

    @Test(timeout = 4000)
    public void test03031() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
        ParseSettings parseSettings0 = new ParseSettings(false, false);
        htmlTreeBuilder0.parseFragment("InTableText", (Element) null, "noresize", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.insertStartTag("frameset");
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test03132() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Token.Tag token_Tag0 = token_StartTag0.name("b");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
        htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
        FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag0, false);
        formElement0.siblingIndex();
        assertEquals(0, formElement0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test03233() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Token.StartTag token_StartTag0 = new Token.StartTag();
        TextNode textNode0 = new TextNode("S&,0", "html");
        Attributes attributes0 = textNode0.attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("plaintext", attributes0);
        FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag1, false);
        formElement0.isBlock();
        assertFalse(formElement0.isBlock());
    }

    @Test(timeout = 4000)
    public void test03334() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test03335() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Token.StartTag token_StartTag1 = (Token.StartTag) token_StartTag0.name("b");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
        htmlTreeBuilder0.process(token_StartTag1, htmlTreeBuilderState0);
        Element element0 = htmlTreeBuilder0.insertEmpty(token_StartTag1);
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test03436() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        token_StartTag0.name("dl");
        Element element0 = htmlTreeBuilder0.insertEmpty(token_StartTag0);
        element0.childNodeSize();
        assertEquals(1, element0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test03537() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        String[] stringArray0 = new String[2];
        stringArray0[0] = "dl";
        stringArray0[1] = "dl";
        boolean boolean0 = htmlTreeBuilder0.inScope(stringArray0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03638() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
        ParseSettings parseSettings0 = new ParseSettings(false, false);
        List<Node> list0 = htmlTreeBuilder0.parseFragment("InTableText", (Element) null, "noresize", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test03639() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
        ParseSettings parseSettings0 = new ParseSettings(false, false);
        List<Node> list0 = htmlTreeBuilder0.parseFragment("InTableText", (Element) null, "noresize", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inScope("InTableText", (String[]) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03740() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test03741() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inScope("html");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03842() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
        ParseSettings parseSettings0 = new ParseSettings(false, false);
        List<Node> list0 = htmlTreeBuilder0.parseFragment("InTableText", (Element) null, "noresize", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test03843() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
        ParseSettings parseSettings0 = new ParseSettings(false, false);
        List<Node> list0 = htmlTreeBuilder0.parseFragment("InTableText", (Element) null, "noresize", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inScope("TreeBuilder{currentToken=org.jsoup.parser.Token$EOF@14, state=InBody, currentElement=<html>\n <head></head>\n <body>\n  InTableText\n </body>\n</html>}");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03944() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", (Element) null, "dl", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test03945() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", (Element) null, "dl", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inListItemScope("html");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test04046() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test04047() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inListItemScope("plaintext");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test04148() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
        ParseSettings parseSettings0 = new ParseSettings(false, false);
        List<Node> list0 = htmlTreeBuilder0.parseFragment("InTableText", (Element) null, "noresize", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test04149() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
        ParseSettings parseSettings0 = new ParseSettings(false, false);
        List<Node> list0 = htmlTreeBuilder0.parseFragment("InTableText", (Element) null, "noresize", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inButtonScope("$g|Q@");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test04250() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
        assertNotNull(arrayList0);
    }

    @Test(timeout = 4000)
    public void test04351() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test04352() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
        arrayList0.size();
    }

    @Test(timeout = 4000)
    public void test04453() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        List<String> list0 = htmlTreeBuilder0.getPendingTableCharacters();
        list0.contains("dl");
    }

    @Test(timeout = 4000)
    public void test04554() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
        ParseSettings parseSettings0 = new ParseSettings(false, false);
        htmlTreeBuilder0.parseFragment("InTableText", (Element) null, "noresize", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.getHeadElement();
        element0.childNodeSize();
        assertEquals(1, element0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test04555() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
        ParseSettings parseSettings0 = new ParseSettings(false, false);
        htmlTreeBuilder0.parseFragment("InTableText", (Element) null, "noresize", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.getHeadElement();
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test04556() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
        ParseSettings parseSettings0 = new ParseSettings(false, false);
        htmlTreeBuilder0.parseFragment("InTableText", (Element) null, "noresize", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.getHeadElement();
        element0.baseUri();
        assertNotNull(element0.baseUri());
    }

    @Test(timeout = 4000)
    public void test04657() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.getFromStack("mfmnMK");
        assertNotNull(element0);
    }

    @Test(timeout = 4000)
    public void test04758() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("ybS4X_Yz-!d");
        ParseErrorList parseErrorList0 = new ParseErrorList(2054, 2054);
        htmlTreeBuilder0.initialiseParse(stringReader0, "base", parseErrorList0, (ParseSettings) null);
        Document document0 = htmlTreeBuilder0.getDocument();
        document0.nodeName();
        assertNotNull(document0.nodeName());
    }

    @Test(timeout = 4000)
    public void test04859() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("'c=RMmMJP+I^L7)");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("'c=RMmMJP+I^L7)", document0, "script", (ParseErrorList) null, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test04860() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("'c=RMmMJP+I^L7)");
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("'c=RMmMJP+I^L7)", document0, "script", (ParseErrorList) null, parseSettings0);
        Document document1 = htmlTreeBuilder0.getDocument();
        document1.location();
        assertNotNull(document1.location());
    }

    @Test(timeout = 4000)
    public void test04961() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        String string0 = htmlTreeBuilder0.getBaseUri();
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test05062() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Token.Tag token_Tag0 = token_StartTag0.name("b");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
        htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
        boolean boolean0 = htmlTreeBuilder0.framesetOk();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test05163() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        boolean boolean0 = htmlTreeBuilder0.framesetOk();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test05264() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test05365() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.replaceOnStack(document0, document0);
    }

    @Test(timeout = 4000)
    public void test05466() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.removeLastFormattingElement();
    }

    @Test(timeout = 4000)
    public void test05567() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.removeFromStack((Element) null);
    }

    @Test(timeout = 4000)
    public void test05668() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("P _r,Ji8EW^9@/");
        htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
    }

    @Test(timeout = 4000)
    public void test05769() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.reconstructFormattingElements();
    }

    @Test(timeout = 4000)
    public void test05870() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("");
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
    }

    @Test(timeout = 4000)
    public void test05971() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.Initial;
        htmlTreeBuilder0.process(token_StartTag0, htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test06072() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Token.Tag token_Tag0 = token_StartTag0.name("");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
        htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test06173() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Token.TokenType token_TokenType0 = Token.TokenType.Comment;
        token_StartTag0.type = token_TokenType0;
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
        htmlTreeBuilder0.process(token_StartTag0, htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test06274() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        htmlTreeBuilder0.process(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test06375() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.popStackToClose((String[]) null);
    }

    @Test(timeout = 4000)
    public void test06476() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.popStackToClose(".K0");
    }

    @Test(timeout = 4000)
    public void test06577() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.popStackToBefore("@'p(7k{iZw(8");
    }

    @Test(timeout = 4000)
    public void test06678() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.popStackToBefore("noscript");
        htmlTreeBuilder0.pop();
    }

    @Test(timeout = 4000)
    public void test06779() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
        htmlTreeBuilder0.parseFragment("InTableText", (Element) null, "noresize", parseErrorList0, (ParseSettings) null);
    }

    @Test(timeout = 4000)
    public void test06880() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("");
        htmlTreeBuilder0.onStack(document0);
    }

    @Test(timeout = 4000)
    public void test06981() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.maybeSetBaseUri((Element) null);
    }

    @Test(timeout = 4000)
    public void test07082() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.lastFormattingElement();
    }

    @Test(timeout = 4000)
    public void test07183() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.isSpecial((Element) null);
    }

    @Test(timeout = 4000)
    public void test07284() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertStartTag(":0.=2x}*");
    }

    @Test(timeout = 4000)
    public void test07385() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertInFosterParent((Node) null);
    }

    @Test(timeout = 4000)
    public void test07486() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.pop();
        htmlTreeBuilder0.insertInFosterParent((Node) null);
    }

    @Test(timeout = 4000)
    public void test07587() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertForm((Token.StartTag) null, false);
    }

    @Test(timeout = 4000)
    public void test07688() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        CharacterReader characterReader0 = new CharacterReader("AfterDoctypePublicIdentifier");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(0);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        htmlTreeBuilder0.insertForm(token_StartTag0, true);
    }

    @Test(timeout = 4000)
    public void test07789() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertEmpty((Token.StartTag) null);
    }

    @Test(timeout = 4000)
    public void test07890() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        htmlTreeBuilder0.insertEmpty(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test07991() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        CharacterReader characterReader0 = new CharacterReader("org.jsoup.select.Evaluator$AttributeWithValueMatching");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("org.jsoup.select.Evaluator$AttributeWithValueMatching", attributes0);
        htmlTreeBuilder0.insert(token_StartTag1);
    }

    @Test(timeout = 4000)
    public void test08092() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        htmlTreeBuilder0.insert(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test08193() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insert((Token.Comment) null);
    }

    @Test(timeout = 4000)
    public void test08294() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.Character token_Character0 = new Token.Character();
        htmlTreeBuilder0.insert(token_Character0);
    }

    @Test(timeout = 4000)
    public void test08395() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insert((Element) null);
    }

    @Test(timeout = 4000)
    public void test08496() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("ybS4X_Yz-!d");
        ParseErrorList parseErrorList0 = new ParseErrorList(2062, 2062);
        stringReader0.close();
        htmlTreeBuilder0.initialiseParse(stringReader0, "base", parseErrorList0, (ParseSettings) null);
    }

    @Test(timeout = 4000)
    public void test08597() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.initialiseParse((Reader) null, "dKJ", parseErrorList0, parseSettings0);
    }

    @Test(timeout = 4000)
    public void test08698() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inSelectScope("h!0");
    }

    @Test(timeout = 4000)
    public void test08799() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String[] stringArray0 = new String[8];
        htmlTreeBuilder0.inScope("param", stringArray0);
    }

    @Test(timeout = 4000)
    public void test088100() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("ybS4X_Yz-!d");
        ParseErrorList parseErrorList0 = new ParseErrorList(2062, 2062);
        htmlTreeBuilder0.initialiseParse(stringReader0, "base", parseErrorList0, (ParseSettings) null);
        String[] stringArray0 = new String[8];
        htmlTreeBuilder0.inScope("form", stringArray0);
    }

    @Test(timeout = 4000)
    public void test089101() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inButtonScope("DAC-ekb8WG,FA+}o]]");
    }

    @Test(timeout = 4000)
    public void test090102() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.getFromStack("8jfmDD");
    }

    @Test(timeout = 4000)
    public void test091103() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.getActiveFormattingElement("dl");
    }

    @Test(timeout = 4000)
    public void test092104() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InTableText;
        htmlTreeBuilder0.error(htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test093105() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
    }

    @Test(timeout = 4000)
    public void test094106() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.insertMarkerToFormattingElements();
        Element element0 = htmlTreeBuilder0.getActiveFormattingElement("aside");
        assertNotNull(element0);
    }

    @Test(timeout = 4000)
    public void test098107() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Token.Tag token_Tag0 = token_StartTag0.name("b");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
        htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
        htmlTreeBuilder0.popStackToClose("html");
        boolean boolean0 = htmlTreeBuilder0.process(token_StartTag0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test099108() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test099109() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Token.Tag token_Tag0 = token_StartTag0.name("b");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
        htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
        htmlTreeBuilder0.process(token_StartTag0, htmlTreeBuilderState0);
        htmlTreeBuilder0.popStackToClose("html");
        boolean boolean0 = htmlTreeBuilder0.process(token_StartTag0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test100110() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.insertMarkerToFormattingElements();
        Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
        assertNotNull(element0);
    }

    @Test(timeout = 4000)
    public void test101111() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
        assertNotNull(element0);
    }

    @Test(timeout = 4000)
    public void test103112() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.generateImpliedEndTags("intabletext");
    }

    @Test(timeout = 4000)
    public void test104113() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test104114() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test104115() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inSelectScope("dl");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test105116() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.popStackToClose("`irYhVQv;");
        htmlTreeBuilder0.inSelectScope("dl");
    }

    @Test(timeout = 4000)
    public void test106117() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test106118() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        token_StartTag0.appendTagName("header");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
        htmlTreeBuilder0.process(token_StartTag0, htmlTreeBuilderState0);
        boolean boolean0 = htmlTreeBuilder0.inTableScope("head");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test107119() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test107120() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test107121() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        String[] stringArray0 = new String[3];
        stringArray0[0] = "&$hnD:P1Za)*co/=d";
        stringArray0[1] = "plaitex";
        stringArray0[2] = "html";
        boolean boolean0 = htmlTreeBuilder0.inScope(stringArray0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test108122() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        token_StartTag0.name("dl");
        htmlTreeBuilder0.popStackToClose("html");
        htmlTreeBuilder0.process(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test110123() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
        ParseSettings parseSettings0 = new ParseSettings(false, true);
        htmlTreeBuilder0.parseFragment("InTableText", (Element) null, "noresize", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.replaceActiveFormattingElement((Element) null, (Element) null);
    }

    @Test(timeout = 4000)
    public void test111124() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.insertOnStackAfter(document0, document0);
    }

    @Test(timeout = 4000)
    public void test112125() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.aboveOnStack((Element) null);
    }

    @Test(timeout = 4000)
    public void test113126() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        CharacterReader characterReader0 = new CharacterReader("html");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(":/xHSZS$2uxdyI", attributes0);
        Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
        Element element1 = htmlTreeBuilder0.aboveOnStack(element0);
        element1.childNodeSize();
        assertEquals(0, element1.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test113127() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        CharacterReader characterReader0 = new CharacterReader("html");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(":/xHSZS$2uxdyI", attributes0);
        Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
        Element element1 = htmlTreeBuilder0.aboveOnStack(element0);
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test113128() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        CharacterReader characterReader0 = new CharacterReader("html");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(":/xHSZS$2uxdyI", attributes0);
        Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
        Element element1 = htmlTreeBuilder0.aboveOnStack(element0);
        element1.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test113129() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        CharacterReader characterReader0 = new CharacterReader("html");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(":/xHSZS$2uxdyI", attributes0);
        Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
        Element element1 = htmlTreeBuilder0.aboveOnStack(element0);
    }

    @Test(timeout = 4000)
    public void test117130() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.popStackToBefore("noscript");
        htmlTreeBuilder0.inScope("html");
    }

    @Test(timeout = 4000)
    public void test118131() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        String[] stringArray0 = new String[4];
        stringArray0[0] = "html";
        htmlTreeBuilder0.popStackToClose(stringArray0);
    }

    @Test(timeout = 4000)
    public void test119132() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", (Element) null, "dl", parseErrorList0, parseSettings0);
        String[] stringArray0 = new String[6];
        stringArray0[0] = "dl";
        stringArray0[1] = "dl";
        stringArray0[2] = "dl";
        stringArray0[3] = "dl";
        stringArray0[4] = "dl";
        stringArray0[5] = "dl";
        htmlTreeBuilder0.popStackToClose(stringArray0);
    }

    @Test(timeout = 4000)
    public void test121133() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
        ParseSettings parseSettings0 = new ParseSettings(false, false);
        List<Node> list0 = htmlTreeBuilder0.parseFragment("InTableText", (Element) null, "noresize", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test121134() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
        ParseSettings parseSettings0 = new ParseSettings(false, false);
        List<Node> list0 = htmlTreeBuilder0.parseFragment("InTableText", (Element) null, "noresize", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack((Element) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test123135() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test123136() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test123137() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.isInActiveFormattingElements(document0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test124138() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        htmlTreeBuilder0.parseFragment("dl", document0, "dl", parseErrorList0, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Token.StartTag token_StartTag1 = (Token.StartTag) token_StartTag0.name("b");
        FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag1, true);
        formElement0.childNodeSize();
        assertEquals(0, formElement0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test125139() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        htmlTreeBuilder0.maybeSetBaseUri(document0);
        document0.quirksMode();
        assertNotNull(document0.quirksMode());
    }

    @Test(timeout = 4000)
    public void test126140() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("l");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("l", element0, "l", parseErrorList0, parseSettings0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test126141() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element("l");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
        ParseSettings parseSettings0 = ParseSettings.preserveCase;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("l", element0, "l", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test127142() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableContext();
    }

    @Test(timeout = 4000)
    public void test129143() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inTableScope("dl");
    }

    @Test(timeout = 4000)
    public void test130144() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.Comment token_Comment0 = new Token.Comment();
        htmlTreeBuilder0.insert(token_Comment0);
    }

    @Test(timeout = 4000)
    public void test131145() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("V'DgO6![}VK]5#a-w:");
        htmlTreeBuilder0.push(document0);
    }

    @Test(timeout = 4000)
    public void test133146() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test135147() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("dl");
        htmlTreeBuilder0.isInActiveFormattingElements(document0);
    }

    @Test(timeout = 4000)
    public void test136148() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.aboveOnStack((Element) null);
    }

    @Test(timeout = 4000)
    public void test137149() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        List<String> list0 = htmlTreeBuilder0.getPendingTableCharacters();
        assertNotNull(list0);
    }

    @Test(timeout = 4000)
    public void test138150() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String string0 = htmlTreeBuilder0.getBaseUri();
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test139151() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inScope("html");
    }

    @Test(timeout = 4000)
    public void test140152() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.pop();
    }

    @Test(timeout = 4000)
    public void test141153() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.getDocument();
        assertNotNull(document0);
    }

    @Test(timeout = 4000)
    public void test143154() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String[] stringArray0 = new String[3];
        htmlTreeBuilder0.inScope(stringArray0);
    }

    @Test(timeout = 4000)
    public void test145155() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableRowContext();
    }

    @Test(timeout = 4000)
    public void test146156() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        FormElement formElement0 = htmlTreeBuilder0.getFormElement();
        assertNotNull(formElement0);
    }

    @Test(timeout = 4000)
    public void test148157() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertMarkerToFormattingElements();
    }

    @Test(timeout = 4000)
    public void test151158() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test152159() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inListItemScope("plaitex");
    }

    @Test(timeout = 4000)
    public void test153160() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableBodyContext();
    }

    @Test(timeout = 4000)
    public void test155161() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
    }

    @Test(timeout = 4000)
    public void test156162() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.replaceOnStack((Element) null, (Element) null);
    }

    @Test(timeout = 4000)
    public void test157163() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertStartTag("b");
    }
}
