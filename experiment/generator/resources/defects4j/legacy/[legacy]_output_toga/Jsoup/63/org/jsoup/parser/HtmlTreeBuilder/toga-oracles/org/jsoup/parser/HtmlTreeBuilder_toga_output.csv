project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Token.Tag token_Tag0 = token_StartTag0.name(""b"");
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
    htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
    htmlTreeBuilder0.process(token_StartTag0, htmlTreeBuilderState0);
    Element element0 = htmlTreeBuilder0.getActiveFormattingElement("".snBr2DXG0"");
    assertNull(element0);
}",0,
project,0,test0012,"public void test0012() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Token.Tag token_Tag0 = token_StartTag0.name(""b"");
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
    htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
    boolean boolean0 = htmlTreeBuilder0.inSelectScope(""39|<Y"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0023,"public void test0023() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""6<v;\""na3/E/)sX^"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.replaceActiveFormattingElement(document0, (Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test0034,"public void test0034() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document("""");
    Document document1 = document0.clone();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertOnStackAfter(document0, document1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test0045,"public void test0045() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", (Element) null, ""dl"", parseErrorList0, parseSettings0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertInFosterParent((Node) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test0056,"public void test0056() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.pushActiveFormattingElements(document0);
    assertFalse(document0.updateMetaCharsetElement());
}",0,assertFalse(document0.updateMetaCharsetElement())
project,0,test0078,"public void test0078() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""iframe"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    Document document0 = htmlTreeBuilder0.parse(stringReader0, """", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.insert(document0);
    assertEquals(1, document0.siblingIndex());
}",0,
project,0,test0109,"public void test0109() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""marquee"");
    htmlTreeBuilder0.setHeadElement(document0);
    assertEquals(""marquee"", document0.location());
}",0,assertNotNull(document0.location())
project,0,test01310,"public void test01310() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.insertInFosterParent(document0);
    assertEquals(1, document0.siblingIndex());
}",0,"assertEquals(0, document0.siblingIndex())"
project,0,test01611,"public void test01611() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    String string0 = htmlTreeBuilder0.toString();
    assertNotNull(string0);
}",0,
project,0,test01812,"public void test01812() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Token.Tag token_Tag0 = token_StartTag0.name(""b"");
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
    htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
    htmlTreeBuilder0.process(token_StartTag0, htmlTreeBuilderState0);
    Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
    assertNotNull(element0);
}",0,assertNotNull(element0)
project,0,test01813,"public void test01813() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Token.Tag token_Tag0 = token_StartTag0.name(""b"");
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
    htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
    htmlTreeBuilder0.process(token_StartTag0, htmlTreeBuilderState0);
    Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
    assertEquals(0, element0.siblingIndex());
}",0,
project,0,test01914,"public void test01914() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Token.Tag token_Tag0 = token_StartTag0.name(""b"");
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
    htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
    Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
    assertFalse(element0.isBlock());
}",0,
project,0,test02015,"public void test02015() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Token.Tag token_Tag0 = token_StartTag0.name(""w&b"");
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InSelectInTable;
    boolean boolean0 = htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02116,"public void test02116() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.onStack(document0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02217,"public void test02217() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.lastFormattingElement();
    assertNull(element0);
}",0,
project,0,test02319,"public void test02319() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Token.Tag token_Tag0 = token_StartTag0.name(""b"");
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
    htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
    htmlTreeBuilder0.process(token_StartTag0, htmlTreeBuilderState0);
    Element element0 = htmlTreeBuilder0.lastFormattingElement();
    assertNotNull(element0);
}",0,assertNotNull(element0)
project,0,test02320,"public void test02320() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Token.Tag token_Tag0 = token_StartTag0.name(""b"");
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
    htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
    htmlTreeBuilder0.process(token_StartTag0, htmlTreeBuilderState0);
    Element element0 = htmlTreeBuilder0.lastFormattingElement();
    assertEquals(0, element0.siblingIndex());
}",0,"assertEquals(0, element0.siblingIndex())"
project,0,test02421,"public void test02421() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Token.Tag token_Tag0 = token_StartTag0.name(""b"");
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
    htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
    Element element0 = htmlTreeBuilder0.lastFormattingElement();
    assertEquals(""dl"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test02522,"public void test02522() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Element element0 = new Element(""param"");
    boolean boolean0 = htmlTreeBuilder0.isSpecial(element0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test02623,"public void test02623() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""pre"");
    boolean boolean0 = htmlTreeBuilder0.isSpecial(document0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02726,"public void test02726() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test02827,"public void test02827() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    boolean boolean0 = htmlTreeBuilder0.isFosterInserts();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02929,"public void test02929() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Token.Tag token_Tag0 = token_StartTag0.name(""b"");
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
    htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
    Element element0 = htmlTreeBuilder0.insertStartTag("";/"");
    assertEquals(0, element0.siblingIndex());
}",0,
project,0,test03030,"public void test03030() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
    ParseSettings parseSettings0 = new ParseSettings(false, false);
    htmlTreeBuilder0.parseFragment(""InTableText"", (Element) null, ""noresize"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.insertStartTag(""frameset"");
    assertEquals(""noresize"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test03031,"public void test03031() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
    ParseSettings parseSettings0 = new ParseSettings(false, false);
    htmlTreeBuilder0.parseFragment(""InTableText"", (Element) null, ""noresize"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.insertStartTag(""frameset"");
    assertEquals(1, element0.siblingIndex());
}",0,"assertEquals(0, element0.siblingIndex())"
project,0,test03132,"public void test03132() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Token.Tag token_Tag0 = token_StartTag0.name(""b"");
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
    htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
    FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag0, false);
    assertEquals(0, formElement0.siblingIndex());
}",0,"assertEquals(0, formElement0.siblingIndex())"
project,0,test03233,"public void test03233() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Token.StartTag token_StartTag0 = new Token.StartTag();
    TextNode textNode0 = new TextNode(""S&,0"", ""html"");
    Attributes attributes0 = textNode0.attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""plaintext"", attributes0);
    FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag1, false);
    assertTrue(formElement0.isBlock());
}",0,assertFalse(formElement0.isBlock())
project,0,test03335,"public void test03335() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Token.StartTag token_StartTag1 = (Token.StartTag) token_StartTag0.name(""b"");
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
    htmlTreeBuilder0.process(token_StartTag1, htmlTreeBuilderState0);
    Element element0 = htmlTreeBuilder0.insertEmpty(token_StartTag1);
    assertEquals(0, element0.siblingIndex());
}",0,
project,0,test03436,"public void test03436() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    token_StartTag0.name(""dl"");
    Element element0 = htmlTreeBuilder0.insertEmpty(token_StartTag0);
    assertEquals(0, element0.childNodeSize());
}",0,"assertEquals(1, element0.childNodeSize())"
project,0,test03537,"public void test03537() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    String[] stringArray0 = new String[2];
    stringArray0[0] = ""dl"";
    stringArray0[1] = ""dl"";
    boolean boolean0 = htmlTreeBuilder0.inScope(stringArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test03639,"public void test03639() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
    ParseSettings parseSettings0 = new ParseSettings(false, false);
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""InTableText"", (Element) null, ""noresize"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.inScope(""InTableText"", (String[]) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test03741,"public void test03741() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.inScope(""html"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test03843,"public void test03843() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
    ParseSettings parseSettings0 = new ParseSettings(false, false);
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""InTableText"", (Element) null, ""noresize"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.inScope(""TreeBuilder{currentToken=org.jsoup.parser.Token$EOF@14, state=InBody, currentElement=<html>\n <head></head>\n <body>\n  InTableText\n </body>\n</html>}"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test03945,"public void test03945() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""dl"", (Element) null, ""dl"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.inListItemScope(""html"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test04047,"public void test04047() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.inListItemScope(""plaintext"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test04149,"public void test04149() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
    ParseSettings parseSettings0 = new ParseSettings(false, false);
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""InTableText"", (Element) null, ""noresize"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.inButtonScope(""$g|Q@"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test04250,"public void test04250() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
    assertNull(arrayList0);
}",0,assertNotNull(arrayList0)
project,0,test04554,"public void test04554() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
    ParseSettings parseSettings0 = new ParseSettings(false, false);
    htmlTreeBuilder0.parseFragment(""InTableText"", (Element) null, ""noresize"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.getHeadElement();
    assertEquals(0, element0.childNodeSize());
}",0,"assertEquals(1, element0.childNodeSize())"
project,0,test04555,"public void test04555() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
    ParseSettings parseSettings0 = new ParseSettings(false, false);
    htmlTreeBuilder0.parseFragment(""InTableText"", (Element) null, ""noresize"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.getHeadElement();
    assertEquals(0, element0.siblingIndex());
}",0,"assertEquals(0, element0.siblingIndex())"
project,0,test04556,"public void test04556() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
    ParseSettings parseSettings0 = new ParseSettings(false, false);
    htmlTreeBuilder0.parseFragment(""InTableText"", (Element) null, ""noresize"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.getHeadElement();
    assertEquals(""noresize"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test04657,"public void test04657() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.getFromStack(""mfmnMK"");
    assertNull(element0);
}",0,assertNotNull(element0)
project,0,test04758,"public void test04758() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""ybS4X_Yz-!d"");
    ParseErrorList parseErrorList0 = new ParseErrorList(2054, 2054);
    htmlTreeBuilder0.initialiseParse(stringReader0, ""base"", parseErrorList0, (ParseSettings) null);
    Document document0 = htmlTreeBuilder0.getDocument();
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test04860,"public void test04860() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""'c=RMmMJP+I^L7)"");
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""'c=RMmMJP+I^L7)"", document0, ""script"", (ParseErrorList) null, parseSettings0);
    Document document1 = htmlTreeBuilder0.getDocument();
    assertEquals(""script"", document1.location());
}",0,assertNotNull(document1.location())
project,0,test04961,"public void test04961() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    String string0 = htmlTreeBuilder0.getBaseUri();
    assertEquals(""dl"", string0);
}",0,assertNotNull(string0)
project,0,test05062,"public void test05062() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Token.Tag token_Tag0 = token_StartTag0.name(""b"");
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
    htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
    boolean boolean0 = htmlTreeBuilder0.framesetOk();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test05163,"public void test05163() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    boolean boolean0 = htmlTreeBuilder0.framesetOk();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test05264,"public void test05264() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.resetInsertionMode();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05365,"public void test05365() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.replaceOnStack(document0, document0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test05466,"public void test05466() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.removeLastFormattingElement();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05567,"public void test05567() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.removeFromStack((Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05668,"public void test05668() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""P _r,Ji8EW^9@/"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05769,"public void test05769() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.reconstructFormattingElements();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test05870,"public void test05870() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell("""");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05971,"public void test05971() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.Initial;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.process(token_StartTag0, htmlTreeBuilderState0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilderState$2"", e);
    }
}",0,
project,0,test06072,"public void test06072() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Token.Tag token_Tag0 = token_StartTag0.name("""");
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test06173,"public void test06173() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Token.TokenType token_TokenType0 = Token.TokenType.Comment;
    token_StartTag0.type = token_TokenType0;
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.process(token_StartTag0, htmlTreeBuilderState0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jsoup.parser.Token$StartTag cannot be cast to org.jsoup.parser.Token$Comment
        //
        verifyException(""org.jsoup.parser.Token"", e);
    }
}",0,
project,0,test06274,"public void test06274() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.process(token_StartTag0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",1,
project,0,test06375,"public void test06375() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.popStackToClose((String[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test06476,"public void test06476() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.popStackToClose("".K0"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test06577,"public void test06577() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.popStackToBefore(""@'p(7k{iZw(8"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test06678,"public void test06678() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.popStackToBefore(""noscript"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.pop();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test06779,"public void test06779() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.parseFragment(""InTableText"", (Element) null, ""noresize"", parseErrorList0, (ParseSettings) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test06880,"public void test06880() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell("""");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.onStack(document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test06981,"public void test06981() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.maybeSetBaseUri((Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test07082,"public void test07082() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.lastFormattingElement();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test07183,"public void test07183() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.isSpecial((Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test07284,"public void test07284() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertStartTag("":0.=2x}*"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test07385,"public void test07385() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertInFosterParent((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test07486,"public void test07486() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.pop();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertInFosterParent((Node) null);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test07587,"public void test07587() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertForm((Token.StartTag) null, false);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test07688,"public void test07688() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    CharacterReader characterReader0 = new CharacterReader(""AfterDoctypePublicIdentifier"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(0);
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertForm(token_StartTag0, true);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test07789,"public void test07789() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertEmpty((Token.StartTag) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test07890,"public void test07890() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertEmpty(token_StartTag0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test07991,"public void test07991() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.select.Evaluator$AttributeWithValueMatching"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Attributes attributes0 = new Attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""org.jsoup.select.Evaluator$AttributeWithValueMatching"", attributes0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert(token_StartTag1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test08092,"public void test08092() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert(token_StartTag0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test08193,"public void test08193() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert((Token.Comment) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test08294,"public void test08294() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.Character token_Character0 = new Token.Character();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert(token_Character0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test08395,"public void test08395() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert((Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test08496,"public void test08496() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""ybS4X_Yz-!d"");
    ParseErrorList parseErrorList0 = new ParseErrorList(2062, 2062);
    stringReader0.close();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.initialiseParse(stringReader0, ""base"", parseErrorList0, (ParseSettings) null);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // java.io.IOException: Stream closed
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test08597,"public void test08597() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.initialiseParse((Reader) null, ""dKJ"", parseErrorList0, parseSettings0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String input must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test08698,"public void test08698() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inSelectScope(""h!0"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test08799,"public void test08799() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    String[] stringArray0 = new String[8];
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inScope(""param"", stringArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test088100,"public void test088100() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""ybS4X_Yz-!d"");
    ParseErrorList parseErrorList0 = new ParseErrorList(2062, 2062);
    htmlTreeBuilder0.initialiseParse(stringReader0, ""base"", parseErrorList0, (ParseSettings) null);
    String[] stringArray0 = new String[8];
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inScope(""form"", stringArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Should not be reachable
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test089101,"public void test089101() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inButtonScope(""DAC-ekb8WG,FA+}o]]"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test090102,"public void test090102() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.getFromStack(""8jfmDD"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test091103,"public void test091103() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.getActiveFormattingElement(""dl"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test092104,"public void test092104() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InTableText;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.error(htmlTreeBuilderState0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test093105,"public void test093105() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
    }
}",0,
project,0,test094106,"public void test094106() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.insertMarkerToFormattingElements();
    Element element0 = htmlTreeBuilder0.getActiveFormattingElement(""aside"");
    assertNull(element0);
}",0,assertNotNull(element0)
project,0,test098107,"public void test098107() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Token.Tag token_Tag0 = token_StartTag0.name(""b"");
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
    htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
    htmlTreeBuilder0.popStackToClose(""html"");
    boolean boolean0 = htmlTreeBuilder0.process(token_StartTag0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test099109,"public void test099109() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Token.Tag token_Tag0 = token_StartTag0.name(""b"");
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
    htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
    htmlTreeBuilder0.process(token_StartTag0, htmlTreeBuilderState0);
    htmlTreeBuilder0.popStackToClose(""html"");
    boolean boolean0 = htmlTreeBuilder0.process(token_StartTag0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test100110,"public void test100110() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.insertMarkerToFormattingElements();
    Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
    assertNull(element0);
}",0,assertNotNull(element0)
project,0,test101111,"public void test101111() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
    assertNull(element0);
}",0,assertNotNull(element0)
project,0,test103112,"public void test103112() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.generateImpliedEndTags(""intabletext"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test104115,"public void test104115() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.inSelectScope(""dl"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test105116,"public void test105116() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.popStackToClose(""`irYhVQv;"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inSelectScope(""dl"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Should not be reachable
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test106118,"public void test106118() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    token_StartTag0.appendTagName(""header"");
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterHead;
    htmlTreeBuilder0.process(token_StartTag0, htmlTreeBuilderState0);
    boolean boolean0 = htmlTreeBuilder0.inTableScope(""head"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test107121,"public void test107121() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    String[] stringArray0 = new String[3];
    stringArray0[0] = ""&$hnD:P1Za)*co/=d"";
    stringArray0[1] = ""plaitex"";
    stringArray0[2] = ""html"";
    boolean boolean0 = htmlTreeBuilder0.inScope(stringArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test108122,"public void test108122() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    token_StartTag0.name(""dl"");
    htmlTreeBuilder0.popStackToClose(""html"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.process(token_StartTag0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Should not be reachable
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test110123,"public void test110123() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
    ParseSettings parseSettings0 = new ParseSettings(false, true);
    htmlTreeBuilder0.parseFragment(""InTableText"", (Element) null, ""noresize"", parseErrorList0, parseSettings0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.replaceActiveFormattingElement((Element) null, (Element) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test111124,"public void test111124() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertOnStackAfter(document0, document0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test112125,"public void test112125() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.aboveOnStack((Element) null);
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test113126,"public void test113126() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    CharacterReader characterReader0 = new CharacterReader(""html"");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Attributes attributes0 = new Attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("":/xHSZS$2uxdyI"", attributes0);
    Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
    Element element1 = htmlTreeBuilder0.aboveOnStack(element0);
    assertEquals(2, element1.childNodeSize());
}",0,"assertEquals(0, element1.childNodeSize())"
project,0,test113128,"public void test113128() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    CharacterReader characterReader0 = new CharacterReader(""html"");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Attributes attributes0 = new Attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("":/xHSZS$2uxdyI"", attributes0);
    Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
    Element element1 = htmlTreeBuilder0.aboveOnStack(element0);
    assertEquals(0, element1.siblingIndex());
}",0,
project,0,test113129,"public void test113129() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    CharacterReader characterReader0 = new CharacterReader(""html"");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Attributes attributes0 = new Attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("":/xHSZS$2uxdyI"", attributes0);
    Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
    Element element1 = htmlTreeBuilder0.aboveOnStack(element0);
    assertNotNull(element1);
}",0,
project,0,test117130,"public void test117130() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.popStackToBefore(""noscript"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inScope(""html"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Should not be reachable
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test118131,"public void test118131() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    String[] stringArray0 = new String[4];
    stringArray0[0] = ""html"";
    htmlTreeBuilder0.popStackToClose(stringArray0);
    assertEquals(4, stringArray0.length);
}",0,
project,0,test119132,"public void test119132() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", (Element) null, ""dl"", parseErrorList0, parseSettings0);
    String[] stringArray0 = new String[6];
    stringArray0[0] = ""dl"";
    stringArray0[1] = ""dl"";
    stringArray0[2] = ""dl"";
    stringArray0[3] = ""dl"";
    stringArray0[4] = ""dl"";
    stringArray0[5] = ""dl"";
    htmlTreeBuilder0.popStackToClose(stringArray0);
    assertEquals(6, stringArray0.length);
}",0,
project,0,test121134,"public void test121134() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = new ParseErrorList(3512, 501);
    ParseSettings parseSettings0 = new ParseSettings(false, false);
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""InTableText"", (Element) null, ""noresize"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.removeFromStack((Element) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test123137,"public void test123137() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.isInActiveFormattingElements(document0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test124138,"public void test124138() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(30);
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parseFragment(""dl"", document0, ""dl"", parseErrorList0, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Token.StartTag token_StartTag1 = (Token.StartTag) token_StartTag0.name(""b"");
    FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag1, true);
    assertEquals(0, formElement0.childNodeSize());
}",0,"assertEquals(0, formElement0.childNodeSize())"
project,0,test125139,"public void test125139() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    htmlTreeBuilder0.maybeSetBaseUri(document0);
    assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
}",0,assertNotNull(document0.quirksMode())
project,0,test127142,"public void test127142() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.clearStackToTableContext();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test129143,"public void test129143() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inTableScope(""dl"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test130144,"public void test130144() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.Comment token_Comment0 = new Token.Comment();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert(token_Comment0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test131145,"public void test131145() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""V'DgO6![}VK]5#a-w:"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.push(document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test133146,"public void test133146() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test135147,"public void test135147() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""dl"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.isInActiveFormattingElements(document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test136148,"public void test136148() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.aboveOnStack((Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test137149,"public void test137149() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    List<String> list0 = htmlTreeBuilder0.getPendingTableCharacters();
    assertNull(list0);
}",0,assertNotNull(list0)
project,0,test138150,"public void test138150() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    String string0 = htmlTreeBuilder0.getBaseUri();
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test139151,"public void test139151() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inScope(""html"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test140152,"public void test140152() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.pop();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test141153,"public void test141153() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.getDocument();
    assertNull(document0);
}",0,assertNotNull(document0)
project,0,test143154,"public void test143154() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    String[] stringArray0 = new String[3];
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inScope(stringArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test145155,"public void test145155() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.clearStackToTableRowContext();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test146156,"public void test146156() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    FormElement formElement0 = htmlTreeBuilder0.getFormElement();
    assertNull(formElement0);
}",0,assertNotNull(formElement0)
project,0,test148157,"public void test148157() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertMarkerToFormattingElements();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test151158,"public void test151158() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.toString();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test152159,"public void test152159() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inListItemScope(""plaitex"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test153160,"public void test153160() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.clearStackToTableBodyContext();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test155161,"public void test155161() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Element element0 = htmlTreeBuilder0.getHeadElement();
    assertNull(element0);
}",0,
project,0,test156162,"public void test156162() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.replaceOnStack((Element) null, (Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test157163,"public void test157163() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertStartTag(""b"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
