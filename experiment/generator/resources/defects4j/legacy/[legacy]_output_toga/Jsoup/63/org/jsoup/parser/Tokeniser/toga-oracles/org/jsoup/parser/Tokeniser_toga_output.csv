project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test040,"public void test040() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    CharacterReader characterReader0 = new CharacterReader(""W<PM!,iwmAb;P>/2${["");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token token0 = tokeniser0.read();
    assertEquals(14, characterReader0.pos());
}",0,"assertEquals(0, characterReader0.pos())"
project,0,test072,"public void test072() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
    boolean boolean0 = tokeniser0.currentNodeInHtmlNS();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test103,"public void test103() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    CharacterReader characterReader0 = new CharacterReader(""KD`%\""&#579gRO"");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    char[] charArray0 = new char[0];
    tokeniser0.emit(charArray0);
    assertArrayEquals(new char[] {}, charArray0);
}",0,
project,0,test1512,"public void test1512() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    CharacterReader characterReader0 = new CharacterReader(""[&gg;"");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    TokeniserState tokeniserState0 = TokeniserState.AttributeValue_unquoted;
    tokeniser0.advanceTransition(tokeniserState0);
    // Undeclared exception!
    try {
        tokeniser0.read();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokeniserState$40"", e);
    }
}",0,
project,0,test1613,"public void test1613() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    CharacterReader characterReader0 = new CharacterReader(""K\""&#3MgPFO"");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Character character0 = new Character('K');
    int[] intArray0 = tokeniser0.consumeCharacterReference(character0, false);
    assertNull(intArray0);
}",0,
project,0,test2121,"public void test2121() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Ny,&gt-"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    String string0 = tokeniser0.unescapeEntities(true);
    assertTrue(characterReader0.isEmpty());
}",0,assertTrue(characterReader0.isEmpty())
project,0,test2122,"public void test2122() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Ny,&gt-"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    String string0 = tokeniser0.unescapeEntities(true);
    assertEquals(""Ny,&gt-"", string0);
}",0,
project,0,test2527,"public void test2527() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
    Token.Tag token_Tag0 = tokeniser0.createTagPending(false);
    assertNotNull(token_Tag0);
}",0,assertNotNull(token_Tag0)
project,0,test2628,"public void test2628() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
    boolean boolean0 = tokeniser0.isAppropriateEndTagToken();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2729,"public void test2729() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""kVab&Ox"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Attributes attributes0 = new Attributes();
    tokeniser0.tagPending = (Token.Tag) token_StartTag0;
    token_StartTag0.nameAttr(""kVab&Ox"", attributes0);
    tokeniser0.emit(token_StartTag0);
    token_StartTag0.appendTagName(""kVab&Ox"");
    boolean boolean0 = tokeniser0.isAppropriateEndTagToken();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2830,"public void test2830() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""kVab&Ox"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Attributes attributes0 = new Attributes();
    tokeniser0.tagPending = (Token.Tag) token_StartTag0;
    token_StartTag0.nameAttr(""kVab&Ox"", attributes0);
    tokeniser0.emit(token_StartTag0);
    boolean boolean0 = tokeniser0.isAppropriateEndTagToken();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2931,"public void test2931() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""kVab&Ox"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Attributes attributes0 = new Attributes();
    token_StartTag0.nameAttr(""kVab&Ox"", attributes0);
    tokeniser0.emit(token_StartTag0);
    String string0 = tokeniser0.appropriateEndTagName();
    assertEquals(""kVab&Ox"", string0);
}",0,assertNotNull(string0)
project,0,test3032,"public void test3032() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(5);
    Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
    String string0 = tokeniser0.appropriateEndTagName();
    assertNull(string0);
}",0,
project,0,test3643,"public void test3643() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    CharacterReader characterReader0 = new CharacterReader(""&gt;"");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    String string0 = tokeniser0.unescapeEntities(true);
    assertTrue(characterReader0.isEmpty());
}",0,assertTrue(characterReader0.isEmpty())
project,0,test3644,"public void test3644() throws Throwable {
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    CharacterReader characterReader0 = new CharacterReader(""&gt;"");
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    String string0 = tokeniser0.unescapeEntities(true);
    assertEquals("">"", string0);
}",0,assertNotNull(string0)
