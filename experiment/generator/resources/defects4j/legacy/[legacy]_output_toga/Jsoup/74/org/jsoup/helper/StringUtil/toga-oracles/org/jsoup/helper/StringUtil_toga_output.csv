project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    URL uRL0 = MockURL.getHttpExample();
    URL uRL1 = StringUtil.resolve(uRL0, ""java.lang.String@0000000001BBBBB BBB          "");
    assertNotSame(uRL1, uRL0);
}",0,
project,0,test011,"public void test011() throws Throwable {
    String[] stringArray0 = new String[2];
    stringArray0[0] = ""?java.lang.String@0000000001CY-8_CY-8_"";
    boolean boolean0 = StringUtil.inSorted(""?java.lang.String@0000000001CY-8_CY-8_"", stringArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test022,"public void test022() throws Throwable {
    boolean boolean0 = StringUtil.isActuallyWhitespace(3677);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test033,"public void test033() throws Throwable {
    boolean boolean0 = StringUtil.isWhitespace((-2173));
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test044,"public void test044() throws Throwable {
    String string0 = StringUtil.padding(21);
    assertEquals(""                     "", string0);
}",1,
project,0,test055,"public void test055() throws Throwable {
    String string0 = StringUtil.normaliseWhitespace("""");
    assertEquals("""", string0);
}",0,
project,0,test066,"public void test066() throws Throwable {
    String[] stringArray0 = new String[0];
    String string0 = StringUtil.join(stringArray0, ""Xh:}zqM!gLSS"");
    assertEquals("""", string0);
}",0,
project,0,test077,"public void test077() throws Throwable {
    LinkedList<Object> linkedList0 = new LinkedList<Object>();
    Integer integer0 = new Integer((-2855));
    linkedList0.addFirst(integer0);
    String string0 = StringUtil.join((Collection) linkedList0, ""Rz ]NV8}^0vO&41"");
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test088,"public void test088() throws Throwable {
    URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
    URL uRL0 = MockURL.URL("""", """", 0, ""s"", uRLStreamHandler0);
    try {
        StringUtil.resolve(uRL0, """");
        fail(""Expecting exception: MalformedURLException"");
    } catch (MalformedURLException e) {
        //
        // unknown protocol:
        //
        verifyException(""org.evosuite.runtime.mock.java.net.MockURL"", e);
    }
}",0,
project,0,test099,"public void test099() throws Throwable {
    String[] stringArray0 = new String[7];
    URL uRL0 = MockURL.getHttpExample();
    // Undeclared exception!
    try {
        StringUtil.resolve(uRL0, stringArray0[3]);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
    }
}",0,
project,0,test1110,"public void test1110() throws Throwable {
    // Undeclared exception!
    try {
        StringUtil.normaliseWhitespace((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.helper.StringUtil"", e);
    }
}",0,
project,0,test1211,"public void test1211() throws Throwable {
    StringBuilder stringBuilder0 = StringUtil.stringBuilder();
    LinkedList<StringBuilder> linkedList0 = new LinkedList<StringBuilder>();
    Iterator<StringBuilder> iterator0 = linkedList0.iterator();
    linkedList0.add(stringBuilder0);
    // Undeclared exception!
    try {
        StringUtil.join(iterator0, ""2"");
        fail(""Expecting exception: ConcurrentModificationException"");
    } catch (ConcurrentModificationException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.LinkedList$ListItr"", e);
    }
}",0,
project,0,test1312,"public void test1312() throws Throwable {
    // Undeclared exception!
    try {
        StringUtil.join((Iterator) null, """");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.helper.StringUtil"", e);
    }
}",0,
project,0,test1413,"public void test1413() throws Throwable {
    LinkedList<Object> linkedList0 = new LinkedList<Object>();
    linkedList0.add((Object) null);
    // Undeclared exception!
    try {
        StringUtil.join((Collection) linkedList0, """");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.evosuite.runtime.System"", e);
    }
}",0,
project,0,test1514,"public void test1514() throws Throwable {
    // Undeclared exception!
    try {
        StringUtil.inSorted("""", (String[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.Arrays"", e);
    }
}",0,
project,0,test1615,"public void test1615() throws Throwable {
    // Undeclared exception!
    try {
        StringUtil.appendNormalisedWhitespace((StringBuilder) null, (String) null, true);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.helper.StringUtil"", e);
    }
}",0,
project,0,test1817,"public void test1817() throws Throwable {
    boolean boolean0 = StringUtil.isActuallyWhitespace(32);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test1918,"public void test1918() throws Throwable {
    boolean boolean0 = StringUtil.isWhitespace(32);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2019,"public void test2019() throws Throwable {
    boolean boolean0 = StringUtil.isWhitespace(1800);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2120,"public void test2120() throws Throwable {
    StringBuilder stringBuilder0 = StringUtil.stringBuilder();
    LinkedList<Object> linkedList0 = new LinkedList<Object>();
    linkedList0.add((Object) stringBuilder0);
    Object object0 = new Object();
    linkedList0.add(object0);
    Iterator<Object> iterator0 = linkedList0.descendingIterator();
    String string0 = StringUtil.join(iterator0, ""_-)a)H%?xJ'"");
    assertNotNull(string0);
}",0,
project,0,test2322,"public void test2322() throws Throwable {
    Iterator<Integer> iterator0 = (Iterator<Integer>) mock(Iterator.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(iterator0).hasNext();
    String string0 = StringUtil.join(iterator0, ""B"");
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test2524,"public void test2524() throws Throwable {
    String[] stringArray0 = new String[3];
    stringArray0[1] = """";
    boolean boolean0 = StringUtil.inSorted("""", stringArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2625,"public void test2625() throws Throwable {
    String[] stringArray0 = new String[3];
    stringArray0[1] = """";
    stringArray0[2] = """";
    boolean boolean0 = StringUtil.inSorted(""G`"", stringArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2726,"public void test2726() throws Throwable {
    String[] stringArray0 = new String[4];
    stringArray0[0] = ""7rDC]G>BIEe"";
    stringArray0[1] = """";
    boolean boolean0 = StringUtil.in("""", stringArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2827,"public void test2827() throws Throwable {
    String string0 = StringUtil.normaliseWhitespace(""E"");
    String[] stringArray0 = new String[7];
    stringArray0[0] = string0;
    // Undeclared exception!
    try {
        StringUtil.in(""Yc7{1LL["", stringArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
    }
}",0,
project,0,test2928,"public void test2928() throws Throwable {
    String[] stringArray0 = new String[0];
    boolean boolean0 = StringUtil.in("""", stringArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3130,"public void test3130() throws Throwable {
    boolean boolean0 = StringUtil.isActuallyWhitespace(160);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3231,"public void test3231() throws Throwable {
    boolean boolean0 = StringUtil.isActuallyWhitespace(13);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3332,"public void test3332() throws Throwable {
    boolean boolean0 = StringUtil.isActuallyWhitespace(12);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3433,"public void test3433() throws Throwable {
    boolean boolean0 = StringUtil.isActuallyWhitespace(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3534,"public void test3534() throws Throwable {
    boolean boolean0 = StringUtil.isActuallyWhitespace(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3635,"public void test3635() throws Throwable {
    boolean boolean0 = StringUtil.isActuallyWhitespace(8);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3736,"public void test3736() throws Throwable {
    boolean boolean0 = StringUtil.isWhitespace(13);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3837,"public void test3837() throws Throwable {
    boolean boolean0 = StringUtil.isWhitespace(12);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3938,"public void test3938() throws Throwable {
    boolean boolean0 = StringUtil.isWhitespace(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4039,"public void test4039() throws Throwable {
    boolean boolean0 = StringUtil.isWhitespace(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4140,"public void test4140() throws Throwable {
    boolean boolean0 = StringUtil.isNumeric(""2"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4241,"public void test4241() throws Throwable {
    boolean boolean0 = StringUtil.isNumeric(""           "");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4342,"public void test4342() throws Throwable {
    boolean boolean0 = StringUtil.isNumeric((String) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4443,"public void test4443() throws Throwable {
    boolean boolean0 = StringUtil.isBlank(""java.lang.String@0000000001$"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4544,"public void test4544() throws Throwable {
    boolean boolean0 = StringUtil.isBlank("""");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4645,"public void test4645() throws Throwable {
    boolean boolean0 = StringUtil.isBlank((String) null);
    assertTrue(boolean0);
}",1,
project,0,test4746,"public void test4746() throws Throwable {
    // Undeclared exception!
    try {
        StringUtil.padding((-578));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // width must be > 0
        //
        verifyException(""org.jsoup.helper.StringUtil"", e);
    }
}",1,
project,0,test4847,"public void test4847() throws Throwable {
    String[] stringArray0 = new String[1];
    stringArray0[0] = """";
    String string0 = StringUtil.join(stringArray0, """");
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test4948,"public void test4948() throws Throwable {
    LinkedList<Object> linkedList0 = new LinkedList<Object>();
    String string0 = StringUtil.join((Collection) linkedList0, ""tQl3}"");
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test5049,"public void test5049() throws Throwable {
    String string0 = StringUtil.resolve("""", "" "");
    assertEquals("""", string0);
}",0,
project,0,test5250,"public void test5250() throws Throwable {
    String[] stringArray0 = new String[7];
    // Undeclared exception!
    try {
        StringUtil.join(stringArray0, ""B"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.evosuite.runtime.System"", e);
    }
}",0,
