project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Document document0 = xmlTreeBuilder0.parse(""org.jsoup.parser.XmlTreeBuilder$1"", ""org.jsoup.parser.XmlTreeBuilder$1"");
    xmlTreeBuilder0.processStartTag(""org.jsoup.parser.XmlTreeBuilder$1"");
    Elements elements0 = document0.getElementsByTag(""org.jsoup.parser.XmlTreeBuilder$1"");
    xmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
    boolean boolean0 = xmlTreeBuilder0.processEndTag(""org.jsoup.parser.XmlTreeBuilder$1"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test043,"public void test043() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    xmlTreeBuilder0.parse(""org.jsoup.parser.XmlTreeBuilder$1"", ""org.jsoup.parser.XmlTreeBuilder$1"");
    Tokeniser tokeniser0 = xmlTreeBuilder0.tokeniser;
    Token.Comment token_Comment0 = tokeniser0.commentPending;
    boolean boolean0 = xmlTreeBuilder0.process(token_Comment0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test054,"public void test054() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    xmlTreeBuilder0.parse(""o<g.jsoup.parser.XmlTreeBuilder$1"", ""o<g.jsoup.parser.XmlTreeBuilder$1"");
    Token.Doctype token_Doctype0 = new Token.Doctype();
    boolean boolean0 = xmlTreeBuilder0.process(token_Doctype0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test075,"public void test075() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    StringReader stringReader0 = new StringReader("""");
    Document document0 = xmlTreeBuilder0.parse(stringReader0, """");
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test086,"public void test086() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""uD,vU#Vq9&Cl(W(s4["");
    Document document0 = xmlTreeBuilder0.parse(stringReader0, ""uD,vU#Vq9&Cl(W(s4["");
    assertEquals(1, document0.childNodeSize());
}",0,"assertEquals(0, document0.childNodeSize())"
project,0,test097,"public void test097() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.process(token_StartTag0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test108,"public void test108() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    ParseErrorList parseErrorList0 = xmlTreeBuilder0.errors;
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parseFragment((String) null, (String) null, parseErrorList0, parseSettings0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.io.StringReader"", e);
    }
}",0,
project,0,test119,"public void test119() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parse((String) null, ""tbody"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.io.StringReader"", e);
    }
}",0,
project,0,test1210,"public void test1210() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parse("""", (String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // BaseURI must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test1311,"public void test1311() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""uD,vU#Vq9&Cl(W(s4["");
    stringReader0.close();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parse(stringReader0, ""uD,vU#Vq9&Cl(W(s4["");
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // java.io.IOException: Stream closed
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test1412,"public void test1412() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    CDataNode cDataNode0 = new CDataNode(""i#IWVpcB''hy7"");
    Attributes attributes0 = cDataNode0.attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""i#IWVpcB''hy7"", attributes0);
    // Undeclared exception!
    try {
        xmlTreeBuilder0.insert(token_StartTag1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.Tag"", e);
    }
}",0,
project,0,test1513,"public void test1513() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.insert(token_StartTag0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test1614,"public void test1614() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.insert((Token.Doctype) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.XmlTreeBuilder"", e);
    }
}",0,
project,0,test1715,"public void test1715() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.CData token_CData0 = new Token.CData("""");
    // Undeclared exception!
    try {
        xmlTreeBuilder0.insert(token_CData0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test1816,"public void test1816() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    PipedReader pipedReader0 = new PipedReader();
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(0);
    // Undeclared exception!
    try {
        xmlTreeBuilder0.initialiseParse(pipedReader0, ""org.jsoup.parser.XmlTreeBuilder"", parseErrorList0, (ParseSettings) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test1917,"public void test1917() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    xmlTreeBuilder0.parse(""org.jsoup.parser.XmlTreeBuilder$1"", ""org.jsoup.parser.XmlTreeBuilder$1"");
    xmlTreeBuilder0.processStartTag(""org.jsoup.parser.XmlTreeBuilder$1"");
    Token.StartTag token_StartTag0 = new Token.StartTag();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""AfterDoctypeName"", (Attributes) null);
    Element element0 = xmlTreeBuilder0.insert(token_StartTag1);
    assertEquals(0, element0.siblingIndex());
}",0,"assertEquals(1, element0.siblingIndex())"
project,0,test1918,"public void test1918() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    xmlTreeBuilder0.parse(""org.jsoup.parser.XmlTreeBuilder$1"", ""org.jsoup.parser.XmlTreeBuilder$1"");
    xmlTreeBuilder0.processStartTag(""org.jsoup.parser.XmlTreeBuilder$1"");
    Token.StartTag token_StartTag0 = new Token.StartTag();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""AfterDoctypeName"", (Attributes) null);
    Element element0 = xmlTreeBuilder0.insert(token_StartTag1);
    boolean boolean0 = xmlTreeBuilder0.processEndTag(""org.jsoup.parser.XmlTreeBuilder$1"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2019,"public void test2019() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    xmlTreeBuilder0.parseFragment(""wGr+4Cn,Y"", ""wGr+4Cn,Y"", (ParseErrorList) null, (ParseSettings) null);
    boolean boolean0 = xmlTreeBuilder0.processEndTag(""wGr+4Cn,Y"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2120,"public void test2120() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.CData token_CData0 = new Token.CData("""");
    // Undeclared exception!
    try {
        xmlTreeBuilder0.process(token_CData0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test2221,"public void test2221() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.Comment token_Comment0 = new Token.Comment();
    token_Comment0.bogus = true;
    // Undeclared exception!
    try {
        xmlTreeBuilder0.insert(token_Comment0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test2322,"public void test2322() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    xmlTreeBuilder0.parse(""VG[P1*NJN"", ""VG[P1*NJN"");
    Token.StartTag token_StartTag0 = new Token.StartTag();
    token_StartTag0.selfClosing = true;
    Attributes attributes0 = new Attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""VG[P1*NJN"", attributes0);
    Element element0 = xmlTreeBuilder0.insert(token_StartTag1);
    assertEquals(1, element0.siblingIndex());
}",0,"assertEquals(1, element0.siblingIndex())"
project,0,test2423,"public void test2423() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    Token.Comment token_Comment0 = new Token.Comment();
    Token.TokenType token_TokenType0 = Token.TokenType.StartTag;
    token_Comment0.type = token_TokenType0;
    // Undeclared exception!
    try {
        xmlTreeBuilder0.process(token_Comment0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jsoup.parser.Token$Comment cannot be cast to org.jsoup.parser.Token$StartTag
        //
        verifyException(""org.jsoup.parser.Token"", e);
    }
}",0,
project,0,test2524,"public void test2524() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    PipedWriter pipedWriter0 = new PipedWriter();
    PipedReader pipedReader0 = new PipedReader(pipedWriter0, 1);
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parse(pipedReader0, ""Iq9jc'\""'IE=#n.2jS3d"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test2726,"public void test2726() throws Throwable {
    XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
    ParseSettings parseSettings0 = xmlTreeBuilder0.defaultSettings();
    // Undeclared exception!
    try {
        xmlTreeBuilder0.parseFragment(""uc]U&&@?mjUgx_,e;"", (String) null, (ParseErrorList) null, parseSettings0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // BaseURI must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
