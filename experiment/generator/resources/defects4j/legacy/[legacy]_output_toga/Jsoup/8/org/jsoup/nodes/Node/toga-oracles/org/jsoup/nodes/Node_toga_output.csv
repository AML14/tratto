project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    assertEquals(""rBarr"", document0.baseUri());
}",0,
project,0,test001,"public void test001() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test002,"public void test002() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    assertFalse(document0.isBlock());
}",0,
project,0,test003,"public void test003() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test004,"public void test004() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    assertNotNull(document0);
}",0,
project,0,test005,"public void test005() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    assertEquals(""rBarr"", document0.baseUri());
}",0,
project,0,test006,"public void test006() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test007,"public void test007() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test008,"public void test008() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    assertEquals(1, (int) document0.siblingIndex());
}",0,
project,0,test009,"public void test009() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    assertFalse(element0.isBlock());
}",0,assertTrue(element0.isBlock())
project,0,test0010,"public void test0010() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    assertEquals(""#document"", element0.nodeName());
}",0,assertNotNull(element0.nodeName())
project,0,test0011,"public void test0011() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    assertEquals(1, (int) element0.siblingIndex());
}",0,
project,0,test0012,"public void test0012() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    assertEquals(""rBarr"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test0013,"public void test0013() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    assertNotNull(element0);
}",1,
project,0,test0014,"public void test0014() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    assertSame(document0, element0);
}",1,
project,0,test0015,"public void test0015() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    assertSame(element0, document0);
}",1,
project,0,test0016,"public void test0016() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    document0.setParentNode(element0);
    assertEquals(""rBarr"", document0.baseUri());
}",0,
project,0,test0017,"public void test0017() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    document0.setParentNode(element0);
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test0018,"public void test0018() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    document0.setParentNode(element0);
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test0019,"public void test0019() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    document0.setParentNode(element0);
    assertEquals(1, (int) document0.siblingIndex());
}",0,
project,0,test0020,"public void test0020() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    document0.setParentNode(element0);
    assertFalse(element0.isBlock());
}",0,assertFalse(element0.isBlock())
project,0,test0021,"public void test0021() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    document0.setParentNode(element0);
    assertEquals(""#document"", element0.nodeName());
}",0,assertNotNull(element0.nodeName())
project,0,test0022,"public void test0022() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    document0.setParentNode(element0);
    assertEquals(1, (int) element0.siblingIndex());
}",0,
project,0,test0023,"public void test0023() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    document0.setParentNode(element0);
    assertEquals(""rBarr"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test0024,"public void test0024() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    document0.setParentNode(element0);
    assertSame(document0, element0);
}",1,
project,0,test0025,"public void test0025() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    document0.setParentNode(element0);
    assertSame(element0, document0);
}",1,
project,0,test0026,"public void test0026() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    document0.setParentNode(element0);
    Node node0 = document0.nextSibling();
    assertEquals(""rBarr"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test0027,"public void test0027() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    document0.setParentNode(element0);
    Node node0 = document0.nextSibling();
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test0028,"public void test0028() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    document0.setParentNode(element0);
    Node node0 = document0.nextSibling();
    assertFalse(document0.isBlock());
}",0,
project,0,test0029,"public void test0029() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    document0.setParentNode(element0);
    Node node0 = document0.nextSibling();
    assertEquals(1, (int) document0.siblingIndex());
}",0,
project,0,test0030,"public void test0030() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    document0.setParentNode(element0);
    Node node0 = document0.nextSibling();
    assertNull(node0);
}",0,
project,0,test0031,"public void test0031() throws Throwable {
    Document document0 = Document.createShell(""rBarr"");
    Element element0 = document0.appendChild(document0);
    document0.setParentNode(element0);
    Node node0 = document0.nextSibling();
    assertSame(document0, element0);
}",0,
project,0,test0132,"public void test0132() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    assertEquals(""N&|u[bpkZ"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test0133,"public void test0133() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test0134,"public void test0134() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test0135,"public void test0135() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test0136,"public void test0136() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    assertNotNull(document0);
}",0,
project,0,test0137,"public void test0137() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    assertEquals(""N&|u[bpkZ"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test0138,"public void test0138() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    assertFalse(document0.isBlock());
}",0,
project,0,test0139,"public void test0139() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test0140,"public void test0140() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test0141,"public void test0141() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    assertEquals(""N&|u[bpkZ"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test0142,"public void test0142() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    assertTrue(element0.isBlock());
}",0,assertFalse(element0.isBlock())
project,0,test0143,"public void test0143() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    assertEquals(0, (int) element0.siblingIndex());
}",0,
project,0,test0144,"public void test0144() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    assertNotNull(element0);
}",0,
project,0,test0145,"public void test0145() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    List<Node> list0 = element0.siblingNodes();
    assertEquals(""N&|u[bpkZ"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test0146,"public void test0146() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    List<Node> list0 = element0.siblingNodes();
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test0147,"public void test0147() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    List<Node> list0 = element0.siblingNodes();
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test0148,"public void test0148() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    List<Node> list0 = element0.siblingNodes();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test0149,"public void test0149() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    List<Node> list0 = element0.siblingNodes();
    assertEquals(""N&|u[bpkZ"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test0150,"public void test0150() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    List<Node> list0 = element0.siblingNodes();
    assertTrue(element0.isBlock());
}",0,
project,0,test0151,"public void test0151() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    List<Node> list0 = element0.siblingNodes();
    assertEquals(0, (int) element0.siblingIndex());
}",0,
project,0,test0154,"public void test0154() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    List<Node> list0 = element0.siblingNodes();
    assertNotNull(list0);
}",0,assertNotNull(list0)
project,0,test0255,"public void test0255() throws Throwable {
    Document document0 = Document.createShell(""8zU*Kc~T=+w?P"");
    assertFalse(document0.isBlock());
}",0,
project,0,test0256,"public void test0256() throws Throwable {
    Document document0 = Document.createShell(""8zU*Kc~T=+w?P"");
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test0257,"public void test0257() throws Throwable {
    Document document0 = Document.createShell(""8zU*Kc~T=+w?P"");
    assertEquals(""8zU*Kc~T=+w?P"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test0258,"public void test0258() throws Throwable {
    Document document0 = Document.createShell(""8zU*Kc~T=+w?P"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test0259,"public void test0259() throws Throwable {
    Document document0 = Document.createShell(""8zU*Kc~T=+w?P"");
    assertNotNull(document0);
}",0,
project,0,test0262,"public void test0262() throws Throwable {
    Document document0 = Document.createShell(""8zU*Kc~T=+w?P"");
    StringBuilder stringBuilder0 = new StringBuilder(3545);
    Document.OutputSettings document_OutputSettings0 = document0.outputSettings();
    assertFalse(document0.isBlock());
}",0,
project,0,test0263,"public void test0263() throws Throwable {
    Document document0 = Document.createShell(""8zU*Kc~T=+w?P"");
    StringBuilder stringBuilder0 = new StringBuilder(3545);
    Document.OutputSettings document_OutputSettings0 = document0.outputSettings();
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test0264,"public void test0264() throws Throwable {
    Document document0 = Document.createShell(""8zU*Kc~T=+w?P"");
    StringBuilder stringBuilder0 = new StringBuilder(3545);
    Document.OutputSettings document_OutputSettings0 = document0.outputSettings();
    assertEquals(""8zU*Kc~T=+w?P"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test0265,"public void test0265() throws Throwable {
    Document document0 = Document.createShell(""8zU*Kc~T=+w?P"");
    StringBuilder stringBuilder0 = new StringBuilder(3545);
    Document.OutputSettings document_OutputSettings0 = document0.outputSettings();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test0269,"public void test0269() throws Throwable {
    Document document0 = Document.createShell(""8zU*Kc~T=+w?P"");
    StringBuilder stringBuilder0 = new StringBuilder(3545);
    Document.OutputSettings document_OutputSettings0 = document0.outputSettings();
    assertNotNull(document_OutputSettings0);
}",0,assertNotNull(document_OutputSettings0)
project,0,test0270,"public void test0270() throws Throwable {
    Document document0 = Document.createShell(""8zU*Kc~T=+w?P"");
    StringBuilder stringBuilder0 = new StringBuilder(3545);
    Document.OutputSettings document_OutputSettings0 = document0.outputSettings();
    document0.indent(stringBuilder0, 489, document_OutputSettings0);
    assertFalse(document0.isBlock());
}",0,
project,0,test0271,"public void test0271() throws Throwable {
    Document document0 = Document.createShell(""8zU*Kc~T=+w?P"");
    StringBuilder stringBuilder0 = new StringBuilder(3545);
    Document.OutputSettings document_OutputSettings0 = document0.outputSettings();
    document0.indent(stringBuilder0, 489, document_OutputSettings0);
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test0272,"public void test0272() throws Throwable {
    Document document0 = Document.createShell(""8zU*Kc~T=+w?P"");
    StringBuilder stringBuilder0 = new StringBuilder(3545);
    Document.OutputSettings document_OutputSettings0 = document0.outputSettings();
    document0.indent(stringBuilder0, 489, document_OutputSettings0);
    assertEquals(""8zU*Kc~T=+w?P"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test0273,"public void test0273() throws Throwable {
    Document document0 = Document.createShell(""8zU*Kc~T=+w?P"");
    StringBuilder stringBuilder0 = new StringBuilder(3545);
    Document.OutputSettings document_OutputSettings0 = document0.outputSettings();
    document0.indent(stringBuilder0, 489, document_OutputSettings0);
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test0378,"public void test0378() throws Throwable {
    Comment comment0 = new Comment("""", """");
    assertEquals("""", comment0.baseUri());
}",0,
project,0,test0379,"public void test0379() throws Throwable {
    Comment comment0 = new Comment("""", """");
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test0380,"public void test0380() throws Throwable {
    Comment comment0 = new Comment("""", """");
    assertEquals(0, (int) comment0.siblingIndex());
}",0,
project,0,test0381,"public void test0381() throws Throwable {
    Comment comment0 = new Comment("""", """");
    assertNotNull(comment0);
}",0,assertNotNull(comment0)
project,0,test0382,"public void test0382() throws Throwable {
    Comment comment0 = new Comment("""", """");
    Node[] nodeArray0 = new Node[9];
    nodeArray0[0] = (Node) comment0;
    nodeArray0[1] = (Node) comment0;
    nodeArray0[2] = (Node) comment0;
    nodeArray0[3] = (Node) comment0;
    nodeArray0[4] = (Node) comment0;
    nodeArray0[5] = (Node) comment0;
    nodeArray0[6] = (Node) comment0;
    nodeArray0[7] = (Node) comment0;
    nodeArray0[8] = (Node) comment0;
    comment0.addChildren(0, nodeArray0);
    assertEquals("""", comment0.baseUri());
}",0,assertNotNull(comment0.baseUri())
project,0,test0383,"public void test0383() throws Throwable {
    Comment comment0 = new Comment("""", """");
    Node[] nodeArray0 = new Node[9];
    nodeArray0[0] = (Node) comment0;
    nodeArray0[1] = (Node) comment0;
    nodeArray0[2] = (Node) comment0;
    nodeArray0[3] = (Node) comment0;
    nodeArray0[4] = (Node) comment0;
    nodeArray0[5] = (Node) comment0;
    nodeArray0[6] = (Node) comment0;
    nodeArray0[7] = (Node) comment0;
    nodeArray0[8] = (Node) comment0;
    comment0.addChildren(0, nodeArray0);
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test0384,"public void test0384() throws Throwable {
    Comment comment0 = new Comment("""", """");
    Node[] nodeArray0 = new Node[9];
    nodeArray0[0] = (Node) comment0;
    nodeArray0[1] = (Node) comment0;
    nodeArray0[2] = (Node) comment0;
    nodeArray0[3] = (Node) comment0;
    nodeArray0[4] = (Node) comment0;
    nodeArray0[5] = (Node) comment0;
    nodeArray0[6] = (Node) comment0;
    nodeArray0[7] = (Node) comment0;
    nodeArray0[8] = (Node) comment0;
    comment0.addChildren(0, nodeArray0);
    assertEquals(0, (int) comment0.siblingIndex());
}",0,
project,0,test0385,"public void test0385() throws Throwable {
    Comment comment0 = new Comment("""", """");
    Node[] nodeArray0 = new Node[9];
    nodeArray0[0] = (Node) comment0;
    nodeArray0[1] = (Node) comment0;
    nodeArray0[2] = (Node) comment0;
    nodeArray0[3] = (Node) comment0;
    nodeArray0[4] = (Node) comment0;
    nodeArray0[5] = (Node) comment0;
    nodeArray0[6] = (Node) comment0;
    nodeArray0[7] = (Node) comment0;
    nodeArray0[8] = (Node) comment0;
    comment0.addChildren(0, nodeArray0);
    assertEquals(9, nodeArray0.length);
}",1,
project,0,test0486,"public void test0486() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test0487,"public void test0487() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    assertEquals(""TJ:W218n)\""6lVnq)#*"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test0488,"public void test0488() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test0489,"public void test0489() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test0490,"public void test0490() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    assertNotNull(document0);
}",0,
project,0,test0491,"public void test0491() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    Element element0 = document0.prependElement(""icl"");
    assertFalse(document0.isBlock());
}",0,
project,0,test0492,"public void test0492() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    Element element0 = document0.prependElement(""icl"");
    assertEquals(""TJ:W218n)\""6lVnq)#*"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test0493,"public void test0493() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    Element element0 = document0.prependElement(""icl"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test0494,"public void test0494() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    Element element0 = document0.prependElement(""icl"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test0495,"public void test0495() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    Element element0 = document0.prependElement(""icl"");
    assertEquals(""TJ:W218n)\""6lVnq)#*"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test0496,"public void test0496() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    Element element0 = document0.prependElement(""icl"");
    assertEquals(0, (int) element0.siblingIndex());
}",0,
project,0,test0497,"public void test0497() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    Element element0 = document0.prependElement(""icl"");
    assertFalse(element0.isBlock());
}",0,assertTrue(element0.isBlock())
project,0,test0498,"public void test0498() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    Element element0 = document0.prependElement(""icl"");
    assertNotNull(element0);
}",0,assertNotNull(element0)
project,0,test0499,"public void test0499() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    Element element0 = document0.prependElement(""icl"");
    element0.remove();
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test04100,"public void test04100() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    Element element0 = document0.prependElement(""icl"");
    element0.remove();
    assertEquals(""TJ:W218n)\""6lVnq)#*"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test04101,"public void test04101() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    Element element0 = document0.prependElement(""icl"");
    element0.remove();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test04102,"public void test04102() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    Element element0 = document0.prependElement(""icl"");
    element0.remove();
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test04103,"public void test04103() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    Element element0 = document0.prependElement(""icl"");
    element0.remove();
    assertEquals(""TJ:W218n)\""6lVnq)#*"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test04104,"public void test04104() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    Element element0 = document0.prependElement(""icl"");
    element0.remove();
    assertEquals(0, (int) element0.siblingIndex());
}",0,
project,0,test04105,"public void test04105() throws Throwable {
    Document document0 = Document.createShell(""TJ:W218n)\""6lVnq)#*"");
    Element element0 = document0.prependElement(""icl"");
    element0.remove();
    assertFalse(element0.isBlock());
}",0,assertTrue(element0.isBlock())
project,0,test05106,"public void test05106() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test05107,"public void test05107() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test05108,"public void test05108() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    assertEquals(""/R&[^jW@`Wl"", document0.baseUri());
}",0,
project,0,test05109,"public void test05109() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test05110,"public void test05110() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    assertNotNull(document0);
}",0,
project,0,test05111,"public void test05111() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    String string0 = document0.toString();
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test05112,"public void test05112() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    String string0 = document0.toString();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test05113,"public void test05113() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    String string0 = document0.toString();
    assertEquals(""/R&[^jW@`Wl"", document0.baseUri());
}",0,
project,0,test05114,"public void test05114() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    String string0 = document0.toString();
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test05115,"public void test05115() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    String string0 = document0.toString();
    assertEquals("""", string0);
}",0,
project,0,test05116,"public void test05116() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    String string0 = document0.toString();
    assertNotNull(string0);
}",0,
project,0,test06117,"public void test06117() throws Throwable {
    Document document0 = new Document(""\n"");
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test06118,"public void test06118() throws Throwable {
    Document document0 = new Document(""\n"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test06119,"public void test06119() throws Throwable {
    Document document0 = new Document(""\n"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test06120,"public void test06120() throws Throwable {
    Document document0 = new Document(""\n"");
    assertEquals("""", document0.baseUri());
}",0,
project,0,test06121,"public void test06121() throws Throwable {
    Document document0 = new Document(""\n"");
    assertNotNull(document0);
}",0,
project,0,test06122,"public void test06122() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test06123,"public void test06123() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test06124,"public void test06124() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test06125,"public void test06125() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test06126,"public void test06126() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    assertEquals(8, nodeArray0.length);
}",0,
project,0,test06127,"public void test06127() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test06128,"public void test06128() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    assertEquals(1, (int) document0.siblingIndex());
}",0,
project,0,test06129,"public void test06129() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    assertFalse(document0.isBlock());
}",0,
project,0,test06130,"public void test06130() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test06131,"public void test06131() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    assertFalse(element0.isBlock());
}",0,
project,0,test06132,"public void test06132() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    assertEquals(1, (int) element0.siblingIndex());
}",0,
project,0,test06133,"public void test06133() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    assertEquals(""#document"", element0.nodeName());
}",0,assertNotNull(element0.nodeName())
project,0,test06134,"public void test06134() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    assertEquals("""", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test06135,"public void test06135() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    assertNotNull(element0);
}",0,assertNotNull(element0)
project,0,test06136,"public void test06136() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    assertSame(document0, element0);
}",0,
project,0,test06137,"public void test06137() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    assertSame(element0, document0);
}",0,
project,0,test06138,"public void test06138() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    Integer integer0 = element0.siblingIndex();
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test06139,"public void test06139() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    Integer integer0 = element0.siblingIndex();
    assertEquals(1, (int) document0.siblingIndex());
}",0,
project,0,test06140,"public void test06140() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    Integer integer0 = element0.siblingIndex();
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test06141,"public void test06141() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    Integer integer0 = element0.siblingIndex();
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test06142,"public void test06142() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    Integer integer0 = element0.siblingIndex();
    assertFalse(element0.isBlock());
}",0,
project,0,test06143,"public void test06143() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    Integer integer0 = element0.siblingIndex();
    assertEquals(1, (int) element0.siblingIndex());
}",0,
project,0,test06144,"public void test06144() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    Integer integer0 = element0.siblingIndex();
    assertEquals(""#document"", element0.nodeName());
}",0,assertNotNull(element0.nodeName())
project,0,test06145,"public void test06145() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    Integer integer0 = element0.siblingIndex();
    assertEquals("""", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test06146,"public void test06146() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    Integer integer0 = element0.siblingIndex();
    assertEquals(1, (int) integer0);
}",0,
project,0,test06147,"public void test06147() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    Integer integer0 = element0.siblingIndex();
    assertNotNull(integer0);
}",0,assertNotNull(integer0)
project,0,test06148,"public void test06148() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    Integer integer0 = element0.siblingIndex();
    assertSame(document0, element0);
}",0,
project,0,test06149,"public void test06149() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[5] = (Node) document0;
    nodeArray0[6] = (Node) document0;
    nodeArray0[7] = (Node) document0;
    document0.addChildren(nodeArray0);
    Element element0 = document0.prependText(""UnderBar"");
    Integer integer0 = element0.siblingIndex();
    assertSame(element0, document0);
}",0,
project,0,test07150,"public void test07150() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test07151,"public void test07151() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test07152,"public void test07152() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    assertEquals(""N&|u[bpkZ"", document0.baseUri());
}",0,
project,0,test07153,"public void test07153() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test07154,"public void test07154() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    assertNotNull(document0);
}",0,
project,0,test07155,"public void test07155() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test07156,"public void test07156() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test07157,"public void test07157() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    assertEquals(""N&|u[bpkZ"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test07158,"public void test07158() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    assertFalse(document0.isBlock());
}",0,
project,0,test07159,"public void test07159() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    assertEquals(0, (int) element0.siblingIndex());
}",0,
project,0,test07160,"public void test07160() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    assertEquals(""N&|u[bpkZ"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test07161,"public void test07161() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    assertTrue(element0.isBlock());
}",0,
project,0,test07162,"public void test07162() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    assertNotNull(element0);
}",0,
project,0,test07163,"public void test07163() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    Element element1 = (Element) element0.parent();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test07164,"public void test07164() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    Element element1 = (Element) element0.parent();
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test07165,"public void test07165() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    Element element1 = (Element) element0.parent();
    assertEquals(""N&|u[bpkZ"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test07166,"public void test07166() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    Element element1 = (Element) element0.parent();
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test07167,"public void test07167() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    Element element1 = (Element) element0.parent();
    assertEquals(0, (int) element0.siblingIndex());
}",0,
project,0,test07168,"public void test07168() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    Element element1 = (Element) element0.parent();
    assertEquals(""N&|u[bpkZ"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test07169,"public void test07169() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    Element element1 = (Element) element0.parent();
    assertTrue(element0.isBlock());
}",0,assertFalse(element0.isBlock())
project,0,test07170,"public void test07170() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    Element element1 = (Element) element0.parent();
    assertEquals(0, (int) element1.siblingIndex());
}",0,
project,0,test07171,"public void test07171() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    Element element1 = (Element) element0.parent();
    assertTrue(element1.isBlock());
}",0,assertFalse(element1.isBlock())
project,0,test07172,"public void test07172() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    Element element1 = (Element) element0.parent();
    assertEquals(""N&|u[bpkZ"", element1.baseUri());
}",0,assertNotNull(element1.baseUri())
project,0,test07173,"public void test07173() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    Element element1 = (Element) element0.parent();
    assertFalse(element1.equals((Object) element0));
}",0,
project,0,test07174,"public void test07174() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    Element element1 = (Element) element0.parent();
    assertNotNull(element1);
}",0,
project,0,test07175,"public void test07175() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    Element element1 = (Element) element0.parent();
    assertNotSame(element0, element1);
}",0,
project,0,test07176,"public void test07176() throws Throwable {
    Document document0 = Document.createShell(""N&|u[bpkZ"");
    Element element0 = document0.head();
    Element element1 = (Element) element0.parent();
    assertNotSame(element1, element0);
}",0,
project,0,test08177,"public void test08177() throws Throwable {
    Document document0 = new Document(""I"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test08178,"public void test08178() throws Throwable {
    Document document0 = new Document(""I"");
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test08179,"public void test08179() throws Throwable {
    Document document0 = new Document(""I"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test08180,"public void test08180() throws Throwable {
    Document document0 = new Document(""I"");
    assertEquals(""I"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test08181,"public void test08181() throws Throwable {
    Document document0 = new Document(""I"");
    assertNotNull(document0);
}",0,assertNotNull(document0)
project,0,test08182,"public void test08182() throws Throwable {
    Document document0 = new Document(""I"");
    String string0 = document0.outerHtml();
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test08183,"public void test08183() throws Throwable {
    Document document0 = new Document(""I"");
    String string0 = document0.outerHtml();
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test08184,"public void test08184() throws Throwable {
    Document document0 = new Document(""I"");
    String string0 = document0.outerHtml();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test08185,"public void test08185() throws Throwable {
    Document document0 = new Document(""I"");
    String string0 = document0.outerHtml();
    assertEquals(""I"", document0.baseUri());
}",0,
project,0,test08186,"public void test08186() throws Throwable {
    Document document0 = new Document(""I"");
    String string0 = document0.outerHtml();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test08187,"public void test08187() throws Throwable {
    Document document0 = new Document(""I"");
    String string0 = document0.outerHtml();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test09188,"public void test09188() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""Gcy"", ""Gcy"");
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test09189,"public void test09189() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""Gcy"", ""Gcy"");
    assertEquals(""#text"", textNode0.nodeName());
}",0,
project,0,test09190,"public void test09190() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""Gcy"", ""Gcy"");
    assertEquals(""Gcy"", textNode0.baseUri());
}",0,
project,0,test09191,"public void test09191() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""Gcy"", ""Gcy"");
    assertNotNull(textNode0);
}",0,
project,0,test09192,"public void test09192() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""Gcy"", ""Gcy"");
    String string0 = textNode0.nodeName();
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test09193,"public void test09193() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""Gcy"", ""Gcy"");
    String string0 = textNode0.nodeName();
    assertEquals(""#text"", textNode0.nodeName());
}",0,assertNotNull(textNode0.nodeName())
project,0,test09194,"public void test09194() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""Gcy"", ""Gcy"");
    String string0 = textNode0.nodeName();
    assertEquals(""Gcy"", textNode0.baseUri());
}",0,assertNotNull(textNode0.baseUri())
project,0,test09195,"public void test09195() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""Gcy"", ""Gcy"");
    String string0 = textNode0.nodeName();
    assertEquals(""#text"", string0);
}",0,assertNotNull(string0)
project,0,test09196,"public void test09196() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""Gcy"", ""Gcy"");
    String string0 = textNode0.nodeName();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test10197,"public void test10197() throws Throwable {
    Document document0 = new Document(""\n"");
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test10198,"public void test10198() throws Throwable {
    Document document0 = new Document(""\n"");
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test10199,"public void test10199() throws Throwable {
    Document document0 = new Document(""\n"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test10200,"public void test10200() throws Throwable {
    Document document0 = new Document(""\n"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test10201,"public void test10201() throws Throwable {
    Document document0 = new Document(""\n"");
    assertNotNull(document0);
}",0,assertNotNull(document0)
project,0,test10202,"public void test10202() throws Throwable {
    Document document0 = new Document(""\n"");
    boolean boolean0 = document0.equals(document0);
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test10203,"public void test10203() throws Throwable {
    Document document0 = new Document(""\n"");
    boolean boolean0 = document0.equals(document0);
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test10204,"public void test10204() throws Throwable {
    Document document0 = new Document(""\n"");
    boolean boolean0 = document0.equals(document0);
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test10205,"public void test10205() throws Throwable {
    Document document0 = new Document(""\n"");
    boolean boolean0 = document0.equals(document0);
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test10206,"public void test10206() throws Throwable {
    Document document0 = new Document(""\n"");
    boolean boolean0 = document0.equals(document0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test11207,"public void test11207() throws Throwable {
    Document document0 = Document.createShell(""qT"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test11208,"public void test11208() throws Throwable {
    Document document0 = Document.createShell(""qT"");
    assertFalse(document0.isBlock());
}",0,
project,0,test11209,"public void test11209() throws Throwable {
    Document document0 = Document.createShell(""qT"");
    assertEquals(""qT"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test11210,"public void test11210() throws Throwable {
    Document document0 = Document.createShell(""qT"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test11211,"public void test11211() throws Throwable {
    Document document0 = Document.createShell(""qT"");
    assertNotNull(document0);
}",0,
project,0,test11212,"public void test11212() throws Throwable {
    Document document0 = Document.createShell(""qT"");
    Node[] nodeArray0 = document0.childNodesAsArray();
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test11213,"public void test11213() throws Throwable {
    Document document0 = Document.createShell(""qT"");
    Node[] nodeArray0 = document0.childNodesAsArray();
    assertFalse(document0.isBlock());
}",0,
project,0,test11214,"public void test11214() throws Throwable {
    Document document0 = Document.createShell(""qT"");
    Node[] nodeArray0 = document0.childNodesAsArray();
    assertEquals(""qT"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test11215,"public void test11215() throws Throwable {
    Document document0 = Document.createShell(""qT"");
    Node[] nodeArray0 = document0.childNodesAsArray();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test11216,"public void test11216() throws Throwable {
    Document document0 = Document.createShell(""qT"");
    Node[] nodeArray0 = document0.childNodesAsArray();
    assertNotNull(nodeArray0);
}",0,assertNotNull(nodeArray0)
project,0,test11217,"public void test11217() throws Throwable {
    Document document0 = Document.createShell(""qT"");
    Node[] nodeArray0 = document0.childNodesAsArray();
    assertEquals(1, nodeArray0.length);
}",0,
project,0,test12218,"public void test12218() throws Throwable {
    Document document0 = Document.createShell("""");
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test12219,"public void test12219() throws Throwable {
    Document document0 = Document.createShell("""");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test12220,"public void test12220() throws Throwable {
    Document document0 = Document.createShell("""");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test12221,"public void test12221() throws Throwable {
    Document document0 = Document.createShell("""");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test12222,"public void test12222() throws Throwable {
    Document document0 = Document.createShell("""");
    assertNotNull(document0);
}",0,
project,0,test12223,"public void test12223() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test12224,"public void test12224() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test12225,"public void test12225() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test12226,"public void test12226() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test12227,"public void test12227() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    assertEquals(""#document"", document1.nodeName());
}",0,assertNotNull(document1.nodeName())
project,0,test12228,"public void test12228() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    assertEquals(0, (int) document1.siblingIndex());
}",0,
project,0,test12229,"public void test12229() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    assertFalse(document1.isBlock());
}",0,assertFalse(document1.isBlock())
project,0,test12230,"public void test12230() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    assertEquals("""", document1.baseUri());
}",0,assertNotNull(document1.baseUri())
project,0,test12231,"public void test12231() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    assertNotNull(document1);
}",0,assertNotNull(document1)
project,0,test12232,"public void test12232() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    assertSame(document0, document1);
}",0,
project,0,test12233,"public void test12233() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    assertSame(document1, document0);
}",0,
project,0,test12234,"public void test12234() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    Node[] nodeArray0 = document1.childNodesAsArray();
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test12235,"public void test12235() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    Node[] nodeArray0 = document1.childNodesAsArray();
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test12236,"public void test12236() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    Node[] nodeArray0 = document1.childNodesAsArray();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test12237,"public void test12237() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    Node[] nodeArray0 = document1.childNodesAsArray();
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test12238,"public void test12238() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    Node[] nodeArray0 = document1.childNodesAsArray();
    assertEquals(""#document"", document1.nodeName());
}",0,assertNotNull(document1.nodeName())
project,0,test12239,"public void test12239() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    Node[] nodeArray0 = document1.childNodesAsArray();
    assertEquals(0, (int) document1.siblingIndex());
}",0,
project,0,test12240,"public void test12240() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    Node[] nodeArray0 = document1.childNodesAsArray();
    assertFalse(document1.isBlock());
}",0,assertFalse(document1.isBlock())
project,0,test12241,"public void test12241() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    Node[] nodeArray0 = document1.childNodesAsArray();
    assertEquals("""", document1.baseUri());
}",0,
project,0,test12242,"public void test12242() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    Node[] nodeArray0 = document1.childNodesAsArray();
    assertNotNull(nodeArray0);
}",0,assertNotNull(nodeArray0)
project,0,test12243,"public void test12243() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    Node[] nodeArray0 = document1.childNodesAsArray();
    assertSame(document0, document1);
}",0,
project,0,test12244,"public void test12244() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    Node[] nodeArray0 = document1.childNodesAsArray();
    assertSame(document1, document0);
}",0,
project,0,test12245,"public void test12245() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.empty();
    Node[] nodeArray0 = document1.childNodesAsArray();
    assertEquals(0, nodeArray0.length);
}",0,
project,0,test13246,"public void test13246() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""<6!e,t$\u0000GcZ"", ""~jSq;6d4g"");
    assertEquals(0, (int) dataNode0.siblingIndex());
}",0,
project,0,test13247,"public void test13247() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""<6!e,t$\u0000GcZ"", ""~jSq;6d4g"");
    assertEquals(""#data"", dataNode0.nodeName());
}",0,assertNotNull(dataNode0.nodeName())
project,0,test13248,"public void test13248() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""<6!e,t$\u0000GcZ"", ""~jSq;6d4g"");
    assertEquals(""~jSq;6d4g"", dataNode0.baseUri());
}",0,
project,0,test13249,"public void test13249() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""<6!e,t$\u0000GcZ"", ""~jSq;6d4g"");
    assertNotNull(dataNode0);
}",0,
project,0,test13250,"public void test13250() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""<6!e,t$\u0000GcZ"", ""~jSq;6d4g"");
    String string0 = dataNode0.baseUri();
    assertEquals(0, (int) dataNode0.siblingIndex());
}",0,
project,0,test13251,"public void test13251() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""<6!e,t$\u0000GcZ"", ""~jSq;6d4g"");
    String string0 = dataNode0.baseUri();
    assertEquals(""#data"", dataNode0.nodeName());
}",0,assertNotNull(dataNode0.nodeName())
project,0,test13252,"public void test13252() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""<6!e,t$\u0000GcZ"", ""~jSq;6d4g"");
    String string0 = dataNode0.baseUri();
    assertEquals(""~jSq;6d4g"", dataNode0.baseUri());
}",0,
project,0,test13253,"public void test13253() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""<6!e,t$\u0000GcZ"", ""~jSq;6d4g"");
    String string0 = dataNode0.baseUri();
    assertEquals(""~jSq;6d4g"", string0);
}",0,assertNotNull(string0)
project,0,test13254,"public void test13254() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""<6!e,t$\u0000GcZ"", ""~jSq;6d4g"");
    String string0 = dataNode0.baseUri();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test14255,"public void test14255() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    assertFalse(tag0.isData());
}",0,assertTrue(tag0.isData())
project,0,test14256,"public void test14256() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    assertTrue(tag0.isBlock());
}",0,assertTrue(tag0.isBlock())
project,0,test14257,"public void test14257() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    assertFalse(tag0.preserveWhitespace());
}",0,assertFalse(tag0.preserveWhitespace())
project,0,test14258,"public void test14258() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    assertTrue(tag0.isKnownTag());
}",0,assertTrue(tag0.isKnownTag())
project,0,test14259,"public void test14259() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    assertTrue(tag0.canContainBlock());
}",0,assertTrue(tag0.canContainBlock())
project,0,test14260,"public void test14260() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    assertEquals(""body"", tag0.toString());
}",0,assertNotNull(tag0.toString())
project,0,test14261,"public void test14261() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    assertFalse(tag0.isSelfClosing());
}",0,assertTrue(tag0.isSelfClosing())
project,0,test14262,"public void test14262() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    assertFalse(tag0.isInline());
}",0,assertTrue(tag0.isInline())
project,0,test14263,"public void test14263() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    assertFalse(tag0.isEmpty());
}",0,assertTrue(tag0.isEmpty())
project,0,test14264,"public void test14264() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    assertNotNull(tag0);
}",1,
project,0,test14266,"public void test14266() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""body"", attributes0);
    assertFalse(tag0.isData());
}",0,assertTrue(tag0.isData())
project,0,test14267,"public void test14267() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""body"", attributes0);
    assertTrue(tag0.isBlock());
}",0,assertFalse(tag0.isBlock())
project,0,test14268,"public void test14268() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""body"", attributes0);
    assertFalse(tag0.preserveWhitespace());
}",0,assertFalse(tag0.preserveWhitespace())
project,0,test14269,"public void test14269() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""body"", attributes0);
    assertTrue(tag0.isKnownTag());
}",0,assertTrue(tag0.isKnownTag())
project,0,test14270,"public void test14270() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""body"", attributes0);
    assertTrue(tag0.canContainBlock());
}",0,assertTrue(tag0.canContainBlock())
project,0,test14271,"public void test14271() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""body"", attributes0);
    assertEquals(""body"", tag0.toString());
}",0,assertNotNull(tag0.toString())
project,0,test14272,"public void test14272() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""body"", attributes0);
    assertFalse(tag0.isSelfClosing());
}",0,
project,0,test14273,"public void test14273() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""body"", attributes0);
    assertFalse(tag0.isInline());
}",0,assertFalse(tag0.isInline())
project,0,test14274,"public void test14274() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""body"", attributes0);
    assertFalse(tag0.isEmpty());
}",0,assertTrue(tag0.isEmpty())
project,0,test14275,"public void test14275() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""body"", attributes0);
    assertTrue(element0.isBlock());
}",0,assertFalse(element0.isBlock())
project,0,test14276,"public void test14276() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""body"", attributes0);
    assertEquals(0, (int) element0.siblingIndex());
}",0,
project,0,test14277,"public void test14277() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""body"", attributes0);
    assertEquals(""body"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test14278,"public void test14278() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""body"", attributes0);
    assertNotNull(element0);
}",0,
project,0,test14279,"public void test14279() throws Throwable {
    Tag tag0 = Tag.valueOf(""body"");
    Attributes attributes0 = new Attributes();
    Element element0 = new Element(tag0, ""body"", attributes0);
    // Undeclared exception!
    try {
        element0.toString();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test15280,"public void test15280() throws Throwable {
    Document document0 = new Document(""\n"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test15281,"public void test15281() throws Throwable {
    Document document0 = new Document(""\n"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test15282,"public void test15282() throws Throwable {
    Document document0 = new Document(""\n"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test15283,"public void test15283() throws Throwable {
    Document document0 = new Document(""\n"");
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test15284,"public void test15284() throws Throwable {
    Document document0 = new Document(""\n"");
    assertNotNull(document0);
}",0,assertNotNull(document0)
project,0,test15285,"public void test15285() throws Throwable {
    Document document0 = new Document(""\n"");
    // Undeclared exception!
    try {
        document0.setBaseUri((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test16286,"public void test16286() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded("""", """");
    assertEquals("""", textNode0.baseUri());
}",0,assertNotNull(textNode0.baseUri())
project,0,test16287,"public void test16287() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded("""", """");
    assertEquals(""#text"", textNode0.nodeName());
}",0,assertNotNull(textNode0.nodeName())
project,0,test16288,"public void test16288() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded("""", """");
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test16289,"public void test16289() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded("""", """");
    assertNotNull(textNode0);
}",0,assertNotNull(textNode0)
project,0,test16290,"public void test16290() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded("""", """");
    // Undeclared exception!
    try {
        textNode0.replaceChild((Node) null, (Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Node"", e);
    }
}",0,
project,0,test17291,"public void test17291() throws Throwable {
    Document document0 = Document.createShell(""whqm"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test17292,"public void test17292() throws Throwable {
    Document document0 = Document.createShell(""whqm"");
    assertFalse(document0.isBlock());
}",0,
project,0,test17293,"public void test17293() throws Throwable {
    Document document0 = Document.createShell(""whqm"");
    assertEquals(""whqm"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test17294,"public void test17294() throws Throwable {
    Document document0 = Document.createShell(""whqm"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test17295,"public void test17295() throws Throwable {
    Document document0 = Document.createShell(""whqm"");
    assertNotNull(document0);
}",0,
project,0,test17296,"public void test17296() throws Throwable {
    Document document0 = Document.createShell(""whqm"");
    // Undeclared exception!
    try {
        document0.removeChild((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Node"", e);
    }
}",0,
project,0,test18297,"public void test18297() throws Throwable {
    Document document0 = Document.createShell(""vUjUzgB5"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test18298,"public void test18298() throws Throwable {
    Document document0 = Document.createShell(""vUjUzgB5"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test18299,"public void test18299() throws Throwable {
    Document document0 = Document.createShell(""vUjUzgB5"");
    assertEquals(""vUjUzgB5"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test18300,"public void test18300() throws Throwable {
    Document document0 = Document.createShell(""vUjUzgB5"");
    assertFalse(document0.isBlock());
}",0,
project,0,test18301,"public void test18301() throws Throwable {
    Document document0 = Document.createShell(""vUjUzgB5"");
    assertNotNull(document0);
}",0,assertNotNull(document0)
project,0,test18302,"public void test18302() throws Throwable {
    Document document0 = Document.createShell(""vUjUzgB5"");
    // Undeclared exception!
    try {
        document0.removeAttr("""");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test19303,"public void test19303() throws Throwable {
    Document document0 = Document.createShell(""F<x,^$"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test19304,"public void test19304() throws Throwable {
    Document document0 = Document.createShell(""F<x,^$"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test19305,"public void test19305() throws Throwable {
    Document document0 = Document.createShell(""F<x,^$"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test19306,"public void test19306() throws Throwable {
    Document document0 = Document.createShell(""F<x,^$"");
    assertEquals(""F<x,^$"", document0.baseUri());
}",0,
project,0,test19307,"public void test19307() throws Throwable {
    Document document0 = Document.createShell(""F<x,^$"");
    assertNotNull(document0);
}",0,
project,0,test19308,"public void test19308() throws Throwable {
    Document document0 = Document.createShell(""F<x,^$"");
    // Undeclared exception!
    try {
        document0.previousSibling();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Node"", e);
    }
}",0,
project,0,test20309,"public void test20309() throws Throwable {
    TextNode textNode0 = new TextNode("""", """");
    assertEquals(""#text"", textNode0.nodeName());
}",0,
project,0,test20310,"public void test20310() throws Throwable {
    TextNode textNode0 = new TextNode("""", """");
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test20311,"public void test20311() throws Throwable {
    TextNode textNode0 = new TextNode("""", """");
    assertEquals("""", textNode0.baseUri());
}",0,assertNotNull(textNode0.baseUri())
project,0,test20312,"public void test20312() throws Throwable {
    TextNode textNode0 = new TextNode("""", """");
    assertNotNull(textNode0);
}",0,assertNotNull(textNode0)
project,0,test20313,"public void test20313() throws Throwable {
    TextNode textNode0 = new TextNode("""", """");
    // Undeclared exception!
    try {
        textNode0.outerHtml();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test21314,"public void test21314() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""vartheta"", ""vartheta"", false);
    assertEquals(""#declaration"", xmlDeclaration0.nodeName());
}",0,assertNotNull(xmlDeclaration0.nodeName())
project,0,test21315,"public void test21315() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""vartheta"", ""vartheta"", false);
    assertEquals(0, (int) xmlDeclaration0.siblingIndex());
}",0,
project,0,test21316,"public void test21316() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""vartheta"", ""vartheta"", false);
    assertEquals(""vartheta"", xmlDeclaration0.baseUri());
}",0,
project,0,test21317,"public void test21317() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""vartheta"", ""vartheta"", false);
    assertNotNull(xmlDeclaration0);
}",0,assertNotNull(xmlDeclaration0)
project,0,test21318,"public void test21318() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""vartheta"", ""vartheta"", false);
    // Undeclared exception!
    try {
        xmlDeclaration0.indent((StringBuilder) null, 4, (Document.OutputSettings) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Node"", e);
    }
}",0,
project,0,test22319,"public void test22319() throws Throwable {
    Document document0 = new Document(""org.jsoup.nodes.Node"");
    assertEquals(""org.jsoup.nodes.Node"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test22320,"public void test22320() throws Throwable {
    Document document0 = new Document(""org.jsoup.nodes.Node"");
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test22321,"public void test22321() throws Throwable {
    Document document0 = new Document(""org.jsoup.nodes.Node"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test22322,"public void test22322() throws Throwable {
    Document document0 = new Document(""org.jsoup.nodes.Node"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test22323,"public void test22323() throws Throwable {
    Document document0 = new Document(""org.jsoup.nodes.Node"");
    assertNotNull(document0);
}",0,
project,0,test22324,"public void test22324() throws Throwable {
    Document document0 = new Document(""org.jsoup.nodes.Node"");
    // Undeclared exception!
    try {
        document0.childNode((-1264));
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test23325,"public void test23325() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""abs:(g9mz.4]5x3iiv06w96"", ""abs:(g9mz.4]5x3iiv06w96"", false);
    assertEquals(""#declaration"", xmlDeclaration0.nodeName());
}",0,assertNotNull(xmlDeclaration0.nodeName())
project,0,test23326,"public void test23326() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""abs:(g9mz.4]5x3iiv06w96"", ""abs:(g9mz.4]5x3iiv06w96"", false);
    assertEquals(0, (int) xmlDeclaration0.siblingIndex());
}",0,
project,0,test23327,"public void test23327() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""abs:(g9mz.4]5x3iiv06w96"", ""abs:(g9mz.4]5x3iiv06w96"", false);
    assertEquals(""abs:(g9mz.4]5x3iiv06w96"", xmlDeclaration0.baseUri());
}",0,assertNotNull(xmlDeclaration0.baseUri())
project,0,test23328,"public void test23328() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""abs:(g9mz.4]5x3iiv06w96"", ""abs:(g9mz.4]5x3iiv06w96"", false);
    assertNotNull(xmlDeclaration0);
}",0,assertNotNull(xmlDeclaration0)
project,0,test23329,"public void test23329() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""abs:(g9mz.4]5x3iiv06w96"", ""abs:(g9mz.4]5x3iiv06w96"", false);
    // Undeclared exception!
    try {
        xmlDeclaration0.attr((String) null, (String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test24330,"public void test24330() throws Throwable {
    Document document0 = new Document("":K"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test24331,"public void test24331() throws Throwable {
    Document document0 = new Document("":K"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test24332,"public void test24332() throws Throwable {
    Document document0 = new Document("":K"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test24333,"public void test24333() throws Throwable {
    Document document0 = new Document("":K"");
    assertEquals("":K"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test24334,"public void test24334() throws Throwable {
    Document document0 = new Document("":K"");
    assertNotNull(document0);
}",0,
project,0,test24335,"public void test24335() throws Throwable {
    Document document0 = new Document("":K"");
    Node[] nodeArray0 = new Node[7];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    List<Node> list0 = document0.childNodes();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test24336,"public void test24336() throws Throwable {
    Document document0 = new Document("":K"");
    Node[] nodeArray0 = new Node[7];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    List<Node> list0 = document0.childNodes();
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test24337,"public void test24337() throws Throwable {
    Document document0 = new Document("":K"");
    Node[] nodeArray0 = new Node[7];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    List<Node> list0 = document0.childNodes();
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test24338,"public void test24338() throws Throwable {
    Document document0 = new Document("":K"");
    Node[] nodeArray0 = new Node[7];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    List<Node> list0 = document0.childNodes();
    assertEquals("":K"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test24341,"public void test24341() throws Throwable {
    Document document0 = new Document("":K"");
    Node[] nodeArray0 = new Node[7];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    List<Node> list0 = document0.childNodes();
    assertNotNull(list0);
}",1,
project,0,test24342,"public void test24342() throws Throwable {
    Document document0 = new Document("":K"");
    Node[] nodeArray0 = new Node[7];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    List<Node> list0 = document0.childNodes();
    nodeArray0[1].childNodes = list0;
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test24343,"public void test24343() throws Throwable {
    Document document0 = new Document("":K"");
    Node[] nodeArray0 = new Node[7];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    List<Node> list0 = document0.childNodes();
    nodeArray0[1].childNodes = list0;
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test24344,"public void test24344() throws Throwable {
    Document document0 = new Document("":K"");
    Node[] nodeArray0 = new Node[7];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    List<Node> list0 = document0.childNodes();
    nodeArray0[1].childNodes = list0;
    assertFalse(document0.isBlock());
}",0,
project,0,test24345,"public void test24345() throws Throwable {
    Document document0 = new Document("":K"");
    Node[] nodeArray0 = new Node[7];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    List<Node> list0 = document0.childNodes();
    nodeArray0[1].childNodes = list0;
    assertEquals("":K"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test24350,"public void test24350() throws Throwable {
    Document document0 = new Document("":K"");
    Node[] nodeArray0 = new Node[7];
    nodeArray0[0] = (Node) document0;
    nodeArray0[1] = (Node) document0;
    List<Node> list0 = document0.childNodes();
    nodeArray0[1].childNodes = list0;
    // Undeclared exception!
    try {
        document0.addChildren(nodeArray0);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.Collections$UnmodifiableCollection"", e);
    }
}",0,
project,0,test25351,"public void test25351() throws Throwable {
    Document document0 = new Document(""\n"");
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test25352,"public void test25352() throws Throwable {
    Document document0 = new Document(""\n"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test25353,"public void test25353() throws Throwable {
    Document document0 = new Document(""\n"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test25354,"public void test25354() throws Throwable {
    Document document0 = new Document(""\n"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test25355,"public void test25355() throws Throwable {
    Document document0 = new Document(""\n"");
    assertNotNull(document0);
}",0,assertNotNull(document0)
project,0,test25356,"public void test25356() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    // Undeclared exception!
    try {
        document0.addChildren(nodeArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Node"", e);
    }
}",0,
project,0,test26357,"public void test26357() throws Throwable {
    Document document0 = new Document(""\n"");
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test26358,"public void test26358() throws Throwable {
    Document document0 = new Document(""\n"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test26359,"public void test26359() throws Throwable {
    Document document0 = new Document(""\n"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test26360,"public void test26360() throws Throwable {
    Document document0 = new Document(""\n"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test26361,"public void test26361() throws Throwable {
    Document document0 = new Document(""\n"");
    assertNotNull(document0);
}",0,assertNotNull(document0)
project,0,test26362,"public void test26362() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[4].setParentNode(nodeArray0[4]);
    assertEquals(8, nodeArray0.length);
}",1,
project,0,test26363,"public void test26363() throws Throwable {
    Document document0 = new Document(""\n"");
    Node[] nodeArray0 = new Node[8];
    nodeArray0[0] = (Node) document0;
    nodeArray0[4] = (Node) document0;
    nodeArray0[4].setParentNode(nodeArray0[4]);
    // Undeclared exception!
    try {
        document0.addChildren(nodeArray0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test27364,"public void test27364() throws Throwable {
    TextNode textNode0 = new TextNode(""L[*a%+vs;|b8"", ""L[*a%+vs;|b8"");
    assertEquals(""#text"", textNode0.nodeName());
}",0,assertNotNull(textNode0.nodeName())
project,0,test27365,"public void test27365() throws Throwable {
    TextNode textNode0 = new TextNode(""L[*a%+vs;|b8"", ""L[*a%+vs;|b8"");
    assertEquals(""L[*a%+vs;|b8"", textNode0.baseUri());
}",0,assertNotNull(textNode0.baseUri())
project,0,test27366,"public void test27366() throws Throwable {
    TextNode textNode0 = new TextNode(""L[*a%+vs;|b8"", ""L[*a%+vs;|b8"");
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test27367,"public void test27367() throws Throwable {
    TextNode textNode0 = new TextNode(""L[*a%+vs;|b8"", ""L[*a%+vs;|b8"");
    assertNotNull(textNode0);
}",0,
project,0,test27368,"public void test27368() throws Throwable {
    TextNode textNode0 = new TextNode(""L[*a%+vs;|b8"", ""L[*a%+vs;|b8"");
    Node[] nodeArray0 = new Node[4];
    nodeArray0[0] = (Node) textNode0;
    nodeArray0[1] = (Node) textNode0;
    nodeArray0[2] = (Node) textNode0;
    nodeArray0[3] = (Node) textNode0;
    // Undeclared exception!
    try {
        textNode0.addChildren((-188012567), nodeArray0);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.AbstractList"", e);
    }
}",1,
project,0,test28369,"public void test28369() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""topf"", """");
    assertEquals("""", textNode0.baseUri());
}",0,assertNotNull(textNode0.baseUri())
project,0,test28370,"public void test28370() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""topf"", """");
    assertEquals(""#text"", textNode0.nodeName());
}",0,assertNotNull(textNode0.nodeName())
project,0,test28371,"public void test28371() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""topf"", """");
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test28372,"public void test28372() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""topf"", """");
    assertNotNull(textNode0);
}",0,
project,0,test28373,"public void test28373() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""topf"", """");
    // Undeclared exception!
    try {
        textNode0.addChildren((-2160), (Node[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test29374,"public void test29374() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""dhzo+]NkSOLI6"", ""or"", false);
    assertEquals(""#declaration"", xmlDeclaration0.nodeName());
}",0,assertNotNull(xmlDeclaration0.nodeName())
project,0,test29375,"public void test29375() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""dhzo+]NkSOLI6"", ""or"", false);
    assertEquals(""or"", xmlDeclaration0.baseUri());
}",0,
project,0,test29376,"public void test29376() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""dhzo+]NkSOLI6"", ""or"", false);
    assertEquals(0, (int) xmlDeclaration0.siblingIndex());
}",0,
project,0,test29377,"public void test29377() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""dhzo+]NkSOLI6"", ""or"", false);
    assertNotNull(xmlDeclaration0);
}",0,assertNotNull(xmlDeclaration0)
project,0,test29378,"public void test29378() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""dhzo+]NkSOLI6"", ""or"", false);
    TextNode textNode0 = TextNode.createFromEncoded(""or"", ""[N/+VsEhp>Y9)`%Q"");
    assertEquals(""[N/+VsEhp>Y9)`%Q"", textNode0.baseUri());
}",0,assertNotNull(textNode0.baseUri())
project,0,test29379,"public void test29379() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""dhzo+]NkSOLI6"", ""or"", false);
    TextNode textNode0 = TextNode.createFromEncoded(""or"", ""[N/+VsEhp>Y9)`%Q"");
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test29380,"public void test29380() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""dhzo+]NkSOLI6"", ""or"", false);
    TextNode textNode0 = TextNode.createFromEncoded(""or"", ""[N/+VsEhp>Y9)`%Q"");
    assertEquals(""#text"", textNode0.nodeName());
}",0,assertNotNull(textNode0.nodeName())
project,0,test29381,"public void test29381() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""dhzo+]NkSOLI6"", ""or"", false);
    TextNode textNode0 = TextNode.createFromEncoded(""or"", ""[N/+VsEhp>Y9)`%Q"");
    assertNotNull(textNode0);
}",0,assertNotNull(textNode0)
project,0,test29382,"public void test29382() throws Throwable {
    XmlDeclaration xmlDeclaration0 = new XmlDeclaration(""dhzo+]NkSOLI6"", ""or"", false);
    TextNode textNode0 = TextNode.createFromEncoded(""or"", ""[N/+VsEhp>Y9)`%Q"");
    Node[] nodeArray0 = new Node[4];
    nodeArray0[0] = (Node) textNode0;
    nodeArray0[1] = (Node) xmlDeclaration0;
    nodeArray0[2] = (Node) xmlDeclaration0;
    nodeArray0[3] = (Node) xmlDeclaration0;
    // Undeclared exception!
    try {
        xmlDeclaration0.addChildren(32768, nodeArray0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 32768, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",1,
project,0,test30383,"public void test30383() throws Throwable {
    Document document0 = Document.createShell("""");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test30384,"public void test30384() throws Throwable {
    Document document0 = Document.createShell("""");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test30385,"public void test30385() throws Throwable {
    Document document0 = Document.createShell("""");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test30386,"public void test30386() throws Throwable {
    Document document0 = Document.createShell("""");
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test30387,"public void test30387() throws Throwable {
    Document document0 = Document.createShell("""");
    assertNotNull(document0);
}",0,
project,0,test30388,"public void test30388() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test30389,"public void test30389() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test30390,"public void test30390() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test30391,"public void test30391() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test30392,"public void test30392() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    assertEquals(""#document"", document1.nodeName());
}",0,
project,0,test30393,"public void test30393() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    assertEquals("""", document1.baseUri());
}",0,
project,0,test30394,"public void test30394() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    assertEquals(0, (int) document1.siblingIndex());
}",0,
project,0,test30395,"public void test30395() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    assertFalse(document1.isBlock());
}",0,assertFalse(document1.isBlock())
project,0,test30396,"public void test30396() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    assertNotNull(document1);
}",0,assertNotNull(document1)
project,0,test30397,"public void test30397() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    assertSame(document0, document1);
}",0,
project,0,test30398,"public void test30398() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    assertSame(document1, document0);
}",0,
project,0,test30399,"public void test30399() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test30400,"public void test30400() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test30401,"public void test30401() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test30402,"public void test30402() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    assertEquals((-757), (int) document0.siblingIndex());
}",0,
project,0,test30403,"public void test30403() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    assertEquals((-757), (int) document1.siblingIndex());
}",0,
project,0,test30404,"public void test30404() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    assertEquals(""#document"", document1.nodeName());
}",0,assertNotNull(document1.nodeName())
project,0,test30405,"public void test30405() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    assertEquals("""", document1.baseUri());
}",0,assertNotNull(document1.baseUri())
project,0,test30406,"public void test30406() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    assertFalse(document1.isBlock());
}",0,
project,0,test30407,"public void test30407() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    assertSame(document0, document1);
}",0,
project,0,test30408,"public void test30408() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    assertSame(document1, document0);
}",0,
project,0,test30409,"public void test30409() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    document1.parentNode = (Node) document0;
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test30410,"public void test30410() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    document1.parentNode = (Node) document0;
    assertFalse(document0.isBlock());
}",0,
project,0,test30411,"public void test30411() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    document1.parentNode = (Node) document0;
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test30412,"public void test30412() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    document1.parentNode = (Node) document0;
    assertEquals((-757), (int) document0.siblingIndex());
}",0,
project,0,test30413,"public void test30413() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    document1.parentNode = (Node) document0;
    assertEquals((-757), (int) document1.siblingIndex());
}",0,
project,0,test30414,"public void test30414() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    document1.parentNode = (Node) document0;
    assertEquals(""#document"", document1.nodeName());
}",0,assertNotNull(document1.nodeName())
project,0,test30415,"public void test30415() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    document1.parentNode = (Node) document0;
    assertEquals("""", document1.baseUri());
}",0,assertNotNull(document1.baseUri())
project,0,test30416,"public void test30416() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    document1.parentNode = (Node) document0;
    assertFalse(document1.isBlock());
}",0,
project,0,test30417,"public void test30417() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    document1.parentNode = (Node) document0;
    assertEquals((-757), (int) document1.parentNode.siblingIndex());
}",0,
project,0,test30418,"public void test30418() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    document1.parentNode = (Node) document0;
    assertEquals("""", document1.parentNode.baseUri());
}",0,
project,0,test30419,"public void test30419() throws Throwable {
    Document document0 = Document.createShell("""");
    Document document1 = (Document) document0.val("""");
    document1.setSiblingIndex((-757));
    document1.parentNode = (Node) document0;
    Node[] nodeArray0 = new Node[5];
    nodeArray0[0] = (Node) document1;
    nodeArray0[1] = (Node) document1;
    nodeArray0[2] = (Node) document0;
    nodeArray0[3] = document1.parentNode;
    nodeArray0[4] = document1.parentNode;
    // Undeclared exception!
    try {
        document1.parentNode.addChildren((-757), nodeArray0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test31420,"public void test31420() throws Throwable {
    Document document0 = new Document(""Nc"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test31421,"public void test31421() throws Throwable {
    Document document0 = new Document(""Nc"");
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test31422,"public void test31422() throws Throwable {
    Document document0 = new Document(""Nc"");
    assertEquals(""Nc"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test31423,"public void test31423() throws Throwable {
    Document document0 = new Document(""Nc"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test31424,"public void test31424() throws Throwable {
    Document document0 = new Document(""Nc"");
    assertNotNull(document0);
}",0,assertNotNull(document0)
project,0,test31425,"public void test31425() throws Throwable {
    Document document0 = new Document(""Nc"");
    // Undeclared exception!
    try {
        document0.absUrl("""");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test32426,"public void test32426() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""p"");
    assertEquals(""p"", textNode0.baseUri());
}",0,assertNotNull(textNode0.baseUri())
project,0,test32427,"public void test32427() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""p"");
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test32428,"public void test32428() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""p"");
    assertEquals(""#text"", textNode0.nodeName());
}",0,assertNotNull(textNode0.nodeName())
project,0,test32429,"public void test32429() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""p"");
    assertNotNull(textNode0);
}",0,
project,0,test32430,"public void test32430() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""p"");
    String string0 = textNode0.absUrl(""o0p`!2HQ]lZ?5+IBxk"");
    assertEquals(""p"", textNode0.baseUri());
}",0,assertNotNull(textNode0.baseUri())
project,0,test32431,"public void test32431() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""p"");
    String string0 = textNode0.absUrl(""o0p`!2HQ]lZ?5+IBxk"");
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test32432,"public void test32432() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""p"");
    String string0 = textNode0.absUrl(""o0p`!2HQ]lZ?5+IBxk"");
    assertEquals(""#text"", textNode0.nodeName());
}",0,assertNotNull(textNode0.nodeName())
project,0,test32433,"public void test32433() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""p"");
    String string0 = textNode0.absUrl(""o0p`!2HQ]lZ?5+IBxk"");
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test32434,"public void test32434() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""p"");
    String string0 = textNode0.absUrl(""o0p`!2HQ]lZ?5+IBxk"");
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test32435,"public void test32435() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""p"");
    String string0 = textNode0.absUrl(""o0p`!2HQ]lZ?5+IBxk"");
    textNode0.hashCode();
    assertEquals(""p"", textNode0.baseUri());
}",0,assertNotNull(textNode0.baseUri())
project,0,test32436,"public void test32436() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""p"");
    String string0 = textNode0.absUrl(""o0p`!2HQ]lZ?5+IBxk"");
    textNode0.hashCode();
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test32437,"public void test32437() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""p"");
    String string0 = textNode0.absUrl(""o0p`!2HQ]lZ?5+IBxk"");
    textNode0.hashCode();
    assertEquals(""#text"", textNode0.nodeName());
}",0,assertNotNull(textNode0.nodeName())
project,0,test33438,"public void test33438() throws Throwable {
    DataNode dataNode0 = new DataNode(""wkA^K6+6F=ez-JsEx"", ""?YNP2 "");
    assertEquals(""?YNP2"", dataNode0.baseUri());
}",0,
project,0,test33439,"public void test33439() throws Throwable {
    DataNode dataNode0 = new DataNode(""wkA^K6+6F=ez-JsEx"", ""?YNP2 "");
    assertEquals(""#data"", dataNode0.nodeName());
}",0,assertNotNull(dataNode0.nodeName())
project,0,test33440,"public void test33440() throws Throwable {
    DataNode dataNode0 = new DataNode(""wkA^K6+6F=ez-JsEx"", ""?YNP2 "");
    assertEquals(0, (int) dataNode0.siblingIndex());
}",0,
project,0,test33441,"public void test33441() throws Throwable {
    DataNode dataNode0 = new DataNode(""wkA^K6+6F=ez-JsEx"", ""?YNP2 "");
    assertNotNull(dataNode0);
}",0,
project,0,test33442,"public void test33442() throws Throwable {
    DataNode dataNode0 = new DataNode(""wkA^K6+6F=ez-JsEx"", ""?YNP2 "");
    Node node0 = dataNode0.nextSibling();
    assertEquals(""?YNP2"", dataNode0.baseUri());
}",0,assertNotNull(dataNode0.baseUri())
project,0,test33443,"public void test33443() throws Throwable {
    DataNode dataNode0 = new DataNode(""wkA^K6+6F=ez-JsEx"", ""?YNP2 "");
    Node node0 = dataNode0.nextSibling();
    assertEquals(""#data"", dataNode0.nodeName());
}",0,assertNotNull(dataNode0.nodeName())
project,0,test33444,"public void test33444() throws Throwable {
    DataNode dataNode0 = new DataNode(""wkA^K6+6F=ez-JsEx"", ""?YNP2 "");
    Node node0 = dataNode0.nextSibling();
    assertEquals(0, (int) dataNode0.siblingIndex());
}",0,
project,0,test33445,"public void test33445() throws Throwable {
    DataNode dataNode0 = new DataNode(""wkA^K6+6F=ez-JsEx"", ""?YNP2 "");
    Node node0 = dataNode0.nextSibling();
    assertNull(node0);
}",0,assertNotNull(node0)
project,0,test34446,"public void test34446() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test34447,"public void test34447() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test34448,"public void test34448() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test34449,"public void test34449() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    assertEquals(""':$]p'"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test34450,"public void test34450() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    assertNotNull(document0);
}",0,
project,0,test34451,"public void test34451() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test34452,"public void test34452() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test34453,"public void test34453() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test34454,"public void test34454() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    assertEquals(""':$]p'"", document0.baseUri());
}",0,
project,0,test34455,"public void test34455() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    assertEquals(""':$]p'"", element0.baseUri());
}",0,
project,0,test34456,"public void test34456() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    assertTrue(element0.isBlock());
}",0,
project,0,test34457,"public void test34457() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    assertEquals(0, (int) element0.siblingIndex());
}",0,
project,0,test34458,"public void test34458() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    assertNotNull(element0);
}",1,
project,0,test34459,"public void test34459() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    Document document1 = element0.ownerDocument();
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test34460,"public void test34460() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    Document document1 = element0.ownerDocument();
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test34461,"public void test34461() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    Document document1 = element0.ownerDocument();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test34462,"public void test34462() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    Document document1 = element0.ownerDocument();
    assertEquals(""':$]p'"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test34463,"public void test34463() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    Document document1 = element0.ownerDocument();
    assertEquals(""':$]p'"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test34464,"public void test34464() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    Document document1 = element0.ownerDocument();
    assertTrue(element0.isBlock());
}",0,assertFalse(element0.isBlock())
project,0,test34465,"public void test34465() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    Document document1 = element0.ownerDocument();
    assertEquals(0, (int) element0.siblingIndex());
}",0,
project,0,test34466,"public void test34466() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    Document document1 = element0.ownerDocument();
    assertEquals(""':$]p'"", document1.baseUri());
}",0,assertNotNull(document1.baseUri())
project,0,test34467,"public void test34467() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    Document document1 = element0.ownerDocument();
    assertEquals(""#document"", document1.nodeName());
}",0,assertNotNull(document1.nodeName())
project,0,test34468,"public void test34468() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    Document document1 = element0.ownerDocument();
    assertFalse(document1.isBlock());
}",0,assertFalse(document1.isBlock())
project,0,test34469,"public void test34469() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    Document document1 = element0.ownerDocument();
    assertEquals(0, (int) document1.siblingIndex());
}",0,
project,0,test34470,"public void test34470() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    Document document1 = element0.ownerDocument();
    assertNotNull(document1);
}",0,
project,0,test34471,"public void test34471() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    Document document1 = element0.ownerDocument();
    assertSame(document0, document1);
}",0,
project,0,test34472,"public void test34472() throws Throwable {
    Document document0 = Document.createShell(""':$]p'"");
    Element element0 = document0.child(0);
    Document document1 = element0.ownerDocument();
    assertSame(document1, document0);
}",0,
project,0,test35473,"public void test35473() throws Throwable {
    DataNode dataNode0 = new DataNode(""e]g#n6OYM|$wDE"", ""<>WEwfsF,KM=V;xm"");
    assertEquals(0, (int) dataNode0.siblingIndex());
}",0,
project,0,test35474,"public void test35474() throws Throwable {
    DataNode dataNode0 = new DataNode(""e]g#n6OYM|$wDE"", ""<>WEwfsF,KM=V;xm"");
    assertEquals(""#data"", dataNode0.nodeName());
}",0,assertNotNull(dataNode0.nodeName())
project,0,test35475,"public void test35475() throws Throwable {
    DataNode dataNode0 = new DataNode(""e]g#n6OYM|$wDE"", ""<>WEwfsF,KM=V;xm"");
    assertEquals(""<>WEwfsF,KM=V;xm"", dataNode0.baseUri());
}",0,
project,0,test35476,"public void test35476() throws Throwable {
    DataNode dataNode0 = new DataNode(""e]g#n6OYM|$wDE"", ""<>WEwfsF,KM=V;xm"");
    assertNotNull(dataNode0);
}",0,assertNotNull(dataNode0)
project,0,test35477,"public void test35477() throws Throwable {
    DataNode dataNode0 = new DataNode(""e]g#n6OYM|$wDE"", ""<>WEwfsF,KM=V;xm"");
    Document document0 = dataNode0.ownerDocument();
    assertEquals(0, (int) dataNode0.siblingIndex());
}",0,
project,0,test35478,"public void test35478() throws Throwable {
    DataNode dataNode0 = new DataNode(""e]g#n6OYM|$wDE"", ""<>WEwfsF,KM=V;xm"");
    Document document0 = dataNode0.ownerDocument();
    assertEquals(""#data"", dataNode0.nodeName());
}",0,assertNotNull(dataNode0.nodeName())
project,0,test35479,"public void test35479() throws Throwable {
    DataNode dataNode0 = new DataNode(""e]g#n6OYM|$wDE"", ""<>WEwfsF,KM=V;xm"");
    Document document0 = dataNode0.ownerDocument();
    assertEquals(""<>WEwfsF,KM=V;xm"", dataNode0.baseUri());
}",0,
project,0,test35480,"public void test35480() throws Throwable {
    DataNode dataNode0 = new DataNode(""e]g#n6OYM|$wDE"", ""<>WEwfsF,KM=V;xm"");
    Document document0 = dataNode0.ownerDocument();
    assertNull(document0);
}",0,assertNotNull(document0)
project,0,test36481,"public void test36481() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    assertEquals(""))W"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test36482,"public void test36482() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test36483,"public void test36483() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test36484,"public void test36484() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test36485,"public void test36485() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    assertNotNull(document0);
}",0,
project,0,test36486,"public void test36486() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    Document document1 = document0.ownerDocument();
    assertEquals(""))W"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test36487,"public void test36487() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    Document document1 = document0.ownerDocument();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test36488,"public void test36488() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    Document document1 = document0.ownerDocument();
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test36489,"public void test36489() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    Document document1 = document0.ownerDocument();
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test36490,"public void test36490() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    Document document1 = document0.ownerDocument();
    assertEquals(""#document"", document1.nodeName());
}",0,assertNotNull(document1.nodeName())
project,0,test36491,"public void test36491() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    Document document1 = document0.ownerDocument();
    assertEquals(0, (int) document1.siblingIndex());
}",0,
project,0,test36492,"public void test36492() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    Document document1 = document0.ownerDocument();
    assertEquals(""))W"", document1.baseUri());
}",0,assertNotNull(document1.baseUri())
project,0,test36493,"public void test36493() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    Document document1 = document0.ownerDocument();
    assertFalse(document1.isBlock());
}",0,assertTrue(document1.isBlock())
project,0,test36494,"public void test36494() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    Document document1 = document0.ownerDocument();
    assertNotNull(document1);
}",0,"assertEquals(document0, document1)"
project,0,test36495,"public void test36495() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    Document document1 = document0.ownerDocument();
    assertSame(document0, document1);
}",0,
project,0,test36496,"public void test36496() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    Document document1 = document0.ownerDocument();
    assertSame(document1, document0);
}",0,
project,0,test37497,"public void test37497() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test37498,"public void test37498() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test37499,"public void test37499() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    assertEquals(""))W"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test37500,"public void test37500() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    assertFalse(document0.isBlock());
}",0,
project,0,test37501,"public void test37501() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    assertNotNull(document0);
}",0,
project,0,test37502,"public void test37502() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    String string0 = document0.absUrl("",xte{(ib:\""DA"");
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test37503,"public void test37503() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    String string0 = document0.absUrl("",xte{(ib:\""DA"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test37504,"public void test37504() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    String string0 = document0.absUrl("",xte{(ib:\""DA"");
    assertEquals(""))W"", document0.baseUri());
}",0,
project,0,test37505,"public void test37505() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    String string0 = document0.absUrl("",xte{(ib:\""DA"");
    assertFalse(document0.isBlock());
}",0,
project,0,test37506,"public void test37506() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    String string0 = document0.absUrl("",xte{(ib:\""DA"");
    assertEquals("""", string0);
}",0,
project,0,test37507,"public void test37507() throws Throwable {
    Document document0 = Document.createShell(""))W"");
    String string0 = document0.absUrl("",xte{(ib:\""DA"");
    assertNotNull(string0);
}",0,
project,0,test38508,"public void test38508() throws Throwable {
    Document document0 = Document.createShell(""6:~ui3O|e\""s>;cq"");
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test38509,"public void test38509() throws Throwable {
    Document document0 = Document.createShell(""6:~ui3O|e\""s>;cq"");
    assertEquals(""6:~ui3O|e\""s>;cq"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test38510,"public void test38510() throws Throwable {
    Document document0 = Document.createShell(""6:~ui3O|e\""s>;cq"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test38511,"public void test38511() throws Throwable {
    Document document0 = Document.createShell(""6:~ui3O|e\""s>;cq"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test38512,"public void test38512() throws Throwable {
    Document document0 = Document.createShell(""6:~ui3O|e\""s>;cq"");
    assertNotNull(document0);
}",0,
project,0,test38513,"public void test38513() throws Throwable {
    Document document0 = Document.createShell(""6:~ui3O|e\""s>;cq"");
    String string0 = document0.attr(""6:~ui3O|e\""s>;cq"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test38514,"public void test38514() throws Throwable {
    Document document0 = Document.createShell(""6:~ui3O|e\""s>;cq"");
    String string0 = document0.attr(""6:~ui3O|e\""s>;cq"");
    assertEquals(""6:~ui3O|e\""s>;cq"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test38515,"public void test38515() throws Throwable {
    Document document0 = Document.createShell(""6:~ui3O|e\""s>;cq"");
    String string0 = document0.attr(""6:~ui3O|e\""s>;cq"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test38516,"public void test38516() throws Throwable {
    Document document0 = Document.createShell(""6:~ui3O|e\""s>;cq"");
    String string0 = document0.attr(""6:~ui3O|e\""s>;cq"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test38517,"public void test38517() throws Throwable {
    Document document0 = Document.createShell(""6:~ui3O|e\""s>;cq"");
    String string0 = document0.attr(""6:~ui3O|e\""s>;cq"");
    assertEquals("""", string0);
}",1,
project,0,test38518,"public void test38518() throws Throwable {
    Document document0 = Document.createShell(""6:~ui3O|e\""s>;cq"");
    String string0 = document0.attr(""6:~ui3O|e\""s>;cq"");
    assertNotNull(string0);
}",1,
project,0,test39519,"public void test39519() throws Throwable {
    Document document0 = new Document(""\n"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test39520,"public void test39520() throws Throwable {
    Document document0 = new Document(""\n"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test39521,"public void test39521() throws Throwable {
    Document document0 = new Document(""\n"");
    assertFalse(document0.isBlock());
}",0,
project,0,test39522,"public void test39522() throws Throwable {
    Document document0 = new Document(""\n"");
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test39523,"public void test39523() throws Throwable {
    Document document0 = new Document(""\n"");
    assertNotNull(document0);
}",0,
project,0,test39524,"public void test39524() throws Throwable {
    Document document0 = new Document(""\n"");
    // Undeclared exception!
    try {
        document0.attr(""abs:"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test40525,"public void test40525() throws Throwable {
    Comment comment0 = new Comment(""h$0[~>RQv}cn4&@*"", ""html"");
    assertEquals(""html"", comment0.baseUri());
}",0,assertNotNull(comment0.baseUri())
project,0,test40526,"public void test40526() throws Throwable {
    Comment comment0 = new Comment(""h$0[~>RQv}cn4&@*"", ""html"");
    assertEquals(0, (int) comment0.siblingIndex());
}",0,
project,0,test40527,"public void test40527() throws Throwable {
    Comment comment0 = new Comment(""h$0[~>RQv}cn4&@*"", ""html"");
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test40528,"public void test40528() throws Throwable {
    Comment comment0 = new Comment(""h$0[~>RQv}cn4&@*"", ""html"");
    assertNotNull(comment0);
}",0,assertNotNull(comment0)
project,0,test40529,"public void test40529() throws Throwable {
    Comment comment0 = new Comment(""h$0[~>RQv}cn4&@*"", ""html"");
    Integer integer0 = comment0.siblingIndex();
    assertEquals(""html"", comment0.baseUri());
}",0,assertNotNull(comment0.baseUri())
project,0,test40530,"public void test40530() throws Throwable {
    Comment comment0 = new Comment(""h$0[~>RQv}cn4&@*"", ""html"");
    Integer integer0 = comment0.siblingIndex();
    assertEquals(0, (int) comment0.siblingIndex());
}",0,
project,0,test40531,"public void test40531() throws Throwable {
    Comment comment0 = new Comment(""h$0[~>RQv}cn4&@*"", ""html"");
    Integer integer0 = comment0.siblingIndex();
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test40532,"public void test40532() throws Throwable {
    Comment comment0 = new Comment(""h$0[~>RQv}cn4&@*"", ""html"");
    Integer integer0 = comment0.siblingIndex();
    assertEquals(0, (int) integer0);
}",0,
project,0,test40533,"public void test40533() throws Throwable {
    Comment comment0 = new Comment(""h$0[~>RQv}cn4&@*"", ""html"");
    Integer integer0 = comment0.siblingIndex();
    assertNotNull(integer0);
}",0,assertNotNull(integer0)
project,0,test41534,"public void test41534() throws Throwable {
    Document document0 = Document.createShell("""");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test41535,"public void test41535() throws Throwable {
    Document document0 = Document.createShell("""");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test41536,"public void test41536() throws Throwable {
    Document document0 = Document.createShell("""");
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test41537,"public void test41537() throws Throwable {
    Document document0 = Document.createShell("""");
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test41538,"public void test41538() throws Throwable {
    Document document0 = Document.createShell("""");
    assertNotNull(document0);
}",0,
project,0,test41539,"public void test41539() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.head();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test41540,"public void test41540() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.head();
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test41541,"public void test41541() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.head();
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test41542,"public void test41542() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.head();
    assertFalse(document0.isBlock());
}",0,
project,0,test41543,"public void test41543() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.head();
    assertTrue(element0.isBlock());
}",0,
project,0,test41544,"public void test41544() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.head();
    assertEquals(0, (int) element0.siblingIndex());
}",0,
project,0,test41545,"public void test41545() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.head();
    assertEquals("""", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test41546,"public void test41546() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.head();
    assertNotNull(element0);
}",0,assertNotNull(element0)
project,0,test41547,"public void test41547() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.head();
    String string0 = element0.outerHtml();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test41548,"public void test41548() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.head();
    String string0 = element0.outerHtml();
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test41549,"public void test41549() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.head();
    String string0 = element0.outerHtml();
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test41550,"public void test41550() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.head();
    String string0 = element0.outerHtml();
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test41551,"public void test41551() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.head();
    String string0 = element0.outerHtml();
    assertTrue(element0.isBlock());
}",0,assertFalse(element0.isBlock())
project,0,test41552,"public void test41552() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.head();
    String string0 = element0.outerHtml();
    assertEquals(0, (int) element0.siblingIndex());
}",0,
project,0,test41553,"public void test41553() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.head();
    String string0 = element0.outerHtml();
    assertEquals("""", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test41554,"public void test41554() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.head();
    String string0 = element0.outerHtml();
    assertEquals(""\n<head></head>"", string0);
}",0,assertNotNull(string0)
project,0,test41555,"public void test41555() throws Throwable {
    Document document0 = Document.createShell("""");
    Element element0 = document0.head();
    String string0 = element0.outerHtml();
    assertNotNull(string0);
}",0,
project,0,test42556,"public void test42556() throws Throwable {
    Comment comment0 = new Comment(""&/\""$^@+=ai|umu0#"", "".yZvVV"");
    assertEquals("".yZvVV"", comment0.baseUri());
}",0,
project,0,test42557,"public void test42557() throws Throwable {
    Comment comment0 = new Comment(""&/\""$^@+=ai|umu0#"", "".yZvVV"");
    assertEquals(0, (int) comment0.siblingIndex());
}",0,
project,0,test42558,"public void test42558() throws Throwable {
    Comment comment0 = new Comment(""&/\""$^@+=ai|umu0#"", "".yZvVV"");
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test42559,"public void test42559() throws Throwable {
    Comment comment0 = new Comment(""&/\""$^@+=ai|umu0#"", "".yZvVV"");
    assertNotNull(comment0);
}",0,
project,0,test42560,"public void test42560() throws Throwable {
    Comment comment0 = new Comment(""&/\""$^@+=ai|umu0#"", "".yZvVV"");
    // Undeclared exception!
    try {
        comment0.outerHtml((StringBuilder) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test43561,"public void test43561() throws Throwable {
    Document document0 = Document.createShell(""]"");
    assertEquals(""]"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test43562,"public void test43562() throws Throwable {
    Document document0 = Document.createShell(""]"");
    assertFalse(document0.isBlock());
}",0,
project,0,test43563,"public void test43563() throws Throwable {
    Document document0 = Document.createShell(""]"");
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test43564,"public void test43564() throws Throwable {
    Document document0 = Document.createShell(""]"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test43565,"public void test43565() throws Throwable {
    Document document0 = Document.createShell(""]"");
    assertNotNull(document0);
}",0,
project,0,test43566,"public void test43566() throws Throwable {
    Document document0 = Document.createShell(""]"");
    Document document1 = (Document) document0.removeAttr(""]"");
    assertEquals(""]"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test43567,"public void test43567() throws Throwable {
    Document document0 = Document.createShell(""]"");
    Document document1 = (Document) document0.removeAttr(""]"");
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test43568,"public void test43568() throws Throwable {
    Document document0 = Document.createShell(""]"");
    Document document1 = (Document) document0.removeAttr(""]"");
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test43569,"public void test43569() throws Throwable {
    Document document0 = Document.createShell(""]"");
    Document document1 = (Document) document0.removeAttr(""]"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test43570,"public void test43570() throws Throwable {
    Document document0 = Document.createShell(""]"");
    Document document1 = (Document) document0.removeAttr(""]"");
    assertEquals(""]"", document1.baseUri());
}",0,assertNotNull(document1.baseUri())
project,0,test43571,"public void test43571() throws Throwable {
    Document document0 = Document.createShell(""]"");
    Document document1 = (Document) document0.removeAttr(""]"");
    assertEquals(""#document"", document1.nodeName());
}",0,
project,0,test43572,"public void test43572() throws Throwable {
    Document document0 = Document.createShell(""]"");
    Document document1 = (Document) document0.removeAttr(""]"");
    assertEquals(0, (int) document1.siblingIndex());
}",0,
project,0,test43573,"public void test43573() throws Throwable {
    Document document0 = Document.createShell(""]"");
    Document document1 = (Document) document0.removeAttr(""]"");
    assertFalse(document1.isBlock());
}",0,assertFalse(document1.isBlock())
project,0,test43574,"public void test43574() throws Throwable {
    Document document0 = Document.createShell(""]"");
    Document document1 = (Document) document0.removeAttr(""]"");
    assertNotNull(document1);
}",0,assertNotNull(document1)
project,0,test43575,"public void test43575() throws Throwable {
    Document document0 = Document.createShell(""]"");
    Document document1 = (Document) document0.removeAttr(""]"");
    assertSame(document0, document1);
}",0,
project,0,test43576,"public void test43576() throws Throwable {
    Document document0 = Document.createShell(""]"");
    Document document1 = (Document) document0.removeAttr(""]"");
    assertSame(document1, document0);
}",0,
project,0,test44577,"public void test44577() throws Throwable {
    Document document0 = Document.createShell("""");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test44578,"public void test44578() throws Throwable {
    Document document0 = Document.createShell("""");
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test44579,"public void test44579() throws Throwable {
    Document document0 = Document.createShell("""");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test44580,"public void test44580() throws Throwable {
    Document document0 = Document.createShell("""");
    assertEquals("""", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test44581,"public void test44581() throws Throwable {
    Document document0 = Document.createShell("""");
    assertNotNull(document0);
}",0,
project,0,test44582,"public void test44582() throws Throwable {
    Document document0 = Document.createShell("""");
    String string0 = document0.baseUri();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test44583,"public void test44583() throws Throwable {
    Document document0 = Document.createShell("""");
    String string0 = document0.baseUri();
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test44584,"public void test44584() throws Throwable {
    Document document0 = Document.createShell("""");
    String string0 = document0.baseUri();
    assertEquals(""#document"", document0.nodeName());
}",0,
project,0,test44585,"public void test44585() throws Throwable {
    Document document0 = Document.createShell("""");
    String string0 = document0.baseUri();
    assertEquals("""", document0.baseUri());
}",0,
project,0,test44586,"public void test44586() throws Throwable {
    Document document0 = Document.createShell("""");
    String string0 = document0.baseUri();
    assertEquals("""", string0);
}",0,
project,0,test44587,"public void test44587() throws Throwable {
    Document document0 = Document.createShell("""");
    String string0 = document0.baseUri();
    assertNotNull(string0);
}",0,
project,0,test45588,"public void test45588() throws Throwable {
    DataNode dataNode0 = new DataNode(""wkA^K6+6F=ez-JsEx"", ""?YNP2 "");
    assertEquals(0, (int) dataNode0.siblingIndex());
}",0,
project,0,test45589,"public void test45589() throws Throwable {
    DataNode dataNode0 = new DataNode(""wkA^K6+6F=ez-JsEx"", ""?YNP2 "");
    assertEquals(""#data"", dataNode0.nodeName());
}",0,assertNotNull(dataNode0.nodeName())
project,0,test45590,"public void test45590() throws Throwable {
    DataNode dataNode0 = new DataNode(""wkA^K6+6F=ez-JsEx"", ""?YNP2 "");
    assertEquals(""?YNP2"", dataNode0.baseUri());
}",0,
project,0,test45591,"public void test45591() throws Throwable {
    DataNode dataNode0 = new DataNode(""wkA^K6+6F=ez-JsEx"", ""?YNP2 "");
    assertNotNull(dataNode0);
}",0,
project,0,test45592,"public void test45592() throws Throwable {
    DataNode dataNode0 = new DataNode(""wkA^K6+6F=ez-JsEx"", ""?YNP2 "");
    Node node0 = dataNode0.parent();
    assertEquals(0, (int) dataNode0.siblingIndex());
}",0,
project,0,test45593,"public void test45593() throws Throwable {
    DataNode dataNode0 = new DataNode(""wkA^K6+6F=ez-JsEx"", ""?YNP2 "");
    Node node0 = dataNode0.parent();
    assertEquals(""#data"", dataNode0.nodeName());
}",0,assertNotNull(dataNode0.nodeName())
project,0,test45594,"public void test45594() throws Throwable {
    DataNode dataNode0 = new DataNode(""wkA^K6+6F=ez-JsEx"", ""?YNP2 "");
    Node node0 = dataNode0.parent();
    assertEquals(""?YNP2"", dataNode0.baseUri());
}",0,assertNotNull(dataNode0.baseUri())
project,0,test45595,"public void test45595() throws Throwable {
    DataNode dataNode0 = new DataNode(""wkA^K6+6F=ez-JsEx"", ""?YNP2 "");
    Node node0 = dataNode0.parent();
    assertNull(node0);
}",0,assertNotNull(node0)
project,0,test46596,"public void test46596() throws Throwable {
    Document document0 = new Document(""#_fstZ"");
    assertEquals(""#_fstZ"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test46597,"public void test46597() throws Throwable {
    Document document0 = new Document(""#_fstZ"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test46598,"public void test46598() throws Throwable {
    Document document0 = new Document(""#_fstZ"");
    assertFalse(document0.isBlock());
}",0,
project,0,test46599,"public void test46599() throws Throwable {
    Document document0 = new Document(""#_fstZ"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test46600,"public void test46600() throws Throwable {
    Document document0 = new Document(""#_fstZ"");
    assertNotNull(document0);
}",0,
project,0,test46601,"public void test46601() throws Throwable {
    Document document0 = new Document(""#_fstZ"");
    // Undeclared exception!
    try {
        document0.childNode(763);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 763, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test47602,"public void test47602() throws Throwable {
    Comment comment0 = new Comment("""", ""\"""");
    assertEquals(""\"""", comment0.baseUri());
}",0,
project,0,test47603,"public void test47603() throws Throwable {
    Comment comment0 = new Comment("""", ""\"""");
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test47604,"public void test47604() throws Throwable {
    Comment comment0 = new Comment("""", ""\"""");
    assertEquals(0, (int) comment0.siblingIndex());
}",0,
project,0,test47605,"public void test47605() throws Throwable {
    Comment comment0 = new Comment("""", ""\"""");
    assertNotNull(comment0);
}",0,
project,0,test47606,"public void test47606() throws Throwable {
    Comment comment0 = new Comment("""", ""\"""");
    Attributes attributes0 = comment0.attributes();
    assertEquals(""\"""", comment0.baseUri());
}",0,
project,0,test47607,"public void test47607() throws Throwable {
    Comment comment0 = new Comment("""", ""\"""");
    Attributes attributes0 = comment0.attributes();
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test47608,"public void test47608() throws Throwable {
    Comment comment0 = new Comment("""", ""\"""");
    Attributes attributes0 = comment0.attributes();
    assertEquals(0, (int) comment0.siblingIndex());
}",0,
project,0,test47609,"public void test47609() throws Throwable {
    Comment comment0 = new Comment("""", ""\"""");
    Attributes attributes0 = comment0.attributes();
    assertNotNull(attributes0);
}",0,
project,0,test48610,"public void test48610() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""3jfH"", ""@ OyqWxy8"");
    assertEquals(""@ OyqWxy8"", dataNode0.baseUri());
}",0,
project,0,test48611,"public void test48611() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""3jfH"", ""@ OyqWxy8"");
    assertEquals(0, (int) dataNode0.siblingIndex());
}",0,
project,0,test48612,"public void test48612() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""3jfH"", ""@ OyqWxy8"");
    assertEquals(""#data"", dataNode0.nodeName());
}",0,
project,0,test48613,"public void test48613() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""3jfH"", ""@ OyqWxy8"");
    assertNotNull(dataNode0);
}",0,
project,0,test48614,"public void test48614() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""3jfH"", ""@ OyqWxy8"");
    Node node0 = dataNode0.attr(""s(t"", ""3jfH"");
    assertEquals(""@ OyqWxy8"", dataNode0.baseUri());
}",0,assertNotNull(dataNode0.baseUri())
project,0,test48615,"public void test48615() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""3jfH"", ""@ OyqWxy8"");
    Node node0 = dataNode0.attr(""s(t"", ""3jfH"");
    assertEquals(0, (int) dataNode0.siblingIndex());
}",0,
project,0,test48616,"public void test48616() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""3jfH"", ""@ OyqWxy8"");
    Node node0 = dataNode0.attr(""s(t"", ""3jfH"");
    assertEquals(""#data"", dataNode0.nodeName());
}",0,assertNotNull(dataNode0.nodeName())
project,0,test48617,"public void test48617() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""3jfH"", ""@ OyqWxy8"");
    Node node0 = dataNode0.attr(""s(t"", ""3jfH"");
    assertEquals(""@ OyqWxy8"", node0.baseUri());
}",0,assertNotNull(node0.baseUri())
project,0,test48618,"public void test48618() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""3jfH"", ""@ OyqWxy8"");
    Node node0 = dataNode0.attr(""s(t"", ""3jfH"");
    assertEquals(""#data"", node0.nodeName());
}",0,assertNotNull(node0.nodeName())
project,0,test48619,"public void test48619() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""3jfH"", ""@ OyqWxy8"");
    Node node0 = dataNode0.attr(""s(t"", ""3jfH"");
    assertEquals(0, (int) node0.siblingIndex());
}",0,
project,0,test48620,"public void test48620() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""3jfH"", ""@ OyqWxy8"");
    Node node0 = dataNode0.attr(""s(t"", ""3jfH"");
    assertNotNull(node0);
}",0,assertNotNull(node0)
project,0,test48621,"public void test48621() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""3jfH"", ""@ OyqWxy8"");
    Node node0 = dataNode0.attr(""s(t"", ""3jfH"");
    assertSame(dataNode0, node0);
}",0,
project,0,test48622,"public void test48622() throws Throwable {
    DataNode dataNode0 = DataNode.createFromEncoded(""3jfH"", ""@ OyqWxy8"");
    Node node0 = dataNode0.attr(""s(t"", ""3jfH"");
    assertSame(node0, dataNode0);
}",0,
project,0,test49623,"public void test49623() throws Throwable {
    Document document0 = Document.createShell(""kd)e\""|B/wHW6"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test49624,"public void test49624() throws Throwable {
    Document document0 = Document.createShell(""kd)e\""|B/wHW6"");
    assertEquals(""kd)e\""|B/wHW6"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test49625,"public void test49625() throws Throwable {
    Document document0 = Document.createShell(""kd)e\""|B/wHW6"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test49626,"public void test49626() throws Throwable {
    Document document0 = Document.createShell(""kd)e\""|B/wHW6"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test49627,"public void test49627() throws Throwable {
    Document document0 = Document.createShell(""kd)e\""|B/wHW6"");
    assertNotNull(document0);
}",0,
project,0,test49628,"public void test49628() throws Throwable {
    Document document0 = Document.createShell(""kd)e\""|B/wHW6"");
    boolean boolean0 = document0.hasAttr("""");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test49629,"public void test49629() throws Throwable {
    Document document0 = Document.createShell(""kd)e\""|B/wHW6"");
    boolean boolean0 = document0.hasAttr("""");
    assertEquals(""kd)e\""|B/wHW6"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test49630,"public void test49630() throws Throwable {
    Document document0 = Document.createShell(""kd)e\""|B/wHW6"");
    boolean boolean0 = document0.hasAttr("""");
    assertFalse(document0.isBlock());
}",0,
project,0,test49631,"public void test49631() throws Throwable {
    Document document0 = Document.createShell(""kd)e\""|B/wHW6"");
    boolean boolean0 = document0.hasAttr("""");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test49632,"public void test49632() throws Throwable {
    Document document0 = Document.createShell(""kd)e\""|B/wHW6"");
    boolean boolean0 = document0.hasAttr("""");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test50633,"public void test50633() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test50634,"public void test50634() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test50635,"public void test50635() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test50636,"public void test50636() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    assertEquals(""/R&[^jW@`Wl"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test50637,"public void test50637() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    assertNotNull(document0);
}",0,
project,0,test50638,"public void test50638() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    Document document1 = document0.normalise();
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test50639,"public void test50639() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    Document document1 = document0.normalise();
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test50640,"public void test50640() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    Document document1 = document0.normalise();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test50641,"public void test50641() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    Document document1 = document0.normalise();
    assertEquals(""/R&[^jW@`Wl"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test50642,"public void test50642() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    Document document1 = document0.normalise();
    assertEquals(""#document"", document1.nodeName());
}",0,assertNotNull(document1.nodeName())
project,0,test50643,"public void test50643() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    Document document1 = document0.normalise();
    assertEquals(0, (int) document1.siblingIndex());
}",0,
project,0,test50644,"public void test50644() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    Document document1 = document0.normalise();
    assertEquals(""/R&[^jW@`Wl"", document1.baseUri());
}",0,assertNotNull(document1.baseUri())
project,0,test50645,"public void test50645() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    Document document1 = document0.normalise();
    assertFalse(document1.isBlock());
}",0,assertFalse(document1.isBlock())
project,0,test50646,"public void test50646() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    Document document1 = document0.normalise();
    assertNotNull(document1);
}",0,
project,0,test50647,"public void test50647() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    Document document1 = document0.normalise();
    assertSame(document0, document1);
}",0,
project,0,test50648,"public void test50648() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    Document document1 = document0.normalise();
    assertSame(document1, document0);
}",0,
project,0,test50649,"public void test50649() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    Document document1 = document0.normalise();
    String string0 = document0.toString();
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test50650,"public void test50650() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    Document document1 = document0.normalise();
    String string0 = document0.toString();
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test50651,"public void test50651() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    Document document1 = document0.normalise();
    String string0 = document0.toString();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test50652,"public void test50652() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    Document document1 = document0.normalise();
    String string0 = document0.toString();
    assertEquals(""/R&[^jW@`Wl"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test50653,"public void test50653() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    Document document1 = document0.normalise();
    String string0 = document0.toString();
    assertEquals(""<html>\n <head></head>\n <body></body>\n</html>"", string0);
}",0,assertNotNull(string0)
project,0,test50654,"public void test50654() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    Document document1 = document0.normalise();
    String string0 = document0.toString();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test50655,"public void test50655() throws Throwable {
    Document document0 = new Document(""/R&[^jW@`Wl"");
    Document document1 = document0.normalise();
    String string0 = document0.toString();
    assertSame(document0, document1);
}",0,
project,0,test51656,"public void test51656() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    assertEquals("""", textNode0.baseUri());
}",0,
project,0,test51657,"public void test51657() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    assertEquals(""#text"", textNode0.nodeName());
}",0,
project,0,test51658,"public void test51658() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test51659,"public void test51659() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    assertNotNull(textNode0);
}",0,
project,0,test51660,"public void test51660() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    assertEquals(""@2vg"", document0.baseUri());
}",0,
project,0,test51661,"public void test51661() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test51662,"public void test51662() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    assertFalse(document0.isBlock());
}",0,
project,0,test51663,"public void test51663() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test51664,"public void test51664() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    assertNotNull(document0);
}",0,
project,0,test51665,"public void test51665() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    Element element0 = document0.appendChild(textNode0);
    assertEquals("""", textNode0.baseUri());
}",0,
project,0,test51666,"public void test51666() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    Element element0 = document0.appendChild(textNode0);
    assertEquals(""#text"", textNode0.nodeName());
}",0,assertNotNull(textNode0.nodeName())
project,0,test51667,"public void test51667() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    Element element0 = document0.appendChild(textNode0);
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test51668,"public void test51668() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    Element element0 = document0.appendChild(textNode0);
    assertEquals(""@2vg"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test51669,"public void test51669() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    Element element0 = document0.appendChild(textNode0);
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test51670,"public void test51670() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    Element element0 = document0.appendChild(textNode0);
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test51671,"public void test51671() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    Element element0 = document0.appendChild(textNode0);
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test51672,"public void test51672() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    Element element0 = document0.appendChild(textNode0);
    assertEquals(""#document"", element0.nodeName());
}",0,assertNotNull(element0.nodeName())
project,0,test51673,"public void test51673() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    Element element0 = document0.appendChild(textNode0);
    assertFalse(element0.isBlock());
}",0,
project,0,test51674,"public void test51674() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    Element element0 = document0.appendChild(textNode0);
    assertEquals(""@2vg"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test51675,"public void test51675() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    Element element0 = document0.appendChild(textNode0);
    assertEquals(0, (int) element0.siblingIndex());
}",0,
project,0,test51676,"public void test51676() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    Element element0 = document0.appendChild(textNode0);
    assertNotNull(element0);
}",1,
project,0,test51677,"public void test51677() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    Element element0 = document0.appendChild(textNode0);
    assertSame(document0, element0);
}",1,
project,0,test51678,"public void test51678() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    Element element0 = document0.appendChild(textNode0);
    assertSame(element0, document0);
}",1,
project,0,test51679,"public void test51679() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    Element element0 = document0.appendChild(textNode0);
    textNode0.hashCode();
    assertEquals("""", textNode0.baseUri());
}",0,
project,0,test51680,"public void test51680() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    Element element0 = document0.appendChild(textNode0);
    textNode0.hashCode();
    assertEquals(""#text"", textNode0.nodeName());
}",0,assertNotNull(textNode0.nodeName())
project,0,test51681,"public void test51681() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = new Document(""@2vg"");
    Element element0 = document0.appendChild(textNode0);
    textNode0.hashCode();
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test52682,"public void test52682() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    assertEquals(""#text"", textNode0.nodeName());
}",0,
project,0,test52683,"public void test52683() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test52684,"public void test52684() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    assertEquals("""", textNode0.baseUri());
}",0,
project,0,test52685,"public void test52685() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    assertNotNull(textNode0);
}",0,
project,0,test52686,"public void test52686() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    boolean boolean0 = textNode0.equals(""`!R66H]E90u[CgnQa"");
    assertEquals(""#text"", textNode0.nodeName());
}",0,assertNotNull(textNode0.nodeName())
project,0,test52687,"public void test52687() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    boolean boolean0 = textNode0.equals(""`!R66H]E90u[CgnQa"");
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test52688,"public void test52688() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    boolean boolean0 = textNode0.equals(""`!R66H]E90u[CgnQa"");
    assertEquals("""", textNode0.baseUri());
}",0,assertNotNull(textNode0.baseUri())
project,0,test52689,"public void test52689() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    boolean boolean0 = textNode0.equals(""`!R66H]E90u[CgnQa"");
    assertFalse(boolean0);
}",1,
project,0,test53690,"public void test53690() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""V|>p]|?#is+"");
    assertEquals(""V|>p]|?#is+"", textNode0.baseUri());
}",0,assertNotNull(textNode0.baseUri())
project,0,test53691,"public void test53691() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""V|>p]|?#is+"");
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test53692,"public void test53692() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""V|>p]|?#is+"");
    assertEquals(""#text"", textNode0.nodeName());
}",0,assertNotNull(textNode0.nodeName())
project,0,test53693,"public void test53693() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""V|>p]|?#is+"");
    assertNotNull(textNode0);
}",0,
project,0,test53694,"public void test53694() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""V|>p]|?#is+"");
    Comment comment0 = new Comment("""", ""7DBE^zJ1dd"");
    assertEquals(0, (int) comment0.siblingIndex());
}",0,
project,0,test53695,"public void test53695() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""V|>p]|?#is+"");
    Comment comment0 = new Comment("""", ""7DBE^zJ1dd"");
    assertEquals(""7DBE^zJ1dd"", comment0.baseUri());
}",0,assertNotNull(comment0.baseUri())
project,0,test53696,"public void test53696() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""V|>p]|?#is+"");
    Comment comment0 = new Comment("""", ""7DBE^zJ1dd"");
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test53697,"public void test53697() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""V|>p]|?#is+"");
    Comment comment0 = new Comment("""", ""7DBE^zJ1dd"");
    assertNotNull(comment0);
}",0,assertNotNull(comment0)
project,0,test53698,"public void test53698() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", ""V|>p]|?#is+"");
    Comment comment0 = new Comment("""", ""7DBE^zJ1dd"");
    // Undeclared exception!
    try {
        comment0.removeChild(textNode0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test54699,"public void test54699() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    assertEquals(""#text"", textNode0.nodeName());
}",0,assertNotNull(textNode0.nodeName())
project,0,test54700,"public void test54700() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test54701,"public void test54701() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    assertEquals(""boxUl"", textNode0.baseUri());
}",0,
project,0,test54702,"public void test54702() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    assertNotNull(textNode0);
}",0,
project,0,test54703,"public void test54703() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test54704,"public void test54704() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test54705,"public void test54705() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test54706,"public void test54706() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    assertEquals(""(g9mZ.4]5x3IIV06W96"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test54707,"public void test54707() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    assertNotNull(document0);
}",0,
project,0,test54708,"public void test54708() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    assertEquals(""#text"", textNode0.nodeName());
}",0,assertNotNull(textNode0.nodeName())
project,0,test54709,"public void test54709() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test54710,"public void test54710() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    assertEquals(""boxUl"", textNode0.baseUri());
}",0,assertNotNull(textNode0.baseUri())
project,0,test54711,"public void test54711() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test54712,"public void test54712() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test54713,"public void test54713() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test54714,"public void test54714() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    assertEquals(""(g9mZ.4]5x3IIV06W96"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test54715,"public void test54715() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    assertEquals(""#document"", element0.nodeName());
}",0,assertNotNull(element0.nodeName())
project,0,test54716,"public void test54716() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    assertEquals(""(g9mZ.4]5x3IIV06W96"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test54717,"public void test54717() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    assertEquals(0, (int) element0.siblingIndex());
}",0,
project,0,test54718,"public void test54718() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    assertFalse(element0.isBlock());
}",0,assertTrue(element0.isBlock())
project,0,test54719,"public void test54719() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    assertNotNull(element0);
}",1,
project,0,test54720,"public void test54720() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    assertSame(document0, element0);
}",1,
project,0,test54721,"public void test54721() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    assertSame(element0, document0);
}",1,
project,0,test54722,"public void test54722() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    textNode0.replaceWith(element0);
    assertEquals(""#text"", textNode0.nodeName());
}",0,assertNotNull(textNode0.nodeName())
project,0,test54723,"public void test54723() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    textNode0.replaceWith(element0);
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test54724,"public void test54724() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    textNode0.replaceWith(element0);
    assertEquals(""boxUl"", textNode0.baseUri());
}",0,assertNotNull(textNode0.baseUri())
project,0,test54725,"public void test54725() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    textNode0.replaceWith(element0);
    assertFalse(document0.isBlock());
}",0,
project,0,test54726,"public void test54726() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    textNode0.replaceWith(element0);
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test54727,"public void test54727() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    textNode0.replaceWith(element0);
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test54728,"public void test54728() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    textNode0.replaceWith(element0);
    assertEquals(""(g9mZ.4]5x3IIV06W96"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test54729,"public void test54729() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    textNode0.replaceWith(element0);
    assertEquals(""#document"", element0.nodeName());
}",0,assertNotNull(element0.nodeName())
project,0,test54730,"public void test54730() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    textNode0.replaceWith(element0);
    assertEquals(""(g9mZ.4]5x3IIV06W96"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test54731,"public void test54731() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    textNode0.replaceWith(element0);
    assertEquals(0, (int) element0.siblingIndex());
}",0,
project,0,test54732,"public void test54732() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    textNode0.replaceWith(element0);
    assertFalse(element0.isBlock());
}",0,assertTrue(element0.isBlock())
project,0,test54733,"public void test54733() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    textNode0.replaceWith(element0);
    assertSame(document0, element0);
}",1,
project,0,test54734,"public void test54734() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    Element element0 = document0.prependChild(textNode0);
    textNode0.replaceWith(element0);
    assertSame(element0, document0);
}",1,
project,0,test55735,"public void test55735() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test55736,"public void test55736() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    assertEquals(""#text"", textNode0.nodeName());
}",0,assertNotNull(textNode0.nodeName())
project,0,test55737,"public void test55737() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    assertEquals("""", textNode0.baseUri());
}",0,
project,0,test55738,"public void test55738() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    assertNotNull(textNode0);
}",0,
project,0,test55739,"public void test55739() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = Document.createShell(""6:~ui3O|e\""s>;cq"");
    assertEquals(""6:~ui3O|e\""s>;cq"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test55740,"public void test55740() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = Document.createShell(""6:~ui3O|e\""s>;cq"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test55741,"public void test55741() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = Document.createShell(""6:~ui3O|e\""s>;cq"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test55742,"public void test55742() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = Document.createShell(""6:~ui3O|e\""s>;cq"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test55743,"public void test55743() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = Document.createShell(""6:~ui3O|e\""s>;cq"");
    assertNotNull(document0);
}",0,
project,0,test55744,"public void test55744() throws Throwable {
    TextNode textNode0 = new TextNode(""HBG<_5^tk'^*e'S'9"", """");
    Document document0 = Document.createShell(""6:~ui3O|e\""s>;cq"");
    // Undeclared exception!
    try {
        textNode0.replaceChild(document0, document0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test56745,"public void test56745() throws Throwable {
    Comment comment0 = new Comment("""", """");
    assertEquals(0, (int) comment0.siblingIndex());
}",0,
project,0,test56746,"public void test56746() throws Throwable {
    Comment comment0 = new Comment("""", """");
    assertEquals("""", comment0.baseUri());
}",0,assertNotNull(comment0.baseUri())
project,0,test56747,"public void test56747() throws Throwable {
    Comment comment0 = new Comment("""", """");
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test56748,"public void test56748() throws Throwable {
    Comment comment0 = new Comment("""", """");
    assertNotNull(comment0);
}",0,
project,0,test56749,"public void test56749() throws Throwable {
    Comment comment0 = new Comment("""", """");
    // Undeclared exception!
    try {
        comment0.remove();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test57750,"public void test57750() throws Throwable {
    Comment comment0 = new Comment("""", ""7DBE^zJ1dd"");
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test57751,"public void test57751() throws Throwable {
    Comment comment0 = new Comment("""", ""7DBE^zJ1dd"");
    assertEquals(0, (int) comment0.siblingIndex());
}",0,
project,0,test57752,"public void test57752() throws Throwable {
    Comment comment0 = new Comment("""", ""7DBE^zJ1dd"");
    assertEquals(""7DBE^zJ1dd"", comment0.baseUri());
}",0,
project,0,test57753,"public void test57753() throws Throwable {
    Comment comment0 = new Comment("""", ""7DBE^zJ1dd"");
    assertNotNull(comment0);
}",0,
project,0,test57754,"public void test57754() throws Throwable {
    Comment comment0 = new Comment("""", ""7DBE^zJ1dd"");
    // Undeclared exception!
    try {
        comment0.siblingNodes();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Node"", e);
    }
}",0,
project,0,test58755,"public void test58755() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    assertEquals(""boxUl"", textNode0.baseUri());
}",0,
project,0,test58756,"public void test58756() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    assertEquals(""#text"", textNode0.nodeName());
}",0,assertNotNull(textNode0.nodeName())
project,0,test58757,"public void test58757() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    assertEquals(0, (int) textNode0.siblingIndex());
}",0,
project,0,test58758,"public void test58758() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    assertNotNull(textNode0);
}",0,
project,0,test58759,"public void test58759() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    assertEquals(""#document"", document0.nodeName());
}",0,assertNotNull(document0.nodeName())
project,0,test58760,"public void test58760() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    assertEquals(""(g9mZ.4]5x3IIV06W96"", document0.baseUri());
}",0,assertNotNull(document0.baseUri())
project,0,test58761,"public void test58761() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test58762,"public void test58762() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test58763,"public void test58763() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    assertNotNull(document0);
}",0,
project,0,test58764,"public void test58764() throws Throwable {
    TextNode textNode0 = TextNode.createFromEncoded(""HBG<_5^tk'^*e'S'9"", ""boxUl"");
    Document document0 = Document.createShell(""(g9mZ.4]5x3IIV06W96"");
    // Undeclared exception!
    try {
        textNode0.replaceWith(document0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test59765,"public void test59765() throws Throwable {
    Document document0 = new Document(""\n"");
    document0.prependText(""UnderBar"");
    String string0 = document0.outerHtml();
    assertEquals(0, (int) document0.siblingIndex());
}",0,
project,0,test59766,"public void test59766() throws Throwable {
    Document document0 = new Document(""\n"");
    document0.prependText(""UnderBar"");
    String string0 = document0.outerHtml();
    assertEquals(""UnderBar"", string0);
}",0,assertNotNull(string0)
project,0,test60767,"public void test60767() throws Throwable {
    Document document0 = Document.createShell(""a5av85]4~t='"");
    Element element0 = document0.attr(""<6!e,t$\u0000GcZ"", ""~jSq;6d4g"");
    Elements elements0 = element0.getElementsByAttributeValue(""<6!e,t$\u0000GcZ"", ""a5av85]4~t='"");
    assertEquals(0, (int) element0.siblingIndex());
}",0,
project,0,test60768,"public void test60768() throws Throwable {
    Document document0 = Document.createShell(""a5av85]4~t='"");
    Element element0 = document0.attr(""<6!e,t$\u0000GcZ"", ""~jSq;6d4g"");
    Elements elements0 = element0.getElementsByAttributeValue(""<6!e,t$\u0000GcZ"", ""a5av85]4~t='"");
    assertEquals(0, elements0.size());
}",0,"assertEquals(1, elements0.size())"
project,0,test61769,"public void test61769() throws Throwable {
    Document document0 = new Document(""\n"");
    document0.setBaseUri(""5$$@@~"");
    assertEquals(""5$$@@~"", document0.baseUri());
}",0,
