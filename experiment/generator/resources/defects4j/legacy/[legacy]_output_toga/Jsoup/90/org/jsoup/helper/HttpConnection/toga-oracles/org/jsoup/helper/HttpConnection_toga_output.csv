project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0012,"public void test0012() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Connection connection0 = httpConnection0.userAgent(""dfn"");
    assertSame(httpConnection0, connection0);
}",0,
project,0,test01873,"public void test01873() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Connection connection0 = httpConnection0.proxy("":%s(%dn)"", 18);
    assertSame(httpConnection0, connection0);
}",0,
project,0,test01974,"public void test01974() throws Throwable {
    URL uRL0 = HttpConnection.encodeUrl((URL) null);
    assertNull(uRL0);
}",0,
project,0,test02176,"public void test02176() throws Throwable {
    URL uRL0 = MockURL.getFileExample();
    Connection connection0 = HttpConnection.connect(uRL0);
    assertNotNull(connection0);
}",1,
project,0,test02277,"public void test02277() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.url((URL) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // URL must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test02378,"public void test02378() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.referrer((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Referrer must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test02479,"public void test02479() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.postDataCharset((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Charset must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test02580,"public void test02580() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.headers((Map<String, String>) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Header map must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test02681,"public void test02681() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.header("""", (String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Header name must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test02782,"public void test02782() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    HashMap<String, String> hashMap0 = new HashMap<String, String>();
    hashMap0.put("""", ""bez:COzi3g)V?;ag"");
    // Undeclared exception!
    try {
        httpConnection0.data((Map<String, String>) hashMap0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Data key must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test02883,"public void test02883() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.data((Collection<Connection.KeyVal>) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Data collection must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test02984,"public void test02984() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(enumeration0).hasMoreElements();
    SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
    // Undeclared exception!
    try {
        httpConnection0.data(""zC4U'2Qeq4"", ""@Wp$c;- RVzr"", (InputStream) sequenceInputStream0, (String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test03085,"public void test03085() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    FileDescriptor fileDescriptor0 = new FileDescriptor();
    MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    // Undeclared exception!
    try {
        httpConnection0.data("""", """", (InputStream) mockFileInputStream0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Data key must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test03186,"public void test03186() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.data((String) null, (String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Data key must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test03287,"public void test03287() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.data("""");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Data key must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test03388,"public void test03388() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.cookies((Map<String, String>) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Cookie map must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test03489,"public void test03489() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.cookie("""", """");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Cookie name must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test03898,"public void test03898() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    URL uRL0 = MockURL.getFileExample();
    Connection connection0 = httpConnection0.url(uRL0);
    assertSame(connection0, httpConnection0);
}",0,
project,0,test041102,"public void test041102() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.execute();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // URL must be specified to connect
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test048111,"public void test048111() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.postDataCharset(""4"");
        fail(""Expecting exception: IllegalCharsetNameException"");
    } catch (IllegalCharsetNameException e) {
        //
        // 4
        //
        verifyException(""org.jsoup.helper.HttpConnection$Request"", e);
    }
}",0,
project,0,test049112,"public void test049112() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.maxBodySize((-4173));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // maxSize must be 0 (unlimited) or larger
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test050113,"public void test050113() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.timeout((-120));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Timeout milliseconds must be 0 (infinite) or greater
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test051114,"public void test051114() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    HashMap<String, String> hashMap0 = new HashMap<String, String>();
    hashMap0.put(""accept-encoding"", ""http"");
    Connection connection0 = httpConnection0.cookies(hashMap0);
    assertSame(httpConnection0, connection0);
}",0,
project,0,test052115,"public void test052115() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    HashMap<String, String> hashMap0 = new HashMap<String, String>();
    hashMap0.put(""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36"", ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36"");
    Connection connection0 = httpConnection0.headers(hashMap0);
    assertSame(httpConnection0, connection0);
}",0,
project,0,test053116,"public void test053116() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    httpConnection0.data(""~r^gP)] "", ""~r^gP)] "");
    Connection.KeyVal connection_KeyVal0 = httpConnection0.data(""ql%I&!imQi+o"");
    assertNull(connection_KeyVal0);
}",1,
project,0,test054117,"public void test054117() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    LinkedHashSet<Connection.KeyVal> linkedHashSet0 = new LinkedHashSet<Connection.KeyVal>();
    PipedInputStream pipedInputStream0 = new PipedInputStream(105);
    HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(""multipart/form-data"", ""/UW/,6n%N.&8]A"", (InputStream) pipedInputStream0);
    linkedHashSet0.add(httpConnection_KeyVal0);
    Connection connection0 = httpConnection0.data((Collection<Connection.KeyVal>) linkedHashSet0);
    assertSame(httpConnection0, connection0);
}",0,
project,0,test055118,"public void test055118() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    String[] stringArray0 = new String[2];
    stringArray0[0] = ""aP&-U"";
    stringArray0[1] = ""application/x-www-form-urlencoded"";
    Connection connection0 = httpConnection0.data(stringArray0);
    assertSame(connection0, httpConnection0);
}",1,
project,0,test056119,"public void test056119() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    String[] stringArray0 = new String[2];
    // Undeclared exception!
    try {
        httpConnection0.data(stringArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Data key must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test057120,"public void test057120() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    String[] stringArray0 = new String[9];
    // Undeclared exception!
    try {
        httpConnection0.data(stringArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must supply an even number of key value pairs
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test058121,"public void test058121() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    HashMap<String, String> hashMap0 = new HashMap<String, String>();
    hashMap0.put(""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36"", ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36"");
    Connection connection0 = httpConnection0.data((Map<String, String>) hashMap0);
    assertSame(httpConnection0, connection0);
}",0,
project,0,test071135,"public void test071135() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Connection connection0 = httpConnection0.data("">n{%feiZ!)9]ISh"", ""K%Q`1L1fT"", (InputStream) null, ""E~IxsBS"");
    assertSame(connection0, httpConnection0);
}",0,
project,0,test072136,"public void test072136() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Connection connection0 = httpConnection0.referrer(""Content-Encoding"");
    assertSame(httpConnection0, connection0);
}",0,
project,0,test073137,"public void test073137() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Connection connection0 = httpConnection0.header(""I.Twzz%y<+s,"", ""-[TRfq&Hg?om +#"");
    assertSame(httpConnection0, connection0);
}",0,
project,0,test074138,"public void test074138() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Connection connection0 = httpConnection0.ignoreContentType(false);
    assertSame(connection0, httpConnection0);
}",0,
project,0,test075139,"public void test075139() throws Throwable {
    URL uRL0 = MockURL.getFileExample();
    URL uRL1 = HttpConnection.encodeUrl(uRL0);
    assertNotSame(uRL1, uRL0);
}",0,
project,0,test076140,"public void test076140() throws Throwable {
    // Undeclared exception!
    try {
        HttpConnection.connect(""7["");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Malformed URL: 7[
        //
        verifyException(""org.jsoup.helper.HttpConnection"", e);
    }
}",0,
project,0,test077141,"public void test077141() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Connection.Method connection_Method0 = Connection.Method.PUT;
    Connection connection0 = httpConnection0.method(connection_Method0);
    assertSame(connection0, httpConnection0);
}",0,
project,0,test078142,"public void test078142() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    PipedInputStream pipedInputStream0 = new PipedInputStream();
    BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
    Connection connection0 = httpConnection0.data(""z~=4n(a!$m0{k9["", ""org.jsoup.parser.ParseErrorList"", (InputStream) bufferedInputStream0);
    assertSame(httpConnection0, connection0);
}",0,
project,0,test079143,"public void test079143() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Connection connection0 = httpConnection0.timeout(346);
    assertSame(httpConnection0, connection0);
}",0,
project,0,test080144,"public void test080144() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.post();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // URL must be specified to connect
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test082146,"public void test082146() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.postDataCharset(""K%Q`1L1fT"");
        fail(""Expecting exception: IllegalCharsetNameException"");
    } catch (IllegalCharsetNameException e) {
        //
        // K%Q`1L1fT
        //
        verifyException(""java.nio.charset.Charset"", e);
    }
}",0,
project,0,test084153,"public void test084153() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.url(""}"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Malformed URL: }
        //
        verifyException(""org.jsoup.helper.HttpConnection"", e);
    }
}",1,
project,0,test085154,"public void test085154() throws Throwable {
    // Undeclared exception!
    try {
        HttpConnection.connect((URL) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // URL must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test086155,"public void test086155() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Connection connection0 = httpConnection0.maxBodySize(307);
    assertSame(httpConnection0, connection0);
}",0,
project,0,test087156,"public void test087156() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Connection connection0 = httpConnection0.response((Connection.Response) null);
    assertSame(connection0, httpConnection0);
}",0,
project,0,test088157,"public void test088157() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Connection connection0 = httpConnection0.followRedirects(true);
    assertSame(connection0, httpConnection0);
}",0,
project,0,test089158,"public void test089158() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Connection connection0 = httpConnection0.cookie(""Yk&=jClR"", ""rp"");
    assertSame(connection0, httpConnection0);
}",0,
project,0,test090159,"public void test090159() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Connection connection0 = httpConnection0.userAgent("""");
    assertSame(connection0, httpConnection0);
}",0,
project,0,test092166,"public void test092166() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.get();
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // URL must be specified to connect
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test094173,"public void test094173() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Connection connection0 = httpConnection0.requestBody(""application/x-www-form-urlencoded"");
    assertSame(connection0, httpConnection0);
}",0,
project,0,test095174,"public void test095174() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Proxy proxy0 = Proxy.NO_PROXY;
    Connection connection0 = httpConnection0.proxy(proxy0);
    assertSame(connection0, httpConnection0);
}",0,
project,0,test099188,"public void test099188() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Parser parser0 = Parser.htmlParser();
    Connection connection0 = httpConnection0.parser(parser0);
    assertSame(httpConnection0, connection0);
}",0,
project,0,test101195,"public void test101195() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Connection connection0 = httpConnection0.data(""multipart/form-data=multipart/form-data"", ""fd~=8m"");
    assertSame(httpConnection0, connection0);
}",0,
project,0,test103202,"public void test103202() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    Connection connection0 = httpConnection0.sslSocketFactory((SSLSocketFactory) null);
    assertSame(httpConnection0, connection0);
}",0,
project,0,test107221,"public void test107221() throws Throwable {
    HttpConnection httpConnection0 = new HttpConnection();
    // Undeclared exception!
    try {
        httpConnection0.proxy("",V/:F"", (-918));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // port out of range:-918
        //
        verifyException(""java.net.InetSocketAddress"", e);
    }
}",0,
