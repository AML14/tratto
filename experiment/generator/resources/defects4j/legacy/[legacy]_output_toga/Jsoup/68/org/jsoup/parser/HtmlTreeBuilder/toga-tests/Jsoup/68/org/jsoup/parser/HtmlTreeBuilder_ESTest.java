/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 22:50:46 GMT 2023
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.CharacterReader;
import org.jsoup.parser.HtmlTreeBuilder;
import org.jsoup.parser.HtmlTreeBuilderState;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.parser.Token;
import org.jsoup.parser.Tokeniser;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class HtmlTreeBuilder_ESTest extends HtmlTreeBuilder_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("command");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(100);
        ParseSettings parseSettings0 = new ParseSettings(false, false);
        Document document0 = htmlTreeBuilder0.parse(stringReader0, ")", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.replaceActiveFormattingElement((Element) null, document0);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("frame");
        Document document1 = document0.normalise();
        Elements elements0 = document1.getAllElements();
        htmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
        boolean boolean0 = htmlTreeBuilder0.inSelectScope("wbr");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test0023() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inTableScope("<63:YB&VXGUaj");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test0034() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("Opw7");
        Document document1 = document0.clone();
        Element element0 = document1.text("body");
        htmlTreeBuilder0.replaceOnStack(document0, element0);
    }

    @Test(timeout = 4000)
    public void test0045() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("bgsound");
        Element element0 = document0.shallowClone();
        htmlTreeBuilder0.insertOnStackAfter(document0, element0);
    }

    @Test(timeout = 4000)
    public void test0056() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test0057() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        boolean boolean0 = htmlTreeBuilder0.isInActiveFormattingElements((Element) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test0068() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Token.Comment token_Comment0 = new Token.Comment();
        htmlTreeBuilder0.insert(token_Comment0);
    }

    @Test(timeout = 4000)
    public void test0079() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Token.Character token_Character0 = new Token.Character();
        htmlTreeBuilder0.insert(token_Character0);
    }

    @Test(timeout = 4000)
    public void test00810() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.insert(element0);
        element0.childNodeSize();
        assertEquals(0, element0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test00911() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.BeforeHtml;
        htmlTreeBuilder0.transition(htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test01012() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("bgsound");
        htmlTreeBuilder0.setHeadElement(document0);
        document0.location();
        assertNotNull(document0.location());
    }

    @Test(timeout = 4000)
    public void test01113() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.newPendingTableCharacters();
    }

    @Test(timeout = 4000)
    public void test01214() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.markInsertionMode();
    }

    @Test(timeout = 4000)
    public void test01315() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.framesetOk(true);
    }

    @Test(timeout = 4000)
    public void test01416() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("head");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = new ParseSettings(true, false);
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "script", parseErrorList0, parseSettings0);
        htmlTreeBuilder0.push(document0);
        document0.childNodeSize();
        assertEquals(0, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test01517() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.insertMarkerToFormattingElements();
    }

    @Test(timeout = 4000)
    public void test01618() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.insertInFosterParent(element0);
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test01619() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.insertInFosterParent(element0);
        element0.baseUri();
        assertNotNull(element0.baseUri());
    }

    @Test(timeout = 4000)
    public void test01620() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.insertInFosterParent(element0);
        element0.childNodeSize();
        assertEquals(0, element0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test01721() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("0vd[>jhEOMAh88s'");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parse(stringReader0, "select", parseErrorList0, parseSettings0);
        Comment comment0 = new Comment("}NV3E", "CommentEndBang");
        Attributes attributes0 = comment0.attributes();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("0vd[>jhEOMAh88s'", attributes0);
        FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag1, false);
        formElement0.siblingIndex();
        assertEquals(1, formElement0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test01822() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.clearStackToTableRowContext();
    }

    @Test(timeout = 4000)
    public void test01923() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.clearStackToTableContext();
    }

    @Test(timeout = 4000)
    public void test02024() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        String string0 = htmlTreeBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test02225() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Element element1 = htmlTreeBuilder0.removeLastFormattingElement();
    }

    @Test(timeout = 4000)
    public void test02226() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Element element1 = htmlTreeBuilder0.removeLastFormattingElement();
        element1.baseUri();
        assertNotNull(element1.baseUri());
    }

    @Test(timeout = 4000)
    public void test02227() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Element element1 = htmlTreeBuilder0.removeLastFormattingElement();
        element1.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test02328() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("#root", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test02329() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("#root", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.popStackToClose(stringArray0);
        htmlTreeBuilder0.reconstructFormattingElements();
        Element element1 = htmlTreeBuilder0.pop();
        element1.baseUri();
        assertNotNull(element1.baseUri());
    }

    @Test(timeout = 4000)
    public void test02330() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("#root", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.popStackToClose(stringArray0);
        htmlTreeBuilder0.reconstructFormattingElements();
        Element element1 = htmlTreeBuilder0.pop();
        element1.childNodeSize();
        assertEquals(1, element1.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test02431() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.pop();
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test02432() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.pop();
        element0.baseUri();
        assertNotNull(element0.baseUri());
    }

    @Test(timeout = 4000)
    public void test02633() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test02634() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.onStack((Element) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test02735() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Element element1 = htmlTreeBuilder0.lastFormattingElement();
        element1.baseUri();
        assertNotNull(element1.baseUri());
    }

    @Test(timeout = 4000)
    public void test02736() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Element element1 = htmlTreeBuilder0.lastFormattingElement();
    }

    @Test(timeout = 4000)
    public void test02737() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Element element1 = htmlTreeBuilder0.lastFormattingElement();
        element1.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test02838() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        boolean boolean0 = htmlTreeBuilder0.isSpecial(element0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test02839() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        boolean boolean0 = htmlTreeBuilder0.isSpecial(element0);
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test02840() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        boolean boolean0 = htmlTreeBuilder0.isSpecial(element0);
        element0.baseUri();
        assertNotNull(element0.baseUri());
    }

    @Test(timeout = 4000)
    public void test02941() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = new Element(">D]{y7)^B@^JfP");
        boolean boolean0 = htmlTreeBuilder0.isSpecial(element0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03042() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("#root", (Element) null, "", (ParseErrorList) null, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test03043() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("#root", (Element) null, "", (ParseErrorList) null, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.isInActiveFormattingElements(element0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03144() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test03145() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03246() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        boolean boolean0 = htmlTreeBuilder0.isFosterInserts();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03347() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test03348() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.popStackToClose(stringArray0);
        htmlTreeBuilder0.reconstructFormattingElements();
        Element element1 = htmlTreeBuilder0.insertStartTag("figcaption");
        element1.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test03349() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.popStackToClose(stringArray0);
        htmlTreeBuilder0.reconstructFormattingElements();
        Element element1 = htmlTreeBuilder0.insertStartTag("figcaption");
        element1.baseUri();
        assertNotNull(element1.baseUri());
    }

    @Test(timeout = 4000)
    public void test03450() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.insertStartTag("figcaption");
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test03451() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.insertStartTag("figcaption");
        element0.baseUri();
        assertNotNull(element0.baseUri());
    }

    @Test(timeout = 4000)
    public void test03552() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.insertStartTag("on");
        element0.baseUri();
        assertNotNull(element0.baseUri());
    }

    @Test(timeout = 4000)
    public void test03553() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.insertStartTag("on");
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test03654() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Token.StartTag token_StartTag0 = new Token.StartTag();
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("{au7]/EQH*mMS", attributes0);
        htmlTreeBuilder0.insert(token_StartTag1);
        Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test03655() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Token.StartTag token_StartTag0 = new Token.StartTag();
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("{au7]/EQH*mMS", attributes0);
        htmlTreeBuilder0.insert(token_StartTag1);
        Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
        element0.baseUri();
        assertNotNull(element0.baseUri());
    }

    @Test(timeout = 4000)
    public void test03756() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String[] stringArray0 = new String[5];
        stringArray0[0] = "wbr";
        Document document0 = new Document("frame");
        Elements elements0 = document0.getAllElements();
        htmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
        stringArray0[2] = "wbr";
        boolean boolean0 = htmlTreeBuilder0.inScope(stringArray0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03857() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("0vd[>jhEOMAh88s'");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "select", parseErrorList0, parseSettings0);
        Element element0 = document0.body();
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(element0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03858() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("0vd[>jhEOMAh88s'");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "select", parseErrorList0, parseSettings0);
        Element element0 = document0.body();
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(element0);
        String[] stringArray0 = new String[2];
        boolean boolean1 = htmlTreeBuilder0.inScope("sl*oIO", stringArray0);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test04059() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test04060() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.popStackToClose(stringArray0);
        ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
        arrayList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test04161() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
        arrayList0.size();
    }

    @Test(timeout = 4000)
    public void test04262() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        List<String> list0 = htmlTreeBuilder0.getPendingTableCharacters();
        assertNotNull(list0);
    }

    @Test(timeout = 4000)
    public void test04363() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        List<String> list0 = htmlTreeBuilder0.getPendingTableCharacters();
        list0.contains("on");
    }

    @Test(timeout = 4000)
    public void test04464() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.getHeadElement();
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test04465() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.getHeadElement();
        element0.baseUri();
        assertNotNull(element0.baseUri());
    }

    @Test(timeout = 4000)
    public void test04466() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.getHeadElement();
        element0.childNodeSize();
        assertEquals(0, element0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test04567() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("command");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(100);
        ParseSettings parseSettings0 = new ParseSettings(false, false);
        htmlTreeBuilder0.parse(stringReader0, ")", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.getFromStack("UTF8");
        assertNotNull(element0);
    }

    @Test(timeout = 4000)
    public void test04668() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("frameset");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(100);
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.initialiseParse(stringReader0, "frameset", parseErrorList0, parseSettings0);
        Document document0 = htmlTreeBuilder0.getDocument();
        document0.hasParent();
    }

    @Test(timeout = 4000)
    public void test04769() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Document document0 = htmlTreeBuilder0.getDocument();
        document0.childNodeSize();
        assertEquals(0, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test04770() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Document document0 = htmlTreeBuilder0.getDocument();
        document0.location();
        assertNotNull(document0.location());
    }

    @Test(timeout = 4000)
    public void test04871() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("command");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(100);
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        htmlTreeBuilder0.parse(stringReader0, ")", parseErrorList0, parseSettings0);
        String string0 = htmlTreeBuilder0.getBaseUri();
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test04972() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test04973() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        String string0 = htmlTreeBuilder0.getBaseUri();
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test05074() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        boolean boolean0 = htmlTreeBuilder0.framesetOk();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test05175() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test05276() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.removeLastFormattingElement();
    }

    @Test(timeout = 4000)
    public void test05377() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.removeFromStack((Element) null);
    }

    @Test(timeout = 4000)
    public void test05478() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.removeFromActiveFormattingElements((Element) null);
    }

    @Test(timeout = 4000)
    public void test05579() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.reconstructFormattingElements();
    }

    @Test(timeout = 4000)
    public void test05680() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("title");
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
    }

    @Test(timeout = 4000)
    public void test05781() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InColumnGroup;
        htmlTreeBuilder0.process((Token) null, htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test05882() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.process((Token) null);
    }

    @Test(timeout = 4000)
    public void test05983() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String[] stringArray0 = new String[9];
        htmlTreeBuilder0.popStackToClose(stringArray0);
    }

    @Test(timeout = 4000)
    public void test06084() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.popStackToClose("GP~jos>D_eJn");
    }

    @Test(timeout = 4000)
    public void test06185() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.popStackToBefore("jz");
    }

    @Test(timeout = 4000)
    public void test06286() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.pop();
    }

    @Test(timeout = 4000)
    public void test06387() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(3308);
        htmlTreeBuilder0.parseFragment((String) null, (Element) null, "", parseErrorList0, (ParseSettings) null);
    }

    @Test(timeout = 4000)
    public void test06488() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("  ");
        htmlTreeBuilder0.onStack(document0);
    }

    @Test(timeout = 4000)
    public void test06589() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.lastFormattingElement();
    }

    @Test(timeout = 4000)
    public void test06690() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertStartTag("x<ZA:/<");
    }

    @Test(timeout = 4000)
    public void test06791() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertStartTag("li");
    }

    @Test(timeout = 4000)
    public void test06892() throws Throwable {
        Document document0 = new Document("");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertInFosterParent(document0);
    }

    @Test(timeout = 4000)
    public void test06993() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.popStackToBefore("select");
        htmlTreeBuilder0.insertInFosterParent(element0);
    }

    @Test(timeout = 4000)
    public void test07094() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("00", attributes0);
        htmlTreeBuilder0.insertForm(token_StartTag1, true);
    }

    @Test(timeout = 4000)
    public void test07195() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        htmlTreeBuilder0.insertForm(token_StartTag0, true);
    }

    @Test(timeout = 4000)
    public void test07296() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertEmpty((Token.StartTag) null);
    }

    @Test(timeout = 4000)
    public void test07397() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        CharacterReader characterReader0 = new CharacterReader("");
        ParseErrorList parseErrorList0 = new ParseErrorList(1537, 1537);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        htmlTreeBuilder0.insertEmpty(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test07498() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        CharacterReader characterReader0 = new CharacterReader("*|beb");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(0);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("h5", attributes0);
        htmlTreeBuilder0.insert(token_StartTag1);
    }

    @Test(timeout = 4000)
    public void test07599() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        htmlTreeBuilder0.insert(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test076100() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.Comment token_Comment0 = new Token.Comment();
        htmlTreeBuilder0.insert(token_Comment0);
    }

    @Test(timeout = 4000)
    public void test077101() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.Character token_Character0 = new Token.Character();
        htmlTreeBuilder0.insert(token_Character0);
    }

    @Test(timeout = 4000)
    public void test078102() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell(";");
        htmlTreeBuilder0.insert(document0);
    }

    @Test(timeout = 4000)
    public void test079103() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.insert((Element) null);
    }

    @Test(timeout = 4000)
    public void test080104() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        PipedWriter pipedWriter0 = new PipedWriter();
        PipedReader pipedReader0 = new PipedReader(pipedWriter0);
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.initialiseParse(pipedReader0, "InCaption", parseErrorList0, parseSettings0);
    }

    @Test(timeout = 4000)
    public void test081105() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inSelectScope("p");
    }

    @Test(timeout = 4000)
    public void test082106() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.getFromStack("=F;IDUlNd?m>");
    }

    @Test(timeout = 4000)
    public void test083107() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.getActiveFormattingElement((String) null);
    }

    @Test(timeout = 4000)
    public void test084108() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterFrameset;
        htmlTreeBuilder0.error(htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test085109() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
    }

    @Test(timeout = 4000)
    public void test086110() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Element element1 = htmlTreeBuilder0.lastFormattingElement();
    }

    @Test(timeout = 4000)
    public void test087111() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Element element1 = htmlTreeBuilder0.getActiveFormattingElement("{au7]/EQH*mMS");
    }

    @Test(timeout = 4000)
    public void test088112() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        Element element1 = htmlTreeBuilder0.getActiveFormattingElement("{au7]/EQH*mMS");
    }

    @Test(timeout = 4000)
    public void test089113() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.getActiveFormattingElement("{au7]/EQH*mMS");
        assertNotNull(element0);
    }

    @Test(timeout = 4000)
    public void test090114() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.removeFromActiveFormattingElements((Element) null);
    }

    @Test(timeout = 4000)
    public void test091115() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.removeFromActiveFormattingElements((Element) null);
    }

    @Test(timeout = 4000)
    public void test092116() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.removeFromActiveFormattingElements((Element) null);
    }

    @Test(timeout = 4000)
    public void test093117() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
    }

    @Test(timeout = 4000)
    public void test094118() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
    }

    @Test(timeout = 4000)
    public void test095119() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("frameset");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(100);
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.initialiseParse(stringReader0, "frameset", parseErrorList0, parseSettings0);
        Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
        assertNotNull(element0);
    }

    @Test(timeout = 4000)
    public void test096120() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.generateImpliedEndTags("");
    }

    @Test(timeout = 4000)
    public void test097121() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.generateImpliedEndTags("");
    }

    @Test(timeout = 4000)
    public void test098122() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("frame");
        Elements elements0 = document0.getAllElements();
        htmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
        boolean boolean0 = htmlTreeBuilder0.inSelectScope("wbr");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test099123() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.popStackToClose(stringArray0);
        htmlTreeBuilder0.inSelectScope("section");
    }

    @Test(timeout = 4000)
    public void test100124() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.inScope("");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test102125() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("ScriptDataDoubleEscapeEnd", (Element) null, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test103126() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.replaceOnStack(element0, element0);
        element0.baseUri();
        assertNotNull(element0.baseUri());
    }

    @Test(timeout = 4000)
    public void test103127() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.replaceOnStack(element0, element0);
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test104128() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.replaceOnStack((Element) null, (Element) null);
    }

    @Test(timeout = 4000)
    public void test105129() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("bgsound");
        Elements elements0 = document0.siblingElements();
        htmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
        htmlTreeBuilder0.insertOnStackAfter(document0, document0);
    }

    @Test(timeout = 4000)
    public void test106130() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Tag tag0 = Tag.valueOf("thead");
        Element element0 = new Element(tag0, "XGMY26{Sq-DXRq`");
        ParseErrorList parseErrorList0 = new ParseErrorList(100, (-2682));
        htmlTreeBuilder0.parseFragment("thead", element0, "noscript", parseErrorList0, (ParseSettings) null);
        htmlTreeBuilder0.aboveOnStack(element0);
    }

    @Test(timeout = 4000)
    public void test107131() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Tag tag0 = Tag.valueOf("thead");
        Element element0 = new Element(tag0, "XGMY26{Sq-DXRq`");
        htmlTreeBuilder0.aboveOnStack(element0);
    }

    @Test(timeout = 4000)
    public void test108132() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("bgsound");
        Elements elements0 = document0.siblingElements();
        htmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
        htmlTreeBuilder0.clearStackToTableBodyContext();
    }

    @Test(timeout = 4000)
    public void test109133() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        String[] stringArray0 = new String[0];
        htmlTreeBuilder0.popStackToClose(stringArray0);
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test110134() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.popStackToClose("");
        htmlTreeBuilder0.pop();
    }

    @Test(timeout = 4000)
    public void test111135() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(element0);
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test111136() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(element0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test111137() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(element0);
        Element element1 = htmlTreeBuilder0.pop();
        element1.baseUri();
        assertNotNull(element1.baseUri());
    }

    @Test(timeout = 4000)
    public void test111138() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(element0);
        Element element1 = htmlTreeBuilder0.pop();
        element1.childNodeSize();
        assertEquals(1, element1.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test112139() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("0vd[>jhEOMAh88s'");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "select", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test112140() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        StringReader stringReader0 = new StringReader("0vd[>jhEOMAh88s'");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        Document document0 = htmlTreeBuilder0.parse(stringReader0, "select", parseErrorList0, parseSettings0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
        document0.childNodeSize();
        assertEquals(0, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test113141() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        htmlTreeBuilder0.insertInFosterParent(element0);
    }

    @Test(timeout = 4000)
    public void test114142() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Comment comment0 = new Comment("=J4<}9]G}p;^");
        Attributes attributes0 = comment0.attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("y72vu", attributes0);
        Element element0 = htmlTreeBuilder0.insertEmpty(token_StartTag1);
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test114143() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Comment comment0 = new Comment("=J4<}9]G}p;^");
        Attributes attributes0 = comment0.attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("y72vu", attributes0);
        Element element0 = htmlTreeBuilder0.insertEmpty(token_StartTag1);
        element0.baseUri();
        assertNotNull(element0.baseUri());
    }

    @Test(timeout = 4000)
    public void test115144() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Tag tag0 = Tag.valueOf("thead");
        Element element0 = new Element(tag0, "XGMY26{Sq-DXRq`");
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
        htmlTreeBuilder0.parseFragment("thead", element0, "noscript", parseErrorList0, (ParseSettings) null);
        parseErrorList0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test115145() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Tag tag0 = Tag.valueOf("thead");
        Element element0 = new Element(tag0, "XGMY26{Sq-DXRq`");
        ParseErrorList parseErrorList0 = new ParseErrorList(100, 100);
        htmlTreeBuilder0.parseFragment("thead", element0, "noscript", parseErrorList0, (ParseSettings) null);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test116146() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.maybeSetBaseUri(element0);
        element0.baseUri();
        assertNotNull(element0.baseUri());
    }

    @Test(timeout = 4000)
    public void test116147() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.maybeSetBaseUri(element0);
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test117148() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
        htmlTreeBuilder0.maybeSetBaseUri(element0);
    }

    @Test(timeout = 4000)
    public void test118149() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = new ParseSettings(true, true);
        Tag tag0 = Tag.valueOf("jL_dIz;B&$ J9DwK", parseSettings0);
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "Thaj{k(", attributes0);
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("n", formElement0, "HbB", parseErrorList0, parseSettings0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test119150() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Element element0 = htmlTreeBuilder0.currentElement();
        element0.before("");
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test120151() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableContext();
    }

    @Test(timeout = 4000)
    public void test121152() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inTableScope((String) null);
    }

    @Test(timeout = 4000)
    public void test122153() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
        htmlTreeBuilder0.parseFragment("on", (Element) null, "", (ParseErrorList) null, parseSettings0);
        Token.Comment token_Comment0 = new Token.Comment();
        boolean boolean0 = htmlTreeBuilder0.process(token_Comment0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test123154() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("DB`-o]]Ecrdte0H^>r");
        htmlTreeBuilder0.push(document0);
    }

    @Test(timeout = 4000)
    public void test124155() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.setFosterInserts(false);
    }

    @Test(timeout = 4000)
    public void test125156() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.replaceActiveFormattingElement((Element) null, (Element) null);
    }

    @Test(timeout = 4000)
    public void test126157() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test127158() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.isInActiveFormattingElements((Element) null);
    }

    @Test(timeout = 4000)
    public void test128159() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String string0 = htmlTreeBuilder0.getBaseUri();
    }

    @Test(timeout = 4000)
    public void test129160() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inScope("");
    }

    @Test(timeout = 4000)
    public void test130161() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.getDocument();
        assertNotNull(document0);
    }

    @Test(timeout = 4000)
    public void test131162() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.setPendingTableCharacters((List<String>) null);
    }

    @Test(timeout = 4000)
    public void test132163() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String[] stringArray0 = new String[5];
        htmlTreeBuilder0.inScope(stringArray0);
    }

    @Test(timeout = 4000)
    public void test134164() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inButtonScope("");
    }

    @Test(timeout = 4000)
    public void test135165() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableRowContext();
    }

    @Test(timeout = 4000)
    public void test136166() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        FormElement formElement0 = htmlTreeBuilder0.getFormElement();
        assertNotNull(formElement0);
    }

    @Test(timeout = 4000)
    public void test137167() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertMarkerToFormattingElements();
    }

    @Test(timeout = 4000)
    public void test138168() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.generateImpliedEndTags();
    }

    @Test(timeout = 4000)
    public void test139169() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Tag tag0 = Tag.valueOf("thead");
        Element element0 = new Element(tag0, "XGMY26{Sq-DXRq`");
        ParseErrorList parseErrorList0 = new ParseErrorList(100, (-2682));
        htmlTreeBuilder0.parseFragment("thead", element0, "noscript", parseErrorList0, (ParseSettings) null);
        Element element1 = htmlTreeBuilder0.currentElement();
        htmlTreeBuilder0.aboveOnStack(element1);
    }

    @Test(timeout = 4000)
    public void test140170() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test141171() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inListItemScope("");
    }

    @Test(timeout = 4000)
    public void test142172() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableBodyContext();
    }

    @Test(timeout = 4000)
    public void test143173() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
        assertNotNull(arrayList0);
    }

    @Test(timeout = 4000)
    public void test144174() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.setFormElement((FormElement) null);
    }

    @Test(timeout = 4000)
    public void test145175() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
        htmlTreeBuilder0.isSpecial(element0);
    }

    @Test(timeout = 4000)
    public void test146176() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String[] stringArray0 = new String[2];
        htmlTreeBuilder0.inScope("sl*oIO", stringArray0);
    }

    @Test(timeout = 4000)
    public void test148177() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.Character token_Character0 = new Token.Character();
        token_Character0.data("S;/I'\"N ");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.Initial;
        htmlTreeBuilder0.process(token_Character0, htmlTreeBuilderState0);
    }
}
