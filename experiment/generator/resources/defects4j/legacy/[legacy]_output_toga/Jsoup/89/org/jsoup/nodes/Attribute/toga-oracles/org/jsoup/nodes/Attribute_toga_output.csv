project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    boolean boolean0 = Attribute.isBooleanAttribute(""allowfullscreen"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test011,"public void test011() throws Throwable {
    Attribute attribute0 = new Attribute(""39T(g;UY\""6=Q^Zb>0Q"", ""nowra"");
    attribute0.setKey(""allowfullscreen"");
    boolean boolean0 = attribute0.isBooleanAttribute();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test012,"public void test012() throws Throwable {
    Attribute attribute0 = new Attribute(""39T(g;UY\""6=Q^Zb>0Q"", ""nowra"");
    attribute0.setKey(""allowfullscreen"");
    boolean boolean0 = attribute0.isBooleanAttribute();
    assertEquals(""nowra"", attribute0.getValue());
}",0,assertNotNull(attribute0.getValue())
project,0,test023,"public void test023() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""disabled"", ""disabled"");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    boolean boolean0 = attribute0.shouldCollapseAttribute(document_OutputSettings0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test034,"public void test034() throws Throwable {
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    boolean boolean0 = Attribute.shouldCollapseAttribute((String) null, (String) null, document_OutputSettings0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test045,"public void test045() throws Throwable {
    boolean boolean0 = Attribute.isDataAttribute(""data-&3R.DsL>ZsE.Xf"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test056,"public void test056() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""8'A_c*d}i"", ""!mpWjI49%sr"");
    boolean boolean0 = attribute0.isDataAttribute();
    assertEquals(""!mpWjI49%sr"", attribute0.getValue());
}",0,
project,0,test057,"public void test057() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""8'A_c*d}i"", ""!mpWjI49%sr"");
    boolean boolean0 = attribute0.isDataAttribute();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test068,"public void test068() throws Throwable {
    boolean boolean0 = Attribute.isBooleanAttribute("""");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test079,"public void test079() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""xhtml"", """");
    String string0 = attribute0.getValue();
    assertEquals("""", string0);
}",0,
project,0,test0810,"public void test0810() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""e'E,YoM(JP{m"", ""e'E,YoM(JP{m"");
    // Undeclared exception!
    try {
        attribute0.shouldCollapseAttribute((Document.OutputSettings) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Attribute"", e);
    }
}",0,
project,0,test0911,"public void test0911() throws Throwable {
    // Undeclared exception!
    try {
        Attribute.shouldCollapseAttribute(""|w2kb2{.\""W90"", ""+8>TZ"", (Document.OutputSettings) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Attribute"", e);
    }
}",0,
project,0,test1012,"public void test1012() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""L&1\""c"", ""5Oc?'\""YGR4\""<zYp"");
    // Undeclared exception!
    try {
        attribute0.setValue(""L&1\""c"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Attribute"", e);
    }
}",0,
project,0,test1113,"public void test1113() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""limitedQuirks"", (String) null, attributes0);
    // Undeclared exception!
    try {
        attribute0.setKey("""");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test1214,"public void test1214() throws Throwable {
    // Undeclared exception!
    try {
        Attribute.isDataAttribute((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test1315,"public void test1315() throws Throwable {
    // Undeclared exception!
    try {
        Attribute.isBooleanAttribute((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test1416,"public void test1416() throws Throwable {
    CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ""           "");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        Attribute.html(""seamless"", ""           "", (Appendable) charBuffer0, document_OutputSettings0);
        fail(""Expecting exception: ReadOnlyBufferException"");
    } catch (ReadOnlyBufferException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.nio.CharBuffer"", e);
    }
}",0,
project,0,test1517,"public void test1517() throws Throwable {
    char[] charArray0 = new char[5];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        Attribute.html((String) null, ""WzX3uM9gA'Lp[\""q"", (Appendable) charBuffer0, document_OutputSettings0);
        fail(""Expecting exception: BufferOverflowException"");
    } catch (BufferOverflowException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.nio.CharBuffer"", e);
    }
}",0,
project,0,test1618,"public void test1618() throws Throwable {
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        Attribute.html("""", """", (Appendable) null, document_OutputSettings0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Attribute"", e);
    }
}",0,
project,0,test1719,"public void test1719() throws Throwable {
    PipedWriter pipedWriter0 = new PipedWriter();
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    try {
        Attribute.html(""GC[#TaBCg%Gc+"", ""org.jsoup.parser.Token"", (Appendable) pipedWriter0, document_OutputSettings0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Pipe not connected
        //
        verifyException(""java.io.PipedWriter"", e);
    }
}",0,
project,0,test1820,"public void test1820() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""selected"", ""selected"");
    CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ""selected"");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        attribute0.html((Appendable) charBuffer0, document_OutputSettings0);
        fail(""Expecting exception: ReadOnlyBufferException"");
    } catch (ReadOnlyBufferException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.nio.CharBuffer"", e);
    }
}",0,
project,0,test1921,"public void test1921() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""?sW,9,"", ""t_IH22J_RVbg<"", attributes0);
    char[] charArray0 = new char[9];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        attribute0.html((Appendable) charBuffer0, document_OutputSettings0);
        fail(""Expecting exception: BufferOverflowException"");
    } catch (BufferOverflowException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.nio.Buffer"", e);
    }
}",0,
project,0,test2022,"public void test2022() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""No buffer left to unconsume"", ""&#xa0;"", attributes0);
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        attribute0.html((Appendable) null, document_OutputSettings0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Attribute"", e);
    }
}",0,
project,0,test2123,"public void test2123() throws Throwable {
    Attribute attribute0 = new Attribute(""readonly"", ""selected"", (Attributes) null);
    PipedWriter pipedWriter0 = new PipedWriter();
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    try {
        attribute0.html((Appendable) pipedWriter0, document_OutputSettings0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Pipe not connected
        //
        verifyException(""java.io.PipedWriter"", e);
    }
}",0,
project,0,test2224,"public void test2224() throws Throwable {
    // Undeclared exception!
    try {
        Attribute.createFromEncoded("""", (String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.io.StringReader"", e);
    }
}",0,
project,0,test2325,"public void test2325() throws Throwable {
    // Undeclared exception!
    try {
        Attribute.createFromEncoded("""", """");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test2426,"public void test2426() throws Throwable {
    Attribute attribute0 = null;
    try {
        attribute0 = new Attribute("""", (String) null, (Attributes) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // String must not be empty
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test2527,"public void test2527() throws Throwable {
    Attribute attribute0 = null;
    try {
        attribute0 = new Attribute((String) null, (String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test2931,"public void test2931() throws Throwable {
    Attributes attributes0 = new Attributes();
    String[] stringArray0 = new String[2];
    Attribute attribute0 = new Attribute(""limitedQuirks"", stringArray0[0], attributes0);
    attribute0.hashCode();
    assertEquals("""", attribute0.getValue());
}",0,assertNotNull(attribute0.getValue())
project,0,test3232,"public void test3232() throws Throwable {
    Attributes attributes0 = new Attributes();
    String[] stringArray0 = new String[2];
    Attribute attribute0 = new Attribute(""limitedQuirks"", stringArray0[0], attributes0);
    Attribute attribute1 = attribute0.clone();
    boolean boolean0 = attribute0.equals(attribute1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3233,"public void test3233() throws Throwable {
    Attributes attributes0 = new Attributes();
    String[] stringArray0 = new String[2];
    Attribute attribute0 = new Attribute(""limitedQuirks"", stringArray0[0], attributes0);
    Attribute attribute1 = attribute0.clone();
    boolean boolean0 = attribute0.equals(attribute1);
    assertEquals("""", attribute1.getValue());
}",0,assertNotNull(attribute1.getValue())
project,0,test3334,"public void test3334() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""disabled"", ""disabled"");
    boolean boolean0 = attribute0.equals(""disabled"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3435,"public void test3435() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""goat qhu+e\""1[\""/c"", ""r?y[b"", attributes0);
    boolean boolean0 = attribute0.equals((Object) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3436,"public void test3436() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""goat qhu+e\""1[\""/c"", ""r?y[b"", attributes0);
    boolean boolean0 = attribute0.equals((Object) null);
    assertEquals(""r?y[b"", attribute0.getValue());
}",0,assertNotNull(attribute0.getValue())
project,0,test3537,"public void test3537() throws Throwable {
    Attribute attribute0 = new Attribute(""readonly"", ""readonly"", (Attributes) null);
    boolean boolean0 = attribute0.equals(attribute0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3638,"public void test3638() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""qt+0, DI8j.Wy"", (String) null, attributes0);
    boolean boolean0 = attribute0.isBooleanAttribute();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3739,"public void test3739() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""'E,Yo(J_Pk0m&"", ""'E,Yo(J_Pk0m&"");
    boolean boolean0 = attribute0.isBooleanAttribute();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3840,"public void test3840() throws Throwable {
    Attribute attribute0 = new Attribute(""readonly"", ""readonly"", (Attributes) null);
    boolean boolean0 = attribute0.isBooleanAttribute();
    assertTrue(boolean0);
}",0,
project,0,test3941,"public void test3941() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""data-&3R.DsL>ZsE.Xf"", ""data-&3R.DsL>ZsE.Xf"");
    attributes0.put(attribute0);
    attribute0.setValue(""'_`%C|$PRepc"");
    attribute0.toString();
    assertEquals(""'_`%C|$PRepc"", attribute0.getValue());
}",0,assertNotNull(attribute0.getValue())
project,0,test4042,"public void test4042() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""T"", """", attributes0);
    String string0 = attribute0.toString();
    assertEquals(""T=\""\"""", string0);
}",0,assertNotNull(string0)
project,0,test4143,"public void test4143() throws Throwable {
    Attribute attribute0 = new Attribute(""|*ssaQ}t"", (String) null);
    String string0 = attribute0.html();
    assertEquals(""|*ssaQ}t"", string0);
}",0,assertNotNull(string0)
project,0,test4244,"public void test4244() throws Throwable {
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
    document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
    boolean boolean0 = Attribute.shouldCollapseAttribute(""data-&3R.DsL>ZsE.Xf"", ""t[)XD. J dBoG%"", document_OutputSettings0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4345,"public void test4345() throws Throwable {
    boolean boolean0 = Attribute.isDataAttribute(""data-"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4446,"public void test4446() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""goat qhu+e\""1[\""/c"", ""r?y[b"", attributes0);
    attribute0.setValue(""KucdgcT8[E{;fsBS(.("");
    assertEquals(""KucdgcT8[E{;fsBS(.("", attribute0.getValue());
}",0,assertNotNull(attribute0.getValue())
project,0,test4547,"public void test4547() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""data-&3R.DsL>ZsE.Xf"", ""data-&3R.DsL>ZsE.Xf"");
    attributes0.put(attribute0);
    attribute0.setKey(""t[)XD. J dBoG%"");
    assertEquals(""data-&3R.DsL>ZsE.Xf"", attribute0.getValue());
}",0,assertNotNull(attribute0.getValue())
project,0,test4648,"public void test4648() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""d"", ""d"", attributes0);
    attribute0.setKey(""c"");
    Attribute attribute1 = Attribute.createFromEncoded(""d"", ""d"");
    boolean boolean0 = attribute0.equals(attribute1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4749,"public void test4749() throws Throwable {
    Attribute attribute0 = Attribute.createFromEncoded(""'E,Yo(J_Pk0m&"", ""'E,Yo(J_Pk0m&"");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    boolean boolean0 = attribute0.shouldCollapseAttribute(document_OutputSettings0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4850,"public void test4850() throws Throwable {
    Attributes attributes0 = new Attributes();
    Attribute attribute0 = new Attribute(""d"", ""d"", attributes0);
    String string0 = attribute0.getValue();
    assertEquals(""d"", string0);
}",0,assertNotNull(string0)
project,0,test4951,"public void test4951() throws Throwable {
    Attribute attribute0 = new Attribute(""readonly"", ""readonly"", (Attributes) null);
    Attribute attribute1 = attribute0.clone();
    boolean boolean0 = attribute1.equals(attribute0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test5052,"public void test5052() throws Throwable {
    Attribute attribute0 = new Attribute(""data-&3R.DsL>ZsE.Xf"", ""data-&3R.DsL>ZsE.Xf"");
    boolean boolean0 = attribute0.isDataAttribute();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test5153,"public void test5153() throws Throwable {
    Attribute attribute0 = new Attribute(""readonly"", ""readonly"", (Attributes) null);
    String string0 = attribute0.getKey();
    assertEquals(""readonly"", string0);
}",0,
