/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 21:26:29 GMT 2023
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.helper.DescendableLinkedList;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.TextNode;
import org.jsoup.parser.HtmlTreeBuilder;
import org.jsoup.parser.HtmlTreeBuilderState;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.Tag;
import org.jsoup.parser.Token;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class HtmlTreeBuilder_ESTest extends HtmlTreeBuilder_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        Document document1 = document0.clone();
        htmlTreeBuilder0.replaceActiveFormattingElement(document0, document1);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("HBHSueiz-#]w7,");
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        ParseErrorList parseErrorList0 = ParseErrorList.tracking((-1624010227));
        htmlTreeBuilder0.parseFragment("N@*&~sm~", document0, "N@*&~sm~", parseErrorList0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        document0.baseUri();
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        Document document1 = document0.clone();
        htmlTreeBuilder0.insertOnStackAfter(document0, document1);
    }

    @Test(timeout = 4000)
    public void test0043() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        htmlTreeBuilder0.insertInFosterParent(document0);
        document0.siblingIndex();
        assertEquals(0, document0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test0064() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        Token.Character token_Character0 = new Token.Character("q");
        htmlTreeBuilder0.insert(token_Character0);
        token_Character0.toString();
    }

    @Test(timeout = 4000)
    public void test0075() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse(":>Jt__{Tx2Sb DQ#", "");
        htmlTreeBuilder0.insert(document0);
        document0.siblingIndex();
        assertEquals(0, document0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test0076() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse(":>Jt__{Tx2Sb DQ#", "");
        htmlTreeBuilder0.insert(document0);
        document0.childNodeSize();
        assertEquals(0, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test0097() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("HBHSueiz-#]w7,");
        htmlTreeBuilder0.setHeadElement(document0);
        document0.tagName();
        assertNotNull(document0.tagName());
    }

    @Test(timeout = 4000)
    public void test0108() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Tag tag0 = Tag.valueOf("xFrmeN");
        Attributes attributes0 = new Attributes();
        FormElement formElement0 = new FormElement(tag0, "xFrmeN", attributes0);
        htmlTreeBuilder0.setFormElement(formElement0);
        formElement0.isBlock();
        assertFalse(formElement0.isBlock());
    }

    @Test(timeout = 4000)
    public void test0149() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        String string0 = htmlTreeBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test01610() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        Token.StartTag token_StartTag0 = new Token.StartTag(" <%s>");
        boolean boolean0 = htmlTreeBuilder0.process(token_StartTag0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test01711() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("X34>-\"Dmu_W.y0j?bg", "X34>-\"Dmu_W.y0j?bg");
        Token.Doctype token_Doctype0 = new Token.Doctype();
        boolean boolean0 = htmlTreeBuilder0.process(token_Doctype0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test01812() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        Token.StartTag token_StartTag0 = new Token.StartTag(" <%s>");
        htmlTreeBuilder0.insert(token_StartTag0);
        Element element0 = htmlTreeBuilder0.pop();
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test01913() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        Element element0 = htmlTreeBuilder0.pop();
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test02014() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("X34>-\"Dmu_W.y0j?bg", "Rawtext", (ParseErrorList) null);
        Element element0 = htmlTreeBuilder0.pop();
        element0.baseUri();
        assertNotNull(element0.baseUri());
    }

    @Test(timeout = 4000)
    public void test02015() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("X34>-\"Dmu_W.y0j?bg", "Rawtext", (ParseErrorList) null);
        Element element0 = htmlTreeBuilder0.pop();
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test02116() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        boolean boolean0 = htmlTreeBuilder0.onStack(document0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test02117() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        boolean boolean0 = htmlTreeBuilder0.onStack(document0);
        document0.childNodeSize();
        assertEquals(0, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test02218() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("&;~~sy1>9=");
        Element element0 = document0.createElement("h3");
        boolean boolean0 = htmlTreeBuilder0.isSpecial(element0);
    }

    @Test(timeout = 4000)
    public void test02319() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("q", document0, "<{'a_Id_QlqU", parseErrorList0);
        boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test02420() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        boolean boolean0 = htmlTreeBuilder0.isFosterInserts();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test02521() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(2229);
        htmlTreeBuilder0.parse("hQJU}$)", "X34>-\"Dmu_W.y0j?bg", parseErrorList0);
        Token.StartTag token_StartTag0 = new Token.StartTag("div");
        FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag0, false);
        formElement0.siblingIndex();
        assertEquals(1, formElement0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test02522() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(2229);
        htmlTreeBuilder0.parse("hQJU}$)", "X34>-\"Dmu_W.y0j?bg", parseErrorList0);
        Token.StartTag token_StartTag0 = new Token.StartTag("div");
        FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag0, false);
        formElement0.baseUri();
        assertNotNull(formElement0.baseUri());
    }

    @Test(timeout = 4000)
    public void test02623() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag0 = new Token.StartTag("base", attributes0);
        htmlTreeBuilder0.insert(");0J$G_kEQ@XbyXJ");
        Element element0 = htmlTreeBuilder0.insertEmpty(token_StartTag0);
        element0.siblingIndex();
        assertEquals(1, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test02724() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        Token.StartTag token_StartTag0 = new Token.StartTag(" <%s>");
        token_StartTag0.tagName = "table";
        Element element0 = htmlTreeBuilder0.insert(token_StartTag0);
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test02825() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("X34>-\"Dmu_W.y0j?bg", "Rawtext", (ParseErrorList) null);
        Element element0 = htmlTreeBuilder0.insert("frameset");
        element0.baseUri();
        assertNotNull(element0.baseUri());
    }

    @Test(timeout = 4000)
    public void test02826() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("X34>-\"Dmu_W.y0j?bg", "Rawtext", (ParseErrorList) null);
        Element element0 = htmlTreeBuilder0.insert("frameset");
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test02927() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        document0.childNodeSize();
        assertEquals(0, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test02928() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        boolean boolean0 = htmlTreeBuilder0.inTableScope("html");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03029() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        document0.childNodeSize();
        assertEquals(1, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test03030() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        boolean boolean0 = htmlTreeBuilder0.inTableScope("<{'a_Id_QlqU");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03131() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        String[] stringArray0 = new String[8];
        stringArray0[0] = "org.jsoup.nodes.Element$1";
        stringArray0[1] = "applet";
        stringArray0[2] = ");0J$G_kEQ@XbyXJ";
        stringArray0[3] = "V,1}6}Z!-[~";
        stringArray0[4] = "applet";
        stringArray0[5] = "applet";
        stringArray0[6] = "org.jsoup.parser.TreeBuilder";
        stringArray0[7] = "org.jsoup.parser.TreeBuilder";
        boolean boolean0 = htmlTreeBuilder0.inScope(stringArray0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03232() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        document0.childNodeSize();
        assertEquals(1, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test03233() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        boolean boolean0 = htmlTreeBuilder0.inListItemScope("html");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03334() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("");
        htmlTreeBuilder0.parseFragment("html", document0, "", (ParseErrorList) null);
        boolean boolean0 = htmlTreeBuilder0.inListItemScope("");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03435() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        document0.childNodeSize();
        assertEquals(1, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test03436() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        boolean boolean0 = htmlTreeBuilder0.inButtonScope("<{'a_Id_QlqU");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test03537() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        document0.childNodeSize();
        assertEquals(1, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test03538() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        htmlTreeBuilder0.popStackToBefore("q");
        DescendableLinkedList<Element> descendableLinkedList0 = htmlTreeBuilder0.getStack();
        descendableLinkedList0.size();
    }

    @Test(timeout = 4000)
    public void test03639() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("", document0, "7r8~8}D`LMEEc`", parseErrorList0);
        DescendableLinkedList<Element> descendableLinkedList0 = htmlTreeBuilder0.getStack();
        descendableLinkedList0.size();
    }

    @Test(timeout = 4000)
    public void test03740() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("X34>-\"Dmu_W.y0j?bg", "Rawtext", (ParseErrorList) null);
        Element element0 = document0.head();
        element0.before((Node) document0);
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test03741() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("X34>-\"Dmu_W.y0j?bg", "Rawtext", (ParseErrorList) null);
        Element element0 = document0.head();
        element0.before((Node) document0);
        Element element1 = htmlTreeBuilder0.getHeadElement();
        element1.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test03842() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        Element element0 = htmlTreeBuilder0.getFromStack("q");
        assertNotNull(element0);
    }

    @Test(timeout = 4000)
    public void test03943() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        Document document0 = htmlTreeBuilder0.getDocument();
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test04044() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("q", document0, "<{'a_Id_QlqU", parseErrorList0);
        document0.childNodeSize();
        assertEquals(0, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test04045() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("q", document0, "<{'a_Id_QlqU", parseErrorList0);
        String string0 = htmlTreeBuilder0.getBaseUri();
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test04146() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        String string0 = htmlTreeBuilder0.getBaseUri();
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test04247() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.reconstructFormattingElements();
        Element element0 = htmlTreeBuilder0.insert("org.jsoup.parser.TreeBuilder");
        Element element1 = htmlTreeBuilder0.aboveOnStack(element0);
        element1.childNodeSize();
        assertEquals(0, element1.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test04248() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.reconstructFormattingElements();
        Element element0 = htmlTreeBuilder0.insert("org.jsoup.parser.TreeBuilder");
        Element element1 = htmlTreeBuilder0.aboveOnStack(element0);
    }

    @Test(timeout = 4000)
    public void test04249() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.reconstructFormattingElements();
        Element element0 = htmlTreeBuilder0.insert("org.jsoup.parser.TreeBuilder");
        Element element1 = htmlTreeBuilder0.aboveOnStack(element0);
        element1.nodeName();
        assertNotNull(element1.nodeName());
    }

    @Test(timeout = 4000)
    public void test04350() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        htmlTreeBuilder0.popStackToBefore("");
        htmlTreeBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test04451() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test04552() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Tag tag0 = Tag.valueOf(">gK1");
        TextNode textNode0 = TextNode.createFromEncoded("qVfX=[)|", "TEq#r\")5HK");
        Attributes attributes0 = textNode0.attributes();
        FormElement formElement0 = new FormElement(tag0, ">gK1", attributes0);
        htmlTreeBuilder0.replaceOnStack(formElement0, formElement0);
    }

    @Test(timeout = 4000)
    public void test04653() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.removeFromStack((Element) null);
    }

    @Test(timeout = 4000)
    public void test04754() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document(" ?T;P7hKJZ");
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.reconstructFormattingElements();
    }

    @Test(timeout = 4000)
    public void test04855() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("HBHSueiz-#]w7,");
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
    }

    @Test(timeout = 4000)
    public void test04956() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = Document.createShell("");
        htmlTreeBuilder0.push(document0);
    }

    @Test(timeout = 4000)
    public void test05057() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse(":>Jt__{Tx2Sb DQ#", "");
        htmlTreeBuilder0.popStackToClose("T|j&Iz#65l-HYJ");
        Token.Character token_Character0 = new Token.Character("T|j&Iz#65l-HYJ");
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.BeforeHead;
        htmlTreeBuilder0.process(token_Character0, htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test05158() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InTable;
        htmlTreeBuilder0.process((Token) null, htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test05259() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.Doctype token_Doctype0 = new Token.Doctype();
        Token.TokenType token_TokenType0 = Token.TokenType.StartTag;
        token_Doctype0.type = token_TokenType0;
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InTable;
        htmlTreeBuilder0.process(token_Doctype0, htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test05360() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        htmlTreeBuilder0.process(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test05461() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String[] stringArray0 = new String[2];
        htmlTreeBuilder0.popStackToClose(stringArray0);
    }

    @Test(timeout = 4000)
    public void test05562() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.popStackToClose((String) null);
    }

    @Test(timeout = 4000)
    public void test05663() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.popStackToBefore("`");
    }

    @Test(timeout = 4000)
    public void test05764() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.pop();
    }

    @Test(timeout = 4000)
    public void test05865() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(59);
        htmlTreeBuilder0.parseFragment((String) null, (Element) null, "", parseErrorList0);
    }

    @Test(timeout = 4000)
    public void test05966() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse((String) null, (String) null, (ParseErrorList) null);
    }

    @Test(timeout = 4000)
    public void test06067() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.onStack((Element) null);
    }

    @Test(timeout = 4000)
    public void test06168() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.maybeSetBaseUri((Element) null);
    }

    @Test(timeout = 4000)
    public void test06269() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.isSpecial((Element) null);
    }

    @Test(timeout = 4000)
    public void test06370() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertOnStackAfter((Element) null, (Element) null);
    }

    @Test(timeout = 4000)
    public void test06471() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertInFosterParent((Node) null);
    }

    @Test(timeout = 4000)
    public void test06572() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag0 = new Token.StartTag((String) null, attributes0);
        htmlTreeBuilder0.insertForm(token_StartTag0, false);
    }

    @Test(timeout = 4000)
    public void test06673() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag0 = new Token.StartTag("@YWxG2 -", attributes0);
        htmlTreeBuilder0.insertForm(token_StartTag0, true);
    }

    @Test(timeout = 4000)
    public void test06774() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag((String) null);
        htmlTreeBuilder0.insertEmpty(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test06875() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag("*z_");
        htmlTreeBuilder0.insertEmpty(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test06976() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insert((Token.StartTag) null);
    }

    @Test(timeout = 4000)
    public void test07077() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insert((Token.Comment) null);
    }

    @Test(timeout = 4000)
    public void test07178() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.Comment token_Comment0 = new Token.Comment();
        htmlTreeBuilder0.insert(token_Comment0);
    }

    @Test(timeout = 4000)
    public void test07279() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        htmlTreeBuilder0.popStackToBefore("");
        Token.Character token_Character0 = new Token.Character("<{'a_Id_QlqU");
        htmlTreeBuilder0.insert(token_Character0);
    }

    @Test(timeout = 4000)
    public void test07380() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.Character token_Character0 = new Token.Character("");
        htmlTreeBuilder0.insert(token_Character0);
    }

    @Test(timeout = 4000)
    public void test07481() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insert((Element) null);
    }

    @Test(timeout = 4000)
    public void test07582() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insert((String) null);
    }

    @Test(timeout = 4000)
    public void test07683() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("missing semicolon", "z}YMjG+,4", parseErrorList0);
        htmlTreeBuilder0.popStackToBefore("missing semicolon");
        htmlTreeBuilder0.inTableScope("02Gpvyl[m6yRs\"");
    }

    @Test(timeout = 4000)
    public void test07784() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inSelectScope("Lvb.Fsa#w\"");
    }

    @Test(timeout = 4000)
    public void test07885() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("#Z7e}.-*x{SqAm5p", "#Z7e}.-*x{SqAm5p");
        htmlTreeBuilder0.popStackToClose("#Z7e}.-*x{SqAm5p");
        String[] stringArray0 = new String[7];
        htmlTreeBuilder0.inScope(stringArray0);
    }

    @Test(timeout = 4000)
    public void test07986() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        htmlTreeBuilder0.popStackToBefore("");
        String[] stringArray0 = new String[4];
        htmlTreeBuilder0.inScope("0YOq;^*>uH`u}4p50Hq", stringArray0);
    }

    @Test(timeout = 4000)
    public void test08087() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        htmlTreeBuilder0.popStackToClose("applet");
        htmlTreeBuilder0.inScope("org.jsoup.parser.TreeBuilder");
    }

    @Test(timeout = 4000)
    public void test08188() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        htmlTreeBuilder0.popStackToClose("4K}ahDkT(u+,t");
        htmlTreeBuilder0.inListItemScope("q");
    }

    @Test(timeout = 4000)
    public void test08289() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.getFromStack((String) null);
    }

    @Test(timeout = 4000)
    public void test08390() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Tag tag0 = Tag.valueOf("dir");
        Attributes attributes0 = new Attributes();
        Element element0 = new Element(tag0, "dir", attributes0);
        htmlTreeBuilder0.aboveOnStack(element0);
    }

    @Test(timeout = 4000)
    public void test08491() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("k6Q5Y~;ry'gnhZv", "k6Q5Y~;ry'gnhZv");
        document0.childNodeSize();
        assertEquals(1, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test08492() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("k6Q5Y~;ry'gnhZv", "k6Q5Y~;ry'gnhZv");
        boolean boolean0 = htmlTreeBuilder0.framesetOk();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test08593() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
        Element element0 = htmlTreeBuilder0.getActiveFormattingElement(" ?T;P7hKJZ");
        assertNotNull(element0);
    }

    @Test(timeout = 4000)
    public void test08694() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        Element element0 = htmlTreeBuilder0.getActiveFormattingElement("VK:{Z");
        assertNotNull(element0);
    }

    @Test(timeout = 4000)
    public void test08795() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        Element element0 = htmlTreeBuilder0.getHeadElement();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
        document0.childNodeSize();
        assertEquals(0, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test08896() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
        document0.childNodeSize();
        assertEquals(0, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test09097() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("HBHSueiz-#]w7,");
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        ParseErrorList parseErrorList0 = ParseErrorList.tracking((-1624010227));
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        Document document1 = htmlTreeBuilder0.parse("Z8|)~vg_", "org.jsoup.select.Evaluator$AttributeWithValueMatching", parseErrorList0);
        document1.childNodeSize();
        assertEquals(0, document1.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test09298() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        Element element0 = htmlTreeBuilder0.getHeadElement();
        htmlTreeBuilder0.pushActiveFormattingElements(element0);
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        document0.childNodeSize();
        assertEquals(1, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test09699() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.generateImpliedEndTags("hpjH`/1_94X/S");
    }

    @Test(timeout = 4000)
    public void test097100() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        document0.childNodeSize();
        assertEquals(1, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test097101() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        boolean boolean0 = htmlTreeBuilder0.inSelectScope("TreeBuilder{currentToken=org.jsoup.parser.Token$EOF@b, state=InBody, currentElement=<body>\n org.jsoup.parser.TreeBuilder\n</body>}");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test098102() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        htmlTreeBuilder0.popStackToBefore("");
        htmlTreeBuilder0.inSelectScope(", currentElement=");
    }

    @Test(timeout = 4000)
    public void test099103() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("HBHSueiz-#]w7,", "HBHSueiz-#]w7,");
        document0.childNodeSize();
        assertEquals(0, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test099104() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("HBHSueiz-#]w7,", "HBHSueiz-#]w7,");
        String[] stringArray0 = new String[4];
        stringArray0[0] = "HBHSueiz-#]w7,";
        stringArray0[1] = "";
        stringArray0[2] = "N@*&~sm~";
        stringArray0[3] = "N@*&~sm~";
        boolean boolean0 = htmlTreeBuilder0.inScope("", stringArray0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test100105() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("HBHSueiz-#]w7,", "HBHSueiz-#]w7,");
        String[] stringArray0 = new String[4];
        htmlTreeBuilder0.inScope("", stringArray0);
    }

    @Test(timeout = 4000)
    public void test101106() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        document0.childNodeSize();
        assertEquals(1, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test101107() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        boolean boolean0 = htmlTreeBuilder0.inScope("html");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test102108() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        document0.childNodeSize();
        assertEquals(1, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test102109() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        boolean boolean0 = htmlTreeBuilder0.inScope("org.jsoup.parser.TreeBuilder");
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test103110() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        htmlTreeBuilder0.popStackToBefore("");
        htmlTreeBuilder0.inButtonScope("hpjH`/1_94X/S");
    }

    @Test(timeout = 4000)
    public void test105111() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        Element element0 = htmlTreeBuilder0.getHeadElement();
        Element element1 = element0.after(");0J$G_kEQ@XbyXJ");
        element1.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test106112() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        Element element0 = htmlTreeBuilder0.getHeadElement();
        List<Node> list0 = htmlTreeBuilder0.parseFragment(");0J$G_kEQ@XbyXJ", element0, ");0J$G_kEQ@XbyXJ", parseErrorList0);
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test108113() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        Token.StartTag token_StartTag0 = new Token.StartTag(" <%s>");
        Element element0 = htmlTreeBuilder0.insert(token_StartTag0);
        htmlTreeBuilder0.replaceOnStack(element0, document0);
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test109114() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        Element element0 = htmlTreeBuilder0.insert("org.jsoup.parser.TreeBuilder");
        Element element1 = htmlTreeBuilder0.aboveOnStack(element0);
        element1.childNodeSize();
        assertEquals(0, element1.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test109115() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        Element element0 = htmlTreeBuilder0.insert("org.jsoup.parser.TreeBuilder");
        Element element1 = htmlTreeBuilder0.aboveOnStack(element0);
        element1.nodeName();
        assertNotNull(element1.nodeName());
    }

    @Test(timeout = 4000)
    public void test109116() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        Element element0 = htmlTreeBuilder0.insert("org.jsoup.parser.TreeBuilder");
        Element element1 = htmlTreeBuilder0.aboveOnStack(element0);
    }

    @Test(timeout = 4000)
    public void test110117() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        htmlTreeBuilder0.aboveOnStack(document0);
    }

    @Test(timeout = 4000)
    public void test113118() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("y<", "y<");
        htmlTreeBuilder0.popStackToBefore("y<");
        htmlTreeBuilder0.insertInFosterParent(document0);
    }

    @Test(timeout = 4000)
    public void test114119() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("");
        htmlTreeBuilder0.parseFragment("html", document0, "", (ParseErrorList) null);
        String[] stringArray0 = new String[6];
        stringArray0[0] = "gRf4iGxcy2#=Z0oF,";
        stringArray0[1] = "";
        stringArray0[2] = "noframes";
        stringArray0[3] = "html";
        htmlTreeBuilder0.popStackToClose(stringArray0);
    }

    @Test(timeout = 4000)
    public void test115120() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        String[] stringArray0 = new String[6];
        stringArray0[0] = "applet";
        stringArray0[1] = ");0J$G_kEQ@XbyXJ";
        stringArray0[2] = "applet";
        stringArray0[3] = ");0J$G_kEQ@XbyXJ";
        stringArray0[4] = "org.jsoup.parser.TreeBuilder";
        stringArray0[5] = "0GUo";
        htmlTreeBuilder0.popStackToClose(stringArray0);
    }

    @Test(timeout = 4000)
    public void test116121() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        htmlTreeBuilder0.popStackToClose("%osdsm~j-ew;q");
        htmlTreeBuilder0.generateImpliedEndTags("w7$-b}");
    }

    @Test(timeout = 4000)
    public void test117122() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        htmlTreeBuilder0.push(document0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test117123() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        htmlTreeBuilder0.push(document0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
        document0.childNodeSize();
        assertEquals(1, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test118124() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(2229);
        Document document0 = htmlTreeBuilder0.parse("hQJU}$)", "X34>-\"Dmu_W.y0j?bg", parseErrorList0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
        document0.childNodeSize();
        assertEquals(0, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test118125() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(2229);
        Document document0 = htmlTreeBuilder0.parse("hQJU}$)", "X34>-\"Dmu_W.y0j?bg", parseErrorList0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test118126() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(2229);
        Document document0 = htmlTreeBuilder0.parse("hQJU}$)", "X34>-\"Dmu_W.y0j?bg", parseErrorList0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
        document0.baseUri();
        assertNotNull(document0.baseUri());
    }

    @Test(timeout = 4000)
    public void test119127() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        Element element0 = htmlTreeBuilder0.getFromStack("html");
        assertNotNull(element0);
    }

    @Test(timeout = 4000)
    public void test119128() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        Element element0 = htmlTreeBuilder0.getFromStack("html");
        element0.childNodeSize();
        assertEquals(0, element0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test120129() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(2229);
        htmlTreeBuilder0.parse("hQJU}$)", "X34>-\"Dmu_W.y0j?bg", parseErrorList0);
        Token.StartTag token_StartTag0 = new Token.StartTag(":>Jt__{Tx2Sb DQ#");
        Element element0 = htmlTreeBuilder0.insert(token_StartTag0);
        boolean boolean0 = htmlTreeBuilder0.onStack(element0);
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test120130() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(2229);
        htmlTreeBuilder0.parse("hQJU}$)", "X34>-\"Dmu_W.y0j?bg", parseErrorList0);
        Token.StartTag token_StartTag0 = new Token.StartTag(":>Jt__{Tx2Sb DQ#");
        Element element0 = htmlTreeBuilder0.insert(token_StartTag0);
        boolean boolean0 = htmlTreeBuilder0.onStack(element0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test120131() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(2229);
        htmlTreeBuilder0.parse("hQJU}$)", "X34>-\"Dmu_W.y0j?bg", parseErrorList0);
        Token.StartTag token_StartTag0 = new Token.StartTag(":>Jt__{Tx2Sb DQ#");
        Element element0 = htmlTreeBuilder0.insert(token_StartTag0);
        boolean boolean0 = htmlTreeBuilder0.onStack(element0);
        element0.baseUri();
        assertNotNull(element0.baseUri());
    }

    @Test(timeout = 4000)
    public void test121132() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parseFragment("", document0, "<{'a_Id_QlqU", parseErrorList0);
        htmlTreeBuilder0.pop();
    }

    @Test(timeout = 4000)
    public void test122133() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        Element element0 = htmlTreeBuilder0.insert("object");
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test123134() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("org.jsoup.parser.TreeBuilder", "org.jsoup.parser.TreeBuilder", parseErrorList0);
        Token.Comment token_Comment0 = new Token.Comment();
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InRow;
        boolean boolean0 = htmlTreeBuilder0.process(token_Comment0, htmlTreeBuilderState0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test124135() throws Throwable {
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Token.StartTag token_StartTag0 = new Token.StartTag(" <%s>");
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.initialiseParse(":m5{^0dh :_", ":m5{^0dh :_", parseErrorList0);
        FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag0, true);
        formElement0.tagName();
        assertNotNull(formElement0.tagName());
    }

    @Test(timeout = 4000)
    public void test125136() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        Token.StartTag token_StartTag0 = new Token.StartTag(" <%s>");
        token_StartTag0.selfClosing = true;
        Element element0 = htmlTreeBuilder0.insert(token_StartTag0);
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test126137() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("HBHSueiz-#]w7,", "HBHSueiz-#]w7,");
        Token.StartTag token_StartTag0 = new Token.StartTag("l'mx");
        Element element0 = htmlTreeBuilder0.insertEmpty(token_StartTag0);
        element0.siblingIndex();
        assertEquals(0, element0.siblingIndex());
    }

    @Test(timeout = 4000)
    public void test127138() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag(" <%s>");
        token_StartTag0.selfClosing = true;
        htmlTreeBuilder0.insert(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test128139() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(1445, 2120);
        htmlTreeBuilder0.initialiseParse("nullChar", "^dGFSh", parseErrorList0);
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InSelectInTable;
        htmlTreeBuilder0.error(htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test130140() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("HBHSueiz-#]w7,");
        htmlTreeBuilder0.maybeSetBaseUri(document0);
        document0.tagName();
        assertNotNull(document0.tagName());
    }

    @Test(timeout = 4000)
    public void test131141() throws Throwable {
        Document document0 = Document.createShell("&;~~sy1>9=");
        Element element0 = document0.createElement("h3");
        Element element1 = element0.prepend("1of+`4");
        element1.nodeName();
        assertNotNull(element1.nodeName());
    }

    @Test(timeout = 4000)
    public void test132142() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        List<Node> list0 = htmlTreeBuilder0.parseFragment("Aed,>HM5_^)sm]AbL!g", (Element) null, "Aed,>HM5_^)sm]AbL!g", (ParseErrorList) null);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test133143() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableContext();
    }

    @Test(timeout = 4000)
    public void test134144() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inTableScope("Unexpected character '%s' in input state [%s]");
    }

    @Test(timeout = 4000)
    public void test135145() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("");
        boolean boolean0 = htmlTreeBuilder0.isSpecial(document0);
    }

    @Test(timeout = 4000)
    public void test136146() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.setFosterInserts(true);
        Document document0 = htmlTreeBuilder0.parse("", "");
        document0.childNodeSize();
        assertEquals(0, document0.childNodeSize());
    }

    @Test(timeout = 4000)
    public void test137147() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test138148() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        boolean boolean0 = htmlTreeBuilder0.isInActiveFormattingElements((Element) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test140149() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        List<Token.Character> list0 = htmlTreeBuilder0.getPendingTableCharacters();
        list0.size();
    }

    @Test(timeout = 4000)
    public void test141150() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String string0 = htmlTreeBuilder0.getBaseUri();
        assertNotNull(string0);
    }

    @Test(timeout = 4000)
    public void test142151() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inScope("org.jsoup.parser.TreeBuilder");
    }

    @Test(timeout = 4000)
    public void test143152() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.getDocument();
        assertNotNull(document0);
    }

    @Test(timeout = 4000)
    public void test144153() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        LinkedList<Token.Character> linkedList0 = new LinkedList<Token.Character>();
        htmlTreeBuilder0.setPendingTableCharacters(linkedList0);
        linkedList0.size();
    }

    @Test(timeout = 4000)
    public void test145154() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        boolean boolean0 = htmlTreeBuilder0.framesetOk();
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test146155() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String[] stringArray0 = new String[8];
        htmlTreeBuilder0.inScope(stringArray0);
    }

    @Test(timeout = 4000)
    public void test148156() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableRowContext();
    }

    @Test(timeout = 4000)
    public void test149157() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        FormElement formElement0 = htmlTreeBuilder0.getFormElement();
        assertNotNull(formElement0);
    }

    @Test(timeout = 4000)
    public void test151158() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertMarkerToFormattingElements();
        boolean boolean0 = htmlTreeBuilder0.isInActiveFormattingElements((Element) null);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test154159() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.Comment token_Comment0 = new Token.Comment();
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InRow;
        htmlTreeBuilder0.process(token_Comment0, htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test155160() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test156161() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inListItemScope("org.jsoup.parser.TreeBuilder");
    }

    @Test(timeout = 4000)
    public void test157162() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableBodyContext();
    }

    @Test(timeout = 4000)
    public void test158163() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
    }

    @Test(timeout = 4000)
    public void test159164() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        DescendableLinkedList<Element> descendableLinkedList0 = htmlTreeBuilder0.getStack();
        assertNotNull(descendableLinkedList0);
    }

    @Test(timeout = 4000)
    public void test160165() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(2229);
        Document document0 = htmlTreeBuilder0.parse("hQJU}$)", "org.jsoup.parser.treebuilder", parseErrorList0);
        htmlTreeBuilder0.replaceOnStack(document0, document0);
    }

    @Test(timeout = 4000)
    public void test161166() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inButtonScope("hpjH`/1_94X/S");
    }
}
