project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell("""");
    Document document1 = new Document("""");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.replaceActiveFormattingElement(document0, document1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test0011,"public void test0011() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader("""");
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    Document document0 = htmlTreeBuilder0.parse(stringReader0, """", (ParseErrorList) null, parseSettings0);
    assertEquals(1, document0.childNodeSize());
}",0,"assertEquals(1, document0.childNodeSize())"
project,0,test0012,"public void test0012() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader("""");
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    Document document0 = htmlTreeBuilder0.parse(stringReader0, """", (ParseErrorList) null, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.inSelectScope((String) null);
    assertFalse(boolean0);
}",0,
project,0,test0023,"public void test0023() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.replaceOnStack(document0, (Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test0034,"public void test0034() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""Z?"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""Z?"", document0, ""tbody"", parseErrorList0, parseSettings0);
    String[] stringArray0 = new String[0];
    htmlTreeBuilder0.push(document0);
    htmlTreeBuilder0.popStackToClose(stringArray0);
    assertEquals(0, stringArray0.length);
}",0,
project,0,test0086,"public void test0086() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.insert(document0);
    assertEquals(1, document0.childNodeSize());
}",0,"assertEquals(0, document0.childNodeSize())"
project,0,test0117,"public void test0117() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""+c"");
    htmlTreeBuilder0.setHeadElement(document0);
    assertFalse(document0.updateMetaCharsetElement());
}",0,assertFalse(document0.updateMetaCharsetElement())
project,0,test0148,"public void test0148() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""tr"", (Attributes) null);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertForm(token_StartTag1, true);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test0169,"public void test0169() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""Z?"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""Z?"", document0, ""tbody"", parseErrorList0, parseSettings0);
    String string0 = htmlTreeBuilder0.toString();
    assertNotNull(string0);
}",0,
project,0,test01810,"public void test01810() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    Element element0 = document0.head();
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", element0, ""]K:"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    Element element1 = htmlTreeBuilder0.removeLastFormattingElement();
    assertTrue(element1.hasParent());
}",0,assertTrue(element1.hasParent())
project,0,test01911,"public void test01911() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.Doctype token_Doctype0 = new Token.Doctype();
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.Text;
    boolean boolean0 = htmlTreeBuilder0.process(token_Doctype0, htmlTreeBuilderState0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test02012,"public void test02012() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader("""");
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parse(stringReader0, """", (ParseErrorList) null, parseSettings0);
    Element element0 = htmlTreeBuilder0.pop();
    assertEquals(1, element0.siblingIndex());
}",0,
project,0,test02113,"public void test02113() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""Z?"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""Z?"", document0, ""tbody"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.onStack(document0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02214,"public void test02214() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.lastFormattingElement();
    assertNull(element0);
}",0,assertNotNull(element0)
project,0,test02315,"public void test02315() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    Element element0 = document0.head();
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, false);
    htmlTreeBuilder0.parseFragment(""]K:"", element0, ""]K:"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    Element element1 = htmlTreeBuilder0.lastFormattingElement();
    assertEquals(0, element1.childNodeSize());
}",0,"assertEquals(0, element1.childNodeSize())"
project,0,test02416,"public void test02416() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    Element element0 = document0.head();
    boolean boolean0 = htmlTreeBuilder0.isSpecial(element0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test02517,"public void test02517() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""Z?"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""Z?"", document0, ""tbody"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.isInActiveFormattingElements(document0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02618,"public void test02618() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test02719,"public void test02719() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    boolean boolean0 = htmlTreeBuilder0.isFosterInserts();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02820,"public void test02820() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.insertStartTag(""table"");
    assertTrue(element0.isBlock());
}",0,
project,0,test02922,"public void test02922() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""Z?"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""Z?"", document0, ""tbody"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.insertStartTag(""C$a8fq^6@I@$8T"");
    assertEquals(""tbody"", element0.baseUri());
}",0,assertNotNull(element0.baseUri())
project,0,test03023,"public void test03023() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader("""");
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parse(stringReader0, """", (ParseErrorList) null, parseSettings0);
    CharacterReader characterReader0 = new CharacterReader(stringReader0);
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, (ParseErrorList) null);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    Comment comment0 = new Comment(""header"");
    Attributes attributes0 = comment0.attributes();
    Token.StartTag token_StartTag1 = token_StartTag0.nameAttr(""blockquote"", attributes0);
    Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
    assertEquals(0, element0.siblingIndex());
}",0,"assertEquals(0, element0.siblingIndex())"
project,0,test03125,"public void test03125() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.inTableScope("">v'["");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test03227,"public void test03227() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    String[] stringArray0 = new String[6];
    stringArray0[0] = ""footer"";
    stringArray0[1] = ""footer"";
    stringArray0[2] = ""V2gmW D^TZM"";
    stringArray0[3] = ""footer"";
    Document document0 = new Document(""footer"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""V2gmW D^TZM"", document0, ""footer"", parseErrorList0, parseSettings0);
    stringArray0[4] = ""footer"";
    stringArray0[5] = ""footer"";
    boolean boolean0 = htmlTreeBuilder0.inScope(stringArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test03328,"public void test03328() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""Z?"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""Z?"", document0, ""tbody"", parseErrorList0, parseSettings0);
    String[] stringArray0 = new String[0];
    boolean boolean0 = htmlTreeBuilder0.inScope(""xmp"", stringArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test03429,"public void test03429() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader("""");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    Document document0 = htmlTreeBuilder0.parse(stringReader0, """", parseErrorList0, parseSettings0);
    assertEquals(1, document0.childNodeSize());
}",0,"assertEquals(1, document0.childNodeSize())"
project,0,test03430,"public void test03430() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader("""");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    Document document0 = htmlTreeBuilder0.parse(stringReader0, """", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.inListItemScope("""");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test03733,"public void test03733() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", (Element) null, ""]K:"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.getHeadElement();
    assertEquals(0, element0.siblingIndex());
}",0,
project,0,test03734,"public void test03734() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", (Element) null, ""]K:"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.getHeadElement();
    assertEquals(0, element0.childNodeSize());
}",0,"assertEquals(0, element0.childNodeSize())"
project,0,test03835,"public void test03835() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ArrayList<Element> arrayList0 = new ArrayList<Element>();
    htmlTreeBuilder0.stack = arrayList0;
    Element element0 = htmlTreeBuilder0.getFromStack((String) null);
    assertNull(element0);
}",0,assertNotNull(element0)
project,0,test03936,"public void test03936() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader("""");
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    Document document0 = htmlTreeBuilder0.parse(stringReader0, """", (ParseErrorList) null, parseSettings0);
    htmlTreeBuilder0.insertInFosterParent(document0);
    assertEquals(2, document0.siblingIndex());
}",0,
project,0,test03937,"public void test03937() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader("""");
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    Document document0 = htmlTreeBuilder0.parse(stringReader0, """", (ParseErrorList) null, parseSettings0);
    htmlTreeBuilder0.insertInFosterParent(document0);
    Document document1 = htmlTreeBuilder0.getDocument();
    assertEquals(2, document1.siblingIndex());
}",0,
project,0,test04038,"public void test04038() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""Z?"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""Z?"", document0, ""tbody"", parseErrorList0, parseSettings0);
    Document document1 = htmlTreeBuilder0.getDocument();
    assertFalse(document1.isBlock());
}",0,assertFalse(document1.isBlock())
project,0,test04139,"public void test04139() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""Z?"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""Z?"", document0, ""tbody"", parseErrorList0, parseSettings0);
    String string0 = htmlTreeBuilder0.getBaseUri();
    assertEquals(""tbody"", string0);
}",0,
project,0,test04240,"public void test04240() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader("""");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    Document document0 = htmlTreeBuilder0.parse(stringReader0, """", parseErrorList0, parseSettings0);
    assertEquals(1, document0.childNodeSize());
}",0,"assertEquals(0, document0.childNodeSize())"
project,0,test04241,"public void test04241() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader("""");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    Document document0 = htmlTreeBuilder0.parse(stringReader0, """", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.framesetOk();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test04342,"public void test04342() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    boolean boolean0 = htmlTreeBuilder0.framesetOk();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test04543,"public void test04543() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.resetInsertionMode();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test04644,"public void test04644() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.replaceOnStack(document0, document0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test04745,"public void test04745() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.removeLastFormattingElement();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test04846,"public void test04846() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""H4hL':`S82tM&=3&'v["");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.removeFromStack(document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test04947,"public void test04947() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.removeFromActiveFormattingElements((Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05048,"public void test05048() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.reconstructFormattingElements();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05149,"public void test05149() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""Tag cannot be self closing; not a void tag"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.pushActiveFormattingElements(document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05250,"public void test05250() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.process((Token) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05351,"public void test05351() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    String[] stringArray0 = new String[9];
    // Undeclared exception!
    try {
        htmlTreeBuilder0.popStackToClose(stringArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05452,"public void test05452() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.popStackToClose(""footer"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05553,"public void test05553() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.popStackToBefore("""");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05654,"public void test05654() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.pop();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05755,"public void test05755() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    Tag tag0 = Tag.valueOf(""tr"", parseSettings0);
    Element element0 = new Element(tag0, ""article"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.parseFragment((String) null, element0, ""tr"", parseErrorList0, (ParseSettings) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.io.StringReader"", e);
    }
}",0,
project,0,test05856,"public void test05856() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""100w)gNcg"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.onStack(document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test05957,"public void test05957() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.maybeSetBaseUri((Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test06058,"public void test06058() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.lastFormattingElement();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test06159,"public void test06159() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.isSpecial((Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test06260,"public void test06260() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertStartTag(""<i"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test06361,"public void test06361() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertStartTag(""h1"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test06462,"public void test06462() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertOnStackAfter((Element) null, (Element) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test06563,"public void test06563() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertInFosterParent((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test06664,"public void test06664() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""noscript"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""noscript"", document0, ""tbody"", parseErrorList0, parseSettings0);
    String[] stringArray0 = new String[0];
    htmlTreeBuilder0.popStackToClose(stringArray0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertInFosterParent(document0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test06765,"public void test06765() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertInFosterParent((Node) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test06866,"public void test06866() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertForm((Token.StartTag) null, false);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test06967,"public void test06967() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertEmpty((Token.StartTag) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test07068,"public void test07068() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    CharacterReader characterReader0 = new CharacterReader(""Awh(7qc67Zq@"");
    ParseErrorList parseErrorList0 = ParseErrorList.tracking(2750);
    Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertEmpty(token_StartTag0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test07169,"public void test07169() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    Tokeniser tokeniser0 = new Tokeniser((CharacterReader) null, parseErrorList0);
    Token.StartTag token_StartTag0 = tokeniser0.startPending;
    token_StartTag0.tagName = ""{Y&26/x"";
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert(token_StartTag0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test07270,"public void test07270() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.StartTag token_StartTag0 = new Token.StartTag();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert(token_StartTag0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be false
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",1,
project,0,test07371,"public void test07371() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Token.Character token_Character0 = new Token.Character();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert(token_Character0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test07472,"public void test07472() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert(document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test07573,"public void test07573() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    PipedReader pipedReader0 = new PipedReader();
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.initialiseParse(pipedReader0, ""section"", parseErrorList0, parseSettings0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test07674,"public void test07674() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""Z?"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""Z?"", document0, ""tbody"", parseErrorList0, parseSettings0);
    String[] stringArray0 = new String[0];
    htmlTreeBuilder0.popStackToClose(stringArray0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inTableScope(""Z?"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Should not be reachable
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test07775,"public void test07775() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inSelectScope("""");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test07876,"public void test07876() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    String[] stringArray0 = new String[6];
    Document document0 = new Document(""footer"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""V2gmW D^TZM"", document0, ""footer"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.pop();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inScope(stringArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Should not be reachable
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test07977,"public void test07977() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    String[] stringArray0 = new String[0];
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inScope("""", stringArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test08078,"public void test08078() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""Z?"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""Z?"", document0, ""tbody"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.pop();
    String[] stringArray0 = new String[0];
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inScope(""xmp"", stringArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Should not be reachable
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test08179,"public void test08179() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""Z?"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""Z?"", document0, ""tbody"", parseErrorList0, parseSettings0);
    String[] stringArray0 = new String[0];
    htmlTreeBuilder0.popStackToClose(stringArray0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inScope(""M6|#w2gV'#&"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Should not be reachable
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test08280,"public void test08280() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""Z?"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""Z?"", document0, ""tbody"", parseErrorList0, parseSettings0);
    String[] stringArray0 = new String[0];
    htmlTreeBuilder0.popStackToClose(stringArray0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inListItemScope(""tbody"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Should not be reachable
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test08381,"public void test08381() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.getFromStack(""y)]<"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test08482,"public void test08482() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.getActiveFormattingElement("""");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test08583,"public void test08583() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterFrameset;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.error(htmlTreeBuilderState0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test08684,"public void test08684() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
    }
}",0,
project,0,test08885,"public void test08885() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""Z?"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""Z?"", document0, ""tbody"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.getActiveFormattingElement(""<]X"");
    assertNull(element0);
}",0,assertNotNull(element0)
project,0,test08986,"public void test08986() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""colrgroup"");
    Element element0 = document0.createElement(""colrgroup"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""colrgroup"", document0, ""tbody"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
    assertFalse(document0.hasParent());
}",0,assertTrue(document0.hasParent())
project,0,test09087,"public void test09087() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""colrgroup"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""colrgroup"", document0, ""tbody"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.pushActiveFormattingElements(document0);
    htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
    assertFalse(document0.isBlock());
}",0,assertTrue(document0.isBlock())
project,0,test09188,"public void test09188() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""colrgroup"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""colrgroup"", document0, ""tbody"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
    assertFalse(document0.hasParent());
}",0,assertTrue(document0.hasParent())
project,0,test09389,"public void test09389() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.pushActiveFormattingElements(document0);
    Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
    assertFalse(element0.isBlock());
}",0,assertTrue(element0.isBlock())
project,0,test09490,"public void test09490() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
    assertNull(element0);
}",0,assertNotNull(element0)
project,0,test09591,"public void test09591() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, false);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.pushActiveFormattingElements(document0);
    Document document1 = (Document) htmlTreeBuilder0.lastFormattingElement();
    assertEquals(Document.QuirksMode.noQuirks, document1.quirksMode());
}",0,assertNotNull(document1.quirksMode())
project,0,test09792,"public void test09792() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.generateImpliedEndTags(""o"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test09894,"public void test09894() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, false);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.inSelectScope(""AfterAfterBody"");
    assertFalse(boolean0);
}",0,
project,0,test09995,"public void test09995() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""Z?"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""Z?"", document0, ""tbody"", parseErrorList0, parseSettings0);
    String[] stringArray0 = new String[0];
    htmlTreeBuilder0.popStackToClose(stringArray0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inSelectScope(""xmp"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Should not be reachable
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test10096,"public void test10096() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = new Document(""Z?"");
    ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
    ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
    htmlTreeBuilder0.parseFragment(""Z?"", document0, ""tbody"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.push(document0);
    boolean boolean0 = htmlTreeBuilder0.inScope(""M6|#w2gV'#&"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test10197,"public void test10197() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.insertOnStackAfter(element0, document0);
    boolean boolean0 = htmlTreeBuilder0.inButtonScope("">v'["");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test10298,"public void test10298() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.removeFromStack(element0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inButtonScope(""]K:"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Should not be reachable
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test103101,"public void test103101() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    Element element0 = document0.body();
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""]K:"", element0, ""]K:"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    Element element1 = htmlTreeBuilder0.removeLastFormattingElement();
    assertEquals(1, element1.siblingIndex());
}",0,
project,0,test103102,"public void test103102() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    Element element0 = document0.body();
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""]K:"", element0, ""]K:"", parseErrorList0, parseSettings0);
    htmlTreeBuilder0.pushActiveFormattingElements(element0);
    Element element1 = htmlTreeBuilder0.removeLastFormattingElement();
    assertNotNull(element1);
}",0,
project,0,test105103,"public void test105103() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.replaceActiveFormattingElement(document0, document0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test106104,"public void test106104() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, false);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertOnStackAfter(document0, document0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Must be true
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test107105,"public void test107105() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    Element element0 = document0.head();
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", element0, ""]K:"", parseErrorList0, parseSettings0);
    Element element1 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.insertOnStackAfter(element1, document0);
    htmlTreeBuilder0.push(element0);
    Element element2 = htmlTreeBuilder0.aboveOnStack(document0);
    assertEquals(1, element2.childNodeSize());
}",0,"assertEquals(0, element2.childNodeSize())"
project,0,test111107,"public void test111107() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.insertOnStackAfter(element0, document0);
    assertEquals(0, element0.siblingIndex());
}",0,"assertEquals(0, element0.siblingIndex())"
project,0,test111108,"public void test111108() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    Element element0 = htmlTreeBuilder0.currentElement();
    htmlTreeBuilder0.insertOnStackAfter(element0, document0);
    boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test112110,"public void test112110() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, false);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.removeFromStack((Element) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test114111,"public void test114111() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.aboveOnStack(document0);
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test115112,"public void test115112() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    Token.Comment token_Comment0 = new Token.Comment();
    boolean boolean0 = htmlTreeBuilder0.process(token_Comment0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test116115,"public void test116115() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    ParseErrorList parseErrorList0 = new ParseErrorList(8, 8);
    ParseSettings parseSettings0 = new ParseSettings(true, true);
    List<Node> list0 = htmlTreeBuilder0.parseFragment(""]K:"", document0, ""]K:"", parseErrorList0, parseSettings0);
    boolean boolean0 = htmlTreeBuilder0.processStartTag(""hr"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test119117,"public void test119117() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    htmlTreeBuilder0.maybeSetBaseUri(document0);
    assertFalse(document0.isBlock());
}",0,assertFalse(document0.isBlock())
project,0,test121118,"public void test121118() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.clearStackToTableContext();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test123119,"public void test123119() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inTableScope(""Z?"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test124120,"public void test124120() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insert((Token.Comment) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test125121,"public void test125121() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    boolean boolean0 = htmlTreeBuilder0.isSpecial(document0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test126122,"public void test126122() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.push(document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test127123,"public void test127123() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    htmlTreeBuilder0.setFosterInserts(true);
    boolean boolean0 = htmlTreeBuilder0.isFosterInserts();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test128124,"public void test128124() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test129125,"public void test129125() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    Tag tag0 = Tag.valueOf(""Q!+I||N"", parseSettings0);
    Comment comment0 = new Comment(""Q!+I||N"");
    Attributes attributes0 = comment0.attributes();
    Element element0 = new Element(tag0, ""zwiTG<~|D"", attributes0);
    // Undeclared exception!
    try {
        htmlTreeBuilder0.isInActiveFormattingElements(element0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test130126,"public void test130126() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = Document.createShell(""]K:"");
    // Undeclared exception!
    try {
        htmlTreeBuilder0.aboveOnStack(document0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test131127,"public void test131127() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    List<String> list0 = htmlTreeBuilder0.getPendingTableCharacters();
    assertNull(list0);
}",0,assertNotNull(list0)
project,0,test132128,"public void test132128() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    String string0 = htmlTreeBuilder0.getBaseUri();
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test133129,"public void test133129() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inScope(""tbody"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test134130,"public void test134130() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Document document0 = htmlTreeBuilder0.getDocument();
    assertNull(document0);
}",0,assertNotNull(document0)
project,0,test136131,"public void test136131() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    String[] stringArray0 = new String[6];
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inScope(stringArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test138132,"public void test138132() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inButtonScope(""wmzo"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test139133,"public void test139133() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.clearStackToTableRowContext();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test140134,"public void test140134() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    FormElement formElement0 = htmlTreeBuilder0.getFormElement();
    assertNull(formElement0);
}",0,assertNotNull(formElement0)
project,0,test142136,"public void test142136() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.insertMarkerToFormattingElements();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test145137,"public void test145137() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    StringReader stringReader0 = new StringReader(""o"");
    ParseSettings parseSettings0 = ParseSettings.preserveCase;
    htmlTreeBuilder0.parse(stringReader0, ""o"", (ParseErrorList) null, parseSettings0);
    Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
    Token.EndTag token_EndTag0 = tokeniser0.endPending;
    HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.BeforeHead;
    // Undeclared exception!
    try {
        htmlTreeBuilder0.process(token_EndTag0, htmlTreeBuilderState0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test146138,"public void test146138() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.toString();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TreeBuilder"", e);
    }
}",0,
project,0,test147139,"public void test147139() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.clearStackToTableBodyContext();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
project,0,test148140,"public void test148140() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
    assertNull(arrayList0);
}",0,assertNotNull(arrayList0)
project,0,test150141,"public void test150141() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    Element element0 = htmlTreeBuilder0.getHeadElement();
    assertNull(element0);
}",0,assertNotNull(element0)
project,0,test151142,"public void test151142() throws Throwable {
    HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
    // Undeclared exception!
    try {
        htmlTreeBuilder0.inListItemScope("""");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.HtmlTreeBuilder"", e);
    }
}",0,
