project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""0}nq"");
    boolean boolean0 = characterReader0.matchesDigit();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test0011,"public void test0011() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Et(z(Rnu"");
    String string0 = characterReader0.consumeLetterThenDigitSequence();
    assertEquals(""Et"", string0);
}",0,assertNotNull(string0)
project,0,test0012,"public void test0012() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Et(z(Rnu"");
    String string0 = characterReader0.consumeLetterThenDigitSequence();
    String string1 = characterReader0.consumeAsString();
    assertEquals(""("", string1);
}",0,assertNotNull(string1)
project,0,test0013,"public void test0013() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Et(z(Rnu"");
    String string0 = characterReader0.consumeLetterThenDigitSequence();
    String string1 = characterReader0.consumeAsString();
    boolean boolean0 = characterReader0.matchesLetter();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test0024,"public void test0024() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    char[] charArray0 = new char[3];
    charArray0[0] = 'a';
    String string0 = characterReader0.consumeToAny(charArray0);
    assertEquals(""org.jsoup.p"", string0);
}",0,
project,0,test0025,"public void test0025() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    char[] charArray0 = new char[3];
    charArray0[0] = 'a';
    String string0 = characterReader0.consumeToAny(charArray0);
    boolean boolean0 = characterReader0.matchesLetter();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test0036,"public void test0036() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Ze)xJ~"");
    boolean boolean0 = characterReader0.matchesLetter();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test0047,"public void test0047() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""EI.Twzz%y<+s,,Q"");
    char[] charArray0 = new char[7];
    charArray0[2] = 's';
    boolean boolean0 = characterReader0.matchesAny(charArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0058,"public void test0058() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    String string0 = characterReader0.consumeLetterSequence();
    assertEquals(""org"", string0);
}",0,
project,0,test0059,"public void test0059() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    String string0 = characterReader0.consumeLetterSequence();
    boolean boolean0 = characterReader0.matchConsumeIgnoreCase(""6IfE:SX"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test00610,"public void test00610() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""|ds69`ej2YZtm_``"");
    boolean boolean0 = characterReader0.matchConsume("""");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test00711,"public void test00711() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""KHD,HZm?C"");
    String string0 = characterReader0.consumeLetterSequence();
    assertEquals(""KHD"", string0);
}",0,assertNotNull(string0)
project,0,test00712,"public void test00712() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""KHD,HZm?C"");
    String string0 = characterReader0.consumeLetterSequence();
    boolean boolean0 = characterReader0.matches('D');
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test00813,"public void test00813() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""9%=$k@-(Q"");
    String string0 = characterReader0.consumeDigitSequence();
    assertEquals(""9"", string0);
}",0,assertNotNull(string0)
project,0,test00914,"public void test00914() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""0&?F`N,5"");
    String string0 = characterReader0.consumeHexSequence();
    assertEquals(""0"", string0);
}",0,assertNotNull(string0)
project,0,test00915,"public void test00915() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""0&?F`N,5"");
    String string0 = characterReader0.consumeHexSequence();
    characterReader0.unconsume();
    String string1 = characterReader0.consumeDigitSequence();
    assertEquals(""0"", string1);
}",0,assertNotNull(string1)
project,0,test01016,"public void test01016() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("")S8f(:"");
    characterReader0.consume();
    char char0 = characterReader0.consume();
    assertEquals('S', char0);
}",0,assertNotNull(char0)
project,0,test01017,"public void test01017() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("")S8f(:"");
    characterReader0.consume();
    char char0 = characterReader0.consume();
    String string0 = characterReader0.consumeHexSequence();
    assertEquals(""8f"", string0);
}",0,assertNotNull(string0)
project,0,test01118,"public void test01118() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""C7E1F4:37*xE]Cd\u0000"");
    String string0 = characterReader0.consumeHexSequence();
    assertEquals(""C7E1F4"", string0);
}",0,assertNotNull(string0)
project,0,test01219,"public void test01219() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""9ZJsKVI<3NND;U%w"");
    String string0 = characterReader0.consumeHexSequence();
    assertEquals(""9"", string0);
}",0,assertNotNull(string0)
project,0,test01320,"public void test01320() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""lK&=alfR,Eu90~w`"");
    String string0 = characterReader0.consumeTo('9');
    assertEquals(""lK&=alfR,Eu"", string0);
}",0,
project,0,test01321,"public void test01321() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""lK&=alfR,Eu90~w`"");
    String string0 = characterReader0.consumeTo('9');
    String string1 = characterReader0.consumeLetterThenDigitSequence();
    assertEquals(""90"", string1);
}",0,assertNotNull(string1)
project,0,test01422,"public void test01422() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""zep"");
    String string0 = characterReader0.consumeLetterThenDigitSequence();
    assertEquals(""zep"", string0);
}",0,assertNotNull(string0)
project,0,test01523,"public void test01523() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    String string0 = characterReader0.consumeTo('a');
    assertEquals(""org.jsoup.p"", string0);
}",0,
project,0,test01524,"public void test01524() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    String string0 = characterReader0.consumeTo('a');
    String string1 = characterReader0.consumeLetterThenDigitSequence();
    assertEquals(""arser"", string1);
}",0,assertNotNull(string1)
project,0,test01625,"public void test01625() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""KHD.,HZm?C"");
    characterReader0.consumeLetterSequence();
    characterReader0.advance();
    char char0 = characterReader0.consume();
    assertEquals(',', char0);
}",0,
project,0,test01626,"public void test01626() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""KHD.,HZm?C"");
    characterReader0.consumeLetterSequence();
    characterReader0.advance();
    char char0 = characterReader0.consume();
    String string0 = characterReader0.consumeLetterThenDigitSequence();
    assertEquals(""HZm"", string0);
}",0,assertNotNull(string0)
project,0,test01727,"public void test01727() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""qJA1:iAK"");
    String string0 = characterReader0.consumeLetterThenDigitSequence();
    assertEquals(""qJA1"", string0);
}",0,assertNotNull(string0)
project,0,test01828,"public void test01828() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""EI.Twzz%y<+s,,Q"");
    char[] charArray0 = new char[7];
    charArray0[1] = '.';
    String string0 = characterReader0.consumeToAny(charArray0);
    assertEquals(""EI"", string0);
}",0,
project,0,test01829,"public void test01829() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""EI.Twzz%y<+s,,Q"");
    char[] charArray0 = new char[7];
    charArray0[1] = '.';
    String string0 = characterReader0.consumeToAny(charArray0);
    characterReader0.consume();
    char char0 = characterReader0.consume();
    assertEquals('', char0);
}",0,assertNotNull(char0)
project,0,test01830,"public void test01830() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""EI.Twzz%y<+s,,Q"");
    char[] charArray0 = new char[7];
    charArray0[1] = '.';
    String string0 = characterReader0.consumeToAny(charArray0);
    characterReader0.consume();
    char char0 = characterReader0.consume();
    String string1 = characterReader0.consumeLetterSequence();
    assertEquals(""Twzz"", string1);
}",0,
project,0,test01931,"public void test01931() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""ZC78@@uY"");
    String string0 = characterReader0.consumeLetterSequence();
    assertEquals(""ZC"", string0);
}",0,assertNotNull(string0)
project,0,test02032,"public void test02032() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    char[] charArray0 = new char[4];
    characterReader0.consume();
    String string0 = characterReader0.consumeToAny(charArray0);
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test02133,"public void test02133() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Et(z(Rnu"");
    String string0 = characterReader0.consumeTo(""("");
    assertEquals(""Et"", string0);
}",0,
project,0,test02234,"public void test02234() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""0}nq"");
    String string0 = characterReader0.consumeHexSequence();
    assertEquals(""0"", string0);
}",0,assertNotNull(string0)
project,0,test02235,"public void test02235() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""0}nq"");
    String string0 = characterReader0.consumeHexSequence();
    characterReader0.advance();
    String string1 = characterReader0.consumeLetterThenDigitSequence();
    assertEquals(""nq"", string1);
}",0,assertNotNull(string1)
project,0,test02236,"public void test02236() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""0}nq"");
    String string0 = characterReader0.consumeHexSequence();
    characterReader0.advance();
    String string1 = characterReader0.consumeLetterThenDigitSequence();
    boolean boolean0 = characterReader0.containsIgnoreCase(""6+<SO]1CEx]vC4+W#$"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02337,"public void test02337() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""EI.Twzz%y<+s,,Q"");
    String string0 = characterReader0.toString();
    assertEquals(""EI.Twzz%y<+s,,Q"", string0);
}",0,
project,0,test02438,"public void test02438() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""0}nq"");
    characterReader0.consumeHexSequence();
    int int0 = characterReader0.pos();
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test02539,"public void test02539() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    characterReader0.unconsume();
    int int0 = characterReader0.pos();
    assertEquals((-1), int0);
}",0,
project,0,test02640,"public void test02640() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    int int0 = characterReader0.nextIndexOf(""org.jsoup.parser.CharacterReader"");
    assertEquals(0, int0);
}",0,
project,0,test02741,"public void test02741() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    char char0 = characterReader0.consume();
    assertEquals('o', char0);
}",0,assertNotNull(char0)
project,0,test02742,"public void test02742() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    char char0 = characterReader0.consume();
    String string0 = characterReader0.consumeAsString();
    assertEquals(""r"", string0);
}",0,assertNotNull(string0)
project,0,test02743,"public void test02743() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    char char0 = characterReader0.consume();
    String string0 = characterReader0.consumeAsString();
    int int0 = characterReader0.nextIndexOf(""r"");
    assertEquals(10, int0);
}",0,"assertEquals(0, int0)"
project,0,test02844,"public void test02844() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    characterReader0.consumeLetterSequence();
    int int0 = characterReader0.nextIndexOf('.');
    assertEquals(0, int0);
}",0,
project,0,test02945,"public void test02945() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""lK&=alfR,Eu90~w`"");
    int int0 = characterReader0.nextIndexOf('9');
    assertEquals(11, int0);
}",0,"assertEquals(0, int0)"
project,0,test03046,"public void test03046() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Et(z(Rnu"");
    String string0 = characterReader0.consumeLetterThenDigitSequence();
    assertEquals(""Et"", string0);
}",0,assertNotNull(string0)
project,0,test03047,"public void test03047() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Et(z(Rnu"");
    String string0 = characterReader0.consumeLetterThenDigitSequence();
    int int0 = characterReader0.nextIndexOf('E');
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test03148,"public void test03148() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Et(z(Rnu"");
    boolean boolean0 = characterReader0.matchesIgnoreCase("""");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test03249,"public void test03249() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""PbI"");
    boolean boolean0 = characterReader0.matchesIgnoreCase(""org.jsoup.parser.CharacterReader"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test03350,"public void test03350() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""*&7Dapd?]"");
    characterReader0.consumeTo('X');
    boolean boolean0 = characterReader0.isEmpty();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test03451,"public void test03451() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""7Q @O|WEc"");
    characterReader0.advance();
    characterReader0.unconsume();
    char char0 = characterReader0.current();
    assertEquals('7', char0);
}",0,assertNotNull(char0)
project,0,test03552,"public void test03552() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Et(z(Rnu"");
    char char0 = characterReader0.current();
    assertEquals('E', char0);
}",0,assertNotNull(char0)
project,0,test03653,"public void test03653() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    String string0 = characterReader0.consumeToEnd();
    assertEquals(""Array must not contain any null objects"", string0);
}",0,
project,0,test03754,"public void test03754() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    char[] charArray0 = new char[0];
    String string0 = characterReader0.consumeToAny(charArray0);
    assertEquals(""Array must not contain any null objects"", string0);
}",0,
project,0,test03755,"public void test03755() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    char[] charArray0 = new char[0];
    String string0 = characterReader0.consumeToAny(charArray0);
    String string1 = characterReader0.consumeToEnd();
    assertEquals("""", string1);
}",0,assertNotNull(string1)
project,0,test03856,"public void test03856() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""50>3?97~c)sY>=FLQ]"");
    char char0 = characterReader0.consume();
    assertEquals('5', char0);
}",0,assertNotNull(char0)
project,0,test03957,"public void test03957() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Et(z(Rnu"");
    // Undeclared exception!
    try {
        characterReader0.nextIndexOf("""");
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test04058,"public void test04058() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    // Undeclared exception!
    try {
        characterReader0.nextIndexOf((CharSequence) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test04159,"public void test04159() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    char[] charArray0 = new char[0];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    // Undeclared exception!
    try {
        characterReader0.nextIndexOf(charBuffer0);
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.nio.Buffer"", e);
    }
}",0,
project,0,test04260,"public void test04260() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    // Undeclared exception!
    try {
        characterReader0.nextIndexOf(""r/SO{"");
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 32
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test04361,"public void test04361() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    characterReader0.unconsume();
    // Undeclared exception!
    try {
        characterReader0.matchesLetter();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test04462,"public void test04462() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    // Undeclared exception!
    try {
        characterReader0.matchesIgnoreCase((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test04563,"public void test04563() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""<"");
    characterReader0.unconsume();
    // Undeclared exception!
    try {
        characterReader0.matchesIgnoreCase(""<"");
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test04664,"public void test04664() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""2$\""4\""!NJW,?j f;"");
    characterReader0.unconsume();
    // Undeclared exception!
    try {
        characterReader0.matchesDigit();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test04765,"public void test04765() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""uC_^N/{u$i8{P!u"");
    // Undeclared exception!
    try {
        characterReader0.matchesAny((char[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test04866,"public void test04866() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    char[] charArray0 = new char[9];
    characterReader0.unconsume();
    // Undeclared exception!
    try {
        characterReader0.matchesAny(charArray0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test04967,"public void test04967() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Object must not be null"");
    // Undeclared exception!
    try {
        characterReader0.matches((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test05068,"public void test05068() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""cB$AApvF "");
    characterReader0.unconsume();
    // Undeclared exception!
    try {
        characterReader0.matches("",#"");
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test05169,"public void test05169() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    characterReader0.unconsume();
    // Undeclared exception!
    try {
        characterReader0.matches('i');
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test05270,"public void test05270() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""zb,~JuC>pm"");
    // Undeclared exception!
    try {
        characterReader0.matchConsumeIgnoreCase((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test05371,"public void test05371() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""eEs`5kFdI~^pqIY}s"");
    characterReader0.unconsume();
    // Undeclared exception!
    try {
        characterReader0.matchConsumeIgnoreCase(""}Z"");
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test05472,"public void test05472() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    // Undeclared exception!
    try {
        characterReader0.matchConsume((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test05573,"public void test05573() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    characterReader0.unconsume();
    // Undeclared exception!
    try {
        characterReader0.matchConsume(""r/SO{"");
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test05674,"public void test05674() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    characterReader0.unconsume();
    // Undeclared exception!
    try {
        characterReader0.current();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test05775,"public void test05775() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""1h{x"");
    // Undeclared exception!
    try {
        characterReader0.containsIgnoreCase("""");
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test05876,"public void test05876() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Tw?L]Vo"");
    // Undeclared exception!
    try {
        characterReader0.containsIgnoreCase((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test05977,"public void test05977() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""eEs`5kFdI~^pqIY}s"");
    characterReader0.unconsume();
    // Undeclared exception!
    try {
        characterReader0.containsIgnoreCase(""eEs`5kFdI~^pqIY}s"");
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test06078,"public void test06078() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""50>3?97~c)sY>=FLQ]"");
    characterReader0.consumeTo('q');
    characterReader0.consume();
    // Undeclared exception!
    try {
        characterReader0.consumeToEnd();
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test06179,"public void test06179() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""2$\""4\""!NJW,?j f;"");
    characterReader0.unconsume();
    char[] charArray0 = new char[0];
    // Undeclared exception!
    try {
        characterReader0.consumeToAny(charArray0);
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test06280,"public void test06280() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""F gax#WClg8&##;48H"");
    // Undeclared exception!
    try {
        characterReader0.consumeToAny((char[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test06381,"public void test06381() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""zb,~JuC>pm"");
    char[] charArray0 = new char[3];
    characterReader0.unconsume();
    // Undeclared exception!
    try {
        characterReader0.consumeToAny(charArray0);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test06482,"public void test06482() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""7Q @O|WEc"");
    // Undeclared exception!
    try {
        characterReader0.consumeTo("""");
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test06583,"public void test06583() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""|ds69`ej2YZtm_``"");
    // Undeclared exception!
    try {
        characterReader0.consumeTo((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test06684,"public void test06684() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    characterReader0.advance();
    // Undeclared exception!
    try {
        characterReader0.consumeTo('2');
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test06785,"public void test06785() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    characterReader0.unconsume();
    // Undeclared exception!
    try {
        characterReader0.consumeTo('!');
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test06886,"public void test06886() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("";OJj}O7WvUdg'D*T<\""n"");
    characterReader0.matchConsume("";OJj}O7WvUdg'D*T<\""n"");
    characterReader0.consume();
    // Undeclared exception!
    try {
        characterReader0.consumeLetterThenDigitSequence();
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test06987,"public void test06987() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    characterReader0.unconsume();
    // Undeclared exception!
    try {
        characterReader0.consumeLetterThenDigitSequence();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test07088,"public void test07088() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    characterReader0.advance();
    // Undeclared exception!
    try {
        characterReader0.consumeLetterSequence();
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test07189,"public void test07189() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    characterReader0.unconsume();
    // Undeclared exception!
    try {
        characterReader0.consumeLetterSequence();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test07290,"public void test07290() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""}"");
    characterReader0.unconsume();
    // Undeclared exception!
    try {
        characterReader0.consumeHexSequence();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test07391,"public void test07391() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""*&7Dapd?]"");
    characterReader0.consumeTo('X');
    characterReader0.consume();
    // Undeclared exception!
    try {
        characterReader0.consumeDigitSequence();
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test07492,"public void test07492() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""<.b,KILVa"");
    characterReader0.unconsume();
    // Undeclared exception!
    try {
        characterReader0.consumeDigitSequence();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test07593,"public void test07593() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    // Undeclared exception!
    try {
        characterReader0.consumeAsString();
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test07694,"public void test07694() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    characterReader0.unconsume();
    // Undeclared exception!
    try {
        characterReader0.consume();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test07795,"public void test07795() throws Throwable {
    CharacterReader characterReader0 = null;
    try {
        characterReader0 = new CharacterReader((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test07896,"public void test07896() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""2\""$\""4\""!NJW,?j f;"");
    boolean boolean0 = characterReader0.containsIgnoreCase(""N"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test07997,"public void test07997() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""7Q @O|WEc"");
    characterReader0.advance();
    boolean boolean0 = characterReader0.matchesDigit();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test08098,"public void test08098() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    char[] charArray0 = new char[0];
    String string0 = characterReader0.consumeToAny(charArray0);
    assertEquals(""Array must not contain any null objects"", string0);
}",0,
project,0,test08099,"public void test08099() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    char[] charArray0 = new char[0];
    String string0 = characterReader0.consumeToAny(charArray0);
    boolean boolean0 = characterReader0.matchesDigit();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test081100,"public void test081100() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    boolean boolean0 = characterReader0.matchesLetter();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test082101,"public void test082101() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""EI.Twzz%y<+s,,Q"");
    char[] charArray0 = new char[7];
    charArray0[1] = '.';
    characterReader0.consume();
    char char0 = characterReader0.consume();
    assertEquals('I', char0);
}",0,assertNotNull(char0)
project,0,test082102,"public void test082102() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""EI.Twzz%y<+s,,Q"");
    char[] charArray0 = new char[7];
    charArray0[1] = '.';
    characterReader0.consume();
    char char0 = characterReader0.consume();
    boolean boolean0 = characterReader0.matchesAny(charArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test083103,"public void test083103() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""KHD,HZm?C"");
    characterReader0.consumeLetterSequence();
    boolean boolean0 = characterReader0.matchConsumeIgnoreCase("",HZm?C"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test084104,"public void test084104() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    String string0 = characterReader0.consumeHexSequence();
    assertEquals(""A"", string0);
}",0,assertNotNull(string0)
project,0,test084105,"public void test084105() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    String string0 = characterReader0.consumeHexSequence();
    boolean boolean0 = characterReader0.matchConsumeIgnoreCase(""Array must not contain any null objects"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test085106,"public void test085106() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""KHD,HZm?C"");
    boolean boolean0 = characterReader0.matchConsumeIgnoreCase("",HZm?C"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test086107,"public void test086107() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    boolean boolean0 = characterReader0.matchConsume(""r/SO{"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test087108,"public void test087108() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    char[] charArray0 = new char[0];
    String string0 = characterReader0.consumeToAny(charArray0);
    assertEquals(""Array must not contain any null objects"", string0);
}",0,
project,0,test087109,"public void test087109() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    char[] charArray0 = new char[0];
    String string0 = characterReader0.consumeToAny(charArray0);
    boolean boolean0 = characterReader0.matches(""Must be true"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test088110,"public void test088110() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    boolean boolean0 = characterReader0.matches(""Array must not contain any null objects"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test089111,"public void test089111() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    String string0 = characterReader0.consumeTo('a');
    assertEquals(""org.jsoup.p"", string0);
}",0,
project,0,test089112,"public void test089112() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    String string0 = characterReader0.consumeTo('a');
    characterReader0.unconsume();
    characterReader0.advance();
    char char0 = characterReader0.consume();
    assertEquals('a', char0);
}",0,assertNotNull(char0)
project,0,test089113,"public void test089113() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    String string0 = characterReader0.consumeTo('a');
    characterReader0.unconsume();
    characterReader0.advance();
    char char0 = characterReader0.consume();
    characterReader0.unconsume();
    boolean boolean0 = characterReader0.matches('a');
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test090114,"public void test090114() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    boolean boolean0 = characterReader0.matches('a');
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test091115,"public void test091115() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    char[] charArray0 = new char[0];
    String string0 = characterReader0.consumeToAny(charArray0);
    assertEquals(""Array must not contain any null objects"", string0);
}",0,
project,0,test091116,"public void test091116() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    char[] charArray0 = new char[0];
    String string0 = characterReader0.consumeToAny(charArray0);
    boolean boolean0 = characterReader0.matches('m');
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test092117,"public void test092117() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""2\""$\""4\""!NJW,?j f;"");
    String string0 = characterReader0.consumeDigitSequence();
    assertEquals(""2"", string0);
}",0,assertNotNull(string0)
project,0,test092118,"public void test092118() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""2\""$\""4\""!NJW,?j f;"");
    String string0 = characterReader0.consumeDigitSequence();
    boolean boolean0 = characterReader0.matchesDigit();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test093119,"public void test093119() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""EI.Twzz%y<+s,,Q"");
    char[] charArray0 = new char[7];
    charArray0[1] = '.';
    String string0 = characterReader0.consumeToAny(charArray0);
    assertEquals(""EI"", string0);
}",0,
project,0,test093120,"public void test093120() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""EI.Twzz%y<+s,,Q"");
    char[] charArray0 = new char[7];
    charArray0[1] = '.';
    String string0 = characterReader0.consumeToAny(charArray0);
    String string1 = characterReader0.consumeDigitSequence();
    assertEquals("""", string1);
}",0,assertNotNull(string1)
project,0,test094121,"public void test094121() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    String string0 = characterReader0.consumeDigitSequence();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test095122,"public void test095122() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    String string0 = characterReader0.consumeTo('a');
    assertEquals(""org.jsoup.p"", string0);
}",0,
project,0,test095123,"public void test095123() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    String string0 = characterReader0.consumeTo('a');
    String string1 = characterReader0.consumeTo(""org.jsoup.p"");
    assertEquals(""arser.CharacterReader"", string1);
}",0,assertNotNull(string1)
project,0,test096125,"public void test096125() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    char[] charArray0 = new char[8];
    charArray0[5] = 'a';
    String string0 = characterReader0.consumeToAny(charArray0);
    assertEquals(""org.jsoup.p"", string0);
}",0,
project,0,test096126,"public void test096126() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsoup.parser.CharacterReader"");
    char[] charArray0 = new char[8];
    charArray0[5] = 'a';
    String string0 = characterReader0.consumeToAny(charArray0);
    String string1 = characterReader0.consumeHexSequence();
    assertEquals(""a"", string1);
}",0,
project,0,test097127,"public void test097127() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""0}nq"");
    String string0 = characterReader0.consumeHexSequence();
    assertEquals(""0"", string0);
}",0,assertNotNull(string0)
project,0,test097128,"public void test097128() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""0}nq"");
    String string0 = characterReader0.consumeHexSequence();
    boolean boolean0 = characterReader0.matchesLetter();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test098129,"public void test098129() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""KHD,HZm?C"");
    String string0 = characterReader0.consumeLetterSequence();
    assertEquals(""KHD"", string0);
}",0,assertNotNull(string0)
project,0,test098130,"public void test098130() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""KHD,HZm?C"");
    String string0 = characterReader0.consumeLetterSequence();
    String string1 = characterReader0.consumeHexSequence();
    assertEquals("""", string1);
}",0,assertNotNull(string1)
project,0,test099131,"public void test099131() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    char[] charArray0 = new char[0];
    String string0 = characterReader0.consumeToAny(charArray0);
    assertEquals(""Array must not contain any null objects"", string0);
}",0,
project,0,test099132,"public void test099132() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    char[] charArray0 = new char[0];
    String string0 = characterReader0.consumeToAny(charArray0);
    String string1 = characterReader0.consumeHexSequence();
    assertEquals("""", string1);
}",0,assertNotNull(string1)
project,0,test100133,"public void test100133() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""xv|Kd&WY&}H~"");
    String string0 = characterReader0.consumeLetterThenDigitSequence();
    assertEquals(""xv"", string0);
}",0,assertNotNull(string0)
project,0,test101134,"public void test101134() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    char[] charArray0 = new char[0];
    String string0 = characterReader0.consumeToAny(charArray0);
    assertEquals(""Array must not contain any null objects"", string0);
}",0,
project,0,test101135,"public void test101135() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    char[] charArray0 = new char[0];
    String string0 = characterReader0.consumeToAny(charArray0);
    String string1 = characterReader0.consumeLetterThenDigitSequence();
    assertEquals("""", string1);
}",0,assertNotNull(string1)
project,0,test102136,"public void test102136() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""xv|Kd&WY&}H~"");
    String string0 = characterReader0.consumeLetterSequence();
    assertEquals(""xv"", string0);
}",0,assertNotNull(string0)
project,0,test103137,"public void test103137() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    String string0 = characterReader0.consumeLetterSequence();
    assertEquals(""Array"", string0);
}",0,assertNotNull(string0)
project,0,test103138,"public void test103138() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    String string0 = characterReader0.consumeLetterSequence();
    boolean boolean0 = characterReader0.matchesLetter();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test104139,"public void test104139() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    char[] charArray0 = new char[0];
    String string0 = characterReader0.consumeToAny(charArray0);
    assertEquals(""Array must not contain any null objects"", string0);
}",0,
project,0,test104140,"public void test104140() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    char[] charArray0 = new char[0];
    String string0 = characterReader0.consumeToAny(charArray0);
    String string1 = characterReader0.consumeLetterSequence();
    assertEquals("""", string1);
}",0,
project,0,test105141,"public void test105141() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Et(z(Rnu"");
    String string0 = characterReader0.consumeLetterThenDigitSequence();
    assertEquals(""Et"", string0);
}",0,assertNotNull(string0)
project,0,test105142,"public void test105142() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Et(z(Rnu"");
    String string0 = characterReader0.consumeLetterThenDigitSequence();
    String string1 = characterReader0.consumeTo(""Et"");
    assertEquals(""(z(Rnu"", string1);
}",0,assertNotNull(string1)
project,0,test105143,"public void test105143() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Et(z(Rnu"");
    String string0 = characterReader0.consumeLetterThenDigitSequence();
    String string1 = characterReader0.consumeTo(""Et"");
    char[] charArray0 = new char[2];
    boolean boolean0 = characterReader0.matchesAny(charArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test106144,"public void test106144() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""org.jsou!.parser.CharacteReader"");
    characterReader0.consumeLetterThenDigitSequence();
    // Undeclared exception!
    try {
        characterReader0.consumeTo(""rg"");
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 31
        //
        verifyException(""org.jsoup.parser.CharacterReader"", e);
    }
}",0,
project,0,test107145,"public void test107145() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    boolean boolean0 = characterReader0.containsIgnoreCase(""A"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test108146,"public void test108146() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""*&7Dapd?]"");
    String string0 = characterReader0.consumeTo(""*&7Dapd?]"");
    assertEquals("""", string0);
}",0,
project,0,test109147,"public void test109147() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    String string0 = characterReader0.consumeHexSequence();
    assertEquals(""A"", string0);
}",0,assertNotNull(string0)
project,0,test109148,"public void test109148() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    String string0 = characterReader0.consumeHexSequence();
    int int0 = characterReader0.nextIndexOf(""Array must not contain any null objects"");
    assertEquals((-1), int0);
}",0,
project,0,test110149,"public void test110149() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    characterReader0.consume();
    // Undeclared exception!
    try {
        characterReader0.toString();
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test111150,"public void test111150() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    char[] charArray0 = new char[0];
    String string0 = characterReader0.consumeToAny(charArray0);
    assertEquals(""Array must not contain any null objects"", string0);
}",0,
project,0,test111151,"public void test111151() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""Array must not contain any null objects"");
    char[] charArray0 = new char[0];
    String string0 = characterReader0.consumeToAny(charArray0);
    char char0 = characterReader0.current();
    assertEquals('\uFFFF', char0);
}",0,assertNotNull(char0)
project,0,test112152,"public void test112152() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    boolean boolean0 = characterReader0.matchesLetter();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test113153,"public void test113153() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader(""0}nq"");
    int int0 = characterReader0.pos();
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test114154,"public void test114154() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    String string0 = characterReader0.consumeTo('F');
    assertEquals("""", string0);
}",0,
project,0,test115155,"public void test115155() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    String string0 = characterReader0.toString();
    assertEquals("""", string0);
}",0,
project,0,test116156,"public void test116156() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    characterReader0.unconsume();
    boolean boolean0 = characterReader0.isEmpty();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test117157,"public void test117157() throws Throwable {
    CharacterReader characterReader0 = new CharacterReader("""");
    characterReader0.advance();
    // Undeclared exception!
    try {
        characterReader0.consumeHexSequence();
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
