project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test011,"public void test011() throws Throwable {
    Comment comment0 = new Comment((String) null);
    comment0.getData();
    assertEquals(""#comment"", comment0.nodeName());
}",0,
project,0,test022,"public void test022() throws Throwable {
    Comment comment0 = new Comment("""", ""iframe"");
    comment0.getData();
    assertEquals(""#comment"", comment0.nodeName());
}",0,
project,0,test033,"public void test033() throws Throwable {
    Comment comment0 = new Comment("";ZMy"", "";ZMy"");
    XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
    assertNotNull(xmlDeclaration0);
}",0,
project,0,test034,"public void test034() throws Throwable {
    Comment comment0 = new Comment("";ZMy"", "";ZMy"");
    XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test055,"public void test055() throws Throwable {
    Comment comment0 = new Comment(""?EF'5F+\"""", ""comment"");
    Object object0 = new Object();
    comment0.value = object0;
    // Undeclared exception!
    try {
        comment0.toString();
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // java.lang.Object cannot be cast to java.lang.String
        //
        verifyException(""org.jsoup.nodes.LeafNode"", e);
    }
}",0,
project,0,test066,"public void test066() throws Throwable {
    Comment comment0 = new Comment("";ZMy"", "";ZMy"");
    Parser parser0 = Parser.xmlParser();
    Document document0 = parser0.parseInput(""+!_]D7gjO9H]'9|"", ""+!_]D7gjO9H]'9|"");
    comment0.setParentNode(document0);
    comment0.siblingIndex = (-923);
    // Undeclared exception!
    try {
        comment0.toString();
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test087,"public void test087() throws Throwable {
    Comment comment0 = new Comment(""org.jsoup.SerializationException"");
    CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ""#comment"");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        comment0.outerHtmlHead(charBuffer0, 27, document_OutputSettings0);
        fail(""Expecting exception: ReadOnlyBufferException"");
    } catch (ReadOnlyBufferException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.nio.StringCharBuffer"", e);
    }
}",0,
project,0,test098,"public void test098() throws Throwable {
    Comment comment0 = new Comment("""");
    char[] charArray0 = new char[6];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    // Undeclared exception!
    try {
        comment0.outerHtmlHead(charBuffer0, 1, document_OutputSettings0);
        fail(""Expecting exception: BufferOverflowException"");
    } catch (BufferOverflowException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.nio.CharBuffer"", e);
    }
}",0,
project,0,test109,"public void test109() throws Throwable {
    Comment comment0 = new Comment(""org.jsoup.nodes.Comment"");
    // Undeclared exception!
    try {
        comment0.outerHtmlHead((Appendable) null, 3720, (Document.OutputSettings) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Comment"", e);
    }
}",0,
project,0,test1110,"public void test1110() throws Throwable {
    Comment comment0 = new Comment(""GXy}3"", ""GXy}3"");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    StringBuilder stringBuilder0 = new StringBuilder(1);
    // Undeclared exception!
    try {
        comment0.outerHtmlHead(stringBuilder0, (-20569767), document_OutputSettings0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // width must be > 0
        //
        verifyException(""org.jsoup.internal.StringUtil"", e);
    }
}",0,
project,0,test1211,"public void test1211() throws Throwable {
    Comment comment0 = new Comment("""", ""!>206&d5"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(""!>206&d5"");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    comment0.value = (Object) document_OutputSettings0;
    // Undeclared exception!
    try {
        comment0.outerHtmlHead(mockPrintStream0, 79, document_OutputSettings0);
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jsoup.nodes.Document$OutputSettings cannot be cast to java.lang.String
        //
        verifyException(""org.jsoup.nodes.LeafNode"", e);
    }
}",0,
project,0,test1312,"public void test1312() throws Throwable {
    Comment comment0 = new Comment("">206&d5"", "">206&d5"");
    PipedWriter pipedWriter0 = new PipedWriter();
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    try {
        comment0.outerHtmlHead(pipedWriter0, 26, document_OutputSettings0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Pipe not connected
        //
        verifyException(""java.io.PipedWriter"", e);
    }
}",0,
project,0,test1413,"public void test1413() throws Throwable {
    Comment comment0 = new Comment((String) null);
    // Undeclared exception!
    try {
        comment0.isXmlDeclaration();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Comment"", e);
    }
}",0,
project,0,test1514,"public void test1514() throws Throwable {
    Comment comment0 = new Comment("""");
    Object object0 = new Object();
    comment0.value = object0;
    // Undeclared exception!
    try {
        comment0.isXmlDeclaration();
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // java.lang.Object cannot be cast to java.lang.String
        //
        verifyException(""org.jsoup.nodes.LeafNode"", e);
    }
}",0,
project,0,test1615,"public void test1615() throws Throwable {
    Comment comment0 = new Comment(""?EF'5F+\"""", ""comment"");
    Object object0 = new Object();
    comment0.value = object0;
    // Undeclared exception!
    try {
        comment0.getData();
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // java.lang.Object cannot be cast to java.lang.String
        //
        verifyException(""org.jsoup.nodes.LeafNode"", e);
    }
}",0,
project,0,test1716,"public void test1716() throws Throwable {
    Comment comment0 = new Comment("""", """");
    // Undeclared exception!
    try {
        comment0.asXmlDeclaration();
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test1817,"public void test1817() throws Throwable {
    Comment comment0 = new Comment((String) null);
    // Undeclared exception!
    try {
        comment0.asXmlDeclaration();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.nodes.Comment"", e);
    }
}",0,
project,0,test1918,"public void test1918() throws Throwable {
    Comment comment0 = new Comment(""!stZ9RYK_*dt!B:`e8h"", ""^4pj{Mp:,@&"");
    Tag tag0 = Tag.valueOf(""<"");
    Attributes attributes0 = new Attributes();
    PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ""G"", attributes0);
    comment0.value = (Object) pseudoTextElement0;
    // Undeclared exception!
    try {
        comment0.asXmlDeclaration();
        fail(""Expecting exception: ClassCastException"");
    } catch (ClassCastException e) {
        //
        // org.jsoup.nodes.PseudoTextElement cannot be cast to java.lang.String
        //
        verifyException(""org.jsoup.nodes.LeafNode"", e);
    }
}",0,
project,0,test2019,"public void test2019() throws Throwable {
    Comment comment0 = new Comment(""?NV^SU^"", """");
    boolean boolean0 = comment0.isXmlDeclaration();
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test2020,"public void test2020() throws Throwable {
    Comment comment0 = new Comment(""?NV^SU^"", """");
    boolean boolean0 = comment0.isXmlDeclaration();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2121,"public void test2121() throws Throwable {
    Comment comment0 = new Comment(""comment"", ""em"");
    comment0.getData();
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test2222,"public void test2222() throws Throwable {
    Comment comment0 = new Comment(""org.jsoup.SerializationException"");
    String string0 = comment0.nodeName();
    assertEquals(""#comment"", string0);
}",0,
project,0,test2323,"public void test2323() throws Throwable {
    Comment comment0 = new Comment(""m/i4B(xa"", ""m/i4B(xa"");
    XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
    assertNull(xmlDeclaration0);
}",0,
project,0,test2324,"public void test2324() throws Throwable {
    Comment comment0 = new Comment(""m/i4B(xa"", ""m/i4B(xa"");
    XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test2425,"public void test2425() throws Throwable {
    Comment comment0 = new Comment(""m?j49`a"");
    // Undeclared exception!
    try {
        comment0.asXmlDeclaration();
        fail(""Expecting exception: IndexOutOfBoundsException"");
    } catch (IndexOutOfBoundsException e) {
        //
        // Index: 0, Size: 0
        //
        verifyException(""java.util.ArrayList"", e);
    }
}",0,
project,0,test2526,"public void test2526() throws Throwable {
    Comment comment0 = new Comment(""GXy}3"", ""GXy}3"");
    boolean boolean0 = comment0.isXmlDeclaration();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2527,"public void test2527() throws Throwable {
    Comment comment0 = new Comment(""GXy}3"", ""GXy}3"");
    boolean boolean0 = comment0.isXmlDeclaration();
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test2628,"public void test2628() throws Throwable {
    Comment comment0 = new Comment("""", ""!>206&d5"");
    boolean boolean0 = comment0.isXmlDeclaration();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2629,"public void test2629() throws Throwable {
    Comment comment0 = new Comment("""", ""!>206&d5"");
    boolean boolean0 = comment0.isXmlDeclaration();
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test2730,"public void test2730() throws Throwable {
    Comment comment0 = new Comment("";ZMy"", "";ZMy"");
    String string0 = comment0.toString();
    assertEquals(""#comment"", comment0.nodeName());
}",0,
project,0,test2731,"public void test2731() throws Throwable {
    Comment comment0 = new Comment("";ZMy"", "";ZMy"");
    String string0 = comment0.toString();
    assertEquals(""\n<!--;ZMy-->"", string0);
}",0,assertNotNull(string0)
project,0,test2832,"public void test2832() throws Throwable {
    Comment comment0 = new Comment("""", ""!>206&d5"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(""!>206&d5"");
    Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
    Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
    comment0.outerHtmlHead(mockPrintStream0, 79, document_OutputSettings1);
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test2933,"public void test2933() throws Throwable {
    Comment comment0 = new Comment(""!+PV"");
    boolean boolean0 = comment0.isXmlDeclaration();
    assertEquals(""#comment"", comment0.nodeName());
}",0,assertNotNull(comment0.nodeName())
project,0,test2934,"public void test2934() throws Throwable {
    Comment comment0 = new Comment(""!+PV"");
    boolean boolean0 = comment0.isXmlDeclaration();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
