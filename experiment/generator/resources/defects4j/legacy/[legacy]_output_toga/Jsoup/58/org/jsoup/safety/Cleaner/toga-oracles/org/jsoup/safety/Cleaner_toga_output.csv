project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test00,"public void test00() throws Throwable {
    Whitelist whitelist0 = Whitelist.basic();
    Cleaner cleaner0 = new Cleaner(whitelist0);
    Document document0 = new Document("""");
    Document document1 = cleaner0.clean(document0);
    assertEquals(1, document1.childNodeSize());
}",0,
project,0,test11,"public void test11() throws Throwable {
    Whitelist whitelist0 = Whitelist.basic();
    Whitelist whitelist1 = whitelist0.addEnforcedAttribute(""body"", ""body"", ""body"");
    Document document0 = Document.createShell(""body"");
    Cleaner cleaner0 = new Cleaner(whitelist1);
    Document document1 = cleaner0.clean(document0);
    boolean boolean0 = cleaner0.isValid(document1);
    assertNotSame(document1, document0);
}",0,
project,0,test12,"public void test12() throws Throwable {
    Whitelist whitelist0 = Whitelist.basic();
    Whitelist whitelist1 = whitelist0.addEnforcedAttribute(""body"", ""body"", ""body"");
    Document document0 = Document.createShell(""body"");
    Cleaner cleaner0 = new Cleaner(whitelist1);
    Document document1 = cleaner0.clean(document0);
    boolean boolean0 = cleaner0.isValid(document1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test23,"public void test23() throws Throwable {
    Whitelist whitelist0 = Whitelist.none();
    Whitelist whitelist1 = whitelist0.addEnforcedAttribute(""body"", ""body"", ""body"");
    Document document0 = Document.createShell(""body"");
    Cleaner cleaner0 = new Cleaner(whitelist1);
    Document document1 = cleaner0.clean(document0);
    whitelist0.addEnforcedAttribute(""body"", ""body"", ""open"");
    boolean boolean0 = cleaner0.isValid(document1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test34,"public void test34() throws Throwable {
    Whitelist whitelist0 = Whitelist.basic();
    Cleaner cleaner0 = new Cleaner(whitelist0);
    Document document0 = Document.createShell(""PbfK}e`)6OKd(YBn"");
    document0.text(""PbfK}e`)6OKd(YBn"");
    boolean boolean0 = cleaner0.isValid(document0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test45,"public void test45() throws Throwable {
    Whitelist whitelist0 = Whitelist.basic();
    Whitelist whitelist1 = whitelist0.addEnforcedAttribute(""body"", ""body"", ""body"");
    Document document0 = Document.createShell(""body"");
    Whitelist whitelist2 = Whitelist.basicWithImages();
    Cleaner cleaner0 = new Cleaner(whitelist2);
    Cleaner cleaner1 = new Cleaner(whitelist1);
    Document document1 = cleaner1.clean(document0);
    boolean boolean0 = cleaner0.isValid(document1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
