project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    String string0 = TokenQueue.unescape(""(9,g5k)gArvQ#q9al"");
    assertNotNull(string0);
}",0,
project,0,test001,"public void test001() throws Throwable {
    String string0 = TokenQueue.unescape(""(9,g5k)gArvQ#q9al"");
    assertEquals(""(9,g5k)gArvQ#q9al"", string0);
}",0,
project,0,test012,"public void test012() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test013,"public void test013() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test014,"public void test014() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test015,"public void test015() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,
project,0,test016,"public void test016() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test017,"public void test017() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertNotNull(tokenQueue0);
}",0,
project,0,test018,"public void test018() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    assertEquals('J', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test019,"public void test019() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test0110,"public void test0110() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test0111,"public void test0111() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    assertEquals(""Js'S9{B9xJr"", tokenQueue0.toString());
}",0,
project,0,test0112,"public void test0112() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test0113,"public void test0113() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    String string0 = tokenQueue0.consumeWord();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test0114,"public void test0114() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    String string0 = tokenQueue0.consumeWord();
    assertEquals('\'', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test0115,"public void test0115() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    String string0 = tokenQueue0.consumeWord();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test0116,"public void test0116() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    String string0 = tokenQueue0.consumeWord();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test0117,"public void test0117() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    String string0 = tokenQueue0.consumeWord();
    assertEquals(""'S9{B9xJr"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test0118,"public void test0118() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    String string0 = tokenQueue0.consumeWord();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test0119,"public void test0119() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    String string0 = tokenQueue0.consumeWord();
    assertEquals(""Js"", string0);
}",0,assertNotNull(string0)
project,0,test0121,"public void test0121() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    String string0 = tokenQueue0.consumeWord();
    String string1 = tokenQueue0.chompBalanced('!', '!');
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test0122,"public void test0122() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    String string0 = tokenQueue0.consumeWord();
    String string1 = tokenQueue0.chompBalanced('!', '!');
    assertEquals(""S9{B9xJr"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test0123,"public void test0123() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    String string0 = tokenQueue0.consumeWord();
    String string1 = tokenQueue0.chompBalanced('!', '!');
    assertEquals('S', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test0124,"public void test0124() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    String string0 = tokenQueue0.consumeWord();
    String string1 = tokenQueue0.chompBalanced('!', '!');
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test0125,"public void test0125() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    String string0 = tokenQueue0.consumeWord();
    String string1 = tokenQueue0.chompBalanced('!', '!');
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test0126,"public void test0126() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    String string0 = tokenQueue0.consumeWord();
    String string1 = tokenQueue0.chompBalanced('!', '!');
    assertNotNull(string1);
}",0,assertNotNull(string1)
project,0,test0127,"public void test0127() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    tokenQueue0.addFirst(""Js'S9{B9xJr"");
    String string0 = tokenQueue0.consumeWord();
    String string1 = tokenQueue0.chompBalanced('!', '!');
    assertEquals("""", string1);
}",0,assertNotNull(string1)
project,0,test0228,"public void test0228() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s7,]zDXFG>2mpqc'&5"");
    assertEquals(""s7,]zDXFG>2mpqc'&5"", tokenQueue0.toString());
}",0,
project,0,test0229,"public void test0229() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s7,]zDXFG>2mpqc'&5"");
    assertEquals('s', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test0230,"public void test0230() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s7,]zDXFG>2mpqc'&5"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test0231,"public void test0231() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s7,]zDXFG>2mpqc'&5"");
    assertTrue(tokenQueue0.matchesWord());
}",0,
project,0,test0232,"public void test0232() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s7,]zDXFG>2mpqc'&5"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test0233,"public void test0233() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s7,]zDXFG>2mpqc'&5"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test0234,"public void test0234() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s7,]zDXFG>2mpqc'&5"");
    tokenQueue0.addFirst(""X`2*j.pd*IbJ_"");
    assertEquals(""X`2*j.pd*IbJ_s7,]zDXFG>2mpqc'&5"", tokenQueue0.toString());
}",0,
project,0,test0235,"public void test0235() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s7,]zDXFG>2mpqc'&5"");
    tokenQueue0.addFirst(""X`2*j.pd*IbJ_"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test0236,"public void test0236() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s7,]zDXFG>2mpqc'&5"");
    tokenQueue0.addFirst(""X`2*j.pd*IbJ_"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test0237,"public void test0237() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s7,]zDXFG>2mpqc'&5"");
    tokenQueue0.addFirst(""X`2*j.pd*IbJ_"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test0238,"public void test0238() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s7,]zDXFG>2mpqc'&5"");
    tokenQueue0.addFirst(""X`2*j.pd*IbJ_"");
    assertEquals('X', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test0239,"public void test0239() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s7,]zDXFG>2mpqc'&5"");
    tokenQueue0.addFirst(""X`2*j.pd*IbJ_"");
    String string0 = tokenQueue0.consumeTo(""s7,]zDXFG>2mpqc'&5"");
    assertEquals(""s7,]zDXFG>2mpqc'&5"", tokenQueue0.toString());
}",0,
project,0,test0240,"public void test0240() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s7,]zDXFG>2mpqc'&5"");
    tokenQueue0.addFirst(""X`2*j.pd*IbJ_"");
    String string0 = tokenQueue0.consumeTo(""s7,]zDXFG>2mpqc'&5"");
    assertEquals('s', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test0241,"public void test0241() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s7,]zDXFG>2mpqc'&5"");
    tokenQueue0.addFirst(""X`2*j.pd*IbJ_"");
    String string0 = tokenQueue0.consumeTo(""s7,]zDXFG>2mpqc'&5"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test0242,"public void test0242() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s7,]zDXFG>2mpqc'&5"");
    tokenQueue0.addFirst(""X`2*j.pd*IbJ_"");
    String string0 = tokenQueue0.consumeTo(""s7,]zDXFG>2mpqc'&5"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test0243,"public void test0243() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s7,]zDXFG>2mpqc'&5"");
    tokenQueue0.addFirst(""X`2*j.pd*IbJ_"");
    String string0 = tokenQueue0.consumeTo(""s7,]zDXFG>2mpqc'&5"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test0244,"public void test0244() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s7,]zDXFG>2mpqc'&5"");
    tokenQueue0.addFirst(""X`2*j.pd*IbJ_"");
    String string0 = tokenQueue0.consumeTo(""s7,]zDXFG>2mpqc'&5"");
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test0245,"public void test0245() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""s7,]zDXFG>2mpqc'&5"");
    tokenQueue0.addFirst(""X`2*j.pd*IbJ_"");
    String string0 = tokenQueue0.consumeTo(""s7,]zDXFG>2mpqc'&5"");
    assertEquals(""X`2*j.pd*IbJ_"", string0);
}",0,assertNotNull(string0)
project,0,test0346,"public void test0346() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-^1"");
    assertEquals('-', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test0347,"public void test0347() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-^1"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test0348,"public void test0348() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-^1"");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test0349,"public void test0349() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-^1"");
    assertEquals(""-^1"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test0350,"public void test0350() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-^1"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test0351,"public void test0351() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-^1"");
    assertNotNull(tokenQueue0);
}",0,assertNotNull(tokenQueue0)
project,0,test0352,"public void test0352() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-^1"");
    tokenQueue0.consume(""-^1"");
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test0353,"public void test0353() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-^1"");
    tokenQueue0.consume(""-^1"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test0354,"public void test0354() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-^1"");
    tokenQueue0.consume(""-^1"");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertFalse(tokenQueue0.matchesWord())
project,0,test0355,"public void test0355() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-^1"");
    tokenQueue0.consume(""-^1"");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test0356,"public void test0356() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-^1"");
    tokenQueue0.consume(""-^1"");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test0457,"public void test0457() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("".k"");
    assertFalse(tokenQueue0.matchesWord());
}",0,
project,0,test0458,"public void test0458() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("".k"");
    assertEquals('.', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test0459,"public void test0459() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("".k"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test0460,"public void test0460() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("".k"");
    assertEquals("".k"", tokenQueue0.toString());
}",0,
project,0,test0461,"public void test0461() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("".k"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test0462,"public void test0462() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("".k"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test0463,"public void test0463() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("".k"");
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertFalse(tokenQueue0.matchesWord())
project,0,test0464,"public void test0464() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("".k"");
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertEquals('.', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test0465,"public void test0465() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("".k"");
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test0466,"public void test0466() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("".k"");
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertEquals("".k"", tokenQueue0.toString());
}",0,
project,0,test0467,"public void test0467() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("".k"");
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test0468,"public void test0468() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("".k"");
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0569,"public void test0569() throws Throwable {
    String string0 = TokenQueue.unescape(""\\1hrMjv"");
    assertNotNull(string0);
}",0,
project,0,test0570,"public void test0570() throws Throwable {
    String string0 = TokenQueue.unescape(""\\1hrMjv"");
    assertEquals(""1hrMjv"", string0);
}",0,
project,0,test0671,"public void test0671() throws Throwable {
    String string0 = TokenQueue.unescape("""");
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test0672,"public void test0672() throws Throwable {
    String string0 = TokenQueue.unescape("""");
    assertEquals("""", string0);
}",0,
project,0,test0773,"public void test0773() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7$@{0)7d@9 2zNlqO"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test0774,"public void test0774() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7$@{0)7d@9 2zNlqO"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test0775,"public void test0775() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7$@{0)7d@9 2zNlqO"");
    assertEquals('7', tokenQueue0.peek());
}",0,
project,0,test0776,"public void test0776() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7$@{0)7d@9 2zNlqO"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test0777,"public void test0777() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7$@{0)7d@9 2zNlqO"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test0778,"public void test0778() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7$@{0)7d@9 2zNlqO"");
    String string0 = tokenQueue0.toString();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test0779,"public void test0779() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7$@{0)7d@9 2zNlqO"");
    String string0 = tokenQueue0.toString();
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test0780,"public void test0780() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7$@{0)7d@9 2zNlqO"");
    String string0 = tokenQueue0.toString();
    assertEquals('7', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test0781,"public void test0781() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7$@{0)7d@9 2zNlqO"");
    String string0 = tokenQueue0.toString();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test0782,"public void test0782() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7$@{0)7d@9 2zNlqO"");
    String string0 = tokenQueue0.toString();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test0883,"public void test0883() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test0884,"public void test0884() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test0885,"public void test0885() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test0886,"public void test0886() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test0887,"public void test0887() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test0888,"public void test0888() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertNotNull(tokenQueue0);
}",0,
project,0,test0889,"public void test0889() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    String string0 = tokenQueue0.remainder();
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test0890,"public void test0890() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    String string0 = tokenQueue0.remainder();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertFalse(tokenQueue0.matchesWord())
project,0,test0891,"public void test0891() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    String string0 = tokenQueue0.remainder();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test0892,"public void test0892() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    String string0 = tokenQueue0.remainder();
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test0893,"public void test0893() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    String string0 = tokenQueue0.remainder();
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test0894,"public void test0894() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    String string0 = tokenQueue0.remainder();
    assertNotNull(string0);
}",0,
project,0,test0895,"public void test0895() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    String string0 = tokenQueue0.remainder();
    assertEquals("""", string0);
}",0,
project,0,test0996,"public void test0996() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test0997,"public void test0997() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    assertEquals(""$79t<8"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test0998,"public void test0998() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test0999,"public void test0999() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    assertEquals('$', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test09100,"public void test09100() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test09101,"public void test09101() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    assertNotNull(tokenQueue0);
}",0,assertNotNull(tokenQueue0)
project,0,test09102,"public void test09102() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    String string0 = tokenQueue0.chompBalanced('*', 'C');
    assertEquals('7', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test09103,"public void test09103() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    String string0 = tokenQueue0.chompBalanced('*', 'C');
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test09104,"public void test09104() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    String string0 = tokenQueue0.chompBalanced('*', 'C');
    assertEquals(""79t<8"", tokenQueue0.toString());
}",0,
project,0,test09105,"public void test09105() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    String string0 = tokenQueue0.chompBalanced('*', 'C');
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test09106,"public void test09106() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    String string0 = tokenQueue0.chompBalanced('*', 'C');
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test09107,"public void test09107() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    String string0 = tokenQueue0.chompBalanced('*', 'C');
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test09108,"public void test09108() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    String string0 = tokenQueue0.chompBalanced('*', 'C');
    assertEquals("""", string0);
}",0,
project,0,test09109,"public void test09109() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    String string0 = tokenQueue0.chompBalanced('*', 'C');
    char char0 = tokenQueue0.peek();
    assertEquals('7', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test09110,"public void test09110() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    String string0 = tokenQueue0.chompBalanced('*', 'C');
    char char0 = tokenQueue0.peek();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test09111,"public void test09111() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    String string0 = tokenQueue0.chompBalanced('*', 'C');
    char char0 = tokenQueue0.peek();
    assertEquals(""79t<8"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test09112,"public void test09112() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    String string0 = tokenQueue0.chompBalanced('*', 'C');
    char char0 = tokenQueue0.peek();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test09113,"public void test09113() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    String string0 = tokenQueue0.chompBalanced('*', 'C');
    char char0 = tokenQueue0.peek();
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test09114,"public void test09114() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    String string0 = tokenQueue0.chompBalanced('*', 'C');
    char char0 = tokenQueue0.peek();
    assertEquals('7', char0);
}",0,assertNotNull(char0)
project,0,test10115,"public void test10115() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test10116,"public void test10116() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test10117,"public void test10117() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test10118,"public void test10118() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test10119,"public void test10119() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test10120,"public void test10120() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertNotNull(tokenQueue0);
}",0,assertNotNull(tokenQueue0)
project,0,test10121,"public void test10121() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    boolean boolean0 = tokenQueue0.matchesCS("""");
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test10122,"public void test10122() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    boolean boolean0 = tokenQueue0.matchesCS("""");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test10123,"public void test10123() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    boolean boolean0 = tokenQueue0.matchesCS("""");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertFalse(tokenQueue0.matchesWord())
project,0,test10124,"public void test10124() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    boolean boolean0 = tokenQueue0.matchesCS("""");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test10125,"public void test10125() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    boolean boolean0 = tokenQueue0.matchesCS("""");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test10126,"public void test10126() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    boolean boolean0 = tokenQueue0.matchesCS("""");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test11127,"public void test11127() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test11128,"public void test11128() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test11129,"public void test11129() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    assertEquals('J', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test11130,"public void test11130() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    assertEquals(""Js'S9{B9xJrJs'S9{B9xJr"", tokenQueue0.toString());
}",0,
project,0,test11131,"public void test11131() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test11132,"public void test11132() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test11133,"public void test11133() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    boolean boolean0 = tokenQueue0.matches(""org.jsoup.parser.TokenQueue"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test11134,"public void test11134() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    boolean boolean0 = tokenQueue0.matches(""org.jsoup.parser.TokenQueue"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test11135,"public void test11135() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    boolean boolean0 = tokenQueue0.matches(""org.jsoup.parser.TokenQueue"");
    assertEquals('J', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test11136,"public void test11136() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    boolean boolean0 = tokenQueue0.matches(""org.jsoup.parser.TokenQueue"");
    assertEquals(""Js'S9{B9xJrJs'S9{B9xJr"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test11137,"public void test11137() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    boolean boolean0 = tokenQueue0.matches(""org.jsoup.parser.TokenQueue"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test11138,"public void test11138() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    boolean boolean0 = tokenQueue0.matches(""org.jsoup.parser.TokenQueue"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test12139,"public void test12139() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test12140,"public void test12140() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    assertEquals('C', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test12141,"public void test12141() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    assertEquals(""C-c}Cvo"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test12142,"public void test12142() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test12143,"public void test12143() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test12144,"public void test12144() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test12145,"public void test12145() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    String string0 = tokenQueue0.consumeAttributeKey();
    assertFalse(tokenQueue0.matchesWord());
}",0,
project,0,test12146,"public void test12146() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    String string0 = tokenQueue0.consumeAttributeKey();
    assertEquals(""}Cvo"", tokenQueue0.toString());
}",0,
project,0,test12147,"public void test12147() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    String string0 = tokenQueue0.consumeAttributeKey();
    assertEquals('}', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test12148,"public void test12148() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    String string0 = tokenQueue0.consumeAttributeKey();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test12149,"public void test12149() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    String string0 = tokenQueue0.consumeAttributeKey();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test12150,"public void test12150() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    String string0 = tokenQueue0.consumeAttributeKey();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test12151,"public void test12151() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    String string0 = tokenQueue0.consumeAttributeKey();
    assertEquals(""C-c"", string0);
}",0,assertNotNull(string0)
project,0,test12153,"public void test12153() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    String string0 = tokenQueue0.consumeAttributeKey();
    String string1 = tokenQueue0.consumeTo(""C-c}Cvo"");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test12154,"public void test12154() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    String string0 = tokenQueue0.consumeAttributeKey();
    String string1 = tokenQueue0.consumeTo(""C-c}Cvo"");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test12155,"public void test12155() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    String string0 = tokenQueue0.consumeAttributeKey();
    String string1 = tokenQueue0.consumeTo(""C-c}Cvo"");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test12156,"public void test12156() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    String string0 = tokenQueue0.consumeAttributeKey();
    String string1 = tokenQueue0.consumeTo(""C-c}Cvo"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test12157,"public void test12157() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    String string0 = tokenQueue0.consumeAttributeKey();
    String string1 = tokenQueue0.consumeTo(""C-c}Cvo"");
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test12158,"public void test12158() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    String string0 = tokenQueue0.consumeAttributeKey();
    String string1 = tokenQueue0.consumeTo(""C-c}Cvo"");
    assertNotNull(string1);
}",0,assertNotNull(string1)
project,0,test12159,"public void test12159() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    String string0 = tokenQueue0.consumeAttributeKey();
    String string1 = tokenQueue0.consumeTo(""C-c}Cvo"");
    assertEquals(""}Cvo"", string1);
}",0,assertNotNull(string1)
project,0,test13160,"public void test13160() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test13161,"public void test13161() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    assertEquals(':', tokenQueue0.peek());
}",0,
project,0,test13162,"public void test13162() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test13163,"public void test13163() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    assertEquals("":8l8 "", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test13164,"public void test13164() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test13165,"public void test13165() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    assertNotNull(tokenQueue0);
}",0,
project,0,test13166,"public void test13166() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test13167,"public void test13167() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertEquals(':', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test13168,"public void test13168() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test13169,"public void test13169() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertEquals("":8l8 "", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test13170,"public void test13170() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test13171,"public void test13171() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test13172,"public void test13172() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test14173,"public void test14173() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    assertEquals('x', tokenQueue0.peek());
}",0,
project,0,test14174,"public void test14174() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test14175,"public void test14175() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test14176,"public void test14176() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test14177,"public void test14177() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    assertEquals(""xc?1>u8j]awS\""t\""PufP"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test14178,"public void test14178() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test14179,"public void test14179() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test14180,"public void test14180() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test14181,"public void test14181() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    assertEquals('?', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test14182,"public void test14182() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test14183,"public void test14183() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    assertEquals(""?1>u8j]awS\""t\""PufP"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test14184,"public void test14184() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test14185,"public void test14185() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    assertEquals(""xc"", string0);
}",0,assertNotNull(string0)
project,0,test14186,"public void test14186() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    char char0 = tokenQueue0.consume();
    assertEquals(""1>u8j]awS\""t\""PufP"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test14187,"public void test14187() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    char char0 = tokenQueue0.consume();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test14188,"public void test14188() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    char char0 = tokenQueue0.consume();
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test14189,"public void test14189() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    char char0 = tokenQueue0.consume();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test14190,"public void test14190() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    char char0 = tokenQueue0.consume();
    assertEquals('1', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test14191,"public void test14191() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    char char0 = tokenQueue0.consume();
    assertEquals('?', char0);
}",0,assertNotNull(char0)
project,0,test14192,"public void test14192() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    char char0 = tokenQueue0.consume();
    char char1 = tokenQueue0.consume();
    assertFalse(char1 == char0);
}",0,
project,0,test14193,"public void test14193() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    char char0 = tokenQueue0.consume();
    char char1 = tokenQueue0.consume();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test14194,"public void test14194() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    char char0 = tokenQueue0.consume();
    char char1 = tokenQueue0.consume();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test14195,"public void test14195() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    char char0 = tokenQueue0.consume();
    char char1 = tokenQueue0.consume();
    assertEquals('>', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test14196,"public void test14196() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    char char0 = tokenQueue0.consume();
    char char1 = tokenQueue0.consume();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test14197,"public void test14197() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    char char0 = tokenQueue0.consume();
    char char1 = tokenQueue0.consume();
    assertEquals("">u8j]awS\""t\""PufP"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test14198,"public void test14198() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    String string0 = tokenQueue0.consumeTagName();
    char char0 = tokenQueue0.consume();
    char char1 = tokenQueue0.consume();
    assertEquals('1', char1);
}",0,assertNotNull(char1)
project,0,test15199,"public void test15199() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""JfT\""0wbkOCfxRdb%F"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test15200,"public void test15200() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""JfT\""0wbkOCfxRdb%F"");
    assertEquals('J', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test15201,"public void test15201() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""JfT\""0wbkOCfxRdb%F"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertFalse(tokenQueue0.matchesWord())
project,0,test15202,"public void test15202() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""JfT\""0wbkOCfxRdb%F"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test15203,"public void test15203() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""JfT\""0wbkOCfxRdb%F"");
    assertEquals(""JfT\""0wbkOCfxRdb%F"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test15204,"public void test15204() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""JfT\""0wbkOCfxRdb%F"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test15205,"public void test15205() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""JfT\""0wbkOCfxRdb%F"");
    char char0 = tokenQueue0.consume();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test15206,"public void test15206() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""JfT\""0wbkOCfxRdb%F"");
    char char0 = tokenQueue0.consume();
    assertEquals(""fT\""0wbkOCfxRdb%F"", tokenQueue0.toString());
}",0,
project,0,test15207,"public void test15207() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""JfT\""0wbkOCfxRdb%F"");
    char char0 = tokenQueue0.consume();
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test15208,"public void test15208() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""JfT\""0wbkOCfxRdb%F"");
    char char0 = tokenQueue0.consume();
    assertEquals('f', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test15209,"public void test15209() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""JfT\""0wbkOCfxRdb%F"");
    char char0 = tokenQueue0.consume();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test15210,"public void test15210() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""JfT\""0wbkOCfxRdb%F"");
    char char0 = tokenQueue0.consume();
    assertEquals('J', char0);
}",0,assertNotNull(char0)
project,0,test16211,"public void test16211() throws Throwable {
    // Undeclared exception!
    try {
        TokenQueue.unescape((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test17212,"public void test17212() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test17213,"public void test17213() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    assertEquals(""C-c}Cvo"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test17214,"public void test17214() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertFalse(tokenQueue0.matchesWord())
project,0,test17215,"public void test17215() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test17216,"public void test17216() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    assertEquals('C', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test17217,"public void test17217() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test17218,"public void test17218() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""C-c}Cvo"");
    // Undeclared exception!
    try {
        tokenQueue0.matchesCS((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
    }
}",0,
project,0,test18219,"public void test18219() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    assertEquals(""kBNV|dXq&bBD1O"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test18220,"public void test18220() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test18221,"public void test18221() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test18222,"public void test18222() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test18223,"public void test18223() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    assertEquals('k', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test18224,"public void test18224() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test18225,"public void test18225() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    // Undeclared exception!
    try {
        tokenQueue0.matchesAny((char[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test19226,"public void test19226() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test19227,"public void test19227() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test19228,"public void test19228() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    assertEquals('J', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test19229,"public void test19229() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    assertEquals(""Js'S9{B9xJrJs'S9{B9xJr"", tokenQueue0.toString());
}",0,
project,0,test19230,"public void test19230() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test19231,"public void test19231() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test19232,"public void test19232() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    // Undeclared exception!
    try {
        tokenQueue0.matches((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test20233,"public void test20233() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test20234,"public void test20234() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test20235,"public void test20235() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    assertEquals('P', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test20236,"public void test20236() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test20237,"public void test20237() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    assertEquals(""PsQsP"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test20238,"public void test20238() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test20239,"public void test20239() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    // Undeclared exception!
    try {
        tokenQueue0.matchChomp((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test21240,"public void test21240() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test21241,"public void test21241() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test21242,"public void test21242() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test21243,"public void test21243() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test21244,"public void test21244() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test21245,"public void test21245() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertNotNull(tokenQueue0);
}",0,
project,0,test21246,"public void test21246() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    // Undeclared exception!
    try {
        tokenQueue0.consumeToIgnoreCase("""");
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test22247,"public void test22247() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""1^=$YvJ?!Czi]S{%s"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test22248,"public void test22248() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""1^=$YvJ?!Czi]S{%s"");
    assertEquals(""1^=$YvJ?!Czi]S{%s"", tokenQueue0.toString());
}",0,
project,0,test22249,"public void test22249() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""1^=$YvJ?!Czi]S{%s"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test22250,"public void test22250() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""1^=$YvJ?!Czi]S{%s"");
    assertEquals('1', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test22251,"public void test22251() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""1^=$YvJ?!Czi]S{%s"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test22252,"public void test22252() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""1^=$YvJ?!Czi]S{%s"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test22253,"public void test22253() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""1^=$YvJ?!Czi]S{%s"");
    // Undeclared exception!
    try {
        tokenQueue0.consumeToIgnoreCase((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test23254,"public void test23254() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""WPI"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test23255,"public void test23255() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""WPI"");
    assertEquals('W', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test23256,"public void test23256() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""WPI"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test23257,"public void test23257() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""WPI"");
    assertEquals(""WPI"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test23258,"public void test23258() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""WPI"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test23259,"public void test23259() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""WPI"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test23260,"public void test23260() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""WPI"");
    // Undeclared exception!
    try {
        tokenQueue0.consumeToAny((String[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test24261,"public void test24261() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test24262,"public void test24262() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test24263,"public void test24263() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test24264,"public void test24264() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test24265,"public void test24265() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test24266,"public void test24266() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertNotNull(tokenQueue0);
}",0,
project,0,test24267,"public void test24267() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    // Undeclared exception!
    try {
        tokenQueue0.consumeTo((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test25268,"public void test25268() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7LS<jn2]+9v"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test25269,"public void test25269() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7LS<jn2]+9v"");
    assertEquals(""7LS<jn2]+9v"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test25270,"public void test25270() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7LS<jn2]+9v"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test25271,"public void test25271() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7LS<jn2]+9v"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test25272,"public void test25272() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7LS<jn2]+9v"");
    assertEquals('7', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test25273,"public void test25273() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7LS<jn2]+9v"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test25274,"public void test25274() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""7LS<jn2]+9v"");
    // Undeclared exception!
    try {
        tokenQueue0.consume((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test26275,"public void test26275() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("";}&+Bk.?"");
    assertEquals("";}&+Bk.?"", tokenQueue0.toString());
}",0,
project,0,test26276,"public void test26276() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("";}&+Bk.?"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test26277,"public void test26277() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("";}&+Bk.?"");
    assertEquals(';', tokenQueue0.peek());
}",0,
project,0,test26278,"public void test26278() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("";}&+Bk.?"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test26279,"public void test26279() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("";}&+Bk.?"");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test26280,"public void test26280() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("";}&+Bk.?"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test26281,"public void test26281() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("";}&+Bk.?"");
    String string0 = tokenQueue0.consumeToIgnoreCase(""org.jsoup.parser.TokenQueue"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test26282,"public void test26282() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("";}&+Bk.?"");
    String string0 = tokenQueue0.consumeToIgnoreCase(""org.jsoup.parser.TokenQueue"");
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test26283,"public void test26283() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("";}&+Bk.?"");
    String string0 = tokenQueue0.consumeToIgnoreCase(""org.jsoup.parser.TokenQueue"");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test26284,"public void test26284() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("";}&+Bk.?"");
    String string0 = tokenQueue0.consumeToIgnoreCase(""org.jsoup.parser.TokenQueue"");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test26285,"public void test26285() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("";}&+Bk.?"");
    String string0 = tokenQueue0.consumeToIgnoreCase(""org.jsoup.parser.TokenQueue"");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test26286,"public void test26286() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("";}&+Bk.?"");
    String string0 = tokenQueue0.consumeToIgnoreCase(""org.jsoup.parser.TokenQueue"");
    assertNotNull(string0);
}",0,
project,0,test26287,"public void test26287() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("";}&+Bk.?"");
    String string0 = tokenQueue0.consumeToIgnoreCase(""org.jsoup.parser.TokenQueue"");
    assertEquals("";}&+Bk.?"", string0);
}",0,
project,0,test26288,"public void test26288() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("";}&+Bk.?"");
    String string0 = tokenQueue0.consumeToIgnoreCase(""org.jsoup.parser.TokenQueue"");
    // Undeclared exception!
    try {
        tokenQueue0.consume();
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test27289,"public void test27289() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test27290,"public void test27290() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test27291,"public void test27291() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test27292,"public void test27292() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test27293,"public void test27293() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test27294,"public void test27294() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertNotNull(tokenQueue0);
}",0,
project,0,test27295,"public void test27295() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    // Undeclared exception!
    try {
        tokenQueue0.chompToIgnoreCase("""");
        fail(""Expecting exception: StringIndexOutOfBoundsException"");
    } catch (StringIndexOutOfBoundsException e) {
    }
}",0,
project,0,test28296,"public void test28296() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test28297,"public void test28297() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test28298,"public void test28298() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test28299,"public void test28299() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test28300,"public void test28300() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test28301,"public void test28301() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertNotNull(tokenQueue0);
}",0,assertNotNull(tokenQueue0)
project,0,test28302,"public void test28302() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    String[] stringArray0 = new String[5];
    // Undeclared exception!
    try {
        tokenQueue0.chompToIgnoreCase(stringArray0[1]);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test29303,"public void test29303() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    assertEquals(""8rVVhr["", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test29304,"public void test29304() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test29305,"public void test29305() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test29306,"public void test29306() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    assertEquals('8', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test29307,"public void test29307() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test29308,"public void test29308() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    assertNotNull(tokenQueue0);
}",0,
project,0,test29309,"public void test29309() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    // Undeclared exception!
    try {
        tokenQueue0.chompTo((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test30310,"public void test30310() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test30311,"public void test30311() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test30312,"public void test30312() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test30313,"public void test30313() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test30314,"public void test30314() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test30315,"public void test30315() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertNotNull(tokenQueue0);
}",0,
project,0,test30316,"public void test30316() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    // Undeclared exception!
    try {
        tokenQueue0.addFirst((Character) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test31317,"public void test31317() throws Throwable {
    TokenQueue tokenQueue0 = null;
    try {
        tokenQueue0 = new TokenQueue((String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Object must not be null
        //
        verifyException(""org.jsoup.helper.Validate"", e);
    }
}",0,
project,0,test32318,"public void test32318() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    assertEquals('*', tokenQueue0.peek());
}",0,
project,0,test32319,"public void test32319() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test32320,"public void test32320() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    assertEquals(""*|"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test32321,"public void test32321() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test32322,"public void test32322() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test32323,"public void test32323() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    assertNotNull(tokenQueue0);
}",0,assertNotNull(tokenQueue0)
project,0,test32324,"public void test32324() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    char char0 = tokenQueue0.consume();
    assertEquals('|', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test32325,"public void test32325() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    char char0 = tokenQueue0.consume();
    assertEquals(""|"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test32326,"public void test32326() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    char char0 = tokenQueue0.consume();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test32327,"public void test32327() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    char char0 = tokenQueue0.consume();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertFalse(tokenQueue0.matchesWord())
project,0,test32328,"public void test32328() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    char char0 = tokenQueue0.consume();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test32329,"public void test32329() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    char char0 = tokenQueue0.consume();
    assertEquals('*', char0);
}",1,
project,0,test32330,"public void test32330() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    char char0 = tokenQueue0.consume();
    String string0 = tokenQueue0.consumeToIgnoreCase(""*|"");
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test32331,"public void test32331() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    char char0 = tokenQueue0.consume();
    String string0 = tokenQueue0.consumeToIgnoreCase(""*|"");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test32332,"public void test32332() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    char char0 = tokenQueue0.consume();
    String string0 = tokenQueue0.consumeToIgnoreCase(""*|"");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test32333,"public void test32333() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    char char0 = tokenQueue0.consume();
    String string0 = tokenQueue0.consumeToIgnoreCase(""*|"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test32334,"public void test32334() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    char char0 = tokenQueue0.consume();
    String string0 = tokenQueue0.consumeToIgnoreCase(""*|"");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test32335,"public void test32335() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    char char0 = tokenQueue0.consume();
    String string0 = tokenQueue0.consumeToIgnoreCase(""*|"");
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test32336,"public void test32336() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    char char0 = tokenQueue0.consume();
    String string0 = tokenQueue0.consumeToIgnoreCase(""*|"");
    assertEquals(""|"", string0);
}",0,
project,0,test33337,"public void test33337() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test33338,"public void test33338() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    assertEquals(':', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test33339,"public void test33339() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    assertEquals("":8l8 "", tokenQueue0.toString());
}",0,
project,0,test33340,"public void test33340() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test33341,"public void test33341() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test33342,"public void test33342() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    assertNotNull(tokenQueue0);
}",0,
project,0,test33343,"public void test33343() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    String string0 = tokenQueue0.consumeToIgnoreCase("":8l8 "");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test33344,"public void test33344() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    String string0 = tokenQueue0.consumeToIgnoreCase("":8l8 "");
    assertEquals(':', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test33345,"public void test33345() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    String string0 = tokenQueue0.consumeToIgnoreCase("":8l8 "");
    assertEquals("":8l8 "", tokenQueue0.toString());
}",0,
project,0,test33346,"public void test33346() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    String string0 = tokenQueue0.consumeToIgnoreCase("":8l8 "");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test33347,"public void test33347() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    String string0 = tokenQueue0.consumeToIgnoreCase("":8l8 "");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test33348,"public void test33348() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    String string0 = tokenQueue0.consumeToIgnoreCase("":8l8 "");
    assertNotNull(string0);
}",0,
project,0,test33349,"public void test33349() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    String string0 = tokenQueue0.consumeToIgnoreCase("":8l8 "");
    assertEquals("""", string0);
}",0,
project,0,test34350,"public void test34350() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    assertEquals(""PsQsP"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test34351,"public void test34351() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test34352,"public void test34352() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test34353,"public void test34353() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    assertEquals('P', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test34354,"public void test34354() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test34355,"public void test34355() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test34356,"public void test34356() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    String string0 = tokenQueue0.consumeWord();
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test34357,"public void test34357() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    String string0 = tokenQueue0.consumeWord();
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test34358,"public void test34358() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    String string0 = tokenQueue0.consumeWord();
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test34359,"public void test34359() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    String string0 = tokenQueue0.consumeWord();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test34360,"public void test34360() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    String string0 = tokenQueue0.consumeWord();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test34361,"public void test34361() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    String string0 = tokenQueue0.consumeWord();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test34362,"public void test34362() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    String string0 = tokenQueue0.consumeWord();
    assertEquals(""PsQsP"", string0);
}",0,assertNotNull(string0)
project,0,test34364,"public void test34364() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    String string0 = tokenQueue0.consumeWord();
    String string1 = tokenQueue0.consumeTo(""PsQsP"");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test34365,"public void test34365() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    String string0 = tokenQueue0.consumeWord();
    String string1 = tokenQueue0.consumeTo(""PsQsP"");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test34366,"public void test34366() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    String string0 = tokenQueue0.consumeWord();
    String string1 = tokenQueue0.consumeTo(""PsQsP"");
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test34367,"public void test34367() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    String string0 = tokenQueue0.consumeWord();
    String string1 = tokenQueue0.consumeTo(""PsQsP"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test34368,"public void test34368() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    String string0 = tokenQueue0.consumeWord();
    String string1 = tokenQueue0.consumeTo(""PsQsP"");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test34369,"public void test34369() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    String string0 = tokenQueue0.consumeWord();
    String string1 = tokenQueue0.consumeTo(""PsQsP"");
    assertNotNull(string1);
}",0,assertNotNull(string1)
project,0,test34370,"public void test34370() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    String string0 = tokenQueue0.consumeWord();
    String string1 = tokenQueue0.consumeTo(""PsQsP"");
    assertEquals("""", string1);
}",0,assertNotNull(string1)
project,0,test35371,"public void test35371() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test35372,"public void test35372() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test35373,"public void test35373() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test35374,"public void test35374() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test35375,"public void test35375() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test35376,"public void test35376() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertNotNull(tokenQueue0);
}",0,assertNotNull(tokenQueue0)
project,0,test35379,"public void test35379() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    assertEquals('!', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test35380,"public void test35380() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    assertEquals(""!"", tokenQueue0.toString());
}",0,
project,0,test35381,"public void test35381() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test35382,"public void test35382() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test35383,"public void test35383() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test35384,"public void test35384() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    boolean boolean0 = tokenQueue0.matchesWord();
    assertEquals('!', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test35385,"public void test35385() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    boolean boolean0 = tokenQueue0.matchesWord();
    assertEquals(""!"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test35386,"public void test35386() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    boolean boolean0 = tokenQueue0.matchesWord();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test35387,"public void test35387() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    boolean boolean0 = tokenQueue0.matchesWord();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test35388,"public void test35388() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    boolean boolean0 = tokenQueue0.matchesWord();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test35389,"public void test35389() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    boolean boolean0 = tokenQueue0.matchesWord();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test36390,"public void test36390() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test36391,"public void test36391() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test36392,"public void test36392() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    assertEquals(""Queue not long enough to consume sequence"", tokenQueue0.toString());
}",0,
project,0,test36393,"public void test36393() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test36394,"public void test36394() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    assertEquals('Q', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test36395,"public void test36395() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test36396,"public void test36396() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    String string0 = tokenQueue0.chompToIgnoreCase(""(@#fgg0X"");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test36397,"public void test36397() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    String string0 = tokenQueue0.chompToIgnoreCase(""(@#fgg0X"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test36398,"public void test36398() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    String string0 = tokenQueue0.chompToIgnoreCase(""(@#fgg0X"");
    assertFalse(tokenQueue0.matchesWord());
}",0,
project,0,test36399,"public void test36399() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    String string0 = tokenQueue0.chompToIgnoreCase(""(@#fgg0X"");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test36400,"public void test36400() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    String string0 = tokenQueue0.chompToIgnoreCase(""(@#fgg0X"");
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test36401,"public void test36401() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    String string0 = tokenQueue0.chompToIgnoreCase(""(@#fgg0X"");
    assertNotNull(string0);
}",0,
project,0,test36402,"public void test36402() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    String string0 = tokenQueue0.chompToIgnoreCase(""(@#fgg0X"");
    assertEquals(""Queue not long enough to consume sequence"", string0);
}",0,
project,0,test36403,"public void test36403() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    String string0 = tokenQueue0.chompToIgnoreCase(""(@#fgg0X"");
    boolean boolean0 = tokenQueue0.matchesWord();
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test36404,"public void test36404() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    String string0 = tokenQueue0.chompToIgnoreCase(""(@#fgg0X"");
    boolean boolean0 = tokenQueue0.matchesWord();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test36405,"public void test36405() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    String string0 = tokenQueue0.chompToIgnoreCase(""(@#fgg0X"");
    boolean boolean0 = tokenQueue0.matchesWord();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertFalse(tokenQueue0.matchesWord())
project,0,test36406,"public void test36406() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    String string0 = tokenQueue0.chompToIgnoreCase(""(@#fgg0X"");
    boolean boolean0 = tokenQueue0.matchesWord();
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test36407,"public void test36407() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    String string0 = tokenQueue0.chompToIgnoreCase(""(@#fgg0X"");
    boolean boolean0 = tokenQueue0.matchesWord();
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test36408,"public void test36408() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Queue not long enough to consume sequence"");
    String string0 = tokenQueue0.chompToIgnoreCase(""(@#fgg0X"");
    boolean boolean0 = tokenQueue0.matchesWord();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test37409,"public void test37409() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    assertEquals('P', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test37410,"public void test37410() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test37411,"public void test37411() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    assertEquals(""PsQsP"", tokenQueue0.toString());
}",0,
project,0,test37412,"public void test37412() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test37413,"public void test37413() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test37414,"public void test37414() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test37415,"public void test37415() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    boolean boolean0 = tokenQueue0.matchesWord();
    assertEquals('P', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test37416,"public void test37416() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    boolean boolean0 = tokenQueue0.matchesWord();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test37417,"public void test37417() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    boolean boolean0 = tokenQueue0.matchesWord();
    assertEquals(""PsQsP"", tokenQueue0.toString());
}",0,
project,0,test37418,"public void test37418() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    boolean boolean0 = tokenQueue0.matchesWord();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test37419,"public void test37419() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    boolean boolean0 = tokenQueue0.matchesWord();
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test37420,"public void test37420() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""PsQsP"");
    boolean boolean0 = tokenQueue0.matchesWord();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test38421,"public void test38421() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertEquals("" "", tokenQueue0.toString());
}",0,
project,0,test38422,"public void test38422() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test38423,"public void test38423() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test38424,"public void test38424() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertEquals(' ', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test38425,"public void test38425() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test38426,"public void test38426() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertNotNull(tokenQueue0);
}",0,
project,0,test38427,"public void test38427() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertEquals("" "", tokenQueue0.toString());
}",0,
project,0,test38428,"public void test38428() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test38429,"public void test38429() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertFalse(tokenQueue0.matchesWord())
project,0,test38430,"public void test38430() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertEquals(' ', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test38431,"public void test38431() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test38432,"public void test38432() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test39433,"public void test39433() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test39434,"public void test39434() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test39435,"public void test39435() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    assertEquals(""$79t<8"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test39436,"public void test39436() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test39437,"public void test39437() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    assertEquals('$', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test39438,"public void test39438() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test39439,"public void test39439() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test39440,"public void test39440() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test39441,"public void test39441() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertEquals(""$79t<8"", tokenQueue0.toString());
}",0,
project,0,test39442,"public void test39442() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertFalse(tokenQueue0.matchesWord())
project,0,test39443,"public void test39443() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertEquals('$', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test39444,"public void test39444() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""$79t<8"");
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test40445,"public void test40445() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    assertEquals(""8rVVhr["", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test40446,"public void test40446() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test40447,"public void test40447() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test40448,"public void test40448() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    assertEquals('8', tokenQueue0.peek());
}",0,
project,0,test40449,"public void test40449() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test40450,"public void test40450() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    assertNotNull(tokenQueue0);
}",0,
project,0,test40451,"public void test40451() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    String string0 = tokenQueue0.consumeElementSelector();
    assertEquals(""["", tokenQueue0.toString());
}",0,
project,0,test40452,"public void test40452() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    String string0 = tokenQueue0.consumeElementSelector();
    assertEquals('[', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test40453,"public void test40453() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    String string0 = tokenQueue0.consumeElementSelector();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test40454,"public void test40454() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    String string0 = tokenQueue0.consumeElementSelector();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test40455,"public void test40455() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    String string0 = tokenQueue0.consumeElementSelector();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test40456,"public void test40456() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    String string0 = tokenQueue0.consumeElementSelector();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test40457,"public void test40457() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    String string0 = tokenQueue0.consumeElementSelector();
    assertEquals(""8rVVhr"", string0);
}",0,assertNotNull(string0)
project,0,test40458,"public void test40458() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    String string0 = tokenQueue0.consumeElementSelector();
    tokenQueue0.advance();
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test40459,"public void test40459() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    String string0 = tokenQueue0.consumeElementSelector();
    tokenQueue0.advance();
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test40460,"public void test40460() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    String string0 = tokenQueue0.consumeElementSelector();
    tokenQueue0.advance();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test40461,"public void test40461() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    String string0 = tokenQueue0.consumeElementSelector();
    tokenQueue0.advance();
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test40462,"public void test40462() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    String string0 = tokenQueue0.consumeElementSelector();
    tokenQueue0.advance();
    assertFalse(tokenQueue0.matchesWord());
}",0,
project,0,test40463,"public void test40463() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    String string0 = tokenQueue0.consumeElementSelector();
    tokenQueue0.advance();
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test40464,"public void test40464() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    String string0 = tokenQueue0.consumeElementSelector();
    tokenQueue0.advance();
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test40465,"public void test40465() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    String string0 = tokenQueue0.consumeElementSelector();
    tokenQueue0.advance();
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test40466,"public void test40466() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    String string0 = tokenQueue0.consumeElementSelector();
    tokenQueue0.advance();
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test40467,"public void test40467() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    String string0 = tokenQueue0.consumeElementSelector();
    tokenQueue0.advance();
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test40468,"public void test40468() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""8rVVhr["");
    String string0 = tokenQueue0.consumeElementSelector();
    tokenQueue0.advance();
    boolean boolean0 = tokenQueue0.matchesWhitespace();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test41469,"public void test41469() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    assertEquals("":8l8 "", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test41470,"public void test41470() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test41471,"public void test41471() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    assertEquals(':', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test41472,"public void test41472() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test41473,"public void test41473() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test41474,"public void test41474() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    assertNotNull(tokenQueue0);
}",0,
project,0,test41475,"public void test41475() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    boolean boolean0 = tokenQueue0.matchChomp(""|Ey7@T|GTw?"");
    assertEquals("":8l8 "", tokenQueue0.toString());
}",0,
project,0,test41476,"public void test41476() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    boolean boolean0 = tokenQueue0.matchChomp(""|Ey7@T|GTw?"");
    assertFalse(tokenQueue0.matchesWord());
}",0,
project,0,test41477,"public void test41477() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    boolean boolean0 = tokenQueue0.matchChomp(""|Ey7@T|GTw?"");
    assertEquals(':', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test41478,"public void test41478() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    boolean boolean0 = tokenQueue0.matchChomp(""|Ey7@T|GTw?"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test41479,"public void test41479() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    boolean boolean0 = tokenQueue0.matchChomp(""|Ey7@T|GTw?"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test41480,"public void test41480() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("":8l8 "");
    boolean boolean0 = tokenQueue0.matchChomp(""|Ey7@T|GTw?"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test42481,"public void test42481() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesWord());
}",0,
project,0,test42482,"public void test42482() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test42483,"public void test42483() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test42484,"public void test42484() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test42485,"public void test42485() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test42486,"public void test42486() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertNotNull(tokenQueue0);
}",0,
project,0,test42487,"public void test42487() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    boolean boolean0 = tokenQueue0.matchChomp("""");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertFalse(tokenQueue0.matchesWord())
project,0,test42488,"public void test42488() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    boolean boolean0 = tokenQueue0.matchChomp("""");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test42489,"public void test42489() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    boolean boolean0 = tokenQueue0.matchChomp("""");
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test42490,"public void test42490() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    boolean boolean0 = tokenQueue0.matchChomp("""");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test42491,"public void test42491() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    boolean boolean0 = tokenQueue0.matchChomp("""");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test42492,"public void test42492() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    boolean boolean0 = tokenQueue0.matchChomp("""");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test43493,"public void test43493() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test43494,"public void test43494() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test43495,"public void test43495() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test43496,"public void test43496() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test43497,"public void test43497() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test43498,"public void test43498() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertNotNull(tokenQueue0);
}",0,
project,0,test43501,"public void test43501() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test43502,"public void test43502() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    assertFalse(tokenQueue0.matchesWord());
}",0,assertFalse(tokenQueue0.matchesWord())
project,0,test43503,"public void test43503() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    assertEquals(""!"", tokenQueue0.toString());
}",0,
project,0,test43504,"public void test43504() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    assertEquals('!', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test43505,"public void test43505() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test43506,"public void test43506() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    char[] charArray0 = new char[6];
    charArray0[0] = '!';
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertArrayEquals(new char[] { '!', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test43507,"public void test43507() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    char[] charArray0 = new char[6];
    charArray0[0] = '!';
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertEquals(6, charArray0.length);
}",0,
project,0,test43508,"public void test43508() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    char[] charArray0 = new char[6];
    charArray0[0] = '!';
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test43509,"public void test43509() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    char[] charArray0 = new char[6];
    charArray0[0] = '!';
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test43510,"public void test43510() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    char[] charArray0 = new char[6];
    charArray0[0] = '!';
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertEquals(""!"", tokenQueue0.toString());
}",0,
project,0,test43511,"public void test43511() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    char[] charArray0 = new char[6];
    charArray0[0] = '!';
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertEquals('!', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test43512,"public void test43512() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    char[] charArray0 = new char[6];
    charArray0[0] = '!';
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test43513,"public void test43513() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    Character character0 = new Character('!');
    tokenQueue0.addFirst(character0);
    char[] charArray0 = new char[6];
    charArray0[0] = '!';
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test44514,"public void test44514() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertFalse(tokenQueue0.matchesWord());
}",0,
project,0,test44515,"public void test44515() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertEquals("" "", tokenQueue0.toString());
}",0,
project,0,test44516,"public void test44516() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertEquals(' ', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test44517,"public void test44517() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test44518,"public void test44518() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test44519,"public void test44519() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertNotNull(tokenQueue0);
}",0,
project,0,test44520,"public void test44520() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    char[] charArray0 = new char[9];
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertArrayEquals(new char[] { '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000' }, charArray0);
}",0,
project,0,test44521,"public void test44521() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    char[] charArray0 = new char[9];
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertEquals(9, charArray0.length);
}",0,
project,0,test44522,"public void test44522() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    char[] charArray0 = new char[9];
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertFalse(tokenQueue0.matchesWord());
}",0,assertFalse(tokenQueue0.matchesWord())
project,0,test44523,"public void test44523() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    char[] charArray0 = new char[9];
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertEquals("" "", tokenQueue0.toString());
}",0,
project,0,test44524,"public void test44524() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    char[] charArray0 = new char[9];
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertEquals(' ', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test44525,"public void test44525() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    char[] charArray0 = new char[9];
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test44526,"public void test44526() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    char[] charArray0 = new char[9];
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test44527,"public void test44527() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    char[] charArray0 = new char[9];
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test45528,"public void test45528() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""=BxLN+"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test45529,"public void test45529() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""=BxLN+"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test45530,"public void test45530() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""=BxLN+"");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test45531,"public void test45531() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""=BxLN+"");
    assertEquals('=', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test45532,"public void test45532() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""=BxLN+"");
    assertEquals(""=BxLN+"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test45533,"public void test45533() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""=BxLN+"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test45534,"public void test45534() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""=BxLN+"");
    String[] stringArray0 = new String[1];
    stringArray0[0] = """";
    boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    assertEquals(1, stringArray0.length);
}",0,
project,0,test45535,"public void test45535() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""=BxLN+"");
    String[] stringArray0 = new String[1];
    stringArray0[0] = """";
    boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test45536,"public void test45536() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""=BxLN+"");
    String[] stringArray0 = new String[1];
    stringArray0[0] = """";
    boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test45537,"public void test45537() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""=BxLN+"");
    String[] stringArray0 = new String[1];
    stringArray0[0] = """";
    boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test45538,"public void test45538() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""=BxLN+"");
    String[] stringArray0 = new String[1];
    stringArray0[0] = """";
    boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    assertEquals('=', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test45539,"public void test45539() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""=BxLN+"");
    String[] stringArray0 = new String[1];
    stringArray0[0] = """";
    boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    assertEquals(""=BxLN+"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test45540,"public void test45540() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""=BxLN+"");
    String[] stringArray0 = new String[1];
    stringArray0[0] = """";
    boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test46541,"public void test46541() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test46542,"public void test46542() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test46543,"public void test46543() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    assertEquals(""-"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test46544,"public void test46544() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test46545,"public void test46545() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    assertEquals('-', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test46546,"public void test46546() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test46547,"public void test46547() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test46548,"public void test46548() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test46549,"public void test46549() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test46550,"public void test46550() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test46551,"public void test46551() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test46552,"public void test46552() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test46553,"public void test46553() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertEquals(""-"", string0);
}",0,assertNotNull(string0)
project,0,test46554,"public void test46554() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    String string0 = tokenQueue0.consumeCssIdentifier();
    String[] stringArray0 = new String[6];
    stringArray0[0] = ""-"";
    // Undeclared exception!
    try {
        tokenQueue0.matchesAny(stringArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test47555,"public void test47555() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""       "");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test47556,"public void test47556() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""       "");
    assertEquals(' ', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test47557,"public void test47557() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""       "");
    assertEquals(""       "", tokenQueue0.toString());
}",0,
project,0,test47558,"public void test47558() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""       "");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test47559,"public void test47559() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""       "");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test47560,"public void test47560() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""       "");
    assertNotNull(tokenQueue0);
}",0,
project,0,test47561,"public void test47561() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""       "");
    String[] stringArray0 = new String[0];
    boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    assertEquals(0, stringArray0.length);
}",0,
project,0,test47562,"public void test47562() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""       "");
    String[] stringArray0 = new String[0];
    boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    assertFalse(tokenQueue0.matchesWord());
}",0,
project,0,test47563,"public void test47563() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""       "");
    String[] stringArray0 = new String[0];
    boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    assertEquals(' ', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test47564,"public void test47564() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""       "");
    String[] stringArray0 = new String[0];
    boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    assertEquals(""       "", tokenQueue0.toString());
}",0,
project,0,test47565,"public void test47565() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""       "");
    String[] stringArray0 = new String[0];
    boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test47566,"public void test47566() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""       "");
    String[] stringArray0 = new String[0];
    boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test47567,"public void test47567() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""       "");
    String[] stringArray0 = new String[0];
    boolean boolean0 = tokenQueue0.matchesAny(stringArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test48568,"public void test48568() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test48569,"public void test48569() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertEquals(' ', tokenQueue0.peek());
}",0,
project,0,test48570,"public void test48570() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertEquals("" "", tokenQueue0.toString());
}",0,
project,0,test48571,"public void test48571() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test48572,"public void test48572() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test48573,"public void test48573() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertNotNull(tokenQueue0);
}",0,
project,0,test48574,"public void test48574() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test48575,"public void test48575() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,
project,0,test48576,"public void test48576() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test48577,"public void test48577() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test48578,"public void test48578() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    assertFalse(tokenQueue0.matchesWord());
}",0,
project,0,test48579,"public void test48579() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    assertNotNull(string0);
}",0,
project,0,test48580,"public void test48580() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    assertEquals("" "", string0);
}",0,
project,0,test48581,"public void test48581() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    boolean boolean0 = tokenQueue0.isEmpty();
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test48582,"public void test48582() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    boolean boolean0 = tokenQueue0.isEmpty();
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test48583,"public void test48583() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    boolean boolean0 = tokenQueue0.isEmpty();
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test48584,"public void test48584() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    boolean boolean0 = tokenQueue0.isEmpty();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test48585,"public void test48585() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    boolean boolean0 = tokenQueue0.isEmpty();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test48586,"public void test48586() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    boolean boolean0 = tokenQueue0.isEmpty();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test49587,"public void test49587() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test49588,"public void test49588() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test49589,"public void test49589() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test49590,"public void test49590() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertEquals(' ', tokenQueue0.peek());
}",0,
project,0,test49591,"public void test49591() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertEquals("" "", tokenQueue0.toString());
}",0,
project,0,test49592,"public void test49592() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertNotNull(tokenQueue0);
}",0,
project,0,test49593,"public void test49593() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    boolean boolean0 = tokenQueue0.isEmpty();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertFalse(tokenQueue0.matchesWord())
project,0,test49594,"public void test49594() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    boolean boolean0 = tokenQueue0.isEmpty();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test49595,"public void test49595() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    boolean boolean0 = tokenQueue0.isEmpty();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test49596,"public void test49596() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    boolean boolean0 = tokenQueue0.isEmpty();
    assertEquals(' ', tokenQueue0.peek());
}",0,
project,0,test49597,"public void test49597() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    boolean boolean0 = tokenQueue0.isEmpty();
    assertEquals("" "", tokenQueue0.toString());
}",0,
project,0,test49598,"public void test49598() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    boolean boolean0 = tokenQueue0.isEmpty();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test50599,"public void test50599() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    assertEquals('J', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test50600,"public void test50600() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test50601,"public void test50601() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertFalse(tokenQueue0.matchesWord())
project,0,test50602,"public void test50602() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    assertEquals(""Js'S9{B9xJrJs'S9{B9xJr"", tokenQueue0.toString());
}",0,
project,0,test50603,"public void test50603() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test50604,"public void test50604() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test50605,"public void test50605() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    String string0 = tokenQueue0.remainder();
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test50606,"public void test50606() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    String string0 = tokenQueue0.remainder();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test50607,"public void test50607() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    String string0 = tokenQueue0.remainder();
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test50608,"public void test50608() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    String string0 = tokenQueue0.remainder();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test50609,"public void test50609() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    String string0 = tokenQueue0.remainder();
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test50610,"public void test50610() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    String string0 = tokenQueue0.remainder();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test50611,"public void test50611() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    String string0 = tokenQueue0.remainder();
    assertEquals(""Js'S9{B9xJrJs'S9{B9xJr"", string0);
}",0,
project,0,test51612,"public void test51612() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""|"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test51613,"public void test51613() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""|"");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test51614,"public void test51614() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""|"");
    assertEquals('|', tokenQueue0.peek());
}",0,
project,0,test51615,"public void test51615() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""|"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test51616,"public void test51616() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""|"");
    assertEquals(""|"", tokenQueue0.toString());
}",0,
project,0,test51617,"public void test51617() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""|"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test51618,"public void test51618() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""|"");
    boolean boolean0 = tokenQueue0.matches("""");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test51619,"public void test51619() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""|"");
    boolean boolean0 = tokenQueue0.matches("""");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertFalse(tokenQueue0.matchesWord())
project,0,test51620,"public void test51620() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""|"");
    boolean boolean0 = tokenQueue0.matches("""");
    assertEquals('|', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test51621,"public void test51621() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""|"");
    boolean boolean0 = tokenQueue0.matches("""");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test51622,"public void test51622() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""|"");
    boolean boolean0 = tokenQueue0.matches("""");
    assertEquals(""|"", tokenQueue0.toString());
}",0,
project,0,test51623,"public void test51623() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""|"");
    boolean boolean0 = tokenQueue0.matches("""");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test52624,"public void test52624() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test52625,"public void test52625() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertEquals("" "", tokenQueue0.toString());
}",0,
project,0,test52626,"public void test52626() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test52627,"public void test52627() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test52628,"public void test52628() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertEquals(' ', tokenQueue0.peek());
}",0,
project,0,test52629,"public void test52629() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    assertNotNull(tokenQueue0);
}",0,
project,0,test52630,"public void test52630() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test52631,"public void test52631() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test52632,"public void test52632() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    assertFalse(tokenQueue0.matchesWord());
}",0,
project,0,test52633,"public void test52633() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    assertEquals('\u0000', tokenQueue0.peek());
}",0,
project,0,test52634,"public void test52634() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test52635,"public void test52635() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    assertNotNull(string0);
}",0,
project,0,test52636,"public void test52636() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    assertEquals("" "", string0);
}",0,
project,0,test52638,"public void test52638() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    String string1 = tokenQueue0.consumeAttributeKey();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test52639,"public void test52639() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    String string1 = tokenQueue0.consumeAttributeKey();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test52640,"public void test52640() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    String string1 = tokenQueue0.consumeAttributeKey();
    assertFalse(tokenQueue0.matchesWord());
}",0,
project,0,test52641,"public void test52641() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    String string1 = tokenQueue0.consumeAttributeKey();
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test52642,"public void test52642() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    String string1 = tokenQueue0.consumeAttributeKey();
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test52643,"public void test52643() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    String string1 = tokenQueue0.consumeAttributeKey();
    assertNotNull(string1);
}",0,assertNotNull(string1)
project,0,test52644,"public void test52644() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeToIgnoreCase(""  "");
    String string1 = tokenQueue0.consumeAttributeKey();
    assertEquals("""", string1);
}",0,assertNotNull(string1)
project,0,test53645,"public void test53645() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test53646,"public void test53646() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    assertEquals(""kBNV|dXq&bBD1O"", tokenQueue0.toString());
}",0,
project,0,test53647,"public void test53647() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test53648,"public void test53648() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test53649,"public void test53649() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    assertEquals('k', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test53650,"public void test53650() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test53651,"public void test53651() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test53652,"public void test53652() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test53653,"public void test53653() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertEquals(""|dXq&bBD1O"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test53654,"public void test53654() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test53655,"public void test53655() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertEquals('|', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test53656,"public void test53656() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test53657,"public void test53657() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""kBNV|dXq&bBD1O"");
    String string0 = tokenQueue0.consumeCssIdentifier();
    assertEquals(""kBNV"", string0);
}",0,assertNotNull(string0)
project,0,test54658,"public void test54658() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""et1*|7ympryv"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test54659,"public void test54659() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""et1*|7ympryv"");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test54660,"public void test54660() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""et1*|7ympryv"");
    assertEquals(""et1*|7ympryv"", tokenQueue0.toString());
}",0,
project,0,test54661,"public void test54661() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""et1*|7ympryv"");
    assertEquals('e', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test54662,"public void test54662() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""et1*|7ympryv"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test54663,"public void test54663() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""et1*|7ympryv"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test54664,"public void test54664() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""et1*|7ympryv"");
    String string0 = tokenQueue0.consumeElementSelector();
    assertEquals('', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test54665,"public void test54665() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""et1*|7ympryv"");
    String string0 = tokenQueue0.consumeElementSelector();
    assertFalse(tokenQueue0.matchesWord());
}",0,
project,0,test54666,"public void test54666() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""et1*|7ympryv"");
    String string0 = tokenQueue0.consumeElementSelector();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test54667,"public void test54667() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""et1*|7ympryv"");
    String string0 = tokenQueue0.consumeElementSelector();
    assertEquals(""7ympryv"", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test54668,"public void test54668() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""et1*|7ympryv"");
    String string0 = tokenQueue0.consumeElementSelector();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test54669,"public void test54669() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""et1*|7ympryv"");
    String string0 = tokenQueue0.consumeElementSelector();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test54670,"public void test54670() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""et1*|7ympryv"");
    String string0 = tokenQueue0.consumeElementSelector();
    assertEquals(""et1*|"", string0);
}",0,assertNotNull(string0)
project,0,test55671,"public void test55671() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test55672,"public void test55672() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    assertEquals('-', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test55673,"public void test55673() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,
project,0,test55674,"public void test55674() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    assertEquals(""-"", tokenQueue0.toString());
}",0,
project,0,test55675,"public void test55675() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test55676,"public void test55676() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    assertNotNull(tokenQueue0);
}",0,
project,0,test55677,"public void test55677() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    String string0 = tokenQueue0.consumeTagName();
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test55678,"public void test55678() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    String string0 = tokenQueue0.consumeTagName();
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test55679,"public void test55679() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    String string0 = tokenQueue0.consumeTagName();
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test55680,"public void test55680() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    String string0 = tokenQueue0.consumeTagName();
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test55681,"public void test55681() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    String string0 = tokenQueue0.consumeTagName();
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test55682,"public void test55682() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    String string0 = tokenQueue0.consumeTagName();
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test55683,"public void test55683() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    String string0 = tokenQueue0.consumeTagName();
    assertEquals(""-"", string0);
}",0,assertNotNull(string0)
project,0,test56684,"public void test56684() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    assertEquals(""Js'S9{B9xJrJs'S9{B9xJr "", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test56685,"public void test56685() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test56686,"public void test56686() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test56687,"public void test56687() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    assertEquals('J', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test56688,"public void test56688() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    assertTrue(tokenQueue0.matchesWord());
}",0,
project,0,test56689,"public void test56689() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    assertNotNull(tokenQueue0);
}",0,
project,0,test56692,"public void test56692() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    assertEquals('H', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test56693,"public void test56693() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test56694,"public void test56694() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test56695,"public void test56695() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    assertTrue(tokenQueue0.matchesWord());
}",0,assertFalse(tokenQueue0.matchesWord())
project,0,test56696,"public void test56696() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    assertEquals(""HJs'S9{B9xJrJs'S9{B9xJr "", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test56697,"public void test56697() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('7', 'H');
    assertEquals(""Js'S9{B9xJrJs'S9{B9xJr "", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test56698,"public void test56698() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('7', 'H');
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test56699,"public void test56699() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('7', 'H');
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertFalse(tokenQueue0.matchesStartTag())
project,0,test56700,"public void test56700() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('7', 'H');
    assertEquals('J', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test56701,"public void test56701() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('7', 'H');
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test56702,"public void test56702() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('7', 'H');
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test56703,"public void test56703() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('7', 'H');
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test57704,"public void test57704() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test57705,"public void test57705() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test57706,"public void test57706() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    assertEquals('J', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test57707,"public void test57707() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    assertEquals(""Js'S9{B9xJrJs'S9{B9xJr "", tokenQueue0.toString());
}",0,
project,0,test57708,"public void test57708() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test57709,"public void test57709() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    assertNotNull(tokenQueue0);
}",0,
project,0,test57712,"public void test57712() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test57713,"public void test57713() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    assertEquals('H', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test57714,"public void test57714() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test57715,"public void test57715() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    assertEquals(""HJs'S9{B9xJrJs'S9{B9xJr "", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test57716,"public void test57716() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test57717,"public void test57717() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('H', 'H');
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test57718,"public void test57718() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('H', 'H');
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test57719,"public void test57719() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('H', 'H');
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test57720,"public void test57720() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('H', 'H');
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test57721,"public void test57721() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('H', 'H');
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test57722,"public void test57722() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('H', 'H');
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test57723,"public void test57723() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr "");
    Character character0 = Character.valueOf('H');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('H', 'H');
    assertEquals(""Js'S9{B9xJrJs'S9{B9xJr "", string0);
}",0,assertNotNull(string0)
project,0,test58724,"public void test58724() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""IsN%4W93r0-\"""");
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test58725,"public void test58725() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""IsN%4W93r0-\"""");
    assertEquals('I', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test58726,"public void test58726() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""IsN%4W93r0-\"""");
    assertEquals(""IsN%4W93r0-\"""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test58727,"public void test58727() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""IsN%4W93r0-\"""");
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test58728,"public void test58728() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""IsN%4W93r0-\"""");
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test58729,"public void test58729() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""IsN%4W93r0-\"""");
    assertNotNull(tokenQueue0);
}",0,
project,0,test58732,"public void test58732() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""IsN%4W93r0-\"""");
    Character character0 = new Character('*');
    tokenQueue0.addFirst(character0);
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test58733,"public void test58733() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""IsN%4W93r0-\"""");
    Character character0 = new Character('*');
    tokenQueue0.addFirst(character0);
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test58734,"public void test58734() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""IsN%4W93r0-\"""");
    Character character0 = new Character('*');
    tokenQueue0.addFirst(character0);
    assertEquals('*', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test58735,"public void test58735() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""IsN%4W93r0-\"""");
    Character character0 = new Character('*');
    tokenQueue0.addFirst(character0);
    assertEquals(""*IsN%4W93r0-\"""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test58736,"public void test58736() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""IsN%4W93r0-\"""");
    Character character0 = new Character('*');
    tokenQueue0.addFirst(character0);
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test58737,"public void test58737() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""IsN%4W93r0-\"""");
    Character character0 = new Character('*');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('*', '\uDC05');
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test58738,"public void test58738() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""IsN%4W93r0-\"""");
    Character character0 = new Character('*');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('*', '\uDC05');
    assertFalse(tokenQueue0.matchesStartTag());
}",0,assertTrue(tokenQueue0.matchesStartTag())
project,0,test58739,"public void test58739() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""IsN%4W93r0-\"""");
    Character character0 = new Character('*');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('*', '\uDC05');
    assertFalse(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test58740,"public void test58740() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""IsN%4W93r0-\"""");
    Character character0 = new Character('*');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('*', '\uDC05');
    assertEquals('\u0000', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test58741,"public void test58741() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""IsN%4W93r0-\"""");
    Character character0 = new Character('*');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('*', '\uDC05');
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test58742,"public void test58742() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""IsN%4W93r0-\"""");
    Character character0 = new Character('*');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('*', '\uDC05');
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test58743,"public void test58743() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""IsN%4W93r0-\"""");
    Character character0 = new Character('*');
    tokenQueue0.addFirst(character0);
    String string0 = tokenQueue0.chompBalanced('*', '\uDC05');
    assertEquals(""IsN%4W93r0-"", string0);
}",0,assertNotNull(string0)
project,0,test59744,"public void test59744() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""       "");
    String[] stringArray0 = new String[0];
    tokenQueue0.consumeToAny(stringArray0);
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test60745,"public void test60745() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    tokenQueue0.consumeCssIdentifier();
    String[] stringArray0 = new String[6];
    tokenQueue0.consumeToAny(stringArray0);
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test61746,"public void test61746() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    tokenQueue0.addFirst(""Js'S9{BAxJr"");
    tokenQueue0.consumeToIgnoreCase(""  "");
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test62747,"public void test62747() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    tokenQueue0.consumeToIgnoreCase(""  "");
    tokenQueue0.consumeElementSelector();
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test63748,"public void test63748() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""xc?1>u8j]awS\""t\""PufP"");
    tokenQueue0.chompTo("""");
    assertEquals('x', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test64749,"public void test64749() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""M<7u"");
    // Undeclared exception!
    try {
        tokenQueue0.consume(""Js'k9{BAx^Vwr"");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Queue did not match expected sequence
        //
        verifyException(""org.jsoup.parser.TokenQueue"", e);
    }
}",0,
project,0,test65750,"public void test65750() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    tokenQueue0.consume("""");
    assertEquals(' ', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test66751,"public void test66751() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ET1.K7YMPRyV"");
    tokenQueue0.consumeElementSelector();
    tokenQueue0.chompTo(""ET1"");
    tokenQueue0.advance();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test67752,"public void test67752() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""-"");
    tokenQueue0.consumeCssIdentifier();
    tokenQueue0.consumeWord();
    assertEquals("""", tokenQueue0.toString());
}",0,
project,0,test68753,"public void test68753() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""       "");
    boolean boolean0 = tokenQueue0.consumeWhitespace();
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test68754,"public void test68754() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""       "");
    boolean boolean0 = tokenQueue0.consumeWhitespace();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test69755,"public void test69755() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""M<Ru"");
    boolean boolean0 = tokenQueue0.consumeWhitespace();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test69756,"public void test69756() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""M<Ru"");
    boolean boolean0 = tokenQueue0.consumeWhitespace();
    assertTrue(tokenQueue0.matchesWord());
}",0,assertTrue(tokenQueue0.matchesWord())
project,0,test70757,"public void test70757() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""M<Ru"");
    tokenQueue0.consumeWord();
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertEquals('<', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test70758,"public void test70758() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""M<Ru"");
    tokenQueue0.consumeWord();
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test71759,"public void test71759() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""M<7u"");
    tokenQueue0.consumeElementSelector();
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertEquals('<', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test71760,"public void test71760() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""M<7u"");
    tokenQueue0.consumeElementSelector();
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test72761,"public void test72761() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""M<7u"");
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test72762,"public void test72762() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""M<7u"");
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertEquals('M', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
project,0,test73763,"public void test73763() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertEquals(' ', tokenQueue0.peek());
}",0,
project,0,test73764,"public void test73764() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    boolean boolean0 = tokenQueue0.matchesStartTag();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test74765,"public void test74765() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    char[] charArray0 = new char[9];
    boolean boolean0 = tokenQueue0.matchesAny(charArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test75766,"public void test75766() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeTagName();
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test75767,"public void test75767() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    String string0 = tokenQueue0.consumeTagName();
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test76768,"public void test76768() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""       "");
    String[] stringArray0 = new String[6];
    stringArray0[0] = ""       "";
    String string0 = tokenQueue0.consumeToAny(stringArray0);
    assertEquals("""", string0);
}",0,
project,0,test76769,"public void test76769() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""       "");
    String[] stringArray0 = new String[6];
    stringArray0[0] = ""       "";
    String string0 = tokenQueue0.consumeToAny(stringArray0);
    assertFalse(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test77770,"public void test77770() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    assertTrue(tokenQueue0.isEmpty());
}",0,assertTrue(tokenQueue0.isEmpty())
project,0,test77771,"public void test77771() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    char char0 = tokenQueue0.peek();
    assertEquals('\u0000', char0);
}",0,assertNotNull(char0)
project,0,test78772,"public void test78772() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""ZPENtVIS-1O4V#f"");
    char char0 = tokenQueue0.peek();
    assertEquals('Z', char0);
}",0,assertNotNull(char0)
project,0,test79773,"public void test79773() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""Js'S9{B9xJrJs'S9{B9xJr"");
    Character character0 = new Character('\'');
    tokenQueue0.addFirst(character0);
    tokenQueue0.chompBalanced('\'', '\'');
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test80774,"public void test80774() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("""");
    String string0 = tokenQueue0.toString();
    assertEquals("""", string0);
}",0,
project,0,test81775,"public void test81775() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue(""*|"");
    tokenQueue0.chompToIgnoreCase(""*|"");
    assertEquals("""", tokenQueue0.toString());
}",0,assertNotNull(tokenQueue0.toString())
project,0,test82776,"public void test82776() throws Throwable {
    TokenQueue tokenQueue0 = new TokenQueue("" "");
    tokenQueue0.matchesCS(""Js'S9{BAxJr"");
    assertEquals(' ', tokenQueue0.peek());
}",0,assertNotNull(tokenQueue0.peek())
