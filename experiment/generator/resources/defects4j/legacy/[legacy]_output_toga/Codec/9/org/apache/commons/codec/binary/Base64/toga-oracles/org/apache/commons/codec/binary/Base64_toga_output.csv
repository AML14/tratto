project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) 123;
    boolean boolean0 = Base64.isBase64(byteArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test011,"public void test011() throws Throwable {
    Base64 base64_0 = new Base64(0);
    byte[] byteArray0 = new byte[7];
    byteArray0[3] = (byte) (-106);
    byte[] byteArray1 = base64_0.encode(byteArray0);
    assertEquals(12, byteArray1.length);
}",0,
project,0,test022,"public void test022() throws Throwable {
    byte[] byteArray0 = new byte[0];
    BigInteger bigInteger0 = Base64.decodeInteger(byteArray0);
    byte[] byteArray1 = Base64.toIntegerBytes(bigInteger0);
    assertEquals(0, byteArray1.length);
}",0,
project,0,test033,"public void test033() throws Throwable {
    boolean boolean0 = Base64.isBase64("""");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test044,"public void test044() throws Throwable {
    Base64 base64_0 = new Base64();
    byte[] byteArray0 = new byte[0];
    String string0 = base64_0.encodeToString(byteArray0);
    assertFalse(base64_0.isUrlSafe());
}",0,assertFalse(base64_0.isUrlSafe())
project,0,test045,"public void test045() throws Throwable {
    Base64 base64_0 = new Base64();
    byte[] byteArray0 = new byte[0];
    String string0 = base64_0.encodeToString(byteArray0);
    assertEquals("""", string0);
}",0,
project,0,test056,"public void test056() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ONE;
    byte[] byteArray0 = Base64.encodeInteger(bigInteger0);
    assertArrayEquals(new byte[] { (byte) 65, (byte) 81, (byte) 61, (byte) 61 }, byteArray0);
}",0,
project,0,test057,"public void test057() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ONE;
    byte[] byteArray0 = Base64.encodeInteger(bigInteger0);
    assertEquals(4, byteArray0.length);
}",0,
project,0,test068,"public void test068() throws Throwable {
    String string0 = Base64.encodeBase64URLSafeString((byte[]) null);
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test079,"public void test079() throws Throwable {
    Base64 base64_0 = new Base64();
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = base64_0.encode(byteArray0);
    String string0 = Base64.encodeBase64URLSafeString(byteArray1);
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test0710,"public void test0710() throws Throwable {
    Base64 base64_0 = new Base64();
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = base64_0.encode(byteArray0);
    String string0 = Base64.encodeBase64URLSafeString(byteArray1);
    assertFalse(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test0711,"public void test0711() throws Throwable {
    Base64 base64_0 = new Base64();
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = base64_0.encode(byteArray0);
    String string0 = Base64.encodeBase64URLSafeString(byteArray1);
    assertSame(byteArray1, byteArray0);
}",0,
project,0,test0812,"public void test0812() throws Throwable {
    byte[] byteArray0 = Base64.encodeBase64URLSafe((byte[]) null);
    assertNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test0913,"public void test0913() throws Throwable {
    byte[] byteArray0 = new byte[1];
    String string0 = Base64.encodeBase64String(byteArray0);
    assertEquals(""AA=="", string0);
}",0,assertNotNull(string0)
project,0,test1014,"public void test1014() throws Throwable {
    byte[] byteArray0 = new byte[0];
    String string0 = Base64.encodeBase64String(byteArray0);
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test1115,"public void test1115() throws Throwable {
    byte[] byteArray0 = Base64.encodeBase64Chunked((byte[]) null);
    assertNull(byteArray0);
}",0,
project,0,test1216,"public void test1216() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = Base64.encodeBase64Chunked(byteArray0);
    assertEquals(0, byteArray1.length);
}",0,
project,0,test1317,"public void test1317() throws Throwable {
    byte[] byteArray0 = Base64.encodeBase64((byte[]) null, true, false);
    assertNull(byteArray0);
}",0,
project,0,test1418,"public void test1418() throws Throwable {
    Base64 base64_0 = new Base64();
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = base64_0.encode(byteArray0);
    byte[] byteArray2 = Base64.encodeBase64(byteArray1, true, true);
    assertSame(byteArray2, byteArray0);
}",0,
project,0,test1419,"public void test1419() throws Throwable {
    Base64 base64_0 = new Base64();
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = base64_0.encode(byteArray0);
    byte[] byteArray2 = Base64.encodeBase64(byteArray1, true, true);
    assertFalse(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test1520,"public void test1520() throws Throwable {
    byte[] byteArray0 = Base64.encodeBase64((byte[]) null, false);
    assertNull(byteArray0);
}",0,
project,0,test1721,"public void test1721() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = Base64.encodeBase64(byteArray0);
    assertEquals(0, byteArray1.length);
}",0,
project,0,test1823,"public void test1823() throws Throwable {
    byte[] byteArray0 = new byte[1];
    Base64 base64_0 = new Base64((-1438), byteArray0);
    byte[] byteArray1 = new byte[5];
    byteArray1[3] = (byte) (-57);
    byte[] byteArray2 = base64_0.encode(byteArray1);
    BigInteger bigInteger0 = Base64.decodeInteger(byteArray2);
    assertArrayEquals(new byte[] { (byte) 65, (byte) 65, (byte) 65, (byte) 65, (byte) 120, (byte) 119, (byte) 65, (byte) 61 }, byteArray2);
}",0,
project,0,test2025,"public void test2025() throws Throwable {
    byte[] byteArray0 = new byte[6];
    byteArray0[3] = (byte) 43;
    byteArray0[5] = (byte) 56;
    byte[] byteArray1 = Base64.decodeBase64(byteArray0);
    assertArrayEquals(new byte[] { (byte) (-5) }, byteArray1);
}",0,
project,0,test2126,"public void test2126() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byte[] byteArray1 = Base64.decodeBase64(byteArray0);
    assertEquals(0, byteArray1.length);
}",0,
project,0,test2227,"public void test2227() throws Throwable {
    byte[] byteArray0 = Base64.decodeBase64((String) null);
    assertNull(byteArray0);
}",0,
project,0,test2328,"public void test2328() throws Throwable {
    byte[] byteArray0 = Base64.decodeBase64(""))%"");
    assertEquals(0, byteArray0.length);
}",0,
project,0,test2429,"public void test2429() throws Throwable {
    Base64 base64_0 = new Base64(false);
    byte[] byteArray0 = base64_0.decode((String) null);
    assertNull(byteArray0);
}",0,
project,0,test2430,"public void test2430() throws Throwable {
    Base64 base64_0 = new Base64(false);
    byte[] byteArray0 = base64_0.decode((String) null);
    assertFalse(base64_0.isUrlSafe());
}",0,assertFalse(base64_0.isUrlSafe())
project,0,test2531,"public void test2531() throws Throwable {
    // Undeclared exception!
    try {
        Base64.toIntegerBytes((BigInteger) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2632,"public void test2632() throws Throwable {
    Base64 base64_0 = new Base64((-1783));
    byte[] byteArray0 = new byte[6];
    base64_0.encode(byteArray0, (int) (byte) (-118), (int) (byte) (-45));
    // Undeclared exception!
    try {
        base64_0.readResults(byteArray0, (-767), (-391));
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
    }
}",0,
project,0,test2733,"public void test2733() throws Throwable {
    // Undeclared exception!
    try {
        Base64.isBase64((byte[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2834,"public void test2834() throws Throwable {
    // Undeclared exception!
    try {
        Base64.isBase64((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2935,"public void test2935() throws Throwable {
    // Undeclared exception!
    try {
        Base64.isArrayByteBase64((byte[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test3036,"public void test3036() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ZERO;
    byte[] byteArray0 = Base64.encodeInteger(bigInteger0);
    Base64 base64_0 = new Base64((-485), byteArray0);
    byte[] byteArray1 = new byte[9];
    // Undeclared exception!
    try {
        base64_0.encode(byteArray1);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // -1
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test3137,"public void test3137() throws Throwable {
    // Undeclared exception!
    try {
        Base64.discardWhitespace((byte[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test3238,"public void test3238() throws Throwable {
    // Undeclared exception!
    try {
        Base64.decodeInteger((byte[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test3439,"public void test3439() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byte[] byteArray1 = Base64.encodeBase64(byteArray0, false, false, 64);
    assertArrayEquals(new byte[] { (byte) 65, (byte) 65, (byte) 61, (byte) 61 }, byteArray1);
}",0,
project,0,test3440,"public void test3440() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byte[] byteArray1 = Base64.encodeBase64(byteArray0, false, false, 64);
    assertEquals(4, byteArray1.length);
}",0,
project,0,test3541,"public void test3541() throws Throwable {
    byte[] byteArray0 = Base64.encodeBase64((byte[]) null, false, false, 76);
    assertNull(byteArray0);
}",0,
project,0,test3642,"public void test3642() throws Throwable {
    Base64 base64_0 = new Base64(0, (byte[]) null);
    byte[] byteArray0 = base64_0.decode((byte[]) null);
    assertNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test3643,"public void test3643() throws Throwable {
    Base64 base64_0 = new Base64(0, (byte[]) null);
    byte[] byteArray0 = base64_0.decode((byte[]) null);
    assertFalse(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test3744,"public void test3744() throws Throwable {
    Base64 base64_0 = new Base64(103);
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = base64_0.decode(byteArray0);
    byte[] byteArray2 = Base64.encodeBase64URLSafe(byteArray1);
    byte[] byteArray3 = Base64.discardWhitespace(byteArray2);
    assertSame(byteArray1, byteArray0);
}",0,
project,0,test3745,"public void test3745() throws Throwable {
    Base64 base64_0 = new Base64(103);
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = base64_0.decode(byteArray0);
    byte[] byteArray2 = Base64.encodeBase64URLSafe(byteArray1);
    byte[] byteArray3 = Base64.discardWhitespace(byteArray2);
    assertFalse(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test3746,"public void test3746() throws Throwable {
    Base64 base64_0 = new Base64(103);
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = base64_0.decode(byteArray0);
    byte[] byteArray2 = Base64.encodeBase64URLSafe(byteArray1);
    byte[] byteArray3 = Base64.discardWhitespace(byteArray2);
    assertNotSame(byteArray3, byteArray2);
}",0,
project,0,test3747,"public void test3747() throws Throwable {
    Base64 base64_0 = new Base64(103);
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = base64_0.decode(byteArray0);
    byte[] byteArray2 = Base64.encodeBase64URLSafe(byteArray1);
    byte[] byteArray3 = Base64.discardWhitespace(byteArray2);
    assertEquals(0, byteArray3.length);
}",0,
project,0,test3948,"public void test3948() throws Throwable {
    boolean boolean0 = Base64.isBase64((byte) 81);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4049,"public void test4049() throws Throwable {
    boolean boolean0 = Base64.isBase64((byte) 0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4150,"public void test4150() throws Throwable {
    boolean boolean0 = Base64.isBase64((byte) 126);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4251,"public void test4251() throws Throwable {
    boolean boolean0 = Base64.isBase64((byte) (-126));
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4352,"public void test4352() throws Throwable {
    boolean boolean0 = Base64.isBase64((byte) 61);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4453,"public void test4453() throws Throwable {
    Base64 base64_0 = new Base64(false);
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = base64_0.decode(""+&OxR7{L] |au,X"");
    byte[] byteArray2 = base64_0.encode(byteArray0);
    assertSame(byteArray2, byteArray0);
}",0,
project,0,test4454,"public void test4454() throws Throwable {
    Base64 base64_0 = new Base64(false);
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = base64_0.decode(""+&OxR7{L] |au,X"");
    byte[] byteArray2 = base64_0.encode(byteArray0);
    base64_0.decode(byteArray1, 0, 0);
    assertEquals(6, byteArray1.length);
}",1,
project,0,test4455,"public void test4455() throws Throwable {
    Base64 base64_0 = new Base64(false);
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = base64_0.decode(""+&OxR7{L] |au,X"");
    byte[] byteArray2 = base64_0.encode(byteArray0);
    base64_0.decode(byteArray1, 0, 0);
    assertArrayEquals(new byte[] { (byte) (-8), (byte) (-20), (byte) 81, (byte) (-20), (byte) (-74), (byte) (-82) }, byteArray1);
}",1,
project,0,test4556,"public void test4556() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byteArray0[4] = (byte) 118;
    Base64 base64_0 = new Base64();
    // Undeclared exception!
    try {
        base64_0.decode(byteArray0, (int) (byte) 1, 87);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 8
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",1,
project,0,test4657,"public void test4657() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byteArray0[1] = (byte) (-35);
    Base64 base64_0 = new Base64();
    // Undeclared exception!
    try {
        base64_0.decode(byteArray0, (int) (byte) 1, 87);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 8
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test4858,"public void test4858() throws Throwable {
    Base64 base64_0 = new Base64();
    // Undeclared exception!
    try {
        base64_0.decode((byte[]) null, (int) (byte) (-43), 1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",1,
project,0,test4959,"public void test4959() throws Throwable {
    Base64 base64_0 = new Base64((-2737), (byte[]) null);
    base64_0.decode((byte[]) null, 76, (-1));
    assertFalse(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test5060,"public void test5060() throws Throwable {
    byte[] byteArray0 = new byte[7];
    Base64 base64_0 = new Base64();
    // Undeclared exception!
    try {
        base64_0.encode(byteArray0, (int) (byte) 0, (int) (byte) 49);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 7
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",1,
project,0,test5161,"public void test5161() throws Throwable {
    byte[] byteArray0 = new byte[7];
    byteArray0[4] = (byte) (-26);
    Base64 base64_0 = new Base64(true);
    // Undeclared exception!
    try {
        base64_0.encode(byteArray0, (int) (byte) 3, 77);
        fail(""Expecting exception: ArrayIndexOutOfBoundsException"");
    } catch (ArrayIndexOutOfBoundsException e) {
        //
        // 7
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test5262,"public void test5262() throws Throwable {
    byte[] byteArray0 = new byte[1];
    Base64 base64_0 = new Base64();
    base64_0.encode(byteArray0, (-728), (int) (byte) 0);
    assertFalse(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test5363,"public void test5363() throws Throwable {
    Base64 base64_0 = new Base64(0);
    // Undeclared exception!
    try {
        base64_0.encode((byte[]) null, 0, 40);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test5464,"public void test5464() throws Throwable {
    byte[] byteArray0 = new byte[2];
    Base64 base64_0 = new Base64((-289), byteArray0, true);
    assertTrue(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test5565,"public void test5565() throws Throwable {
    byte[] byteArray0 = new byte[2];
    byteArray0[0] = (byte) 79;
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64((-1551), byteArray0, false);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [O\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test5666,"public void test5666() throws Throwable {
    Base64 base64_0 = new Base64((-2149), (byte[]) null, false);
    String string0 = base64_0.encodeToString((byte[]) null);
    assertFalse(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test5667,"public void test5667() throws Throwable {
    Base64 base64_0 = new Base64((-2149), (byte[]) null, false);
    String string0 = base64_0.encodeToString((byte[]) null);
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test5768,"public void test5768() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = Base64.encodeBase64(byteArray0, false);
    byte[] byteArray2 = Base64.encodeBase64(byteArray1, false, false, 567);
    assertEquals(0, byteArray2.length);
}",0,
project,0,test5869,"public void test5869() throws Throwable {
    // Undeclared exception!
    try {
        Base64.encodeInteger((BigInteger) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // encodeInteger called with null parameter
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test5970,"public void test5970() throws Throwable {
    Base64 base64_0 = new Base64(0, (byte[]) null);
    byte[] byteArray0 = base64_0.encode((byte[]) null);
    assertNull(byteArray0);
}",0,
project,0,test5971,"public void test5971() throws Throwable {
    Base64 base64_0 = new Base64(0, (byte[]) null);
    byte[] byteArray0 = base64_0.encode((byte[]) null);
    assertFalse(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test6072,"public void test6072() throws Throwable {
    byte[] byteArray0 = new byte[3];
    Base64 base64_0 = new Base64((byte) 36, byteArray0);
    BigInteger bigInteger0 = BigInteger.TEN;
    try {
        base64_0.encode((Object) bigInteger0);
        fail(""Expecting exception: Exception"");
    } catch (Exception e) {
        //
        // Parameter supplied to Base64 encode is not a byte[]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test6173,"public void test6173() throws Throwable {
    Base64 base64_0 = new Base64(0, (byte[]) null);
    Object object0 = base64_0.decode((Object) ""]%3(Mbn@0l6/vRxq+=x"");
    Object object1 = base64_0.encode(object0);
    assertNotSame(object1, object0);
}",1,
project,0,test6174,"public void test6174() throws Throwable {
    Base64 base64_0 = new Base64(0, (byte[]) null);
    Object object0 = base64_0.decode((Object) ""]%3(Mbn@0l6/vRxq+=x"");
    Object object1 = base64_0.encode(object0);
    assertFalse(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test6275,"public void test6275() throws Throwable {
    boolean boolean0 = Base64.isBase64(""Parameter supplied to Base64 encode is not a byte[]"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test6376,"public void test6376() throws Throwable {
    byte[] byteArray0 = new byte[7];
    byteArray0[0] = (byte) 9;
    boolean boolean0 = Base64.isBase64(byteArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test6477,"public void test6477() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byteArray0[0] = (byte) 32;
    byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray1);
}",0,
project,0,test6478,"public void test6478() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byteArray0[0] = (byte) 32;
    byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
    assertArrayEquals(new byte[] { (byte) 32, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test6479,"public void test6479() throws Throwable {
    byte[] byteArray0 = new byte[8];
    byteArray0[0] = (byte) 32;
    byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
    assertEquals(7, byteArray1.length);
}",0,
project,0,test6780,"public void test6780() throws Throwable {
    byte[] byteArray0 = new byte[7];
    byteArray0[3] = (byte) 9;
    byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray1);
}",0,
project,0,test6781,"public void test6781() throws Throwable {
    byte[] byteArray0 = new byte[7];
    byteArray0[3] = (byte) 9;
    byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
    assertEquals(6, byteArray1.length);
}",0,
project,0,test6782,"public void test6782() throws Throwable {
    byte[] byteArray0 = new byte[7];
    byteArray0[3] = (byte) 9;
    byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 9, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test6883,"public void test6883() throws Throwable {
    byte[] byteArray0 = new byte[7];
    Base64 base64_0 = new Base64((byte) 1, byteArray0, false);
    base64_0.decode("""");
    assertFalse(base64_0.isUrlSafe());
}",0,assertFalse(base64_0.isUrlSafe())
project,0,test6984,"public void test6984() throws Throwable {
    byte[] byteArray0 = new byte[8];
    BigInteger bigInteger0 = Base64.decodeInteger(byteArray0);
    Base64 base64_0 = new Base64(false);
    try {
        base64_0.decode((Object) bigInteger0);
        fail(""Expecting exception: Exception"");
    } catch (Exception e) {
        //
        // Parameter supplied to Base64 decode is not a byte[] or a String
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",1,
project,0,test7085,"public void test7085() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ONE;
    byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
    Base64 base64_0 = new Base64((-2998), byteArray0, false);
    Object object0 = base64_0.decode((Object) ""encodeInteger called with null parameter"");
    Object object1 = base64_0.decode(object0);
    assertFalse(base64_0.isUrlSafe());
}",0,assertFalse(base64_0.isUrlSafe())
project,0,test7086,"public void test7086() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ONE;
    byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
    Base64 base64_0 = new Base64((-2998), byteArray0, false);
    Object object0 = base64_0.decode((Object) ""encodeInteger called with null parameter"");
    Object object1 = base64_0.decode(object0);
    assertNotSame(object1, object0);
}",0,
project,0,test7287,"public void test7287() throws Throwable {
    byte[] byteArray0 = new byte[1];
    Base64 base64_0 = new Base64((-3966), (byte[]) null);
    byte[] byteArray1 = Base64.encodeBase64(byteArray0, false, false);
    byte[] byteArray2 = base64_0.decode(byteArray1);
    assertEquals(1, byteArray2.length);
}",0,
project,0,test7288,"public void test7288() throws Throwable {
    byte[] byteArray0 = new byte[1];
    Base64 base64_0 = new Base64((-3966), (byte[]) null);
    byte[] byteArray1 = Base64.encodeBase64(byteArray0, false, false);
    byte[] byteArray2 = base64_0.decode(byteArray1);
    assertArrayEquals(new byte[] { (byte) 65, (byte) 65, (byte) 61, (byte) 61 }, byteArray1);
}",0,
project,0,test7389,"public void test7389() throws Throwable {
    Base64 base64_0 = new Base64();
    byte[] byteArray0 = new byte[5];
    byte[] byteArray1 = base64_0.encode(byteArray0);
    assertArrayEquals(new byte[] { (byte) 65, (byte) 65, (byte) 65, (byte) 65, (byte) 65, (byte) 65, (byte) 65, (byte) 61 }, byteArray1);
}",0,
project,0,test7390,"public void test7390() throws Throwable {
    Base64 base64_0 = new Base64();
    byte[] byteArray0 = new byte[5];
    byte[] byteArray1 = base64_0.encode(byteArray0);
    assertEquals(8, byteArray1.length);
}",0,
project,0,test7391,"public void test7391() throws Throwable {
    Base64 base64_0 = new Base64();
    byte[] byteArray0 = new byte[5];
    byte[] byteArray1 = base64_0.encode(byteArray0);
    base64_0.decode(byteArray0, 1, 296);
    assertNotSame(byteArray0, byteArray1);
}",1,
project,0,test7492,"public void test7492() throws Throwable {
    byte[] byteArray0 = new byte[9];
    Base64 base64_0 = new Base64(4, byteArray0);
    byte[] byteArray1 = base64_0.encode(byteArray0);
    assertEquals(39, byteArray1.length);
}",0,
project,0,test7493,"public void test7493() throws Throwable {
    byte[] byteArray0 = new byte[9];
    Base64 base64_0 = new Base64(4, byteArray0);
    byte[] byteArray1 = base64_0.encode(byteArray0);
    assertFalse(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test7594,"public void test7594() throws Throwable {
    Base64 base64_0 = new Base64(true);
    byte[] byteArray0 = new byte[4];
    base64_0.encode(byteArray0, (int) (byte) (-19), (-148));
    assertTrue(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test7695,"public void test7695() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ONE;
    byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
    byte[] byteArray1 = Base64.encodeBase64URLSafe(byteArray0);
    byte[] byteArray2 = Base64.encodeBase64(byteArray1);
    assertArrayEquals(new byte[] { (byte) 81, (byte) 86, (byte) 69, (byte) 61 }, byteArray2);
}",0,
project,0,test7796,"public void test7796() throws Throwable {
    byte[] byteArray0 = new byte[1];
    Base64 base64_0 = new Base64((-3966), (byte[]) null);
    byte[] byteArray1 = base64_0.decode(byteArray0);
    assertEquals(0, byteArray1.length);
}",0,
project,0,test7797,"public void test7797() throws Throwable {
    byte[] byteArray0 = new byte[1];
    Base64 base64_0 = new Base64((-3966), (byte[]) null);
    byte[] byteArray1 = base64_0.decode(byteArray0);
    base64_0.encode(byteArray0, (-3966), (int) (byte) 0);
    assertFalse(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test7898,"public void test7898() throws Throwable {
    byte[] byteArray0 = new byte[7];
    Base64 base64_0 = new Base64(1, byteArray0);
    byte[] byteArray1 = base64_0.decode(""4%*Y'ZxA"");
    assertEquals(3, byteArray1.length);
}",0,
project,0,test7899,"public void test7899() throws Throwable {
    byte[] byteArray0 = new byte[7];
    Base64 base64_0 = new Base64(1, byteArray0);
    byte[] byteArray1 = base64_0.decode(""4%*Y'ZxA"");
    assertArrayEquals(new byte[] { (byte) (-31), (byte) (-122), (byte) 113 }, byteArray1);
}",0,
project,0,test78100,"public void test78100() throws Throwable {
    byte[] byteArray0 = new byte[7];
    Base64 base64_0 = new Base64(1, byteArray0);
    byte[] byteArray1 = base64_0.decode(""4%*Y'ZxA"");
    int int0 = base64_0.readResults(byteArray0, (byte) 120, (byte) 0);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test79101,"public void test79101() throws Throwable {
    Base64 base64_0 = new Base64(true);
    int int0 = base64_0.readResults((byte[]) null, 2563, 2563);
    assertTrue(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test79102,"public void test79102() throws Throwable {
    Base64 base64_0 = new Base64(true);
    int int0 = base64_0.readResults((byte[]) null, 2563, 2563);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test80103,"public void test80103() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ONE;
    byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
    Base64 base64_0 = new Base64((-2998), byteArray0, false);
    int int0 = base64_0.avail();
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test80104,"public void test80104() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ONE;
    byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
    Base64 base64_0 = new Base64((-2998), byteArray0, false);
    int int0 = base64_0.avail();
    assertEquals(1, byteArray0.length);
}",0,
project,0,test80105,"public void test80105() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ONE;
    byte[] byteArray0 = Base64.toIntegerBytes(bigInteger0);
    Base64 base64_0 = new Base64((-2998), byteArray0, false);
    int int0 = base64_0.avail();
    assertFalse(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test81106,"public void test81106() throws Throwable {
    byte[] byteArray0 = new byte[7];
    Base64 base64_0 = new Base64((byte) 1, byteArray0, false);
    base64_0.encode(byteArray0, (int) (byte) (-1), (int) (byte) (-1));
    boolean boolean0 = base64_0.hasData();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test81107,"public void test81107() throws Throwable {
    byte[] byteArray0 = new byte[7];
    Base64 base64_0 = new Base64((byte) 1, byteArray0, false);
    base64_0.encode(byteArray0, (int) (byte) (-1), (int) (byte) (-1));
    boolean boolean0 = base64_0.hasData();
    assertFalse(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test82108,"public void test82108() throws Throwable {
    Base64 base64_0 = new Base64(true);
    boolean boolean0 = base64_0.isUrlSafe();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test83109,"public void test83109() throws Throwable {
    byte[] byteArray0 = new byte[7];
    Base64 base64_0 = new Base64(1, byteArray0);
    boolean boolean0 = base64_0.isUrlSafe();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test84110,"public void test84110() throws Throwable {
    byte[] byteArray0 = new byte[32];
    byte[] byteArray1 = Base64.encodeBase64(byteArray0, true, true);
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(98, byteArray1);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\uFFFD\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test85111,"public void test85111() throws Throwable {
    byte[] byteArray0 = new byte[1];
    boolean boolean0 = Base64.isArrayByteBase64(byteArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test86112,"public void test86112() throws Throwable {
    byte[] byteArray0 = Base64.decodeBase64(""x$PW bOeg1/`gL<X|"");
    BigInteger bigInteger0 = Base64.decodeInteger(byteArray0);
    byte[] byteArray1 = Base64.encodeInteger(bigInteger0);
    assertArrayEquals(new byte[] { (byte) 57, (byte) 119, (byte) 61, (byte) 61 }, byteArray1);
}",0,
project,0,test86113,"public void test86113() throws Throwable {
    byte[] byteArray0 = Base64.decodeBase64(""x$PW bOeg1/`gL<X|"");
    BigInteger bigInteger0 = Base64.decodeInteger(byteArray0);
    byte[] byteArray1 = Base64.encodeInteger(bigInteger0);
    assertEquals(4, byteArray1.length);
}",0,
project,0,test87114,"public void test87114() throws Throwable {
    byte[] byteArray0 = Base64.decodeBase64(""lineSeperator must not contain base64 characters: ["");
    String string0 = Base64.encodeBase64URLSafeString(byteArray0);
    assertEquals(""lineSeperatormustnotcontainbase64characters"", string0);
}",0,
project,0,test88115,"public void test88115() throws Throwable {
    byte[] byteArray0 = Base64.decodeBase64(""org.apache.commons.codec.DecoderException"");
    // Undeclared exception!
    try {
        Base64.encodeBase64(byteArray0, true, false, 12);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Input array too big, the output array would be bigger (38) than the specified maxium size of 12
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test89116,"public void test89116() throws Throwable {
    String string0 = Base64.encodeBase64String((byte[]) null);
    assertNull(string0);
}",0,
project,0,test90117,"public void test90117() throws Throwable {
    byte[] byteArray0 = new byte[1];
    Base64 base64_0 = new Base64((-3966), (byte[]) null);
    String string0 = base64_0.encodeToString(byteArray0);
    assertEquals(""AA=="", string0);
}",0,assertNotNull(string0)
project,0,test91118,"public void test91118() throws Throwable {
    byte[] byteArray0 = Base64.decodeBase64((byte[]) null);
    assertNull(byteArray0);
}",0,
project,0,test92119,"public void test92119() throws Throwable {
    Base64 base64_0 = new Base64();
    boolean boolean0 = base64_0.hasData();
    assertFalse(base64_0.isUrlSafe());
}",0,assertFalse(base64_0.isUrlSafe())
project,0,test92120,"public void test92120() throws Throwable {
    Base64 base64_0 = new Base64();
    boolean boolean0 = base64_0.hasData();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test93121,"public void test93121() throws Throwable {
    byte[] byteArray0 = Base64.encodeBase64((byte[]) null);
    assertNull(byteArray0);
}",0,
