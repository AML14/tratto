project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    byte[] byteArray0 = new byte[3];
    // Undeclared exception!
    try {
        Base64.encodeBase64(byteArray0, false, false, 6);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test011,"public void test011() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64((-458), (byte[]) null);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test022,"public void test022() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64((-2005));
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test033,"public void test033() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(577);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test044,"public void test044() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64((-1961));
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test055,"public void test055() throws Throwable {
    byte[] byteArray0 = new byte[5];
    // Undeclared exception!
    try {
        Base64.decodeInteger(byteArray0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test066,"public void test066() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64();
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test077,"public void test077() throws Throwable {
    String string0 = Base64.encodeBase64URLSafeString((byte[]) null);
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test088,"public void test088() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(true);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test099,"public void test099() throws Throwable {
    byte[] byteArray0 = Base64.encodeBase64URLSafe((byte[]) null);
    assertNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test1010,"public void test1010() throws Throwable {
    byte[] byteArray0 = new byte[6];
    // Undeclared exception!
    try {
        Base64.encodeBase64URLSafe(byteArray0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    byte[] byteArray0 = new byte[1];
    // Undeclared exception!
    try {
        Base64.encodeBase64String(byteArray0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(false);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    byte[] byteArray0 = Base64.encodeBase64Chunked((byte[]) null);
    assertNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test1414,"public void test1414() throws Throwable {
    byte[] byteArray0 = new byte[3];
    // Undeclared exception!
    try {
        Base64.decodeInteger(byteArray0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    byte[] byteArray0 = Base64.encodeBase64((byte[]) null, false, false);
    assertNull(byteArray0);
}",0,assertNotNull(byteArray0)
project,0,test1616,"public void test1616() throws Throwable {
    byte[] byteArray0 = Base64.encodeBase64((byte[]) null, true);
    assertNull(byteArray0);
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    byte[] byteArray0 = Base64.encodeBase64((byte[]) null);
    assertNull(byteArray0);
}",0,
project,0,test1818,"public void test1818() throws Throwable {
    byte[] byteArray0 = new byte[0];
    Base64 base64_0 = new Base64((-1), byteArray0, false);
    byte[] byteArray1 = base64_0.decode(byteArray0);
    Base64.encodeBase64(byteArray1);
    assertFalse(base64_0.isUrlSafe());
}",0,assertTrue(base64_0.isUrlSafe())
project,0,test1819,"public void test1819() throws Throwable {
    byte[] byteArray0 = new byte[0];
    Base64 base64_0 = new Base64((-1), byteArray0, false);
    byte[] byteArray1 = base64_0.decode(byteArray0);
    Base64.encodeBase64(byteArray1);
    assertSame(byteArray1, byteArray0);
}",0,
project,0,test1920,"public void test1920() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = Base64.encodeBase64URLSafe(byteArray0);
    byte[] byteArray2 = Base64.discardWhitespace(byteArray1);
    assertEquals(0, byteArray2.length);
}",0,
project,0,test1921,"public void test1921() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = Base64.encodeBase64URLSafe(byteArray0);
    byte[] byteArray2 = Base64.discardWhitespace(byteArray1);
    assertNotSame(byteArray2, byteArray0);
}",0,
project,0,test2022,"public void test2022() throws Throwable {
    byte[] byteArray0 = new byte[2];
    byteArray0[0] = (byte) (-92);
    // Undeclared exception!
    try {
        Base64.encodeBase64(byteArray0, false);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2123,"public void test2123() throws Throwable {
    byte[] byteArray0 = new byte[1];
    byteArray0[0] = (byte) (-115);
    // Undeclared exception!
    try {
        Base64.encodeBase64(byteArray0, true, true);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2224,"public void test2224() throws Throwable {
    // Undeclared exception!
    try {
        Base64.decodeBase64((byte[]) null);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2325,"public void test2325() throws Throwable {
    // Undeclared exception!
    try {
        Base64.decodeBase64((String) null);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2426,"public void test2426() throws Throwable {
    // Undeclared exception!
    try {
        Base64.decodeBase64(""org.apache.commons.codec.binary.Base64"");
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2527,"public void test2527() throws Throwable {
    byte[] byteArray0 = new byte[4];
    Base64 base64_0 = new Base64(0, byteArray0);
    byte[] byteArray1 = base64_0.encode(byteArray0);
    assertArrayEquals(new byte[] { (byte) 65, (byte) 65, (byte) 65, (byte) 65, (byte) 65, (byte) 65, (byte) 61, (byte) 61 }, byteArray1);
}",0,
project,0,test2528,"public void test2528() throws Throwable {
    byte[] byteArray0 = new byte[4];
    Base64 base64_0 = new Base64(0, byteArray0);
    byte[] byteArray1 = base64_0.encode(byteArray0);
    assertEquals(8, byteArray1.length);
}",0,
project,0,test2529,"public void test2529() throws Throwable {
    byte[] byteArray0 = new byte[4];
    Base64 base64_0 = new Base64(0, byteArray0);
    byte[] byteArray1 = base64_0.encode(byteArray0);
    int int0 = base64_0.avail();
    assertEquals(8, int0);
}",0,"assertEquals(0, int0)"
project,0,test2630,"public void test2630() throws Throwable {
    // Undeclared exception!
    try {
        Base64.toIntegerBytes((BigInteger) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2731,"public void test2731() throws Throwable {
    byte[] byteArray0 = new byte[1];
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(true);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2832,"public void test2832() throws Throwable {
    // Undeclared exception!
    try {
        Base64.isArrayByteBase64((byte[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test2933,"public void test2933() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(0, (byte[]) null);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test3034,"public void test3034() throws Throwable {
    // Undeclared exception!
    try {
        Base64.discardWhitespace((byte[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test3135,"public void test3135() throws Throwable {
    byte[] byteArray0 = new byte[1];
    Base64 base64_0 = new Base64(0, byteArray0, true);
    byte[] byteArray1 = base64_0.encode(byteArray0);
    assertArrayEquals(new byte[] { (byte) 65, (byte) 65 }, byteArray1);
}",0,
project,0,test3236,"public void test3236() throws Throwable {
    byte[] byteArray0 = new byte[1];
    // Undeclared exception!
    try {
        Base64.encodeBase64(byteArray0, true, false, (int) (byte) 60);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test3337,"public void test3337() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = Base64.encodeBase64(byteArray0, true, false, 0);
    assertSame(byteArray0, byteArray1);
}",0,
project,0,test3438,"public void test3438() throws Throwable {
    byte[] byteArray0 = Base64.encodeBase64((byte[]) null, false, true, (-1365));
    assertNull(byteArray0);
}",0,
project,0,test3539,"public void test3539() throws Throwable {
    boolean boolean0 = Base64.isBase64((byte) 108);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3640,"public void test3640() throws Throwable {
    boolean boolean0 = Base64.isBase64((byte) 0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3741,"public void test3741() throws Throwable {
    boolean boolean0 = Base64.isBase64((byte) 127);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3842,"public void test3842() throws Throwable {
    boolean boolean0 = Base64.isBase64((byte) (-123));
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3943,"public void test3943() throws Throwable {
    boolean boolean0 = Base64.isBase64((byte) 61);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test4044,"public void test4044() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test4145,"public void test4145() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(1371);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test4246,"public void test4246() throws Throwable {
    byte[] byteArray0 = new byte[0];
    Base64 base64_0 = new Base64((-1), byteArray0, false);
    base64_0.decode(byteArray0, (-1), (-1177));
    assertFalse(base64_0.isUrlSafe());
}",0,assertFalse(base64_0.isUrlSafe())
project,0,test4347,"public void test4347() throws Throwable {
    byte[] byteArray0 = new byte[2];
    byteArray0[0] = (byte) 101;
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(0, byteArray0, true);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test4448,"public void test4448() throws Throwable {
    // Undeclared exception!
    try {
        Base64.encodeInteger((BigInteger) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // encodeInteger called with null parameter
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test4549,"public void test4549() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64((-2311), (byte[]) null, true);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test4650,"public void test4650() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64((byte) 11);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test4751,"public void test4751() throws Throwable {
    byte[] byteArray0 = new byte[6];
    // Undeclared exception!
    try {
        Base64.encodeBase64(byteArray0, true, true);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test4852,"public void test4852() throws Throwable {
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) 9;
    boolean boolean0 = Base64.isArrayByteBase64(byteArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test4953,"public void test4953() throws Throwable {
    byte[] byteArray0 = new byte[9];
    byteArray0[1] = (byte) 9;
    byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 9, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray0);
}",0,
project,0,test4954,"public void test4954() throws Throwable {
    byte[] byteArray0 = new byte[9];
    byteArray0[1] = (byte) 9;
    byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
    assertArrayEquals(new byte[] { (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0, (byte) 0 }, byteArray1);
}",0,
project,0,test4955,"public void test4955() throws Throwable {
    byte[] byteArray0 = new byte[9];
    byteArray0[1] = (byte) 9;
    byte[] byteArray1 = Base64.discardWhitespace(byteArray0);
    assertEquals(8, byteArray1.length);
}",0,
project,0,test5056,"public void test5056() throws Throwable {
    byte[] byteArray0 = new byte[2];
    // Undeclared exception!
    try {
        Base64.encodeBase64(byteArray0, true, false, (-3936));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Input array too big, the output array would be bigger (6) than the specified maxium size of -3936
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test5157,"public void test5157() throws Throwable {
    // Undeclared exception!
    try {
        Base64.decodeBase64("""");
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test5258,"public void test5258() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[0] = (byte) 32;
    boolean boolean0 = Base64.isArrayByteBase64(byteArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5359,"public void test5359() throws Throwable {
    byte[] byteArray0 = new byte[3];
    byteArray0[0] = (byte) 73;
    byteArray0[1] = (byte) 123;
    boolean boolean0 = Base64.isArrayByteBase64(byteArray0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test5460,"public void test5460() throws Throwable {
    byte[] byteArray0 = new byte[6];
    byteArray0[0] = (byte) 71;
    byteArray0[4] = (byte) 52;
    // Undeclared exception!
    try {
        Base64.decodeBase64(byteArray0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test5561,"public void test5561() throws Throwable {
    byte[] byteArray0 = new byte[1];
    Base64 base64_0 = new Base64(1, byteArray0, true);
    String string0 = base64_0.encodeToString(byteArray0);
    assertEquals(""AA"", string0);
}",0,
project,0,test5662,"public void test5662() throws Throwable {
    byte[] byteArray0 = new byte[5];
    byteArray0[0] = (byte) 32;
    Base64.discardWhitespace(byteArray0);
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64((byte) 11);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test5763,"public void test5763() throws Throwable {
    byte[] byteArray0 = new byte[2];
    Base64 base64_0 = new Base64((-746), byteArray0);
    byte[] byteArray1 = base64_0.encode(byteArray0);
    int int0 = base64_0.readResults(byteArray1, (byte) 0, (byte) 0);
    assertArrayEquals(new byte[] { (byte) 65, (byte) 65, (byte) 65, (byte) 61 }, byteArray1);
}",0,
project,0,test5764,"public void test5764() throws Throwable {
    byte[] byteArray0 = new byte[2];
    Base64 base64_0 = new Base64((-746), byteArray0);
    byte[] byteArray1 = base64_0.encode(byteArray0);
    int int0 = base64_0.readResults(byteArray1, (byte) 0, (byte) 0);
    assertEquals(4, byteArray1.length);
}",0,
project,0,test5765,"public void test5765() throws Throwable {
    byte[] byteArray0 = new byte[2];
    Base64 base64_0 = new Base64((-746), byteArray0);
    byte[] byteArray1 = base64_0.encode(byteArray0);
    int int0 = base64_0.readResults(byteArray1, (byte) 0, (byte) 0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test5866,"public void test5866() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64((-2045));
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test5967,"public void test5967() throws Throwable {
    byte[] byteArray0 = new byte[7];
    byteArray0[5] = (byte) 68;
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(1, byteArray0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [\u0000\u0000\u0000\u0000\u0000D\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",1,
project,0,test6068,"public void test6068() throws Throwable {
    Base64 base64_0 = null;
    try {
        base64_0 = new Base64(90, (byte[]) null);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test6169,"public void test6169() throws Throwable {
    byte[] byteArray0 = new byte[1];
    // Undeclared exception!
    try {
        Base64.encodeBase64Chunked(byteArray0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test6270,"public void test6270() throws Throwable {
    byte[] byteArray0 = new byte[5];
    // Undeclared exception!
    try {
        Base64.encodeBase64(byteArray0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test6371,"public void test6371() throws Throwable {
    byte[] byteArray0 = new byte[0];
    byte[] byteArray1 = Base64.encodeBase64(byteArray0, true);
    byte[] byteArray2 = Base64.encodeBase64URLSafe(byteArray1);
    assertSame(byteArray1, byteArray2);
}",0,
project,0,test6472,"public void test6472() throws Throwable {
    byte[] byteArray0 = new byte[5];
    // Undeclared exception!
    try {
        Base64.encodeBase64URLSafeString(byteArray0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
project,0,test6573,"public void test6573() throws Throwable {
    String string0 = Base64.encodeBase64String((byte[]) null);
    assertNull(string0);
}",0,
project,0,test6674,"public void test6674() throws Throwable {
    BigInteger bigInteger0 = BigInteger.ONE;
    // Undeclared exception!
    try {
        Base64.encodeInteger(bigInteger0);
        //  fail(""Expecting exception: IllegalArgumentException"");
        // Unstable assertion
    } catch (IllegalArgumentException e) {
        //
        // lineSeperator must not contain base64 characters: [e\u0000]
        //
        verifyException(""org.apache.commons.codec.binary.Base64"", e);
    }
}",0,
