project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test011,"public void test011() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    jsonWriter0.setLenient(true);
    assertTrue(jsonWriter0.isLenient());
}",0,assertTrue(jsonWriter0.isLenient())
project,0,test012,"public void test012() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    jsonWriter0.setLenient(true);
    Byte byte0 = new Byte((byte) (-112));
    jsonWriter0.value((Number) byte0);
    assertTrue(jsonWriter0.getSerializeNulls());
}",0,assertTrue(jsonWriter0.getSerializeNulls())
project,0,test023,"public void test023() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    jsonWriter0.isHtmlSafe();
    assertTrue(jsonWriter0.getSerializeNulls());
}",0,assertTrue(jsonWriter0.getSerializeNulls())
project,0,test045,"public void test045() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    jsonWriter0.isLenient();
    assertTrue(jsonWriter0.getSerializeNulls());
}",0,assertFalse(jsonWriter0.getSerializeNulls())
project,0,test056,"public void test056() throws Throwable {
    StringWriter stringWriter0 = new StringWriter(38);
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    boolean boolean0 = jsonWriter0.getSerializeNulls();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test067,"public void test067() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    // Undeclared exception!
    try {
        jsonWriter0.value((-4334L));
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JSON must start with an array or an object.
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",1,
project,0,test078,"public void test078() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    // Undeclared exception!
    try {
        jsonWriter0.endObject();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Nesting problem.
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",1,
project,0,test089,"public void test089() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    JsonWriter jsonWriter1 = jsonWriter0.beginObject();
    jsonWriter1.name(""Q#F[!zn<"");
    // Undeclared exception!
    try {
        jsonWriter1.endObject();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Dangling name: Q#F[!zn<
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",0,
project,0,test0910,"public void test0910() throws Throwable {
    JsonWriter jsonWriter0 = null;
    try {
        jsonWriter0 = new JsonWriter((Writer) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // out == null
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",1,
project,0,test1011,"public void test1011() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    jsonWriter0.setIndent("""");
    assertTrue(jsonWriter0.getSerializeNulls());
}",0,assertFalse(jsonWriter0.getSerializeNulls())
project,0,test1112,"public void test1112() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    JsonWriter jsonWriter1 = jsonWriter0.beginArray();
    jsonWriter1.endArray();
    jsonWriter1.close();
    Integer integer0 = new Integer(897);
    // Undeclared exception!
    try {
        jsonWriter0.value((Number) integer0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonWriter is closed.
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",0,
project,0,test1314,"public void test1314() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    // Undeclared exception!
    try {
        jsonWriter0.name((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // name == null
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",0,
project,0,test1415,"public void test1415() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    jsonWriter0.name(""java.lang.Float@0000000002"");
    // Undeclared exception!
    try {
        jsonWriter0.name(""java.lang.Float@0000000002"");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",0,
project,0,test1516,"public void test1516() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    JsonWriter jsonWriter1 = jsonWriter0.beginArray();
    JsonWriter jsonWriter2 = jsonWriter1.endArray();
    jsonWriter1.close();
    // Undeclared exception!
    try {
        jsonWriter2.name("""");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonWriter is closed.
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",0,
project,0,test1617,"public void test1617() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    // Undeclared exception!
    try {
        jsonWriter0.value((String) null);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JSON must start with an array or an object.
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",0,
project,0,test1718,"public void test1718() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    // Undeclared exception!
    try {
        jsonWriter0.jsonValue((String) null);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JSON must start with an array or an object.
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",0,
project,0,test1819,"public void test1819() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    JsonWriter jsonWriter1 = jsonWriter0.name(""rQ,v ~\""`Q2Dokvq+"");
    // Undeclared exception!
    try {
        jsonWriter1.nullValue();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Nesting problem.
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",0,
project,0,test1920,"public void test1920() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    JsonWriter jsonWriter1 = jsonWriter0.name(""rQ,v ~\""`Q2Dokvq+"");
    jsonWriter1.setSerializeNulls(false);
    JsonWriter jsonWriter2 = jsonWriter1.nullValue();
    assertSame(jsonWriter2, jsonWriter1);
}",0,
project,0,test2223,"public void test2223() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    // Undeclared exception!
    try {
        jsonWriter0.value((Number) null);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JSON must start with an array or an object.
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",0,
project,0,test2324,"public void test2324() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    jsonWriter0.flush();
    assertTrue(jsonWriter0.getSerializeNulls());
}",0,assertFalse(jsonWriter0.getSerializeNulls())
project,0,test2425,"public void test2425() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    JsonWriter jsonWriter1 = jsonWriter0.beginArray();
    jsonWriter1.endArray();
    jsonWriter1.close();
    // Undeclared exception!
    try {
        jsonWriter0.flush();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonWriter is closed.
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",1,
project,0,test2526,"public void test2526() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    JsonWriter jsonWriter1 = jsonWriter0.beginArray();
    try {
        jsonWriter1.close();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Incomplete document
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",1,
project,0,test2728,"public void test2728() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    try {
        jsonWriter0.close();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Incomplete document
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",1,
project,0,test2829,"public void test2829() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    JsonWriter jsonWriter1 = jsonWriter0.beginObject();
    JsonWriter jsonWriter2 = jsonWriter1.name(""gN*c;lz"");
    jsonWriter2.jsonValue(""gN*c;lz"");
    // Undeclared exception!
    try {
        jsonWriter1.value(""gN*c;lz"");
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Nesting problem.
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",0,
project,0,test3233,"public void test3233() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    jsonWriter0.beginObject();
    // Undeclared exception!
    try {
        jsonWriter0.beginObject();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Nesting problem.
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",0,
project,0,test3334,"public void test3334() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    jsonWriter0.beginArray();
    JsonWriter jsonWriter1 = jsonWriter0.endArray();
    // Undeclared exception!
    try {
        jsonWriter1.beginArray();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JSON must have only one top-level value.
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",0,
project,0,test3436,"public void test3436() throws Throwable {
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    jsonWriter0.setLenient(true);
    JsonWriter jsonWriter1 = jsonWriter0.value(0.0);
    jsonWriter1.value(0.0);
    assertTrue(jsonWriter0.getSerializeNulls());
}",0,assertTrue(jsonWriter0.getSerializeNulls())
