project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    StringReader stringReader0 = new StringReader(""true"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    // Undeclared exception!
    try {
        jsonReader0.nextInt();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected an int but was BOOLEAN at line 1 column 5 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test011,"public void test011() throws Throwable {
    StringReader stringReader0 = new StringReader(""FALSE"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    // Undeclared exception!
    try {
        jsonReader0.nextLong();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected a long but was BOOLEAN at line 1 column 6 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test022,"public void test022() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 78;
    // Undeclared exception!
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test033,"public void test033() throws Throwable {
    StringReader stringReader0 = new StringReader(""FALSE"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    // Undeclared exception!
    try {
        jsonReader0.nextNull();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected null but was BOOLEAN at line 1 column 6 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test044,"public void test044() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = (-710);
    boolean boolean0 = jsonReader0.hasNext();
    assertTrue(boolean0);
}",1,
project,0,test045,"public void test045() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = (-710);
    boolean boolean0 = jsonReader0.hasNext();
    assertFalse(jsonReader0.isLenient());
}",0,assertTrue(jsonReader0.isLenient())
project,0,test056,"public void test056() throws Throwable {
    StringReader stringReader0 = new StringReader(""Cv2W#S#jiAa"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    int int0 = jsonReader0.getLineNumber();
    assertFalse(jsonReader0.isLenient());
}",0,assertTrue(jsonReader0.isLenient())
project,0,test057,"public void test057() throws Throwable {
    StringReader stringReader0 = new StringReader(""Cv2W#S#jiAa"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    int int0 = jsonReader0.getLineNumber();
    assertEquals(1, int0);
}",0,
project,0,test068,"public void test068() throws Throwable {
    StringReader stringReader0 = new StringReader(""{=NHuXD"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    int int0 = jsonReader0.getColumnNumber();
    assertFalse(jsonReader0.isLenient());
}",0,assertTrue(jsonReader0.isLenient())
project,0,test069,"public void test069() throws Throwable {
    StringReader stringReader0 = new StringReader(""{=NHuXD"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    int int0 = jsonReader0.getColumnNumber();
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test0710,"public void test0710() throws Throwable {
    StringReader stringReader0 = new StringReader(""iTmwT[`A"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    // Undeclared exception!
    try {
        jsonReader0.skipValue();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonReader is closed
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test0811,"public void test0811() throws Throwable {
    StringReader stringReader0 = new StringReader(""End of input at line "");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.skipValue();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test0912,"public void test0912() throws Throwable {
    StringReader stringReader0 = new StringReader(""Y~g'!2ABYI}q6)Q="");
    CharBuffer charBuffer0 = CharBuffer.allocate(2765);
    stringReader0.read(charBuffer0);
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.skipValue();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test1013,"public void test1013() throws Throwable {
    StringReader stringReader0 = new StringReader(""End of input at line "");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.peek();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test1114,"public void test1114() throws Throwable {
    StringReader stringReader0 = new StringReader(""com.google.gson.stream.JsonReader$1"");
    stringReader0.skip(71L);
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.peek();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test1215,"public void test1215() throws Throwable {
    StringReader stringReader0 = new StringReader(""uail03_c535m!=$\""b"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test1316,"public void test1316() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 1351;
    // Undeclared exception!
    try {
        jsonReader0.nextString();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test1417,"public void test1417() throws Throwable {
    StringReader stringReader0 = new StringReader(""FALSE"");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextString();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test1518,"public void test1518() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextString();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test1619,"public void test1619() throws Throwable {
    StringReader stringReader0 = new StringReader(""n9dy{;4>"");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextNull();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test1720,"public void test1720() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextNull();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test1821,"public void test1821() throws Throwable {
    StringReader stringReader0 = new StringReader(""FALSE"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 843;
    // Undeclared exception!
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test1922,"public void test1922() throws Throwable {
    StringReader stringReader0 = new StringReader(""BOOLEAN"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    stringReader0.close();
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test2023,"public void test2023() throws Throwable {
    StringReader stringReader0 = new StringReader(""null"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    stringReader0.close();
    try {
        jsonReader0.nextLong();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test2124,"public void test2124() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextLong();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test2225,"public void test2225() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    stringReader0.close();
    try {
        jsonReader0.nextInt();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test2326,"public void test2326() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextInt();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test2427,"public void test2427() throws Throwable {
    StringReader stringReader0 = new StringReader(""^BXQ6 &"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    stringReader0.close();
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test2528,"public void test2528() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test2629,"public void test2629() throws Throwable {
    StringReader stringReader0 = new StringReader(""5z4*+u(T@G:Y|U"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    // Undeclared exception!
    try {
        jsonReader0.nextBoolean();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonReader is closed
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test2730,"public void test2730() throws Throwable {
    StringReader stringReader0 = new StringReader(""End of input at line "");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextBoolean();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test2831,"public void test2831() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextBoolean();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test2932,"public void test2932() throws Throwable {
    StringReader stringReader0 = new StringReader(""@0C@S3y"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    // Undeclared exception!
    try {
        jsonReader0.hasNext();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonReader is closed
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test3033,"public void test3033() throws Throwable {
    StringReader stringReader0 = new StringReader(""End of input at line "");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.hasNext();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test3134,"public void test3134() throws Throwable {
    StringReader stringReader0 = new StringReader("" "");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.hasNext();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 2
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test3235,"public void test3235() throws Throwable {
    StringReader stringReader0 = new StringReader(""GcL]e(y^RI+KJ3*7S"");
    stringReader0.skip(71);
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.endObject();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test3336,"public void test3336() throws Throwable {
    StringReader stringReader0 = new StringReader(""null"");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.endArray();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test3437,"public void test3437() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.endArray();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test3538,"public void test3538() throws Throwable {
    StringReader stringReader0 = new StringReader(""o`sn^h~6't"");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.doPeek();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test3639,"public void test3639() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.doPeek();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test3740,"public void test3740() throws Throwable {
    StringReader stringReader0 = new StringReader(""Expected6END_ARRAY bbt was "");
    stringReader0.close();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.beginObject();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test3841,"public void test3841() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.beginObject();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test3942,"public void test3942() throws Throwable {
    StringReader stringReader0 = new StringReader(""t{~wEAbQS]>VfH"");
    stringReader0.read();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    // Undeclared exception!
    try {
        jsonReader0.beginArray();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected BEGIN_ARRAY but was BEGIN_OBJECT at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test4043,"public void test4043() throws Throwable {
    StringReader stringReader0 = new StringReader(""*d\"""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    stringReader0.close();
    try {
        jsonReader0.beginArray();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Stream closed
        //
        verifyException(""java.io.StringReader"", e);
    }
}",1,
project,0,test4144,"public void test4144() throws Throwable {
    StringReader stringReader0 = new StringReader(""1"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.hasNext();
    String string0 = jsonReader0.getPath();
    assertEquals(""$"", string0);
}",0,
project,0,test4245,"public void test4245() throws Throwable {
    StringReader stringReader0 = new StringReader(""Expected END_OBJECT but was "");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 61;
    // Undeclared exception!
    try {
        jsonReader0.peek();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test4346,"public void test4346() throws Throwable {
    StringReader stringReader0 = new StringReader(""1\""a!"");
    stringReader0.read();
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.doPeek();
    JsonToken jsonToken0 = jsonReader0.peek();
    assertEquals(JsonToken.STRING, jsonToken0);
}",1,
project,0,test4447,"public void test4447() throws Throwable {
    StringReader stringReader0 = new StringReader(""ImLZ~;"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    char[] charArray0 = new char[3];
    stringReader0.read(charArray0);
    jsonReader0.setLenient(true);
    // Undeclared exception!
    try {
        jsonReader0.nextNull();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected null but was STRING at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test4548,"public void test4548() throws Throwable {
    StringReader stringReader0 = new StringReader(""END_OBJECT"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    String string0 = jsonReader0.getPath();
    assertFalse(jsonReader0.isLenient());
}",0,assertTrue(jsonReader0.isLenient())
project,0,test4549,"public void test4549() throws Throwable {
    StringReader stringReader0 = new StringReader(""END_OBJECT"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    String string0 = jsonReader0.getPath();
    assertEquals(""$"", string0);
}",0,
project,0,test4650,"public void test4650() throws Throwable {
    StringReader stringReader0 = new StringReader(""Y~g'!2ABYI}q6)Q="");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    String string0 = jsonReader0.getPath();
    assertFalse(jsonReader0.isLenient());
}",0,assertTrue(jsonReader0.isLenient())
project,0,test4651,"public void test4651() throws Throwable {
    StringReader stringReader0 = new StringReader(""Y~g'!2ABYI}q6)Q="");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    String string0 = jsonReader0.getPath();
    assertEquals(""$"", string0);
}",0,
project,0,test4752,"public void test4752() throws Throwable {
    StringReader stringReader0 = new StringReader(""#\""aR~Wp ~"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextNull();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test4853,"public void test4853() throws Throwable {
    StringReader stringReader0 = new StringReader("" "");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 2
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test4954,"public void test4954() throws Throwable {
    StringReader stringReader0 = new StringReader(""FALSE"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.skipValue();
    stringReader0.reset();
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 7 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test5055,"public void test5055() throws Throwable {
    StringReader stringReader0 = new StringReader(""$|tB%R8Cs#gh"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextInt();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test5156,"public void test5156() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 325;
    // Undeclared exception!
    try {
        jsonReader0.nextInt();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test5257,"public void test5257() throws Throwable {
    StringReader stringReader0 = new StringReader(""JSON forbids NaN and infinities: "");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    // Undeclared exception!
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
    }
}",1,
project,0,test5358,"public void test5358() throws Throwable {
    StringReader stringReader0 = new StringReader(""cSN^K*E&?\nKwz}_f("");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    // Undeclared exception!
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
    }
}",1,
project,0,test5459,"public void test5459() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 325;
    // Undeclared exception!
    try {
        jsonReader0.nextLong();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test5560,"public void test5560() throws Throwable {
    StringReader stringReader0 = new StringReader(""n9dy{;4>"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    // Undeclared exception!
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: NumberFormatException"");
    } catch (NumberFormatException e) {
    }
}",1,
project,0,test5661,"public void test5661() throws Throwable {
    StringReader stringReader0 = new StringReader(""Wx7[Elm_JhlUxtZeK~V"");
    char[] charArray0 = new char[2];
    stringReader0.read(charArray0);
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    double double0 = jsonReader0.nextDouble();
    assertEquals(7.0, double0, 0.01);
}",1,
project,0,test5662,"public void test5662() throws Throwable {
    StringReader stringReader0 = new StringReader(""Wx7[Elm_JhlUxtZeK~V"");
    char[] charArray0 = new char[2];
    stringReader0.read(charArray0);
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    double double0 = jsonReader0.nextDouble();
    assertFalse(jsonReader0.isLenient());
}",0,assertTrue(jsonReader0.isLenient())
project,0,test5763,"public void test5763() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = (-798);
    // Undeclared exception!
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test5864,"public void test5864() throws Throwable {
    StringReader stringReader0 = new StringReader(""FALSE"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    boolean boolean0 = jsonReader0.nextBoolean();
    assertFalse(boolean0);
}",1,
project,0,test5965,"public void test5965() throws Throwable {
    StringReader stringReader0 = new StringReader(""Expected value"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 819;
    // Undeclared exception!
    try {
        jsonReader0.nextBoolean();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test6066,"public void test6066() throws Throwable {
    StringReader stringReader0 = new StringReader(""true"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.doPeek();
    // Undeclared exception!
    try {
        jsonReader0.nextString();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected a string but was BOOLEAN at line 1 column 5 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6167,"public void test6167() throws Throwable {
    StringReader stringReader0 = new StringReader(""true"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.hasNext();
    // Undeclared exception!
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected a name but was BOOLEAN at line 1 column 5 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6268,"public void test6268() throws Throwable {
    StringReader stringReader0 = new StringReader(""}Z(Ly"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.skipValue();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Expected value at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6369,"public void test6369() throws Throwable {
    String string0 = ""\\u"";
    StringReader stringReader0 = new StringReader(string0);
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.endArray();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6470,"public void test6470() throws Throwable {
    StringReader stringReader0 = new StringReader(""=GDacb&:`h*!Pp"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6571,"public void test6571() throws Throwable {
    StringReader stringReader0 = new StringReader(""/"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.hasNext();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6672,"public void test6672() throws Throwable {
    StringReader stringReader0 = new StringReader("".JPrg(5DHU<ri]J"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.beginArray();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6773,"public void test6773() throws Throwable {
    StringReader stringReader0 = new StringReader(""6EYai'"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.doPeek();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6874,"public void test6874() throws Throwable {
    StringReader stringReader0 = new StringReader(""e,Q@=ksK% "");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.endObject();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test6975,"public void test6975() throws Throwable {
    StringReader stringReader0 = new StringReader(""End of input at line "");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextBoolean();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7076,"public void test7076() throws Throwable {
    StringReader stringReader0 = new StringReader(""5.V@VBMc&"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextLong();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7177,"public void test7177() throws Throwable {
    StringReader stringReader0 = new StringReader(""-[~l?-Em"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextName();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7278,"public void test7278() throws Throwable {
    StringReader stringReader0 = new StringReader(""cSN^K*E&?\nKwz}_f("");
    char[] charArray0 = new char[2];
    stringReader0.read(charArray0);
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7379,"public void test7379() throws Throwable {
    StringReader stringReader0 = new StringReader(""fWv25._0uK(:+bQd)"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.peek();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7480,"public void test7480() throws Throwable {
    StringReader stringReader0 = new StringReader(""T=Cj)?>e d"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.peek();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7581,"public void test7581() throws Throwable {
    StringReader stringReader0 = new StringReader("";^gS_M"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.doPeek();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Unexpected value at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7682,"public void test7682() throws Throwable {
    StringReader stringReader0 = new StringReader(""'q8p&$"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.doPeek();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7783,"public void test7783() throws Throwable {
    StringReader stringReader0 = new StringReader(""1\""a!"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    // Undeclared exception!
    try {
        jsonReader0.endObject();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonReader is closed
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test7884,"public void test7884() throws Throwable {
    StringReader stringReader0 = new StringReader(""true"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.skipValue();
    JsonToken jsonToken0 = jsonReader0.peek();
    assertEquals(JsonToken.END_DOCUMENT, jsonToken0);
}",1,
project,0,test7885,"public void test7885() throws Throwable {
    StringReader stringReader0 = new StringReader(""true"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.skipValue();
    JsonToken jsonToken0 = jsonReader0.peek();
    assertFalse(jsonReader0.isLenient());
}",0,assertTrue(jsonReader0.isLenient())
project,0,test7986,"public void test7986() throws Throwable {
    StringReader stringReader0 = new StringReader(""null"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    // Undeclared exception!
    try {
        jsonReader0.nextString();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected a string but was NULL at line 1 column 5 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8087,"public void test8087() throws Throwable {
    StringReader stringReader0 = new StringReader(""true"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    JsonToken jsonToken0 = jsonReader0.peek();
    assertEquals(JsonToken.BOOLEAN, jsonToken0);
}",1,
project,0,test8188,"public void test8188() throws Throwable {
    StringReader stringReader0 = new StringReader(""[SqKW5ra{K'pBQP|w7_"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    JsonToken jsonToken0 = jsonReader0.peek();
    assertEquals(JsonToken.BEGIN_ARRAY, jsonToken0);
}",1,
project,0,test8289,"public void test8289() throws Throwable {
    StringReader stringReader0 = new StringReader(""n9dy{;4>"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.setLenient(true);
    jsonReader0.skipValue();
    // Undeclared exception!
    try {
        jsonReader0.nextDouble();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected a double but was BEGIN_OBJECT at line 1 column 6 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8390,"public void test8390() throws Throwable {
    StringReader stringReader0 = new StringReader("":MeM^/wrd#,7n8{OqSe"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.peek();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Expected value at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8491,"public void test8491() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 325;
    boolean boolean0 = jsonReader0.hasNext();
    assertFalse(jsonReader0.isLenient());
}",0,assertTrue(jsonReader0.isLenient())
project,0,test8492,"public void test8492() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 325;
    boolean boolean0 = jsonReader0.hasNext();
    assertTrue(boolean0);
}",1,
project,0,test8593,"public void test8593() throws Throwable {
    StringReader stringReader0 = new StringReader(""Cv2W#S#jiAa"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 4281;
    // Undeclared exception!
    try {
        jsonReader0.endObject();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test8694,"public void test8694() throws Throwable {
    StringReader stringReader0 = new StringReader(""FALSE"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    // Undeclared exception!
    try {
        jsonReader0.beginObject();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected BEGIN_OBJECT but was BOOLEAN at line 1 column 6 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8795,"public void test8795() throws Throwable {
    StringReader stringReader0 = new StringReader(""A>72fe3ax;<v^"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.beginObject();
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8896,"public void test8896() throws Throwable {
    StringReader stringReader0 = new StringReader(""1"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.hasNext();
    // Undeclared exception!
    try {
        jsonReader0.endArray();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected END_ARRAY but was NUMBER at line 1 column 2 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test8997,"public void test8997() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        jsonReader0.beginArray();
        fail(""Expecting exception: EOFException"");
    } catch (EOFException e) {
        //
        // End of input at line 1 column 1
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test9098,"public void test9098() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.peeked = 325;
    // Undeclared exception!
    try {
        jsonReader0.beginArray();
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",1,
project,0,test9199,"public void test9199() throws Throwable {
    JsonReader jsonReader0 = null;
    try {
        jsonReader0 = new JsonReader((Reader) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // in == null
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test92100,"public void test92100() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    jsonReader0.close();
    // Undeclared exception!
    try {
        jsonReader0.doPeek();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JsonReader is closed
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test93101,"public void test93101() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    String string0 = jsonReader0.toString();
    assertEquals(""JsonReader at line 1 column 1"", string0);
}",0,
project,0,test93102,"public void test93102() throws Throwable {
    StringReader stringReader0 = new StringReader("""");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    String string0 = jsonReader0.toString();
    assertFalse(jsonReader0.isLenient());
}",0,assertTrue(jsonReader0.isLenient())
project,0,test94103,"public void test94103() throws Throwable {
    StringReader stringReader0 = new StringReader(""Expected a boolean but was "");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    boolean boolean0 = jsonReader0.isLenient();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
