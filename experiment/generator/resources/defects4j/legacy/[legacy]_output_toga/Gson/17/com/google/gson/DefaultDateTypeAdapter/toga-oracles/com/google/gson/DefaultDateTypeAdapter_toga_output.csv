project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Class<Timestamp> class0 = Timestamp.class;
    DateFormat dateFormat0 = MockDateFormat.getDateTimeInstance();
    DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, dateFormat0, dateFormat0);
    JsonElement jsonElement0 = defaultDateTypeAdapter0.toJsonTree((Date) null);
    assertFalse(jsonElement0.isJsonArray());
}",0,assertTrue(jsonElement0.isJsonArray())
project,0,test011,"public void test011() throws Throwable {
    Class<Timestamp> class0 = Timestamp.class;
    DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, """");
    MockDate mockDate0 = new MockDate(1462, 1462, 0, 0, 8233);
    JsonElement jsonElement0 = defaultDateTypeAdapter0.toJsonTree(mockDate0);
    // Undeclared exception!
    try {
        defaultDateTypeAdapter0.fromJsonTree(jsonElement0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        //
        //
        verifyException(""com.google.gson.DefaultDateTypeAdapter"", e);
    }
}",1,
project,0,test022,"public void test022() throws Throwable {
    Class<java.sql.Date> class0 = java.sql.Date.class;
    DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, (DateFormat) null, (DateFormat) null);
    // Undeclared exception!
    try {
        defaultDateTypeAdapter0.toString();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.DefaultDateTypeAdapter"", e);
    }
}",0,
project,0,test033,"public void test033() throws Throwable {
    Class<java.sql.Date> class0 = java.sql.Date.class;
    DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0);
    StringReader stringReader0 = new StringReader(""DefaultDateTypeAdapter(SimpleDateFormat)"");
    JsonReader jsonReader0 = new JsonReader(stringReader0);
    try {
        defaultDateTypeAdapter0.read(jsonReader0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $
        //
        verifyException(""com.google.gson.stream.JsonReader"", e);
    }
}",1,
project,0,test044,"public void test044() throws Throwable {
    Class<java.sql.Date> class0 = java.sql.Date.class;
    DateFormat dateFormat0 = MockDateFormat.getDateInstance();
    DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, dateFormat0, dateFormat0);
    PipedReader pipedReader0 = new PipedReader();
    JsonReader jsonReader0 = new JsonReader(pipedReader0);
    try {
        defaultDateTypeAdapter0.read(jsonReader0);
        fail(""Expecting exception: IOException"");
    } catch (IOException e) {
        //
        // Pipe not connected
        //
        verifyException(""java.io.PipedReader"", e);
    }
}",1,
project,0,test055,"public void test055() throws Throwable {
    Class<java.sql.Date> class0 = java.sql.Date.class;
    DefaultDateTypeAdapter defaultDateTypeAdapter0 = null;
    try {
        defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, (String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.text.SimpleDateFormat"", e);
    }
}",0,
project,0,test066,"public void test066() throws Throwable {
    Class<java.sql.Date> class0 = java.sql.Date.class;
    DefaultDateTypeAdapter defaultDateTypeAdapter0 = null;
    try {
        defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, "" i"");
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal pattern character 'i'
        //
        verifyException(""java.text.SimpleDateFormat"", e);
    }
}",0,
project,0,test077,"public void test077() throws Throwable {
    Class<Timestamp> class0 = Timestamp.class;
    DefaultDateTypeAdapter defaultDateTypeAdapter0 = null;
    try {
        defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, 123, 0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal date style 123
        //
        verifyException(""java.text.DateFormat"", e);
    }
}",0,
project,0,test088,"public void test088() throws Throwable {
    DefaultDateTypeAdapter defaultDateTypeAdapter0 = null;
    try {
        defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(1489, 1489);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal time style 1489
        //
        verifyException(""java.text.DateFormat"", e);
    }
}",1,
project,0,test099,"public void test099() throws Throwable {
    Class<java.sql.Date> class0 = java.sql.Date.class;
    DateFormat dateFormat0 = MockDateFormat.getDateTimeInstance();
    DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, dateFormat0, dateFormat0);
    StringWriter stringWriter0 = new StringWriter();
    JsonWriter jsonWriter0 = new JsonWriter(stringWriter0);
    java.sql.Date date0 = new java.sql.Date((-1L));
    defaultDateTypeAdapter0.write(jsonWriter0, (Date) date0);
    assertFalse(jsonWriter0.isLenient());
}",0,assertTrue(jsonWriter0.isLenient())
project,0,test1110,"public void test1110() throws Throwable {
    Class<Date> class0 = Date.class;
    DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
    DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, dateFormat0, dateFormat0);
    JsonNull jsonNull0 = JsonNull.INSTANCE;
    // Undeclared exception!
    try {
        defaultDateTypeAdapter0.fromJsonTree(jsonNull0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // The date should be a string value
        //
        verifyException(""com.google.gson.DefaultDateTypeAdapter"", e);
    }
}",1,
project,0,test1211,"public void test1211() throws Throwable {
    Class<Date> class0 = Date.class;
    DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0);
    // Undeclared exception!
    try {
        defaultDateTypeAdapter0.write((JsonWriter) null, (Date) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.DefaultDateTypeAdapter"", e);
    }
}",0,
project,0,test1312,"public void test1312() throws Throwable {
    DefaultDateTypeAdapter defaultDateTypeAdapter0 = null;
    try {
        defaultDateTypeAdapter0 = new DefaultDateTypeAdapter((Class<? extends Date>) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Date type must be one of class java.util.Date, class java.sql.Timestamp, or class java.sql.Date but was null
        //
        verifyException(""com.google.gson.DefaultDateTypeAdapter"", e);
    }
}",0,
project,0,test1413,"public void test1413() throws Throwable {
    Class<Timestamp> class0 = Timestamp.class;
    DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0);
    StringWriter stringWriter0 = new StringWriter();
    BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0, 86);
    JsonWriter jsonWriter0 = new JsonWriter(bufferedWriter0);
    JsonWriter jsonWriter1 = jsonWriter0.value("""");
    MockDate mockDate0 = new MockDate(86, (-1179), 2937, 0, (-1179), 8233);
    // Undeclared exception!
    try {
        defaultDateTypeAdapter0.write(jsonWriter1, (Date) mockDate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // JSON must have only one top-level value.
        //
        verifyException(""com.google.gson.stream.JsonWriter"", e);
    }
}",0,
project,0,test1715,"public void test1715() throws Throwable {
    Class<java.sql.Date> class0 = java.sql.Date.class;
    DateFormat dateFormat0 = MockDateFormat.getDateTimeInstance(0, 0);
    DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, dateFormat0, dateFormat0);
    MockDate mockDate0 = new MockDate(0);
    JsonElement jsonElement0 = defaultDateTypeAdapter0.toJsonTree(mockDate0);
    Date date0 = defaultDateTypeAdapter0.fromJsonTree(jsonElement0);
    assertNotNull(date0);
}",1,
project,0,test1816,"public void test1816() throws Throwable {
    Class<java.sql.Date> class0 = java.sql.Date.class;
    DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, """");
    // Undeclared exception!
    try {
        defaultDateTypeAdapter0.read((JsonReader) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.gson.DefaultDateTypeAdapter"", e);
    }
}",1,
project,0,test1917,"public void test1917() throws Throwable {
    Class<java.sql.Date> class0 = java.sql.Date.class;
    DefaultDateTypeAdapter defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0);
    String string0 = defaultDateTypeAdapter0.toString();
    assertEquals(""DefaultDateTypeAdapter(SimpleDateFormat)"", string0);
}",0,
project,0,test2018,"public void test2018() throws Throwable {
    Class<Date> class0 = Date.class;
    DefaultDateTypeAdapter defaultDateTypeAdapter0 = null;
    try {
        defaultDateTypeAdapter0 = new DefaultDateTypeAdapter(class0, 60000);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Illegal date style 60000
        //
        verifyException(""java.text.DateFormat"", e);
    }
}",0,
