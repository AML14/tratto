[
  {
    "signature": "com.google.javascript.jscomp.MinimizeExitPoints(com.google.javascript.jscomp.AbstractCompiler compiler)",
    "name": "com.google.javascript.jscomp.MinimizeExitPoints",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.MinimizeExitPoints",
      "name": "MinimizeExitPoints",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.MinimizeExitPoints",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.AbstractCompiler",
          "name": "AbstractCompiler",
          "isArray": false
        },
        "name": "compiler"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "process(com.google.javascript.rhino.Node externs, com.google.javascript.rhino.Node root)",
    "name": "process",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.MinimizeExitPoints",
      "name": "MinimizeExitPoints",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.MinimizeExitPoints",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "externs"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "root"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "visit(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.Node parent)",
    "name": "visit",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.MinimizeExitPoints",
      "name": "MinimizeExitPoints",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.MinimizeExitPoints",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "parent"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "tryMinimizeExits(com.google.javascript.rhino.Node n, int exitType, java.lang.String labelName)",
    "name": "tryMinimizeExits",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.MinimizeExitPoints",
      "name": "MinimizeExitPoints",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.MinimizeExitPoints",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "exitType"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "labelName"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "The execution node of a parent to inspect.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "exitType"
        },
        "comment": "The type of exit to look for.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "labelName"
        },
        "comment": "If parent is a label the name of the label to look for. labelName is null otherwise.",
        "kind": "PARAM",
        "condition": "args[2]==null"
      }
    ],
    "throwsTags": []
  }
]