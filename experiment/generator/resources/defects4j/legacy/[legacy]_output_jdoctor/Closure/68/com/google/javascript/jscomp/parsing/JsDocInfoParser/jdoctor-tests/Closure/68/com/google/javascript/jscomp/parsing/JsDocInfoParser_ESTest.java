/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 04 03:20:42 GMT 2023
 */
package com.google.javascript.jscomp.parsing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.mozilla.rhino.ErrorReporter;
import com.google.javascript.jscomp.mozilla.rhino.Token;
import com.google.javascript.jscomp.mozilla.rhino.ast.Comment;
import com.google.javascript.jscomp.mozilla.rhino.ast.ErrorCollector;
import com.google.javascript.jscomp.mozilla.rhino.tools.ToolErrorReporter;
import com.google.javascript.jscomp.parsing.Config;
import com.google.javascript.jscomp.parsing.JsDocInfoParser;
import com.google.javascript.jscomp.parsing.JsDocTokenStream;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import java.util.LinkedHashSet;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class JsDocInfoParser_ESTest extends JsDocInfoParser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("l*/zIv1@ 7>XXXjP=Ew");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "l*/zIv1@ 7>XXXjP=Ew", config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?|[%");
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("l*/zIv1@ 7>XXXjP=Ew");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "l*/zIv1@ 7>XXXjP=Ew", config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.hasParsedJSDocInfo();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*2\"T\"ptcv%");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "*2\"T\"ptcv%", config0, errorCollector0);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.getFileOverviewJSDocInfo();
    }

    @Test(timeout = 4000)
    public void test064() throws Throwable {
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("@lx*dzIv1@ 7>XXXjP=w");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "@lx*dzIv1@ 7>XXXjP=w", config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test075() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test076() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;");
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;");
        node0.hasOneChild();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*2\"T\"ptcv%");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "*2\"T\"ptcv%", config0, errorCollector0);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.retrieveAndResetParsedJSDocInfo();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(".<");
        Token.CommentType token_CommentType0 = Token.CommentType.LINE;
        Comment comment0 = new Comment(1192, 1192, token_CommentType0, ".<");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, ".<", config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("@=l>VM;nleJ5)QW");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "@=l>VM;nleJ5)QW", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("l*/zIv1@ >XXX{P=Ew");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "l*/zIv1@ >XXX{P=Ew", config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("l*/zIv1@ >XXX{P=Ew");
        jsDocTokenStream0.getJsDocToken();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "l*/zIv1@ >XXX{P=Ew", config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("M\n");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "M\n", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*2\"T\"ptcv%");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "*2\"T\"ptcv%", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("!");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "!", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(",N>>=k\"['VQ_A");
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, ",N>>=k\"['VQ_A", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(":v");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, ":v", config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(">?b<bl!%ac0h");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, ">?b<bl!%ac0h", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("[object Call]");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "[object Call]", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("{proxy:");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "{proxy:", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("(I'Sw,t4&qw!");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "(I'Sw,t4&qw!", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("?M\n");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "?M\n", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("|`");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "|`", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("]^|");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "]^|", config0, (ErrorReporter) null);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*}E");
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "*}E", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(");\n");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, ");\n", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("...");
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "k%", config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("=E|`");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "=E|`", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("Invalid token: ");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, "Invalid token: ", config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{/E:62f");
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("2c.<f");
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("2j.<");
    }

    @Test(timeout = 4000)
    public void test3233() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("2j.<");
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test3334() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?,R");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3335() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?,R");
    }

    @Test(timeout = 4000)
    public void test3436() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?}q");
    }

    @Test(timeout = 4000)
    public void test3437() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?}q");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3538() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?)n|[%");
    }

    @Test(timeout = 4000)
    public void test3539() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?)n|[%");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3640() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?.\n");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3641() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?.\n");
    }

    @Test(timeout = 4000)
    public void test3642() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?.\n");
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test3743() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("!");
    }

    @Test(timeout = 4000)
    public void test3844() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("0q?-");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3845() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("0q?-");
    }

    @Test(timeout = 4000)
    public void test3946() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("ob;stJh0CXN.!D$5*O[");
    }

    @Test(timeout = 4000)
    public void test3947() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("ob;stJh0CXN.!D$5*O[");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4048() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*E21\"T\"p&tclv%");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4049() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*E21\"T\"p&tclv%");
    }

    @Test(timeout = 4000)
    public void test4150() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("function");
    }

    @Test(timeout = 4000)
    public void test4251() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("null");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4252() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("null");
    }

    @Test(timeout = 4000)
    public void test4253() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("null");
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test4354() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("undefined");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4355() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("undefined");
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test4356() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("undefined");
    }

    @Test(timeout = 4000)
    public void test4457() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("M\n");
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test4458() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("M\n");
        node0.getChildCount();
    }

    @Test(timeout = 4000)
    public void test4459() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("M\n");
    }

    @Test(timeout = 4000)
    public void test4560() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("_\"|7eK,[");
    }

    @Test(timeout = 4000)
    public void test4661() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("#WvKa|UsJ_|4Ip9]#1");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4662() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("#WvKa|UsJ_|4Ip9]#1");
    }

    @Test(timeout = 4000)
    public void test4663() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("#WvKa|UsJ_|4Ip9]#1");
        node0.getChildCount();
    }

    @Test(timeout = 4000)
    public void test4764() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(6Uk&6dj");
    }

    @Test(timeout = 4000)
    public void test4865() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[Ucf_BWCd4,\"s");
    }

    @Test(timeout = 4000)
    public void test4966() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[wctc47B60]Q}$");
    }

    @Test(timeout = 4000)
    public void test4967() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[wctc47B60]Q}$");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4968() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[wctc47B60]Q}$");
        node0.hasChildren();
    }

    @Test(timeout = 4000)
    public void test5069() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{A\",!fv@es-A +J");
    }

    @Test(timeout = 4000)
    public void test5170() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{ge}");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test5171() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{ge}");
    }

    @Test(timeout = 4000)
    public void test5172() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{ge}");
        node0.hasOneChild();
    }

    @Test(timeout = 4000)
    public void test5273() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{proxy:");
    }
}
