/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 04 03:37:52 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.CheckLevel;
import com.google.javascript.jscomp.CheckPropertyOrder;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.PeepholeFoldConstants;
import com.google.javascript.jscomp.SyntacticScopeCreator;
import com.google.javascript.jscomp.UnfoldCompoundAssignments;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class PeepholeFoldConstants_ESTest extends PeepholeFoldConstants_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-3740));
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(52);
        Node node1 = new Node(29, node0, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test0012() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(52);
        Node node1 = new Node(29, node0, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        node2.hasChildren();
    }

    @Test(timeout = 4000)
    public void test0023() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-4193));
        Node node1 = new Node(32, node0, node0, 36, 5);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        node2.getChildCount();
    }

    @Test(timeout = 4000)
    public void test0034() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((-1.0), 107, (-3629));
        Node node1 = Node.newNumber((double) 39, 78, 2);
        Node node2 = new Node(14, node1, node0, 29, 44);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test0045() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 122, 122, 122);
        Node node1 = Node.newNumber((double) 14, 93, 43);
        Node node2 = new Node(9, node1, node0, 122, 21);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test0056() throws Throwable {
        Node node0 = new Node(133, 133, 133);
        Node node1 = Node.newNumber((double) 48);
        Node node2 = new Node(10, node0, node1, 4, 40);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test0057() throws Throwable {
        Node node0 = new Node(133, 133, 133);
        Node node1 = Node.newNumber((double) 48);
        Node node2 = new Node(10, node0, node1, 4, 40);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasMoreThanOneChild();
    }

    @Test(timeout = 4000)
    public void test0068() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1091));
        Node node1 = new Node(0);
        Node node2 = new Node(11, node0, node0, node1, 3, 4095);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test0069() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1091));
        Node node1 = new Node(0);
        Node node2 = new Node(11, node0, node0, node1, 3, 4095);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test00710() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(39, 39, 39);
        Node node1 = Node.newNumber((double) 0, 45, 26);
        Node node2 = new Node(13, node1, node0, 16, 49);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test00811() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) (-3629), 38, (-3629));
        Node node1 = Node.newNumber(2.147483647E9);
        Node node2 = new Node(15, node1, node0, (-325), 33);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test00912() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 0, 15, 15);
        Node node1 = Node.newNumber((double) 16, (-993), (-654));
        Node node2 = new Node(16, node0, node1, 2, 75);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test01013() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1134));
        Node node1 = new Node(38);
        Node node2 = new Node(17, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasChildren();
    }

    @Test(timeout = 4000)
    public void test01114() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 38, 38, 38);
        Node node1 = Node.newNumber((double) 16, (-993), (-654));
        Node node2 = new Node(18, node0, node1, 2, 1);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test01215() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((-1.0), 105, 105);
        Node node1 = Node.newNumber((double) (-2), 9, 5174);
        Node node2 = new Node(19, node1, node0, 0, 3);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test01316() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(1527);
        Node node1 = new Node(22, 22, 10);
        Node node2 = new Node(20, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasMoreThanOneChild();
    }

    @Test(timeout = 4000)
    public void test01417() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(52, 52, 52);
        Node node1 = Node.newNumber((double) 25, 0, 6);
        Node node2 = new Node(21, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getCharno();
    }

    @Test(timeout = 4000)
    public void test01518() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(1607, 1607, 1607);
        Node node1 = new Node(17);
        Node node2 = new Node(22, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test01519() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(1607, 1607, 1607);
        Node node1 = new Node(17);
        Node node2 = new Node(22, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasMoreThanOneChild();
    }

    @Test(timeout = 4000)
    public void test01620() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(33);
        Node node1 = new Node(32);
        Node node2 = new Node(23, node1, node0, 4, 43);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test01621() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(33);
        Node node1 = new Node(32);
        Node node2 = new Node(23, node1, node0, 4, 43);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasChildren();
    }

    @Test(timeout = 4000)
    public void test01722() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(1745);
        Node node1 = Node.newNumber((double) 4095, 31, 8);
        Node node2 = new Node(24, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test01723() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(1745);
        Node node1 = Node.newNumber((double) 4095, 31, 8);
        Node node2 = new Node(24, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasChildren();
    }

    @Test(timeout = 4000)
    public void test01824() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1091));
        Node node1 = new Node(36);
        Node node2 = new Node(31, node0, node1, 19, 28);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test01925() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(64, 64, 64);
        Node node1 = new Node(30);
        Node node2 = new Node(33, node0, node1, 13, 47);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test02026() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(18);
        Node node1 = new Node(41);
        Node node2 = new Node(34, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02127() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(64);
        Node node1 = new Node(9);
        Node node2 = new Node(35, node0, node1, 4095, 71);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test02228() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1777), (-1777), (-1777));
        Node node1 = new Node(16, 26, 20);
        Node node2 = new Node(36, node1, node0, 21, 33);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasMoreThanOneChild();
    }

    @Test(timeout = 4000)
    public void test02329() throws Throwable {
        Node node0 = Node.newString(141, "Fractional bitwise operand: {0'", 141, 141);
        Node node1 = Node.newNumber((double) 21, 43, 49);
        Node node2 = new Node(38, node1, node0, 28, 27);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isUnscopedQualifiedName();
    }

    @Test(timeout = 4000)
    public void test02430() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(117);
        Node node1 = new Node(2, (-1), 8);
        Node node2 = new Node(39, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02531() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-277), (-277), (-277));
        Node node1 = new Node(37);
        Node node2 = new Node(40, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02632() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1091));
        Node node1 = new Node(35);
        Node node2 = new Node(41, node1, node0, 23, 27);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02733() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(1721);
        Node node1 = new Node(30);
        Node node2 = new Node(42, node0, node1, 43, 0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasOneChild();
    }

    @Test(timeout = 4000)
    public void test02834() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(93);
        Node node1 = new Node((-3));
        Node node2 = new Node(43, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test02935() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(137);
        Node node1 = new Node(37, 7, 1);
        Node node2 = new Node(44, node1, node0, node0, 9, 137);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03036() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(830);
        Node node1 = new Node(13);
        Node node2 = new Node(45, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasMoreThanOneChild();
    }

    @Test(timeout = 4000)
    public void test03137() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-277));
        Node node1 = new Node(37);
        Node node2 = new Node(46, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasMoreThanOneChild();
    }

    @Test(timeout = 4000)
    public void test03238() throws Throwable {
        Node node0 = new Node(49);
        Node node1 = new Node(31);
        Node node2 = new Node(47, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03339() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1091), (-1091), (-1091));
        Node node1 = new Node(20);
        Node node2 = new Node(48, node0, node1, 2, 1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03440() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(407);
        Node node1 = new Node(12);
        Node node2 = new Node(49, node0, node0, node1, 1, 14);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isLocalResultCall();
    }

    @Test(timeout = 4000)
    public void test03541() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-6));
        Node node1 = new Node(41);
        Node node2 = new Node(50, node1, node0, 36, 5);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03642() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1091));
        Node node1 = new Node(30);
        Node node2 = new Node(51, node0, node1, 15, 0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test03743() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-4253));
        Node node1 = new Node(31);
        Node node2 = new Node(52, node1, node0, 36, 5);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test03844() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(52);
        Node node1 = new Node(42);
        Node node2 = new Node(53, node1, node0, 300, 19);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasMoreThanOneChild();
    }

    @Test(timeout = 4000)
    public void test03945() throws Throwable {
        Node node0 = new Node((-1272), (-1272), (-1272));
        Node node1 = new Node(49);
        Node node2 = new Node(54, node1, node0, 40, 2);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04046() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(1754, 1754, 1754);
        Node node1 = new Node(30);
        Node node2 = new Node(55, node0, node1, 43, 0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04147() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-635));
        Node node1 = new Node(10);
        Node node2 = new Node(56, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04248() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-422));
        Node node1 = new Node(31);
        Node node2 = new Node(57, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04349() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-4189), (-4189), (-4189));
        Node node1 = new Node(41);
        Node node2 = new Node(58, node1, node0, 36, 5);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04450() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1092), (-1092), (-1092));
        Node node1 = new Node(2);
        Node node2 = new Node(59, node0, node1, 0, 30);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04551() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(1737, 1737, 1737);
        Node node1 = new Node(30);
        Node node2 = new Node(60, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04652() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-6), (-6), (-6));
        Node node1 = new Node(41);
        Node node2 = new Node(61, node1, node0, 36, 5);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04753() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1091), (-1091), (-1091));
        Node node1 = new Node(0);
        Node node2 = new Node(62, node0, node1, 13, 2);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04854() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1091));
        Node node1 = new Node(0);
        Node node2 = new Node(63, node0, node1, 13, 2);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test04955() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-4215), (-4215), (-4215));
        Node node1 = new Node(31);
        Node node2 = new Node(64, node1, node0, 36, 5);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasMoreThanOneChild();
    }

    @Test(timeout = 4000)
    public void test05056() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-4145));
        Node node1 = new Node(41);
        Node node2 = new Node(65, node0, node1, 30, 9);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test05157() throws Throwable {
        Node node0 = new Node((-1272), (-1272), (-1272));
        Node node1 = new Node(49);
        Node node2 = new Node(66, node1, node0, 40, 2);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test05258() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(137);
        Node node1 = new Node(37, 7, 1);
        Node node2 = new Node(67, node1, node0, node0, 9, 137);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test05359() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(830);
        Node node1 = new Node(13);
        Node node2 = new Node(68, node1, node0, 2, 30);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getType();
    }

    @Test(timeout = 4000)
    public void test05460() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(6);
        Node node1 = new Node(1);
        Node node2 = new Node(69, node0, node1, 23, 27);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test05561() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1091));
        Node node1 = new Node(39);
        Node node2 = new Node(70, node1, node0, 38, 34);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test05662() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1134));
        Node node1 = new Node(1);
        Node node2 = new Node(71, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test05763() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(1719, 1719, 1719);
        Node node1 = new Node((-23));
        Node node2 = new Node(72, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test05864() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(1721, 1721, 1721);
        Node node1 = new Node(30);
        Node node2 = new Node(73, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test05965() throws Throwable {
        Node node0 = new Node(140, 140, 140);
        Node node1 = new Node(2);
        Node node2 = new Node(74, node0, node1, 18, 22);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test06066() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(830);
        Node node1 = new Node(13);
        Node node2 = new Node(75, node1, node0, 2, 30);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test06167() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-277));
        Node node1 = new Node(37);
        Node node2 = new Node(76, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getLineno();
    }

    @Test(timeout = 4000)
    public void test06268() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-277), (-277), (-277));
        Node node1 = new Node(37);
        Node node2 = new Node(77, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test06369() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-295), (-295), (-295));
        Node node1 = new Node(37);
        Node node2 = new Node(78, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isOptionalArg();
    }

    @Test(timeout = 4000)
    public void test06470() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1134));
        Node node1 = new Node(38);
        Node node2 = new Node(79, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasMoreThanOneChild();
    }

    @Test(timeout = 4000)
    public void test06571() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1412));
        Node node1 = new Node(100);
        Node node2 = new Node(80, node1, node0, 7, 18);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isQuotedString();
    }

    @Test(timeout = 4000)
    public void test06672() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1091), (-1091), (-1091));
        Node node1 = new Node(2);
        Node node2 = new Node(81, node0, node1, 0, 30);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test06773() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(48, 48, 48);
        Node node1 = new Node(45);
        Node node2 = new Node(82, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isNoSideEffectsCall();
    }

    @Test(timeout = 4000)
    public void test06874() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-779), (-1640531527), (-779));
        Node node1 = new Node(42);
        Node node2 = new Node(83, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test06975() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(174, 174, 174);
        Node node1 = new Node(4);
        Node node2 = new Node(84, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test07076() throws Throwable {
        Node node0 = new Node((-5277));
        Node node1 = new Node(0, 33, 14);
        Node node2 = new Node(85, node0, node1, 42, 0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isVarArgs();
    }

    @Test(timeout = 4000)
    public void test07177() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(117);
        Node node1 = new Node(31, 34, 41);
        Node node2 = new Node(86, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test07278() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(137);
        Node node1 = new Node(37, 7, 1);
        Node node2 = new Node(87, node1, node0, node0, 9, 137);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.isLocalResultCall();
    }

    @Test(timeout = 4000)
    public void test07379() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1091), (-1091), (-1091));
        Node node1 = new Node(2);
        Node node2 = new Node(88, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test07480() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-4222), (-4222), (-4222));
        Node node1 = new Node(21);
        Node node2 = new Node(89, node1, node0, 5, 2);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test07581() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1091), (-1091), (-1091));
        Node node1 = new Node(24);
        Node node2 = new Node(90, node0, node1, 0, 30);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test07682() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-4126));
        Node node1 = new Node(9);
        Node node2 = new Node(91, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test07783() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1091), (-1091), (-1091));
        Node node1 = new Node(0);
        Node node2 = new Node(92, node0, node1, 13, 2);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test07884() throws Throwable {
        Node node0 = new Node((-1299), (-1299), (-1299));
        Node node1 = new Node(49);
        Node node2 = new Node(93, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test07985() throws Throwable {
        Node node0 = new Node(77);
        Node node1 = new Node(19, 49, 77);
        Node node2 = new Node(94, node0, node1);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08086() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString("k~@");
        Node node1 = new Node(0);
        Node node2 = new Node(95, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08187() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-277));
        Node node1 = new Node(37);
        Node node2 = new Node(96, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08288() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(42);
        Node node1 = new Node(6);
        Node node2 = new Node(97, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08389() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1118));
        Node node1 = new Node(0);
        Node node2 = new Node(98, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08490() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 38, 38, 38);
        Node node1 = Node.newNumber((double) 16, (-993), (-654));
        Node node2 = new Node(99, node0, node1, 2, 75);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08591() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(57, "qOGIrCp|]_3ItD", 57, 57);
        Node node1 = Node.newNumber((double) 25, 71, 6);
        Node node2 = new Node(100, node1, node0, 32, (-3));
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08692() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(122, 122, 122);
        Node node1 = Node.newString("vengHh");
        Node node2 = new Node(101, node0, node1);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08793() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(1521);
        Node node1 = new Node(3);
        Node node2 = new Node(1, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test08894() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 122, 122, 122);
        Compiler compiler0 = new Compiler();
        CheckLevel checkLevel0 = CheckLevel.ERROR;
        CheckPropertyOrder checkPropertyOrder0 = new CheckPropertyOrder(compiler0, checkLevel0, true);
        SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
        NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkPropertyOrder0, syntacticScopeCreator0);
        peepholeFoldConstants0.beginTraversal(nodeTraversal0);
        Node node1 = new Node(122, node0, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getLineno();
    }

    @Test(timeout = 4000)
    public void test08995() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(149);
        Compiler compiler0 = new Compiler();
        CheckLevel checkLevel0 = CheckLevel.ERROR;
        CheckPropertyOrder checkPropertyOrder0 = new CheckPropertyOrder(compiler0, checkLevel0, true);
        SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
        NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkPropertyOrder0, syntacticScopeCreator0);
        peepholeFoldConstants0.beginTraversal(nodeTraversal0);
        Node node1 = new Node(122, node0, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        node2.hasChildren();
    }

    @Test(timeout = 4000)
    public void test09096() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(124);
        Node node1 = new Node(21, node0, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test09097() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(124);
        Node node1 = new Node(21, node0, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        node2.getType();
    }

    @Test(timeout = 4000)
    public void test09198() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-4231), (-4231), (-4231));
        Node node1 = new Node(31);
        Node node2 = new Node(21, node1, node0, 36, 5);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getLineno();
    }

    @Test(timeout = 4000)
    public void test09299() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(38);
        Node node1 = new Node(28, node0, 2, 45);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test093100() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(85);
        Node node1 = new Node(27, node0, node0);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test094101() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(98, 158, 71);
        Node node1 = new Node(22, node0, node0);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test095102() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(100, 100, 100);
        Node node1 = new Node(10, node0, node0, 33, 5);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test096103() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(101);
        Node node1 = new Node(10, node0, node0, 33, 5);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test097104() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(64);
        Node node1 = new Node(29, node0, node0);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test098105() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(43, 43, 43);
        Node node1 = new Node(22, node0, node0);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test099106() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(32);
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
    }

    @Test(timeout = 4000)
    public void test100107() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-4193));
        Node node1 = new Node(41);
        Node node2 = new Node(32, node1, node0, 36, 5);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test101108() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 29, 28, 47);
        Node node1 = new Node(32, node0, node0, 11, 4);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test102109() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString("Mgkh*gto");
        Node node1 = new Node(32, node0, node0, 11, 4);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test103110() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(44, 44, 44);
        Node node1 = new Node(32, node0, node0, node0, node0);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test104111() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(64);
        Node node1 = new Node(32, node0, node0, 4, 2);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test105112() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString("Mength");
        Node node1 = new Node(29, node0, node0, node0, node0, 8, (-3));
        Node node2 = new Node(32, node1, node1, 11, 4);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test106113() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 4095, 31, 8);
        Node node1 = new Node(27, node0, node0, 31, 0);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test107114() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 0, 38, 32);
        Node node1 = new Node(26, node0, node0, 4, 17);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test107115() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 0, 38, 32);
        Node node1 = new Node(26, node0, node0, 4, 17);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        node2.getType();
    }

    @Test(timeout = 4000)
    public void test108116() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 25, 0, 46);
        Node node1 = new Node(28, node0, node0, 38, 29);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test109117() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 122, 122, 122);
        Node node1 = new Node(29, node0, node0);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test110118() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(43);
        Node node1 = new Node(26, node0, node0);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test111119() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 37, 38, 32);
        Node node1 = new Node(26, node0, node0, 4, 17);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test112120() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber(2052.96333, 31, 8);
        Node node1 = new Node(27, node0, node0, 31, 0);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test113121() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-6));
        Node node1 = new Node(41);
        Node node2 = new Node(52, node1, node0, 36, 5);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test114122() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1134));
        Node node1 = new Node(38);
        Node node2 = new Node(101, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasChildren();
    }

    @Test(timeout = 4000)
    public void test114123() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-1134));
        Node node1 = new Node(38);
        Node node2 = new Node(101, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test115124() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(122, 122, 122);
        Node node1 = Node.newString("vengHh");
        UnfoldCompoundAssignments unfoldCompoundAssignments0 = new UnfoldCompoundAssignments((AbstractCompiler) null);
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, unfoldCompoundAssignments0);
        peepholeFoldConstants0.beginTraversal(nodeTraversal0);
        Node node2 = new Node(101, node1, node0);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test116125() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(1, 1, 1);
        Node node1 = Node.newNumber((double) 25, 0, 6);
        Node node2 = new Node(21, node0, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test117126() throws Throwable {
        Node node0 = new Node((-1299));
        Node node1 = Node.newString(",");
        Node node2 = new Node(21, node1, node0);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getType();
    }

    @Test(timeout = 4000)
    public void test118127() throws Throwable {
        Node node0 = new Node((-1299));
        Node node1 = Node.newString(",");
        Node node2 = new Node(21, node1, node0);
        node2.replaceChild(node0, node2);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test119128() throws Throwable {
        Node node0 = new Node((-1299), (-1299), (-1299));
        Node node1 = Node.newString(",");
        Node node2 = new Node(21, node1, node0);
        Node node3 = Node.newNumber((double) 38);
        node2.replaceChild(node0, node3);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test120129() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 105, 105, 105);
        Node node1 = Node.newNumber((double) 48, 1, 27);
        Node node2 = new Node(24, node0, node1, 32, 16);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test121130() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((-3687.51), (-2191), (-2191));
        Node node1 = Node.newNumber((double) 4);
        Node node2 = new Node(25, node0, node1, 35, 14);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test121131() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((-3687.51), (-2191), (-2191));
        Node node1 = Node.newNumber((double) 4);
        Node node2 = new Node(25, node0, node1, 35, 14);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getCharno();
    }

    @Test(timeout = 4000)
    public void test122132() throws Throwable {
        Node node0 = new Node(48, 48, 48);
        Node node1 = Node.newNumber((double) 33, 31, 46);
        Node node2 = new Node(18, node1, node0, 6, 7);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getChildCount();
    }

    @Test(timeout = 4000)
    public void test123133() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 105, 105, 105);
        Node node1 = Node.newNumber((double) (-2), 9, 32);
        Node node2 = new Node(19, node1, node0, 0, 3);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test124134() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(49, 49, 49);
        Node node1 = Node.newNumber((double) 37, 38, 32);
        Node node2 = new Node(16, node1, node1, node1, node0, (-2), 20);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test125135() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node((-4193), (-4193), (-4193));
        Node node1 = new Node(41);
        Node node2 = new Node(14, node1, node0, 36, 5);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test126136() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(40, 40, 40);
        Node node1 = new Node(40, 48, 9);
        Node node2 = new Node(16, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test127137() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(43);
        Node node1 = new Node(4095, 48, 9);
        Node node2 = new Node(16, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test128138() throws Throwable {
        Node node0 = Node.newString("Fractional bitwise operaJd: {0'");
        Node node1 = Node.newString(44, "Fractional bitwise operaJd: {0'", 27, 34);
        Node node2 = new Node(12, node1, node0, 28, 27);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test129139() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(42);
        Node node1 = new Node(13, 18, 9);
        Node node2 = new Node(14, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test130140() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(40);
        Node node1 = new Node(48, 48, 9);
        Node node2 = new Node(16, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test131141() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber(25.968556567425704, 107, (-3629));
        Node node1 = Node.newNumber((double) 2);
        Node node2 = new Node(14, node1, node0, 29, 44);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test132142() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newNumber((double) 38, 38, 38);
        Node node1 = Node.newNumber((double) 16, 40, 36);
        Node node2 = new Node(16, node0, node1, 2, 44);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test133143() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString("NO_SHADOW");
        Node node1 = new Node(30, node0, node0, node0, node0, 30, 46);
        Node node2 = new Node(18, node1, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node1);
        node3.isLocalResultCall();
    }

    @Test(timeout = 4000)
    public void test134144() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(1737);
        Node node1 = new Node(30);
        Node node2 = Node.newString("Array index out of bounds: {0}");
        node1.addChildrenToFront(node2);
        Node node3 = new Node(35, node0, node1, 27, 9);
        Node node4 = peepholeFoldConstants0.optimizeSubtree(node1);
        node4.hasOneChild();
    }

    @Test(timeout = 4000)
    public void test135145() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = Node.newString(37, "com.google.javascript.jscomp.PeepholeFoldConstants");
        Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
    }

    @Test(timeout = 4000)
    public void test136146() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(52);
        Node node1 = new Node(37, node0, node0);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        node2.hasOneChild();
    }

    @Test(timeout = 4000)
    public void test137147() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(35, 35, 35);
        Node node1 = new Node(37, node0, node0);
        node0.addChildToBack(node1);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
        node2.getCharno();
    }

    @Test(timeout = 4000)
    public void test137148() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(35, 35, 35);
        Node node1 = new Node(37, node0, node0);
        node0.addChildToBack(node1);
        Node node2 = peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test138149() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(33);
        Node node1 = new Node(37, node0, node0);
        peepholeFoldConstants0.optimizeSubtree(node1);
    }

    @Test(timeout = 4000)
    public void test139150() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(33);
        Node node1 = new Node(33);
        Node node2 = new Node(37, node1, node0);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test140151() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(33);
        Node node1 = Node.newString("5s");
        Node node2 = new Node(37, node0, node1);
        peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test141152() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(174, 174, 174);
        Node node1 = new Node(4);
        Node node2 = new Node(35, node0, node1);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
    }

    @Test(timeout = 4000)
    public void test142153() throws Throwable {
        Node node0 = Node.newString(141, "Fractional bitwise operaJd: {0'", 141, 141);
        Node node1 = Node.newString("Fractional bitwise operaJd: {0'");
        Node node2 = new Node(33, node0, node1, 28, 27);
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.hasChildren();
    }

    @Test(timeout = 4000)
    public void test143154() throws Throwable {
        PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants();
        Node node0 = new Node(407);
        Node node1 = new Node(12);
        Node node2 = new Node(33, node1, node0);
        Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
        node3.getType();
    }
}
