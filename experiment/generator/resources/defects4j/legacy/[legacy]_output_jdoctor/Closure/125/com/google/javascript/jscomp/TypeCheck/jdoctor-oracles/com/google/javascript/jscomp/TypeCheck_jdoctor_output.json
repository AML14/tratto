[
  {
    "signature": "com.google.javascript.jscomp.TypeCheck(com.google.javascript.jscomp.AbstractCompiler compiler, com.google.javascript.jscomp.type.ReverseAbstractInterpreter reverseInterpreter, com.google.javascript.rhino.jstype.JSTypeRegistry typeRegistry, com.google.javascript.jscomp.Scope topScope, com.google.javascript.jscomp.MemoizedScopeCreator scopeCreator, com.google.javascript.jscomp.CheckLevel reportMissingOverride)",
    "name": "com.google.javascript.jscomp.TypeCheck",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeCheck",
      "name": "TypeCheck",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeCheck",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.AbstractCompiler",
          "name": "AbstractCompiler",
          "isArray": false
        },
        "name": "compiler"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.type.ReverseAbstractInterpreter",
          "name": "ReverseAbstractInterpreter",
          "isArray": false
        },
        "name": "reverseInterpreter"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSTypeRegistry",
          "name": "JSTypeRegistry",
          "isArray": false
        },
        "name": "typeRegistry"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.Scope",
          "name": "Scope",
          "isArray": false
        },
        "name": "topScope"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.MemoizedScopeCreator",
          "name": "MemoizedScopeCreator",
          "isArray": false
        },
        "name": "scopeCreator"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.CheckLevel",
          "name": "CheckLevel",
          "isArray": false
        },
        "name": "reportMissingOverride"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "com.google.javascript.jscomp.TypeCheck(com.google.javascript.jscomp.AbstractCompiler compiler, com.google.javascript.jscomp.type.ReverseAbstractInterpreter reverseInterpreter, com.google.javascript.rhino.jstype.JSTypeRegistry typeRegistry, com.google.javascript.jscomp.CheckLevel reportMissingOverride)",
    "name": "com.google.javascript.jscomp.TypeCheck",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeCheck",
      "name": "TypeCheck",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeCheck",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.AbstractCompiler",
          "name": "AbstractCompiler",
          "isArray": false
        },
        "name": "compiler"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.type.ReverseAbstractInterpreter",
          "name": "ReverseAbstractInterpreter",
          "isArray": false
        },
        "name": "reverseInterpreter"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSTypeRegistry",
          "name": "JSTypeRegistry",
          "isArray": false
        },
        "name": "typeRegistry"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.CheckLevel",
          "name": "CheckLevel",
          "isArray": false
        },
        "name": "reportMissingOverride"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "com.google.javascript.jscomp.TypeCheck(com.google.javascript.jscomp.AbstractCompiler compiler, com.google.javascript.jscomp.type.ReverseAbstractInterpreter reverseInterpreter, com.google.javascript.rhino.jstype.JSTypeRegistry typeRegistry)",
    "name": "com.google.javascript.jscomp.TypeCheck",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeCheck",
      "name": "TypeCheck",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeCheck",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.AbstractCompiler",
          "name": "AbstractCompiler",
          "isArray": false
        },
        "name": "compiler"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.type.ReverseAbstractInterpreter",
          "name": "ReverseAbstractInterpreter",
          "isArray": false
        },
        "name": "reverseInterpreter"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSTypeRegistry",
          "name": "JSTypeRegistry",
          "isArray": false
        },
        "name": "typeRegistry"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "reportMissingProperties(boolean report)",
    "name": "reportMissingProperties",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeCheck",
      "name": "TypeCheck",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeCheck",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.TypeCheck",
      "name": "com.google.javascript.jscomp.TypeCheck",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "report"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "process(com.google.javascript.rhino.Node externsRoot, com.google.javascript.rhino.Node jsRoot)",
    "name": "process",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeCheck",
      "name": "TypeCheck",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeCheck",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "externsRoot"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "jsRoot"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "externsRoot"
        },
        "comment": "The root of the externs parse tree.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "jsRoot"
        },
        "comment": "The root of the input parse tree to be checked.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "processForTesting(com.google.javascript.rhino.Node externsRoot, com.google.javascript.rhino.Node jsRoot)",
    "name": "processForTesting",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeCheck",
      "name": "TypeCheck",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeCheck",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "com.google.javascript.jscomp.Scope",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "externsRoot"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "jsRoot"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "check(com.google.javascript.rhino.Node node, boolean externs)",
    "name": "check",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeCheck",
      "name": "TypeCheck",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeCheck",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "externs"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "shouldTraverse(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.Node parent)",
    "name": "shouldTraverse",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeCheck",
      "name": "TypeCheck",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeCheck",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "parent"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "visit(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.Node parent)",
    "name": "visit",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeCheck",
      "name": "TypeCheck",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeCheck",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "parent"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
            "name": "NodeTraversal",
            "isArray": false
          },
          "name": "t"
        },
        "comment": "The node traversal object that supplies context. t is such as the scope chain to use in name lookups as well as error reporting.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "The node being visited.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "parent"
        },
        "comment": "The parent of the node n.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "visitName(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.Node parent)",
    "name": "visitName",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeCheck",
      "name": "TypeCheck",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeCheck",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "parent"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
            "name": "NodeTraversal",
            "isArray": false
          },
          "name": "t"
        },
        "comment": "The node traversal object that supplies context. t is such as the scope chain to use in name lookups as well as error reporting.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "The node being visited.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "parent"
        },
        "comment": "The parent of the node n.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the node is typeable or not., false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getTypedPercent()",
    "name": "getTypedPercent",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeCheck",
      "name": "TypeCheck",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeCheck",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a number between 0.0 and 100.0.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]