[
  {
    "signature": "com.google.javascript.jscomp.AnalyzePrototypeProperties(com.google.javascript.jscomp.AbstractCompiler compiler, com.google.javascript.jscomp.JSModuleGraph moduleGraph, boolean canModifyExterns, boolean anchorUnusedVars)",
    "name": "com.google.javascript.jscomp.AnalyzePrototypeProperties",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.AnalyzePrototypeProperties",
      "name": "AnalyzePrototypeProperties",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.AnalyzePrototypeProperties",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.AbstractCompiler",
          "name": "AbstractCompiler",
          "isArray": false
        },
        "name": "compiler"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.JSModuleGraph",
          "name": "JSModuleGraph",
          "isArray": false
        },
        "name": "moduleGraph"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "canModifyExterns"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "anchorUnusedVars"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.jscomp.AbstractCompiler",
            "name": "AbstractCompiler",
            "isArray": false
          },
          "name": "compiler"
        },
        "comment": "The compiler.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.jscomp.JSModuleGraph",
            "name": "JSModuleGraph",
            "isArray": false
          },
          "name": "moduleGraph"
        },
        "comment": "The graph for resolving module dependencies. May be null if we don't care about module dependencies.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "canModifyExterns"
        },
        "comment": "If true. canModifyExterns is then we can move prototype properties that are declared in the externs file.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "anchorUnusedVars"
        },
        "comment": "If true then we must mark all vars as referenced even if they are never used.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "process(com.google.javascript.rhino.Node externRoot, com.google.javascript.rhino.Node root)",
    "name": "process",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.AnalyzePrototypeProperties",
      "name": "AnalyzePrototypeProperties",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.AnalyzePrototypeProperties",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "externRoot"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "root"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getAllNameInfo()",
    "name": "getAllNameInfo",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.AnalyzePrototypeProperties",
      "name": "AnalyzePrototypeProperties",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.AnalyzePrototypeProperties",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection<com.google.javascript.jscomp.AnalyzePrototypeProperties$NameInfo>",
      "name": "java.util.Collection<com.google.javascript.jscomp.AnalyzePrototypeProperties$NameInfo>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]