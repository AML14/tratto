[
  {
    "signature": "com.fasterxml.jackson.databind.ser.std.EnumSerializer(com.fasterxml.jackson.databind.util.EnumValues v)",
    "name": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
      "name": "EnumSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.util.EnumValues",
          "name": "EnumValues",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "com.fasterxml.jackson.databind.ser.std.EnumSerializer(com.fasterxml.jackson.databind.util.EnumValues v, java.lang.Boolean serializeAsIndex)",
    "name": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
      "name": "EnumSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.util.EnumValues",
          "name": "EnumValues",
          "isArray": false
        },
        "name": "v"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Boolean",
          "name": "Boolean",
          "isArray": false
        },
        "name": "serializeAsIndex"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "construct(java.lang.Class<?> enumClass, com.fasterxml.jackson.databind.SerializationConfig config, com.fasterxml.jackson.databind.BeanDescription beanDesc, com.fasterxml.jackson.annotation.JsonFormat$Value format)",
    "name": "construct",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
      "name": "EnumSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
      "name": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "enumClass"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.SerializationConfig",
          "name": "SerializationConfig",
          "isArray": false
        },
        "name": "config"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.BeanDescription",
          "name": "BeanDescription",
          "isArray": false
        },
        "name": "beanDesc"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.annotation.JsonFormat$Value",
          "name": "Value",
          "isArray": false
        },
        "name": "format"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "createContextual(com.fasterxml.jackson.databind.SerializerProvider serializers, com.fasterxml.jackson.databind.BeanProperty property)",
    "name": "createContextual",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
      "name": "EnumSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.databind.JsonSerializer<?>",
      "name": "com.fasterxml.jackson.databind.JsonSerializer<?>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.SerializerProvider",
          "name": "SerializerProvider",
          "isArray": false
        },
        "name": "serializers"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.BeanProperty",
          "name": "BeanProperty",
          "isArray": false
        },
        "name": "property"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getEnumValues()",
    "name": "getEnumValues",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
      "name": "EnumSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.databind.util.EnumValues",
      "name": "com.fasterxml.jackson.databind.util.EnumValues",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "serialize(java.lang.Enum<?> en, com.fasterxml.jackson.core.JsonGenerator gen, com.fasterxml.jackson.databind.SerializerProvider serializers)",
    "name": "serialize",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
      "name": "EnumSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Enum",
          "name": "Enum",
          "isArray": false
        },
        "name": "en"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
          "name": "JsonGenerator",
          "isArray": false
        },
        "name": "gen"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.SerializerProvider",
          "name": "SerializerProvider",
          "isArray": false
        },
        "name": "serializers"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getSchema(com.fasterxml.jackson.databind.SerializerProvider provider, java.lang.reflect.Type typeHint)",
    "name": "getSchema",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
      "name": "EnumSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.databind.JsonNode",
      "name": "com.fasterxml.jackson.databind.JsonNode",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.SerializerProvider",
          "name": "SerializerProvider",
          "isArray": false
        },
        "name": "provider"
      },
      {
        "type": {
          "qualifiedName": "java.lang.reflect.Type",
          "name": "Type",
          "isArray": false
        },
        "name": "typeHint"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper visitor, com.fasterxml.jackson.databind.JavaType typeHint)",
    "name": "acceptJsonFormatVisitor",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
      "name": "EnumSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper",
          "name": "JsonFormatVisitorWrapper",
          "isArray": false
        },
        "name": "visitor"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.JavaType",
          "name": "JavaType",
          "isArray": false
        },
        "name": "typeHint"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_serializeAsIndex(com.fasterxml.jackson.databind.SerializerProvider serializers)",
    "name": "_serializeAsIndex",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
      "name": "EnumSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.SerializerProvider",
          "name": "SerializerProvider",
          "isArray": false
        },
        "name": "serializers"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_isShapeWrittenUsingIndex(java.lang.Class<?> enumClass, com.fasterxml.jackson.annotation.JsonFormat$Value format, boolean fromClass)",
    "name": "_isShapeWrittenUsingIndex",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
      "name": "EnumSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.EnumSerializer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Boolean",
      "name": "java.lang.Boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "enumClass"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.annotation.JsonFormat$Value",
          "name": "Value",
          "isArray": false
        },
        "name": "format"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "fromClass"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]