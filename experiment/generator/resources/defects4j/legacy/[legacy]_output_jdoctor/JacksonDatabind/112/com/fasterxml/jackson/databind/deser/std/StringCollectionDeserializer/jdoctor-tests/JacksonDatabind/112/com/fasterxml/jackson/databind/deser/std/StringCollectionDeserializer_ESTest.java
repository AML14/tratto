/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 05 00:48:41 GMT 2023
 */
package com.fasterxml.jackson.databind.deser.std;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.json.UTF8DataInputJsonParser;
import com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.databind.BeanProperty;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.deser.NullValueProvider;
import com.fasterxml.jackson.databind.deser.ValueInstantiator;
import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;
import com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer;
import com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;
import com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
import com.fasterxml.jackson.databind.type.TypeFactory;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class StringCollectionDeserializer_ESTest extends StringCollectionDeserializer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        JavaType javaType0 = TypeFactory.unknownType();
        ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(javaType0);
        StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);
        stringCollectionDeserializer0.findBackReference("=iF-497M");
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        JavaType javaType0 = TypeFactory.unknownType();
        ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(javaType0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);
        stringCollectionDeserializer0.getEmptyValue((DeserializationContext) defaultDeserializationContext_Impl0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        JavaType javaType0 = TypeFactory.unknownType();
        ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(javaType0);
        StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, defaultDeserializationContext_Impl0, false);
        byte[] byteArray0 = new byte[3];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
        DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
        ObjectMapper objectMapper0 = new ObjectMapper();
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        UTF8DataInputJsonParser uTF8DataInputJsonParser0 = new UTF8DataInputJsonParser(iOContext0, 1, dataInputStream0, objectMapper0, byteQuadsCanonicalizer0, 1);
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ClassNameIdResolver classNameIdResolver0 = new ClassNameIdResolver(javaType0, typeFactory0);
        AsWrapperTypeDeserializer asWrapperTypeDeserializer0 = new AsWrapperTypeDeserializer(javaType0, classNameIdResolver0, "", false, javaType0);
        stringCollectionDeserializer0.deserializeWithType(uTF8DataInputJsonParser0, defaultDeserializationContext_Impl0, asWrapperTypeDeserializer0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        JavaType javaType0 = TypeFactory.unknownType();
        ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(javaType0);
        StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);
        StringCollectionDeserializer stringCollectionDeserializer1 = stringCollectionDeserializer0.withResolved((JsonDeserializer<?>) null, (JsonDeserializer<?>) null, stringCollectionDeserializer0, (Boolean) null);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        JavaType javaType0 = TypeFactory.unknownType();
        ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(javaType0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        Boolean boolean0 = Boolean.TRUE;
        JsonDeserializer<SerializationFeature> jsonDeserializer0 = (JsonDeserializer<SerializationFeature>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
        StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, valueInstantiator_Base0, jsonDeserializer0, jsonDeserializer0, jsonDeserializer0, boolean0);
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        JsonDeserializer<?> jsonDeserializer1 = stringCollectionDeserializer0.createContextual(defaultDeserializationContext_Impl0, beanProperty_Bogus0);
        StringCollectionDeserializer stringCollectionDeserializer1 = new StringCollectionDeserializer(javaType0, jsonDeserializer1, valueInstantiator_Base0);
        JsonDeserializer<?> jsonDeserializer2 = stringCollectionDeserializer1.createContextual(defaultDeserializationContext_Impl0, beanProperty_Bogus0);
        jsonDeserializer1.isCachable();
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        JavaType javaType0 = TypeFactory.unknownType();
        ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(javaType0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        Boolean boolean0 = Boolean.TRUE;
        JsonDeserializer<SerializationFeature> jsonDeserializer0 = (JsonDeserializer<SerializationFeature>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
        StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, valueInstantiator_Base0, jsonDeserializer0, jsonDeserializer0, jsonDeserializer0, boolean0);
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        JsonDeserializer<?> jsonDeserializer1 = stringCollectionDeserializer0.createContextual(defaultDeserializationContext_Impl0, beanProperty_Bogus0);
        StringCollectionDeserializer stringCollectionDeserializer1 = new StringCollectionDeserializer(javaType0, jsonDeserializer1, valueInstantiator_Base0);
        JsonDeserializer<?> jsonDeserializer2 = stringCollectionDeserializer1.createContextual(defaultDeserializationContext_Impl0, beanProperty_Bogus0);
        jsonDeserializer2.isCachable();
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        Class<Object> class0 = Object.class;
        JavaType javaType0 = TypeFactory.unknownType();
        FromStringDeserializer.Std fromStringDeserializer_Std0 = new FromStringDeserializer.Std(class0, 0);
        ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(javaType0);
        StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, fromStringDeserializer_Std0, valueInstantiator_Base0);
        StringCollectionDeserializer stringCollectionDeserializer1 = stringCollectionDeserializer0.withResolved(stringCollectionDeserializer0, fromStringDeserializer_Std0, fromStringDeserializer_Std0, (Boolean) null);
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        Class<Object> class0 = Object.class;
        JavaType javaType0 = TypeFactory.unknownType();
        FromStringDeserializer.Std fromStringDeserializer_Std0 = new FromStringDeserializer.Std(class0, 0);
        ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(javaType0);
        StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, fromStringDeserializer_Std0, valueInstantiator_Base0);
        boolean boolean0 = stringCollectionDeserializer0.isCachable();
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        JavaType javaType0 = TypeFactory.unknownType();
        ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(javaType0);
        StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);
        boolean boolean0 = stringCollectionDeserializer0.isCachable();
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        JavaType javaType0 = TypeFactory.unknownType();
        ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(javaType0);
        StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);
        StringCollectionDeserializer stringCollectionDeserializer1 = new StringCollectionDeserializer(javaType0, valueInstantiator_Base0, stringCollectionDeserializer0, (JsonDeserializer<?>) null, stringCollectionDeserializer0, (Boolean) null);
        boolean boolean0 = stringCollectionDeserializer1.isCachable();
    }

    @Test(timeout = 4000)
    public void test0810() throws Throwable {
        JavaType javaType0 = TypeFactory.unknownType();
        ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(javaType0);
        StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);
        StringCollectionDeserializer stringCollectionDeserializer1 = new StringCollectionDeserializer(javaType0, valueInstantiator_Base0, stringCollectionDeserializer0, (JsonDeserializer<?>) null, stringCollectionDeserializer0, (Boolean) null);
        boolean boolean0 = stringCollectionDeserializer1.isCachable();
        stringCollectionDeserializer0.isCachable();
    }

    @Test(timeout = 4000)
    public void test0911() throws Throwable {
        JavaType javaType0 = TypeFactory.unknownType();
        StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, (JsonDeserializer<?>) null, (ValueInstantiator) null);
        BeanProperty.Bogus beanProperty_Bogus0 = new BeanProperty.Bogus();
        stringCollectionDeserializer0.createContextual((DeserializationContext) null, beanProperty_Bogus0);
    }

    @Test(timeout = 4000)
    public void test1012() throws Throwable {
        JavaType javaType0 = TypeFactory.unknownType();
        ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(javaType0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser("NhP9O/n/");
        Boolean boolean0 = Boolean.TRUE;
        StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, valueInstantiator_Base0, (JsonDeserializer<?>) null, (JsonDeserializer<?>) null, (NullValueProvider) null, boolean0);
        Stack<String> stack0 = new Stack<String>();
        StringCollectionDeserializer stringCollectionDeserializer1 = new StringCollectionDeserializer(javaType0, valueInstantiator_Base0, (JsonDeserializer<?>) null, stringCollectionDeserializer0, (NullValueProvider) null, boolean0);
        stringCollectionDeserializer1.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<String>) stack0);
    }

    @Test(timeout = 4000)
    public void test1113() throws Throwable {
        JavaType javaType0 = TypeFactory.unknownType();
        ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(javaType0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser("<{V_*y-7");
        Boolean boolean0 = Boolean.TRUE;
        SerializationFeature serializationFeature0 = SerializationFeature.WRITE_DATES_WITH_ZONE_ID;
        JsonDeserializer<SerializationFeature> jsonDeserializer0 = (JsonDeserializer<SerializationFeature>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn((Object) null).when(jsonDeserializer0).deserialize(any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.DeserializationContext.class));
        StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, valueInstantiator_Base0, jsonDeserializer0, jsonDeserializer0, jsonDeserializer0, boolean0);
        StringCollectionDeserializer stringCollectionDeserializer1 = new StringCollectionDeserializer(javaType0, valueInstantiator_Base0, stringCollectionDeserializer0, stringCollectionDeserializer0, stringCollectionDeserializer0, boolean0);
        Stack<String> stack0 = new Stack<String>();
        stringCollectionDeserializer1.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<String>) stack0);
    }

    @Test(timeout = 4000)
    public void test1214() throws Throwable {
        JavaType javaType0 = TypeFactory.unknownType();
        ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(javaType0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
        StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, (JsonDeserializer<?>) null, valueInstantiator_Base0);
        Stack<String> stack0 = new Stack<String>();
        stringCollectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) defaultDeserializationContext_Impl0, (Collection<String>) stack0);
    }

    @Test(timeout = 4000)
    public void test1315() throws Throwable {
        JavaType javaType0 = TypeFactory.unknownType();
        ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(javaType0);
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
        Boolean boolean0 = Boolean.valueOf("JSON");
        StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, valueInstantiator_Base0, (JsonDeserializer<?>) null, (JsonDeserializer<?>) null, (NullValueProvider) null, boolean0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        stringCollectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) null, (Collection<String>) linkedHashSet0);
    }

    @Test(timeout = 4000)
    public void test1416() throws Throwable {
        JavaType javaType0 = TypeFactory.unknownType();
        ValueInstantiator.Base valueInstantiator_Base0 = new ValueInstantiator.Base(javaType0);
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createNonBlockingByteArrayParser();
        Boolean boolean0 = Boolean.TRUE;
        StringCollectionDeserializer stringCollectionDeserializer0 = new StringCollectionDeserializer(javaType0, valueInstantiator_Base0, (JsonDeserializer<?>) null, (JsonDeserializer<?>) null, (NullValueProvider) null, boolean0);
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        stringCollectionDeserializer0.deserialize(jsonParser0, (DeserializationContext) null, (Collection<String>) linkedHashSet0);
    }
}
