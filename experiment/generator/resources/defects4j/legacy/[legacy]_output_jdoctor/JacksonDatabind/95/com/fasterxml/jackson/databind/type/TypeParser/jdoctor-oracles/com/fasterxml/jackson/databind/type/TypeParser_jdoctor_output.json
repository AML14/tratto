[
  {
    "signature": "com.fasterxml.jackson.databind.type.TypeParser(com.fasterxml.jackson.databind.type.TypeFactory f)",
    "name": "com.fasterxml.jackson.databind.type.TypeParser",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.type.TypeParser",
      "name": "TypeParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.type.TypeParser",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.type.TypeFactory",
          "name": "TypeFactory",
          "isArray": false
        },
        "name": "f"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "withFactory(com.fasterxml.jackson.databind.type.TypeFactory f)",
    "name": "withFactory",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.type.TypeParser",
      "name": "TypeParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.type.TypeParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.databind.type.TypeParser",
      "name": "com.fasterxml.jackson.databind.type.TypeParser",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.type.TypeFactory",
          "name": "TypeFactory",
          "isArray": false
        },
        "name": "f"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parse(java.lang.String canonical)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.type.TypeParser",
      "name": "TypeParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.type.TypeParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.databind.JavaType",
      "name": "com.fasterxml.jackson.databind.JavaType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "canonical"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parseType(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer tokens)",
    "name": "parseType",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.type.TypeParser",
      "name": "TypeParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.type.TypeParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.databind.JavaType",
      "name": "com.fasterxml.jackson.databind.JavaType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer",
          "name": "MyTokenizer",
          "isArray": false
        },
        "name": "tokens"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parseTypes(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer tokens)",
    "name": "parseTypes",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.type.TypeParser",
      "name": "TypeParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.type.TypeParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<com.fasterxml.jackson.databind.JavaType>",
      "name": "java.util.List<com.fasterxml.jackson.databind.JavaType>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer",
          "name": "MyTokenizer",
          "isArray": false
        },
        "name": "tokens"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "findClass(java.lang.String className, com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer tokens)",
    "name": "findClass",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.type.TypeParser",
      "name": "TypeParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.type.TypeParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Class<?>",
      "name": "java.lang.Class<?>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "className"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer",
          "name": "MyTokenizer",
          "isArray": false
        },
        "name": "tokens"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_problem(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer tokens, java.lang.String msg)",
    "name": "_problem",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.type.TypeParser",
      "name": "TypeParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.type.TypeParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.IllegalArgumentException",
      "name": "java.lang.IllegalArgumentException",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer",
          "name": "MyTokenizer",
          "isArray": false
        },
        "name": "tokens"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "msg"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]