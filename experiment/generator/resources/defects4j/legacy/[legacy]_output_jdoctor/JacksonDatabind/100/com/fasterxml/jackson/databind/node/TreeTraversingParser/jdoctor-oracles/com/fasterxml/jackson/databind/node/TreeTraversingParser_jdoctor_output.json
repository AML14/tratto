[
  {
    "signature": "com.fasterxml.jackson.databind.node.TreeTraversingParser(com.fasterxml.jackson.databind.JsonNode n)",
    "name": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.JsonNode",
          "name": "JsonNode",
          "isArray": false
        },
        "name": "n"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "com.fasterxml.jackson.databind.node.TreeTraversingParser(com.fasterxml.jackson.databind.JsonNode n, com.fasterxml.jackson.core.ObjectCodec codec)",
    "name": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.JsonNode",
          "name": "JsonNode",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.ObjectCodec",
          "name": "ObjectCodec",
          "isArray": false
        },
        "name": "codec"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setCodec(com.fasterxml.jackson.core.ObjectCodec c)",
    "name": "setCodec",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.ObjectCodec",
          "name": "ObjectCodec",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getCodec()",
    "name": "getCodec",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.ObjectCodec",
      "name": "com.fasterxml.jackson.core.ObjectCodec",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "version()",
    "name": "version",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.Version",
      "name": "com.fasterxml.jackson.core.Version",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "close()",
    "name": "close",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "nextToken()",
    "name": "nextToken",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonToken",
      "name": "com.fasterxml.jackson.core.JsonToken",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "skipChildren()",
    "name": "skipChildren",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonParser",
      "name": "com.fasterxml.jackson.core.JsonParser",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isClosed()",
    "name": "isClosed",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getCurrentName()",
    "name": "getCurrentName",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "overrideCurrentName(java.lang.String name)",
    "name": "overrideCurrentName",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getParsingContext()",
    "name": "getParsingContext",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonStreamContext",
      "name": "com.fasterxml.jackson.core.JsonStreamContext",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTokenLocation()",
    "name": "getTokenLocation",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonLocation",
      "name": "com.fasterxml.jackson.core.JsonLocation",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getCurrentLocation()",
    "name": "getCurrentLocation",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonLocation",
      "name": "com.fasterxml.jackson.core.JsonLocation",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getText()",
    "name": "getText",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTextCharacters()",
    "name": "getTextCharacters",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char[]",
      "name": "char[]",
      "isArray": true
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTextLength()",
    "name": "getTextLength",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTextOffset()",
    "name": "getTextOffset",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hasTextCharacters()",
    "name": "hasTextCharacters",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNumberType()",
    "name": "getNumberType",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonParser$NumberType",
      "name": "com.fasterxml.jackson.core.JsonParser$NumberType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getBigIntegerValue()",
    "name": "getBigIntegerValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.math.BigInteger",
      "name": "java.math.BigInteger",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getDecimalValue()",
    "name": "getDecimalValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.math.BigDecimal",
      "name": "java.math.BigDecimal",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getDoubleValue()",
    "name": "getDoubleValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getFloatValue()",
    "name": "getFloatValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getLongValue()",
    "name": "getLongValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getIntValue()",
    "name": "getIntValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNumberValue()",
    "name": "getNumberValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "java.lang.Number",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getEmbeddedObject()",
    "name": "getEmbeddedObject",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isNaN()",
    "name": "isNaN",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant)",
    "name": "getBinaryValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "byte[]",
      "name": "byte[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.Base64Variant",
          "name": "Base64Variant",
          "isArray": false
        },
        "name": "b64variant"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant, java.io.OutputStream out)",
    "name": "readBinaryValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.Base64Variant",
          "name": "Base64Variant",
          "isArray": false
        },
        "name": "b64variant"
      },
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "currentNode()",
    "name": "currentNode",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.databind.JsonNode",
      "name": "com.fasterxml.jackson.databind.JsonNode",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "currentNumericNode()",
    "name": "currentNumericNode",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.databind.JsonNode",
      "name": "com.fasterxml.jackson.databind.JsonNode",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_handleEOF()",
    "name": "_handleEOF",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
      "name": "TreeTraversingParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.node.TreeTraversingParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]