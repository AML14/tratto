/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 20 04:07:24 GMT 2023
 */
package com.fasterxml.jackson.databind.introspect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.ObjectIdResolver;
import com.fasterxml.jackson.annotation.SimpleObjectIdResolver;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.databind.AnnotationIntrospector;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.PropertyName;
import com.fasterxml.jackson.databind.cfg.MapperConfig;
import com.fasterxml.jackson.databind.introspect.AnnotatedClass;
import com.fasterxml.jackson.databind.introspect.AnnotatedConstructor;
import com.fasterxml.jackson.databind.introspect.AnnotatedField;
import com.fasterxml.jackson.databind.introspect.AnnotatedMember;
import com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
import com.fasterxml.jackson.databind.introspect.AnnotatedParameter;
import com.fasterxml.jackson.databind.introspect.AnnotatedWithParams;
import com.fasterxml.jackson.databind.introspect.AnnotationMap;
import com.fasterxml.jackson.databind.introspect.ClassIntrospector;
import com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder;
import com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember;
import com.fasterxml.jackson.databind.node.ShortNode;
import com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
import com.fasterxml.jackson.databind.type.ReferenceType;
import com.fasterxml.jackson.databind.type.ResolvedRecursiveType;
import com.fasterxml.jackson.databind.type.SimpleType;
import com.fasterxml.jackson.databind.type.TypeBindings;
import com.fasterxml.jackson.databind.type.TypeFactory;
import java.lang.reflect.Field;
import java.time.chrono.ChronoLocalDate;
import java.time.chrono.Chronology;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class POJOPropertyBuilder_ESTest extends POJOPropertyBuilder_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        JavaType javaType0 = TypeFactory.unknownType();
        ReferenceType referenceType0 = ReferenceType.upgradeFrom(javaType0, javaType0);
        ObjectReader objectReader0 = objectMapper0.readerForUpdating(referenceType0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0, propertyName0);
        POJOPropertyBuilder pOJOPropertyBuilder1 = pOJOPropertyBuilder0.withName(propertyName0);
        pOJOPropertyBuilder1.hasGetter();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, true, propertyName0, propertyName0);
        boolean boolean0 = pOJOPropertyBuilder0.hasName(propertyName0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        ObjectReader objectReader0 = objectMapper0.readerForUpdating(defaultSerializerProvider_Impl0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0, propertyName0);
        String string0 = pOJOPropertyBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.construct("Pxr'MbMaH");
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, true, true, true);
        boolean boolean0 = pOJOPropertyBuilder0.anyIgnorals();
        pOJOPropertyBuilder0.anyVisible();
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.construct("Pxr'MbMaH");
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, true, true, true);
        boolean boolean0 = pOJOPropertyBuilder0.anyIgnorals();
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, true, propertyName0, propertyName0);
        String string0 = pOJOPropertyBuilder0.getInternalName();
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0, propertyName0);
        pOJOPropertyBuilder0.removeConstructors();
        pOJOPropertyBuilder0.isExplicitlyIncluded();
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        PropertyName propertyName0 = PropertyName.construct("g5/)pl2*xt");
        POJOPropertyBuilder.Linked<AnnotatedConstructor> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<AnnotatedConstructor>((AnnotatedConstructor) null, (POJOPropertyBuilder.Linked<AnnotatedConstructor>) null, propertyName0, false, false, false);
        POJOPropertyBuilder.MemberIterator<AnnotatedConstructor> pOJOPropertyBuilder_MemberIterator0 = new POJOPropertyBuilder.MemberIterator<AnnotatedConstructor>(pOJOPropertyBuilder_Linked0);
        boolean boolean0 = pOJOPropertyBuilder_MemberIterator0.hasNext();
    }

    @Test(timeout = 4000)
    public void test0810() throws Throwable {
        PropertyName propertyName0 = PropertyName.construct("g5/)pl2*xt");
        POJOPropertyBuilder.Linked<AnnotatedConstructor> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<AnnotatedConstructor>((AnnotatedConstructor) null, (POJOPropertyBuilder.Linked<AnnotatedConstructor>) null, propertyName0, false, false, false);
        POJOPropertyBuilder.MemberIterator<AnnotatedConstructor> pOJOPropertyBuilder_MemberIterator0 = new POJOPropertyBuilder.MemberIterator<AnnotatedConstructor>(pOJOPropertyBuilder_Linked0);
        boolean boolean0 = pOJOPropertyBuilder_MemberIterator0.hasNext();
    }

    @Test(timeout = 4000)
    public void test0811() throws Throwable {
        PropertyName propertyName0 = PropertyName.construct("g5/)pl2*xt");
        POJOPropertyBuilder.Linked<AnnotatedConstructor> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<AnnotatedConstructor>((AnnotatedConstructor) null, (POJOPropertyBuilder.Linked<AnnotatedConstructor>) null, propertyName0, false, false, false);
        POJOPropertyBuilder.MemberIterator<AnnotatedConstructor> pOJOPropertyBuilder_MemberIterator0 = new POJOPropertyBuilder.MemberIterator<AnnotatedConstructor>(pOJOPropertyBuilder_Linked0);
        boolean boolean0 = pOJOPropertyBuilder_MemberIterator0.hasNext();
    }

    @Test(timeout = 4000)
    public void test0812() throws Throwable {
        PropertyName propertyName0 = PropertyName.construct("g5/)pl2*xt");
        POJOPropertyBuilder.Linked<AnnotatedConstructor> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<AnnotatedConstructor>((AnnotatedConstructor) null, (POJOPropertyBuilder.Linked<AnnotatedConstructor>) null, propertyName0, false, false, false);
        POJOPropertyBuilder.MemberIterator<AnnotatedConstructor> pOJOPropertyBuilder_MemberIterator0 = new POJOPropertyBuilder.MemberIterator<AnnotatedConstructor>(pOJOPropertyBuilder_Linked0);
        boolean boolean0 = pOJOPropertyBuilder_MemberIterator0.hasNext();
    }

    @Test(timeout = 4000)
    public void test0913() throws Throwable {
        POJOPropertyBuilder.MemberIterator<AnnotatedParameter> pOJOPropertyBuilder_MemberIterator0 = new POJOPropertyBuilder.MemberIterator<AnnotatedParameter>((POJOPropertyBuilder.Linked<AnnotatedParameter>) null);
        pOJOPropertyBuilder_MemberIterator0.remove();
    }

    @Test(timeout = 4000)
    public void test1014() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        objectMapper0.valueToTree((Object) jsonFactory0);
    }

    @Test(timeout = 4000)
    public void test1115() throws Throwable {
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0, propertyName0);
        POJOPropertyBuilder pOJOPropertyBuilder1 = pOJOPropertyBuilder0.withSimpleName("Can not pass null Serializers");
        pOJOPropertyBuilder1.getName();
    }

    @Test(timeout = 4000)
    public void test1216() throws Throwable {
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0);
        POJOPropertyBuilder pOJOPropertyBuilder1 = pOJOPropertyBuilder0.withSimpleName("");
    }

    @Test(timeout = 4000)
    public void test1317() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, true, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, true, true);
        int int0 = pOJOPropertyBuilder0.compareTo(pOJOPropertyBuilder0);
        pOJOPropertyBuilder0.anyVisible();
    }

    @Test(timeout = 4000)
    public void test1318() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, true, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, true, true);
        int int0 = pOJOPropertyBuilder0.compareTo(pOJOPropertyBuilder0);
    }

    @Test(timeout = 4000)
    public void test1419() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, true, propertyName0, propertyName0);
        POJOPropertyBuilder pOJOPropertyBuilder1 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, true, propertyName0);
        pOJOPropertyBuilder1.addCtor((AnnotatedParameter) null, propertyName0, false, true, true);
        int int0 = pOJOPropertyBuilder1.compareTo(pOJOPropertyBuilder0);
        pOJOPropertyBuilder1.anyVisible();
    }

    @Test(timeout = 4000)
    public void test1420() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, true, propertyName0, propertyName0);
        POJOPropertyBuilder pOJOPropertyBuilder1 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, true, propertyName0);
        pOJOPropertyBuilder1.addCtor((AnnotatedParameter) null, propertyName0, false, true, true);
        int int0 = pOJOPropertyBuilder1.compareTo(pOJOPropertyBuilder0);
    }

    @Test(timeout = 4000)
    public void test1521() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, true, propertyName0, propertyName0);
        POJOPropertyBuilder pOJOPropertyBuilder1 = new POJOPropertyBuilder(pOJOPropertyBuilder0, (PropertyName) null);
        Class<ShortNode> class0 = ShortNode.class;
        ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);
        AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, resolvedRecursiveType0, (AnnotationMap) null, (-2933));
        pOJOPropertyBuilder0.addCtor(annotatedParameter0, (PropertyName) null, false, false, true);
        int int0 = pOJOPropertyBuilder1.compareTo(pOJOPropertyBuilder0);
        pOJOPropertyBuilder0.anyIgnorals();
    }

    @Test(timeout = 4000)
    public void test1522() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, true, propertyName0, propertyName0);
        POJOPropertyBuilder pOJOPropertyBuilder1 = new POJOPropertyBuilder(pOJOPropertyBuilder0, (PropertyName) null);
        Class<ShortNode> class0 = ShortNode.class;
        ResolvedRecursiveType resolvedRecursiveType0 = new ResolvedRecursiveType(class0, (TypeBindings) null);
        AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, resolvedRecursiveType0, (AnnotationMap) null, (-2933));
        pOJOPropertyBuilder0.addCtor(annotatedParameter0, (PropertyName) null, false, false, true);
        int int0 = pOJOPropertyBuilder1.compareTo(pOJOPropertyBuilder0);
    }

    @Test(timeout = 4000)
    public void test1623() throws Throwable {
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0);
        POJOPropertyBuilder pOJOPropertyBuilder1 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0, (PropertyName) null);
        pOJOPropertyBuilder0.compareTo(pOJOPropertyBuilder1);
    }

    @Test(timeout = 4000)
    public void test1724() throws Throwable {
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, (AnnotationIntrospector) null, false, propertyName0, propertyName0);
        Class<AnnotatedMethod> class0 = AnnotatedMethod.class;
        AnnotatedClass annotatedClass0 = AnnotatedClass.constructWithoutSuperTypes((Class<?>) class0, (MapperConfig<?>) null, (ClassIntrospector.MixInResolver) null);
        AnnotationMap annotationMap0 = new AnnotationMap();
        AnnotatedField annotatedField0 = new AnnotatedField(annotatedClass0, (Field) null, annotationMap0);
        pOJOPropertyBuilder0.addField(annotatedField0, propertyName0, false, false, false);
        pOJOPropertyBuilder0.getWrapperName();
        pOJOPropertyBuilder0.anyIgnorals();
    }

    @Test(timeout = 4000)
    public void test1725() throws Throwable {
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, (AnnotationIntrospector) null, false, propertyName0, propertyName0);
        Class<AnnotatedMethod> class0 = AnnotatedMethod.class;
        AnnotatedClass annotatedClass0 = AnnotatedClass.constructWithoutSuperTypes((Class<?>) class0, (MapperConfig<?>) null, (ClassIntrospector.MixInResolver) null);
        AnnotationMap annotationMap0 = new AnnotationMap();
        AnnotatedField annotatedField0 = new AnnotatedField(annotatedClass0, (Field) null, annotationMap0);
        pOJOPropertyBuilder0.addField(annotatedField0, propertyName0, false, false, false);
        pOJOPropertyBuilder0.getWrapperName();
        pOJOPropertyBuilder0.anyVisible();
    }

    @Test(timeout = 4000)
    public void test1826() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0, propertyName0);
        PropertyName propertyName1 = propertyName0.withSimpleName(">%_FD=DK{\"e");
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName1, true, true, true);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyIncluded();
        pOJOPropertyBuilder0.anyVisible();
    }

    @Test(timeout = 4000)
    public void test1827() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0, propertyName0);
        PropertyName propertyName1 = propertyName0.withSimpleName(">%_FD=DK{\"e");
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName1, true, true, true);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyIncluded();
    }

    @Test(timeout = 4000)
    public void test1928() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.construct("Pxr'MbMaH");
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, true, false, true);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyIncluded();
        pOJOPropertyBuilder0.anyIgnorals();
    }

    @Test(timeout = 4000)
    public void test1929() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.construct("Pxr'MbMaH");
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, true, false, true);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyIncluded();
    }

    @Test(timeout = 4000)
    public void test2030() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        PropertyName propertyName1 = propertyName0.withSimpleName(">%_FD=DK{\"e");
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName1, true, false, true);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyNamed();
        pOJOPropertyBuilder0.anyIgnorals();
    }

    @Test(timeout = 4000)
    public void test2031() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        PropertyName propertyName1 = propertyName0.withSimpleName(">%_FD=DK{\"e");
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName1, true, false, true);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyNamed();
    }

    @Test(timeout = 4000)
    public void test2132() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.construct("$6xMa");
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, true, true, true);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyNamed();
        pOJOPropertyBuilder0.anyVisible();
    }

    @Test(timeout = 4000)
    public void test2133() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.construct("$6xMa");
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, true, true, true);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyNamed();
    }

    @Test(timeout = 4000)
    public void test2234() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0);
        boolean boolean0 = pOJOPropertyBuilder0.hasGetter();
    }

    @Test(timeout = 4000)
    public void test2335() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        Locale locale0 = Locale.TAIWAN;
        Chronology chronology0 = Chronology.ofLocale(locale0);
        ChronoLocalDate chronoLocalDate0 = chronology0.dateNow();
        ObjectReader objectReader0 = objectMapper0.readerForUpdating(chronoLocalDate0);
    }

    @Test(timeout = 4000)
    public void test2436() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, true, false);
        boolean boolean0 = pOJOPropertyBuilder0.hasConstructorParameter();
    }

    @Test(timeout = 4000)
    public void test2537() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, false, false);
        boolean boolean0 = pOJOPropertyBuilder0.couldDeserialize();
    }

    @Test(timeout = 4000)
    public void test2638() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        boolean boolean0 = pOJOPropertyBuilder0.couldDeserialize();
    }

    @Test(timeout = 4000)
    public void test2739() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.couldDeserialize();
    }

    @Test(timeout = 4000)
    public void test2740() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addSetter((AnnotatedMethod) null, propertyName0, false, false, false);
        boolean boolean0 = pOJOPropertyBuilder0.couldDeserialize();
    }

    @Test(timeout = 4000)
    public void test2841() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.couldDeserialize();
    }

    @Test(timeout = 4000)
    public void test2842() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName0, false, false, false);
        boolean boolean0 = pOJOPropertyBuilder0.couldDeserialize();
    }

    @Test(timeout = 4000)
    public void test2943() throws Throwable {
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addGetter((AnnotatedMethod) null, propertyName0, false, false, false);
        boolean boolean0 = pOJOPropertyBuilder0.couldSerialize();
    }

    @Test(timeout = 4000)
    public void test3044() throws Throwable {
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        boolean boolean0 = pOJOPropertyBuilder0.couldSerialize();
    }

    @Test(timeout = 4000)
    public void test3145() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.couldSerialize();
    }

    @Test(timeout = 4000)
    public void test3146() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName0, false, false, false);
        boolean boolean0 = pOJOPropertyBuilder0.couldSerialize();
    }

    @Test(timeout = 4000)
    public void test3247() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        ObjectReader objectReader0 = objectMapper0.readerForUpdating(objectMapper0);
    }

    @Test(timeout = 4000)
    public void test3348() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName0, false, false, false);
        pOJOPropertyBuilder0.addAll(pOJOPropertyBuilder0);
        pOJOPropertyBuilder0.getNonConstructorMutator();
    }

    @Test(timeout = 4000)
    public void test3449() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        Class<AnnotatedField> class0 = AnnotatedField.class;
        SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
        AnnotationMap annotationMap0 = new AnnotationMap();
        AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, simpleType0, annotationMap0, 39);
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addCtor(annotatedParameter0, propertyName0, false, false, false);
        AnnotatedMember annotatedMember0 = pOJOPropertyBuilder0.getPrimaryMember();
        pOJOPropertyBuilder0.anyIgnorals();
    }

    @Test(timeout = 4000)
    public void test3450() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        Class<AnnotatedField> class0 = AnnotatedField.class;
        SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
        AnnotationMap annotationMap0 = new AnnotationMap();
        AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, simpleType0, annotationMap0, 39);
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addCtor(annotatedParameter0, propertyName0, false, false, false);
        AnnotatedMember annotatedMember0 = pOJOPropertyBuilder0.getPrimaryMember();
    }

    @Test(timeout = 4000)
    public void test3451() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        Class<AnnotatedField> class0 = AnnotatedField.class;
        SimpleType simpleType0 = SimpleType.constructUnsafe(class0);
        AnnotationMap annotationMap0 = new AnnotationMap();
        AnnotatedParameter annotatedParameter0 = new AnnotatedParameter((AnnotatedWithParams) null, simpleType0, annotationMap0, 39);
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addCtor(annotatedParameter0, propertyName0, false, false, false);
        AnnotatedMember annotatedMember0 = pOJOPropertyBuilder0.getPrimaryMember();
        pOJOPropertyBuilder0.anyVisible();
    }

    @Test(timeout = 4000)
    public void test3552() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, false, true);
        pOJOPropertyBuilder0.getConstructorParameters();
        pOJOPropertyBuilder0.anyIgnorals();
    }

    @Test(timeout = 4000)
    public void test3653() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        ObjectMapper objectMapper1 = objectMapper0.setAnnotationIntrospector(annotationIntrospector1);
        objectMapper1.valueToTree((Object) jsonFactory0);
    }

    @Test(timeout = 4000)
    public void test3754() throws Throwable {
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, (AnnotationIntrospector) null, false, propertyName0, propertyName0);
        JsonInclude.Value jsonInclude_Value0 = pOJOPropertyBuilder0.findInclusion();
        jsonInclude_Value0.getContentInclusion();
    }

    @Test(timeout = 4000)
    public void test3855() throws Throwable {
        PropertyName propertyName0 = PropertyName.NO_NAME;
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName0, false, false, false);
        POJOPropertyBuilder pOJOPropertyBuilder1 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0);
        pOJOPropertyBuilder0.addAll(pOJOPropertyBuilder1);
        pOJOPropertyBuilder0.hasField();
    }

    @Test(timeout = 4000)
    public void test3956() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName0, false, false, false);
        pOJOPropertyBuilder0.mergeAnnotations(true);
    }

    @Test(timeout = 4000)
    public void test4057() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, false, false);
        pOJOPropertyBuilder0.mergeAnnotations(false);
    }

    @Test(timeout = 4000)
    public void test4158() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName0, false, false, false);
        pOJOPropertyBuilder0.removeIgnored();
        pOJOPropertyBuilder0.couldDeserialize();
    }

    @Test(timeout = 4000)
    public void test4259() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addSetter((AnnotatedMethod) null, propertyName0, false, false, false);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyIncluded();
    }

    @Test(timeout = 4000)
    public void test4260() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addSetter((AnnotatedMethod) null, propertyName0, false, false, false);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyIncluded();
        pOJOPropertyBuilder0.anyVisible();
    }

    @Test(timeout = 4000)
    public void test4261() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addSetter((AnnotatedMethod) null, propertyName0, false, false, false);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyIncluded();
        pOJOPropertyBuilder0.anyIgnorals();
    }

    @Test(timeout = 4000)
    public void test4362() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0, propertyName0);
        PropertyName propertyName1 = propertyName0.withNamespace(">%_FD=DK{\"e");
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName1, true, true, true);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyIncluded();
        pOJOPropertyBuilder0.anyIgnorals();
    }

    @Test(timeout = 4000)
    public void test4363() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0, propertyName0);
        PropertyName propertyName1 = propertyName0.withNamespace(">%_FD=DK{\"e");
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName1, true, true, true);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyIncluded();
    }

    @Test(timeout = 4000)
    public void test4464() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, false, false);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyNamed();
    }

    @Test(timeout = 4000)
    public void test4465() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, false, false);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyNamed();
        pOJOPropertyBuilder0.anyVisible();
    }

    @Test(timeout = 4000)
    public void test4466() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, false, false);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyNamed();
        pOJOPropertyBuilder0.anyIgnorals();
    }

    @Test(timeout = 4000)
    public void test4567() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.construct("Pxr'MbM;H");
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, false, false);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyNamed();
        pOJOPropertyBuilder0.anyIgnorals();
    }

    @Test(timeout = 4000)
    public void test4568() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.construct("Pxr'MbM;H");
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, false, false);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyNamed();
        pOJOPropertyBuilder0.anyVisible();
    }

    @Test(timeout = 4000)
    public void test4569() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.construct("Pxr'MbM;H");
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, false, false);
        boolean boolean0 = pOJOPropertyBuilder0.isExplicitlyNamed();
    }

    @Test(timeout = 4000)
    public void test4670() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, true, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName0, false, true, false);
        boolean boolean0 = pOJOPropertyBuilder0.anyVisible();
    }

    @Test(timeout = 4000)
    public void test4771() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, true, true);
        boolean boolean0 = pOJOPropertyBuilder0.anyVisible();
        pOJOPropertyBuilder0.anyIgnorals();
    }

    @Test(timeout = 4000)
    public void test4772() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, true, true);
        boolean boolean0 = pOJOPropertyBuilder0.anyVisible();
    }

    @Test(timeout = 4000)
    public void test4873() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName0, false, true, true);
        boolean boolean0 = pOJOPropertyBuilder0.anyIgnorals();
        pOJOPropertyBuilder0.anyVisible();
    }

    @Test(timeout = 4000)
    public void test4874() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName0, false, true, true);
        boolean boolean0 = pOJOPropertyBuilder0.anyIgnorals();
    }

    @Test(timeout = 4000)
    public void test4975() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addSetter((AnnotatedMethod) null, propertyName0, false, true, true);
        boolean boolean0 = pOJOPropertyBuilder0.anyIgnorals();
        pOJOPropertyBuilder0.anyVisible();
    }

    @Test(timeout = 4000)
    public void test4976() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addSetter((AnnotatedMethod) null, propertyName0, false, true, true);
        boolean boolean0 = pOJOPropertyBuilder0.anyIgnorals();
    }

    @Test(timeout = 4000)
    public void test5077() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.construct("$6xMa");
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, true, true, true);
        pOJOPropertyBuilder0.explode((Collection<PropertyName>) null);
        pOJOPropertyBuilder0.anyIgnorals();
    }

    @Test(timeout = 4000)
    public void test5178() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, false, false);
        pOJOPropertyBuilder0.anyVisible();
    }

    @Test(timeout = 4000)
    public void test5179() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, false, false);
        Vector<PropertyName> vector0 = new Vector<PropertyName>();
        pOJOPropertyBuilder0.explode(vector0);
        pOJOPropertyBuilder0.anyIgnorals();
    }

    @Test(timeout = 4000)
    public void test5280() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName0, false, true, false);
        ArrayList<PropertyName> arrayList0 = new ArrayList<PropertyName>();
        pOJOPropertyBuilder0.explode(arrayList0);
    }

    @Test(timeout = 4000)
    public void test5381() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0, propertyName0);
        PropertyName propertyName1 = propertyName0.withSimpleName("Do not know how to construct standard type id resolver for idType: ");
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName1, true, true, true);
        pOJOPropertyBuilder0.addAll(pOJOPropertyBuilder0);
        LinkedHashSet<PropertyName> linkedHashSet0 = new LinkedHashSet<PropertyName>();
        pOJOPropertyBuilder0.explode(linkedHashSet0);
        pOJOPropertyBuilder0.anyIgnorals();
    }

    @Test(timeout = 4000)
    public void test5482() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        PropertyName propertyName1 = propertyName0.withSimpleName(">%_FD=DK{\"e");
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName1, true, false, true);
        pOJOPropertyBuilder0.addAll(pOJOPropertyBuilder0);
        pOJOPropertyBuilder0.findExplicitNames();
        pOJOPropertyBuilder0.isExplicitlyNamed();
    }

    @Test(timeout = 4000)
    public void test5583() throws Throwable {
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, (AnnotationIntrospector) null, true, propertyName0, propertyName0);
        boolean boolean0 = pOJOPropertyBuilder0.isTypeId();
    }

    @Test(timeout = 4000)
    public void test5684() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, true, propertyName0, propertyName0);
        AnnotationIntrospector.ReferenceProperty annotationIntrospector_ReferenceProperty0 = pOJOPropertyBuilder0.findReferenceType();
    }

    @Test(timeout = 4000)
    public void test5785() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, true, false);
        boolean boolean0 = pOJOPropertyBuilder0.isTypeId();
        pOJOPropertyBuilder0.anyVisible();
    }

    @Test(timeout = 4000)
    public void test5786() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, true, false);
        boolean boolean0 = pOJOPropertyBuilder0.isTypeId();
    }

    @Test(timeout = 4000)
    public void test5887() throws Throwable {
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, (AnnotationIntrospector) null, true, propertyName0, propertyName0);
        pOJOPropertyBuilder0.removeNonVisible(false);
        pOJOPropertyBuilder0.anyVisible();
    }

    @Test(timeout = 4000)
    public void test5988() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.construct("Pxr'MbMaH");
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0);
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName0, true, true, true);
        pOJOPropertyBuilder0.removeNonVisible(true);
        pOJOPropertyBuilder0.hasField();
    }

    @Test(timeout = 4000)
    public void test6089() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, true, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName0, false, false, true);
        pOJOPropertyBuilder0.removeNonVisible(true);
        pOJOPropertyBuilder0.couldSerialize();
    }

    @Test(timeout = 4000)
    public void test6190() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.construct("Pxr'MbMaH");
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, true, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, true, true, true);
        pOJOPropertyBuilder0.removeNonVisible(true);
        pOJOPropertyBuilder0.hasConstructorParameter();
    }

    @Test(timeout = 4000)
    public void test6291() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, true, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, true, false);
        pOJOPropertyBuilder0.removeNonVisible(false);
        pOJOPropertyBuilder0.hasConstructorParameter();
    }

    @Test(timeout = 4000)
    public void test6392() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector0, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, false, false);
        pOJOPropertyBuilder0.removeNonVisible(false);
        pOJOPropertyBuilder0.hasConstructorParameter();
    }

    @Test(timeout = 4000)
    public void test6493() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, false, false, false);
        pOJOPropertyBuilder0.removeNonVisible(false);
        pOJOPropertyBuilder0.couldDeserialize();
    }

    @Test(timeout = 4000)
    public void test6594() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        ObjectMapper objectMapper1 = objectMapper0.setAnnotationIntrospector(annotationIntrospector1);
        ObjectReader objectReader0 = objectMapper1.readerForUpdating(objectMapper0);
    }

    @Test(timeout = 4000)
    public void test6695() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, false, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addField((AnnotatedField) null, propertyName0, false, true, true);
        pOJOPropertyBuilder0.removeNonVisible(false);
        pOJOPropertyBuilder0.couldDeserialize();
    }

    @Test(timeout = 4000)
    public void test6796() throws Throwable {
        POJOPropertyBuilder.MemberIterator<VirtualAnnotatedMember> pOJOPropertyBuilder_MemberIterator0 = new POJOPropertyBuilder.MemberIterator<VirtualAnnotatedMember>((POJOPropertyBuilder.Linked<VirtualAnnotatedMember>) null);
        boolean boolean0 = pOJOPropertyBuilder_MemberIterator0.hasNext();
    }

    @Test(timeout = 4000)
    public void test6897() throws Throwable {
        PropertyName propertyName0 = new PropertyName(")$c&)B", "");
        POJOPropertyBuilder.Linked<AnnotatedParameter> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<AnnotatedParameter>((AnnotatedParameter) null, (POJOPropertyBuilder.Linked<AnnotatedParameter>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.MemberIterator<AnnotatedParameter> pOJOPropertyBuilder_MemberIterator0 = new POJOPropertyBuilder.MemberIterator<AnnotatedParameter>(pOJOPropertyBuilder_Linked0);
        pOJOPropertyBuilder_MemberIterator0.next();
    }

    @Test(timeout = 4000)
    public void test6898() throws Throwable {
        PropertyName propertyName0 = new PropertyName(")$c&)B", "");
        POJOPropertyBuilder.Linked<AnnotatedParameter> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<AnnotatedParameter>((AnnotatedParameter) null, (POJOPropertyBuilder.Linked<AnnotatedParameter>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.MemberIterator<AnnotatedParameter> pOJOPropertyBuilder_MemberIterator0 = new POJOPropertyBuilder.MemberIterator<AnnotatedParameter>(pOJOPropertyBuilder_Linked0);
        pOJOPropertyBuilder_MemberIterator0.next();
    }

    @Test(timeout = 4000)
    public void test6899() throws Throwable {
        PropertyName propertyName0 = new PropertyName(")$c&)B", "");
        POJOPropertyBuilder.Linked<AnnotatedParameter> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<AnnotatedParameter>((AnnotatedParameter) null, (POJOPropertyBuilder.Linked<AnnotatedParameter>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.MemberIterator<AnnotatedParameter> pOJOPropertyBuilder_MemberIterator0 = new POJOPropertyBuilder.MemberIterator<AnnotatedParameter>(pOJOPropertyBuilder_Linked0);
        pOJOPropertyBuilder_MemberIterator0.next();
    }

    @Test(timeout = 4000)
    public void test69100() throws Throwable {
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        AnnotationIntrospector annotationIntrospector1 = AnnotationIntrospector.pair(annotationIntrospector0, annotationIntrospector0);
        PropertyName propertyName0 = PropertyName.NO_NAME;
        POJOPropertyBuilder pOJOPropertyBuilder0 = new POJOPropertyBuilder((MapperConfig<?>) null, annotationIntrospector1, true, propertyName0, propertyName0);
        pOJOPropertyBuilder0.addCtor((AnnotatedParameter) null, propertyName0, true, true, true);
    }

    @Test(timeout = 4000)
    public void test70101() throws Throwable {
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, false, false, false);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withoutNext();
    }

    @Test(timeout = 4000)
    public void test70102() throws Throwable {
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, false, false, false);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withoutNext();
    }

    @Test(timeout = 4000)
    public void test71103() throws Throwable {
        PropertyName propertyName0 = new PropertyName(", getter(s): ", ", getter(s): ");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>(", getter(s): ", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withValue(", getter(s): ");
    }

    @Test(timeout = 4000)
    public void test71104() throws Throwable {
        PropertyName propertyName0 = new PropertyName(", getter(s): ", ", getter(s): ");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>(", getter(s): ", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withValue(", getter(s): ");
    }

    @Test(timeout = 4000)
    public void test71105() throws Throwable {
        PropertyName propertyName0 = new PropertyName(", getter(s): ", ", getter(s): ");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>(", getter(s): ", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withValue(", getter(s): ");
    }

    @Test(timeout = 4000)
    public void test71106() throws Throwable {
        PropertyName propertyName0 = new PropertyName(", getter(s): ", ", getter(s): ");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>(", getter(s): ", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withValue(", getter(s): ");
    }

    @Test(timeout = 4000)
    public void test72107() throws Throwable {
        PropertyName propertyName0 = PropertyName.construct("/, ", "/, ");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("/, ", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withoutIgnored();
    }

    @Test(timeout = 4000)
    public void test72108() throws Throwable {
        PropertyName propertyName0 = PropertyName.construct("/, ", "/, ");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("/, ", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withoutIgnored();
    }

    @Test(timeout = 4000)
    public void test72109() throws Throwable {
        PropertyName propertyName0 = PropertyName.construct("/, ", "/, ");
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("/, ", (POJOPropertyBuilder.Linked<String>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withoutIgnored();
    }

    @Test(timeout = 4000)
    public void test73110() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        PropertyName propertyName0 = PropertyName.construct("", "");
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<SimpleObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<SimpleObjectIdResolver>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.append(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutIgnored();
    }

    @Test(timeout = 4000)
    public void test73111() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        PropertyName propertyName0 = PropertyName.construct("", "");
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<SimpleObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<SimpleObjectIdResolver>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.append(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutIgnored();
    }

    @Test(timeout = 4000)
    public void test73112() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        PropertyName propertyName0 = PropertyName.construct("", "");
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<SimpleObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<SimpleObjectIdResolver>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.append(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutIgnored();
    }

    @Test(timeout = 4000)
    public void test73113() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        PropertyName propertyName0 = PropertyName.construct("", "");
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<SimpleObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<SimpleObjectIdResolver>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.append(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutIgnored();
    }

    @Test(timeout = 4000)
    public void test74114() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<ObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<ObjectIdResolver>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutIgnored();
    }

    @Test(timeout = 4000)
    public void test74115() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<ObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<ObjectIdResolver>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutIgnored();
    }

    @Test(timeout = 4000)
    public void test74116() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<ObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<ObjectIdResolver>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.withoutIgnored();
    }

    @Test(timeout = 4000)
    public void test75117() throws Throwable {
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, false, false, false);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.append(pOJOPropertyBuilder_Linked0);
    }

    @Test(timeout = 4000)
    public void test75118() throws Throwable {
        PropertyName propertyName0 = PropertyName.USE_DEFAULT;
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<String>("", (POJOPropertyBuilder.Linked<String>) null, propertyName0, false, false, false);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<String> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.append(pOJOPropertyBuilder_Linked0);
    }

    @Test(timeout = 4000)
    public void test76119() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        PropertyName propertyName0 = PropertyName.construct("", "");
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<SimpleObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<SimpleObjectIdResolver>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.append(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.trimByVisibility();
    }

    @Test(timeout = 4000)
    public void test76120() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        PropertyName propertyName0 = PropertyName.construct("", "");
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<SimpleObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<SimpleObjectIdResolver>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.append(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.trimByVisibility();
    }

    @Test(timeout = 4000)
    public void test76121() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        PropertyName propertyName0 = PropertyName.construct("", "");
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<SimpleObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<SimpleObjectIdResolver>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.append(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.trimByVisibility();
    }

    @Test(timeout = 4000)
    public void test76122() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        PropertyName propertyName0 = PropertyName.construct("", "");
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<SimpleObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<SimpleObjectIdResolver>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.append(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.trimByVisibility();
    }

    @Test(timeout = 4000)
    public void test76123() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        PropertyName propertyName0 = PropertyName.construct("", "");
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<SimpleObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<SimpleObjectIdResolver>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.append(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.trimByVisibility();
    }

    @Test(timeout = 4000)
    public void test76124() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        PropertyName propertyName0 = PropertyName.construct("", "");
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<SimpleObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<SimpleObjectIdResolver>) null, propertyName0, true, true, true);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.append(pOJOPropertyBuilder_Linked0);
        POJOPropertyBuilder.Linked<SimpleObjectIdResolver> pOJOPropertyBuilder_Linked2 = pOJOPropertyBuilder_Linked1.trimByVisibility();
    }

    @Test(timeout = 4000)
    public void test77125() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<ObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<ObjectIdResolver>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        pOJOPropertyBuilder_Linked1.toString();
    }

    @Test(timeout = 4000)
    public void test77126() throws Throwable {
        SimpleObjectIdResolver simpleObjectIdResolver0 = new SimpleObjectIdResolver();
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked0 = new POJOPropertyBuilder.Linked<ObjectIdResolver>(simpleObjectIdResolver0, (POJOPropertyBuilder.Linked<ObjectIdResolver>) null, (PropertyName) null, false, false, false);
        POJOPropertyBuilder.Linked<ObjectIdResolver> pOJOPropertyBuilder_Linked1 = pOJOPropertyBuilder_Linked0.withNext(pOJOPropertyBuilder_Linked0);
        pOJOPropertyBuilder_Linked1.toString();
    }
}
