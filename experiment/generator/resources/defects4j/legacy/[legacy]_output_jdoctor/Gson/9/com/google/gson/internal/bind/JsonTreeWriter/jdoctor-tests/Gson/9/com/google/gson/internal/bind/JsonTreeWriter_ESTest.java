/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 11 16:29:02 GMT 2023
 */
package com.google.gson.internal.bind;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonPrimitive;
import com.google.gson.internal.bind.JsonTreeWriter;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class JsonTreeWriter_ESTest extends JsonTreeWriter_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.beginArray();
        JsonWriter jsonWriter0 = jsonTreeWriter0.beginArray();
        JsonWriter jsonWriter1 = jsonTreeWriter0.endArray();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        JsonWriter jsonWriter0 = jsonTreeWriter0.beginArray();
        jsonWriter0.beginObject();
        JsonWriter jsonWriter1 = jsonWriter0.endObject();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setLenient(true);
        JsonWriter jsonWriter0 = jsonTreeWriter0.value(true);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setHtmlSafe(true);
        JsonWriter jsonWriter0 = jsonTreeWriter0.value(true);
        jsonWriter0.isLenient();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setSerializeNulls(false);
        JsonWriter jsonWriter0 = jsonTreeWriter0.value(false);
        jsonWriter0.isLenient();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setLenient(true);
        JsonWriter jsonWriter0 = jsonTreeWriter0.value("");
        jsonWriter0.isLenient();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setHtmlSafe(true);
        JsonWriter jsonWriter0 = jsonTreeWriter0.value((String) null);
        jsonWriter0.getSerializeNulls();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setSerializeNulls(false);
        JsonWriter jsonWriter0 = jsonTreeWriter0.value("Expected one JSON element but was ");
        jsonWriter0.isHtmlSafe();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        Short short0 = new Short((short) 0);
        jsonTreeWriter0.setHtmlSafe(true);
        JsonWriter jsonWriter0 = jsonTreeWriter0.value((Number) short0);
        jsonWriter0.getSerializeNulls();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setSerializeNulls(false);
        Short short0 = new Short((short) 0);
        JsonWriter jsonWriter0 = jsonTreeWriter0.value((Number) short0);
        jsonWriter0.isHtmlSafe();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setLenient(true);
        JsonWriter jsonWriter0 = jsonTreeWriter0.value(0L);
        jsonWriter0.getSerializeNulls();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setHtmlSafe(true);
        JsonWriter jsonWriter0 = jsonTreeWriter0.value((-1267L));
        jsonWriter0.isHtmlSafe();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setSerializeNulls(false);
        JsonWriter jsonWriter0 = jsonTreeWriter0.value(0L);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setHtmlSafe(true);
        JsonWriter jsonWriter0 = jsonTreeWriter0.value(0.0);
        jsonWriter0.getSerializeNulls();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setSerializeNulls(false);
        JsonWriter jsonWriter0 = jsonTreeWriter0.value(0.0);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setLenient(true);
        JsonWriter jsonWriter0 = jsonTreeWriter0.nullValue();
        jsonWriter0.isLenient();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setHtmlSafe(true);
        JsonWriter jsonWriter0 = jsonTreeWriter0.nullValue();
        jsonWriter0.isHtmlSafe();
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        JsonWriter jsonWriter0 = jsonTreeWriter0.beginObject();
        jsonWriter0.setLenient(true);
        JsonWriter jsonWriter1 = jsonTreeWriter0.name("$]");
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        Short short0 = new Short((short) (-1390));
        jsonTreeWriter0.value((Number) short0);
        JsonPrimitive jsonPrimitive0 = (JsonPrimitive) jsonTreeWriter0.get();
        jsonPrimitive0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.beginObject();
        JsonTreeWriter jsonTreeWriter1 = (JsonTreeWriter) jsonTreeWriter0.endObject();
        JsonObject jsonObject0 = (JsonObject) jsonTreeWriter1.get();
        jsonObject0.isJsonNull();
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.beginArray();
        jsonTreeWriter0.endArray();
        JsonElement jsonElement0 = jsonTreeWriter0.get();
        jsonElement0.isJsonPrimitive();
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        JsonWriter jsonWriter0 = jsonTreeWriter0.beginObject();
        jsonWriter0.setHtmlSafe(true);
        JsonWriter jsonWriter1 = jsonTreeWriter0.endObject();
        jsonWriter1.getSerializeNulls();
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        JsonWriter jsonWriter0 = jsonTreeWriter0.beginObject();
        jsonWriter0.setSerializeNulls(false);
        JsonWriter jsonWriter1 = jsonTreeWriter0.endObject();
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.beginArray();
        jsonTreeWriter0.setLenient(true);
        JsonWriter jsonWriter0 = jsonTreeWriter0.endArray();
        jsonWriter0.getSerializeNulls();
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        JsonWriter jsonWriter0 = jsonTreeWriter0.beginArray();
        jsonWriter0.setSerializeNulls(false);
        JsonWriter jsonWriter1 = jsonTreeWriter0.endArray();
        jsonWriter1.getSerializeNulls();
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setLenient(true);
        jsonTreeWriter0.beginObject();
        JsonWriter jsonWriter0 = jsonTreeWriter0.endObject();
        jsonWriter0.getSerializeNulls();
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setHtmlSafe(true);
        jsonTreeWriter0.beginObject();
        JsonWriter jsonWriter0 = jsonTreeWriter0.name("$]");
        jsonWriter0.isLenient();
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setLenient(true);
        JsonWriter jsonWriter0 = jsonTreeWriter0.beginArray();
        jsonWriter0.isHtmlSafe();
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setHtmlSafe(true);
        JsonWriter jsonWriter0 = jsonTreeWriter0.beginArray();
        JsonWriter jsonWriter1 = jsonTreeWriter0.endArray();
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setSerializeNulls(false);
        JsonWriter jsonWriter0 = jsonTreeWriter0.beginArray();
        jsonWriter0.isHtmlSafe();
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.beginObject();
        jsonTreeWriter0.value("");
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.beginObject();
        Integer integer0 = Integer.valueOf(92);
        jsonTreeWriter0.value((Number) integer0);
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.close();
        jsonTreeWriter0.value((-1L));
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.close();
        jsonTreeWriter0.value(3169.0);
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.close();
        jsonTreeWriter0.nullValue();
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.beginObject();
        jsonTreeWriter0.beginObject();
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.beginObject();
        jsonTreeWriter0.beginArray();
    }

    @Test(timeout = 4000)
    public void test3737() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.beginArray();
        jsonTreeWriter0.close();
    }

    @Test(timeout = 4000)
    public void test3838() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setLenient(true);
        Float float0 = new Float(0.0);
        JsonWriter jsonWriter0 = jsonTreeWriter0.value((Number) float0);
        jsonWriter0.getSerializeNulls();
    }

    @Test(timeout = 4000)
    public void test3939() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        JsonWriter jsonWriter0 = jsonTreeWriter0.value((Number) null);
    }

    @Test(timeout = 4000)
    public void test4040() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setLenient(true);
        JsonWriter jsonWriter0 = jsonTreeWriter0.value((-82.0));
        jsonWriter0.isLenient();
    }

    @Test(timeout = 4000)
    public void test4141() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.beginArray();
        jsonTreeWriter0.endArray();
        jsonTreeWriter0.close();
        jsonTreeWriter0.name((String) null);
    }

    @Test(timeout = 4000)
    public void test4242() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        JsonWriter jsonWriter0 = jsonTreeWriter0.beginObject();
        jsonTreeWriter0.name("");
        jsonWriter0.name("");
    }

    @Test(timeout = 4000)
    public void test4343() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.close();
        jsonTreeWriter0.endObject();
    }

    @Test(timeout = 4000)
    public void test4444() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.beginObject();
        JsonWriter jsonWriter0 = jsonTreeWriter0.name("$]");
        jsonWriter0.endArray();
    }

    @Test(timeout = 4000)
    public void test4545() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.endArray();
    }

    @Test(timeout = 4000)
    public void test4646() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        JsonWriter jsonWriter0 = jsonTreeWriter0.beginArray();
        jsonTreeWriter0.endArray();
        jsonWriter0.endObject();
    }

    @Test(timeout = 4000)
    public void test4747() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.beginObject();
        jsonTreeWriter0.value(true);
    }

    @Test(timeout = 4000)
    public void test4848() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.setSerializeNulls(false);
        jsonTreeWriter0.beginObject();
        jsonTreeWriter0.name("");
        JsonWriter jsonWriter0 = jsonTreeWriter0.nullValue();
        jsonWriter0.isHtmlSafe();
    }

    @Test(timeout = 4000)
    public void test4949() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.beginObject();
        jsonTreeWriter0.name("Oi/PS+");
        JsonWriter jsonWriter0 = jsonTreeWriter0.nullValue();
        jsonWriter0.endArray();
    }

    @Test(timeout = 4000)
    public void test5050() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        JsonWriter jsonWriter0 = jsonTreeWriter0.beginObject();
        JsonWriter jsonWriter1 = jsonTreeWriter0.name("!,B~C~P&;[");
        jsonTreeWriter0.value(false);
        jsonWriter1.name("!,B~C~P&;[");
        jsonWriter0.endObject();
    }

    @Test(timeout = 4000)
    public void test5151() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        JsonElement jsonElement0 = jsonTreeWriter0.get();
        jsonElement0.isJsonPrimitive();
    }

    @Test(timeout = 4000)
    public void test5252() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.beginArray();
        jsonTreeWriter0.get();
    }

    @Test(timeout = 4000)
    public void test5353() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.flush();
        jsonTreeWriter0.getSerializeNulls();
    }

    @Test(timeout = 4000)
    public void test5454() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        JsonWriter jsonWriter0 = jsonTreeWriter0.beginObject();
        jsonTreeWriter0.endObject();
        jsonWriter0.name("");
    }

    @Test(timeout = 4000)
    public void test5555() throws Throwable {
        JsonTreeWriter jsonTreeWriter0 = new JsonTreeWriter();
        jsonTreeWriter0.jsonValue("ALbW&nftz5i");
    }
}
