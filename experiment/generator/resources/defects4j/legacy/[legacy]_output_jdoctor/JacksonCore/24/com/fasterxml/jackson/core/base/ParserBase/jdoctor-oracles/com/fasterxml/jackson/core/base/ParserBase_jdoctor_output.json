[
  {
    "signature": "com.fasterxml.jackson.core.base.ParserBase(com.fasterxml.jackson.core.io.IOContext ctxt, int features)",
    "name": "com.fasterxml.jackson.core.base.ParserBase",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.io.IOContext",
          "name": "IOContext",
          "isArray": false
        },
        "name": "ctxt"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "features"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "version()",
    "name": "version",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.Version",
      "name": "com.fasterxml.jackson.core.Version",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getCurrentValue()",
    "name": "getCurrentValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setCurrentValue(java.lang.Object v)",
    "name": "setCurrentValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "enable(com.fasterxml.jackson.core.JsonParser$Feature f)",
    "name": "enable",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonParser",
      "name": "com.fasterxml.jackson.core.JsonParser",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.JsonParser$Feature",
          "name": "Feature",
          "isArray": false
        },
        "name": "f"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "disable(com.fasterxml.jackson.core.JsonParser$Feature f)",
    "name": "disable",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonParser",
      "name": "com.fasterxml.jackson.core.JsonParser",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.JsonParser$Feature",
          "name": "Feature",
          "isArray": false
        },
        "name": "f"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setFeatureMask(int newMask)",
    "name": "setFeatureMask",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonParser",
      "name": "com.fasterxml.jackson.core.JsonParser",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newMask"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "overrideStdFeatures(int values, int mask)",
    "name": "overrideStdFeatures",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonParser",
      "name": "com.fasterxml.jackson.core.JsonParser",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "values"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "mask"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_checkStdFeatureChanges(int newFeatureFlags, int changedFeatures)",
    "name": "_checkStdFeatureChanges",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "newFeatureFlags"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "changedFeatures"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "newFeatureFlags"
        },
        "comment": "Bitflag of standard features after they were changed.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "changedFeatures"
        },
        "comment": "Bitflag of standard features for which setting did change.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getCurrentName()",
    "name": "getCurrentName",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "overrideCurrentName(java.lang.String name)",
    "name": "overrideCurrentName",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "close()",
    "name": "close",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isClosed()",
    "name": "isClosed",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getParsingContext()",
    "name": "getParsingContext",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.json.JsonReadContext",
      "name": "com.fasterxml.jackson.core.json.JsonReadContext",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTokenLocation()",
    "name": "getTokenLocation",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonLocation",
      "name": "com.fasterxml.jackson.core.JsonLocation",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getCurrentLocation()",
    "name": "getCurrentLocation",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonLocation",
      "name": "com.fasterxml.jackson.core.JsonLocation",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hasTextCharacters()",
    "name": "hasTextCharacters",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getBinaryValue(com.fasterxml.jackson.core.Base64Variant variant)",
    "name": "getBinaryValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "byte[]",
      "name": "byte[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.Base64Variant",
          "name": "Base64Variant",
          "isArray": false
        },
        "name": "variant"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTokenCharacterOffset()",
    "name": "getTokenCharacterOffset",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTokenLineNr()",
    "name": "getTokenLineNr",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTokenColumnNr()",
    "name": "getTokenColumnNr",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_closeInput()",
    "name": "_closeInput",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_releaseBuffers()",
    "name": "_releaseBuffers",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_handleEOF()",
    "name": "_handleEOF",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_eofAsNextChar()",
    "name": "_eofAsNextChar",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_getByteArrayBuilder()",
    "name": "_getByteArrayBuilder",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.util.ByteArrayBuilder",
      "name": "com.fasterxml.jackson.core.util.ByteArrayBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "reset(boolean negative, int intLen, int fractLen, int expLen)",
    "name": "reset",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonToken",
      "name": "com.fasterxml.jackson.core.JsonToken",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "negative"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "intLen"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "fractLen"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "expLen"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "resetInt(boolean negative, int intLen)",
    "name": "resetInt",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonToken",
      "name": "com.fasterxml.jackson.core.JsonToken",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "negative"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "intLen"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "resetFloat(boolean negative, int intLen, int fractLen, int expLen)",
    "name": "resetFloat",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonToken",
      "name": "com.fasterxml.jackson.core.JsonToken",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "negative"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "intLen"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "fractLen"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "expLen"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "resetAsNaN(java.lang.String valueStr, double value)",
    "name": "resetAsNaN",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonToken",
      "name": "com.fasterxml.jackson.core.JsonToken",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "valueStr"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isNaN()",
    "name": "isNaN",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNumberValue()",
    "name": "getNumberValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "java.lang.Number",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNumberType()",
    "name": "getNumberType",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonParser$NumberType",
      "name": "com.fasterxml.jackson.core.JsonParser$NumberType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getIntValue()",
    "name": "getIntValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getLongValue()",
    "name": "getLongValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getBigIntegerValue()",
    "name": "getBigIntegerValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.math.BigInteger",
      "name": "java.math.BigInteger",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getFloatValue()",
    "name": "getFloatValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getDoubleValue()",
    "name": "getDoubleValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getDecimalValue()",
    "name": "getDecimalValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.math.BigDecimal",
      "name": "java.math.BigDecimal",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_parseNumericValue(int expType)",
    "name": "_parseNumericValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "expType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "expType"
        },
        "comment": "Numeric type that we will immediately need if any. expType is mostly necessary to optimize handling of floating point numbers.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "_parseIntValue()",
    "name": "_parseIntValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_reportTooLongIntegral(int expType, java.lang.String rawNum)",
    "name": "_reportTooLongIntegral",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "expType"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "rawNum"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "convertNumberToInt()",
    "name": "convertNumberToInt",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "convertNumberToLong()",
    "name": "convertNumberToLong",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "convertNumberToBigInteger()",
    "name": "convertNumberToBigInteger",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "convertNumberToDouble()",
    "name": "convertNumberToDouble",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "convertNumberToBigDecimal()",
    "name": "convertNumberToBigDecimal",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_reportMismatchedEndMarker(int actCh, char expCh)",
    "name": "_reportMismatchedEndMarker",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "actCh"
      },
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "expCh"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_handleUnrecognizedCharacterEscape(char ch)",
    "name": "_handleUnrecognizedCharacterEscape",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char",
      "name": "char",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "ch"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_throwUnquotedSpace(int i, java.lang.String ctxtDesc)",
    "name": "_throwUnquotedSpace",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "i"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "ctxtDesc"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_decodeEscaped()",
    "name": "_decodeEscaped",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char",
      "name": "char",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant b64variant, int ch, int index)",
    "name": "_decodeBase64Escape",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.Base64Variant",
          "name": "Base64Variant",
          "isArray": false
        },
        "name": "b64variant"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "ch"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant b64variant, char ch, int index)",
    "name": "_decodeBase64Escape",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.Base64Variant",
          "name": "Base64Variant",
          "isArray": false
        },
        "name": "b64variant"
      },
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "ch"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant b64variant, int ch, int bindex)",
    "name": "reportInvalidBase64Char",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.IllegalArgumentException",
      "name": "java.lang.IllegalArgumentException",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.Base64Variant",
          "name": "Base64Variant",
          "isArray": false
        },
        "name": "b64variant"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "ch"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "bindex"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant b64variant, int ch, int bindex, java.lang.String msg)",
    "name": "reportInvalidBase64Char",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.IllegalArgumentException",
      "name": "java.lang.IllegalArgumentException",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.Base64Variant",
          "name": "Base64Variant",
          "isArray": false
        },
        "name": "b64variant"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "ch"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "bindex"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "msg"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "bindex"
        },
        "comment": "Relative index within base64 character unit between 0 and 3 (as unit has exactly 4 characters).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "_handleBase64MissingPadding(com.fasterxml.jackson.core.Base64Variant b64variant)",
    "name": "_handleBase64MissingPadding",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.Base64Variant",
          "name": "Base64Variant",
          "isArray": false
        },
        "name": "b64variant"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_getSourceReference()",
    "name": "_getSourceReference",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "growArrayBy(int[] arr, int more)",
    "name": "growArrayBy",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int[]",
      "name": "int[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "arr"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "more"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "loadMoreGuaranteed()",
    "name": "loadMoreGuaranteed",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "loadMore()",
    "name": "loadMore",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_finishString()",
    "name": "_finishString",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.base.ParserBase",
      "name": "ParserBase",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.base.ParserBase",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]