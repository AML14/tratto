[
  {
    "signature": "com.fasterxml.jackson.core.JsonGenerator()",
    "name": "com.fasterxml.jackson.core.JsonGenerator",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setCodec(com.fasterxml.jackson.core.ObjectCodec oc)",
    "name": "setCodec",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "com.fasterxml.jackson.core.JsonGenerator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.ObjectCodec",
          "name": "ObjectCodec",
          "isArray": false
        },
        "name": "oc"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "Generator itself (this), to allow chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getCodec()",
    "name": "getCodec",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.ObjectCodec",
      "name": "com.fasterxml.jackson.core.ObjectCodec",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "version()",
    "name": "version",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.Version",
      "name": "com.fasterxml.jackson.core.Version",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "enable(com.fasterxml.jackson.core.JsonGenerator$Feature f)",
    "name": "enable",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "com.fasterxml.jackson.core.JsonGenerator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator$Feature",
          "name": "Feature",
          "isArray": false
        },
        "name": "f"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "Generator itself (this), to allow chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "disable(com.fasterxml.jackson.core.JsonGenerator$Feature f)",
    "name": "disable",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "com.fasterxml.jackson.core.JsonGenerator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator$Feature",
          "name": "Feature",
          "isArray": false
        },
        "name": "f"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "Generator itself (this), to allow chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "configure(com.fasterxml.jackson.core.JsonGenerator$Feature f, boolean state)",
    "name": "configure",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "com.fasterxml.jackson.core.JsonGenerator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator$Feature",
          "name": "Feature",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "state"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "Generator itself (this), to allow chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature f)",
    "name": "isEnabled",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator$Feature",
          "name": "Feature",
          "isArray": false
        },
        "name": "f"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getFeatureMask()",
    "name": "getFeatureMask",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Bit mask that defines current states of all standard JsonGenerator.Features.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setFeatureMask(int values)",
    "name": "setFeatureMask",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "com.fasterxml.jackson.core.JsonGenerator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "values"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "values"
        },
        "comment": "Bitmask that defines which Features are enabled and which disabled.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "This parser object, to allow chaining of calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "overrideStdFeatures(int values, int mask)",
    "name": "overrideStdFeatures",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "com.fasterxml.jackson.core.JsonGenerator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "values"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "mask"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "values"
        },
        "comment": "Bit mask of set/clear state for features to change.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "mask"
        },
        "comment": "Bit mask of features to change.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getFormatFeatures()",
    "name": "getFormatFeatures",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Bit mask that defines current states of all standard FormatFeatures.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "overrideFormatFeatures(int values, int mask)",
    "name": "overrideFormatFeatures",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "com.fasterxml.jackson.core.JsonGenerator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "values"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "mask"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "values"
        },
        "comment": "Bit mask of set/clear state for features to change.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "mask"
        },
        "comment": "Bit mask of features to change.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setSchema(com.fasterxml.jackson.core.FormatSchema schema)",
    "name": "setSchema",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.FormatSchema",
          "name": "FormatSchema",
          "isArray": false
        },
        "name": "schema"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.fasterxml.jackson.core.FormatSchema",
            "name": "FormatSchema",
            "isArray": false
          },
          "name": "schema"
        },
        "comment": "Schema to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "generator does not support schema.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getSchema()",
    "name": "getSchema",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.FormatSchema",
      "name": "com.fasterxml.jackson.core.FormatSchema",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter pp)",
    "name": "setPrettyPrinter",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "com.fasterxml.jackson.core.JsonGenerator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.PrettyPrinter",
          "name": "PrettyPrinter",
          "isArray": false
        },
        "name": "pp"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "Generator itself (this), to allow chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getPrettyPrinter()",
    "name": "getPrettyPrinter",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.PrettyPrinter",
      "name": "com.fasterxml.jackson.core.PrettyPrinter",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "useDefaultPrettyPrinter()",
    "name": "useDefaultPrettyPrinter",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "com.fasterxml.jackson.core.JsonGenerator",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Generator itself (this), to allow chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setHighestNonEscapedChar(int charCode)",
    "name": "setHighestNonEscapedChar",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "com.fasterxml.jackson.core.JsonGenerator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "charCode"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "charCode"
        },
        "comment": "Either -1 to indicate that no additional escaping is to be done; or highest code point not to escape (meaning higher ones . charCode is ) if positive value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getHighestEscapedChar()",
    "name": "getHighestEscapedChar",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Currently active limitation for highest non-escaped character, if defined; or -1 to indicate no additional escaping is performed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getCharacterEscapes()",
    "name": "getCharacterEscapes",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.io.CharacterEscapes",
      "name": "com.fasterxml.jackson.core.io.CharacterEscapes",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes esc)",
    "name": "setCharacterEscapes",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "com.fasterxml.jackson.core.JsonGenerator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.io.CharacterEscapes",
          "name": "CharacterEscapes",
          "isArray": false
        },
        "name": "esc"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setRootValueSeparator(com.fasterxml.jackson.core.SerializableString sep)",
    "name": "setRootValueSeparator",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "com.fasterxml.jackson.core.JsonGenerator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.SerializableString",
          "name": "SerializableString",
          "isArray": false
        },
        "name": "sep"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.fasterxml.jackson.core.SerializableString",
            "name": "SerializableString",
            "isArray": false
          },
          "name": "sep"
        },
        "comment": "Separator to use if any. sep is null means that no separator is automatically added.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getOutputTarget()",
    "name": "getOutputTarget",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getOutputBuffered()",
    "name": "getOutputBuffered",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Amount of content buffered in internal units, if amount known and accessible; -1 if not accessible.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getCurrentValue()",
    "name": "getCurrentValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setCurrentValue(java.lang.Object v)",
    "name": "setCurrentValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "canUseSchema(com.fasterxml.jackson.core.FormatSchema schema)",
    "name": "canUseSchema",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.FormatSchema",
          "name": "FormatSchema",
          "isArray": false
        },
        "name": "schema"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.fasterxml.jackson.core.FormatSchema",
            "name": "FormatSchema",
            "isArray": false
          },
          "name": "schema"
        },
        "comment": "Schema to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if this generator can use given schema; false if not.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "canWriteObjectId()",
    "name": "canWriteObjectId",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "canWriteTypeId()",
    "name": "canWriteTypeId",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "canWriteBinaryNatively()",
    "name": "canWriteBinaryNatively",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "canOmitFields()",
    "name": "canOmitFields",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "canWriteFormattedNumbers()",
    "name": "canWriteFormattedNumbers",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeStartArray()",
    "name": "writeStartArray",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeStartArray(int size)",
    "name": "writeStartArray",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "size"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "size"
        },
        "comment": "Number of elements this array will have: actual number of values written (before matching call to writeEndArray() MUST match generator MAY verify this is the case.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "writeEndArray()",
    "name": "writeEndArray",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeStartObject()",
    "name": "writeStartObject",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeStartObject(java.lang.Object forValue)",
    "name": "writeStartObject",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "forValue"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeEndObject()",
    "name": "writeEndObject",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeFieldName(java.lang.String name)",
    "name": "writeFieldName",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeFieldName(com.fasterxml.jackson.core.SerializableString name)",
    "name": "writeFieldName",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.SerializableString",
          "name": "SerializableString",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeFieldId(long id)",
    "name": "writeFieldId",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeArray(int[] array, int offset, int length)",
    "name": "writeArray",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[I",
            "name": "int[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "Array that contains values to write.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "Offset of the first element to write within array.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "Number of elements in array to write from `offset` to `offset + len - 1`.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "writeArray(long[] array, int offset, int length)",
    "name": "writeArray",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[J",
          "name": "long[]",
          "isArray": true
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[J",
            "name": "long[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "Array that contains values to write.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "Offset of the first element to write within array.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "Number of elements in array to write from `offset` to `offset + len - 1`.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "writeArray(double[] array, int offset, int length)",
    "name": "writeArray",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "Array that contains values to write.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "Offset of the first element to write within array.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "Number of elements in array to write from `offset` to `offset + len - 1`.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "writeString(java.lang.String text)",
    "name": "writeString",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "text"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeString(char[] text, int offset, int len)",
    "name": "writeString",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "text"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "len"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeString(com.fasterxml.jackson.core.SerializableString text)",
    "name": "writeString",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.SerializableString",
          "name": "SerializableString",
          "isArray": false
        },
        "name": "text"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeRawUTF8String(byte[] text, int offset, int length)",
    "name": "writeRawUTF8String",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "text"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeUTF8String(byte[] text, int offset, int length)",
    "name": "writeUTF8String",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "text"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeRaw(java.lang.String text)",
    "name": "writeRaw",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "text"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeRaw(java.lang.String text, int offset, int len)",
    "name": "writeRaw",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "text"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "len"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeRaw(char[] text, int offset, int len)",
    "name": "writeRaw",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "text"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "len"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeRaw(char c)",
    "name": "writeRaw",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeRaw(com.fasterxml.jackson.core.SerializableString raw)",
    "name": "writeRaw",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.SerializableString",
          "name": "SerializableString",
          "isArray": false
        },
        "name": "raw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeRawValue(java.lang.String text)",
    "name": "writeRawValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "text"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeRawValue(java.lang.String text, int offset, int len)",
    "name": "writeRawValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "text"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "len"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeRawValue(char[] text, int offset, int len)",
    "name": "writeRawValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "text"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "len"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeRawValue(com.fasterxml.jackson.core.SerializableString raw)",
    "name": "writeRawValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.SerializableString",
          "name": "SerializableString",
          "isArray": false
        },
        "name": "raw"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeBinary(com.fasterxml.jackson.core.Base64Variant bv, byte[] data, int offset, int len)",
    "name": "writeBinary",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.Base64Variant",
          "name": "Base64Variant",
          "isArray": false
        },
        "name": "bv"
      },
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "data"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "len"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.fasterxml.jackson.core.Base64Variant",
            "name": "Base64Variant",
            "isArray": false
          },
          "name": "bv"
        },
        "comment": "Base64 variant to use: defines details such as whether padding is used (and if so using which character) what is the maximum line length before adding linefeed. bv is and also the underlying alphabet to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "writeBinary(byte[] data, int offset, int len)",
    "name": "writeBinary",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "data"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "len"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeBinary(byte[] data)",
    "name": "writeBinary",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "data"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeBinary(java.io.InputStream data, int dataLength)",
    "name": "writeBinary",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "data"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dataLength"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.InputStream",
            "name": "InputStream",
            "isArray": false
          },
          "name": "data"
        },
        "comment": "InputStream to use for reading binary data to write. . data is not closed after successful write operation.",
        "kind": "PARAM",
        "condition": "(receiverObjectID.isClosed()) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dataLength"
        },
        "comment": "(optional) number of bytes that . dataLength is available; or -1 to be indicate number is not known. Note that implementations need not support cases where length is not known in advance; this depends on underlying data format: JSON output does NOT require length other formats may.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "writeBinary(com.fasterxml.jackson.core.Base64Variant bv, java.io.InputStream data, int dataLength)",
    "name": "writeBinary",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.Base64Variant",
          "name": "Base64Variant",
          "isArray": false
        },
        "name": "bv"
      },
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "data"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dataLength"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.fasterxml.jackson.core.Base64Variant",
            "name": "Base64Variant",
            "isArray": false
          },
          "name": "bv"
        },
        "comment": "Base64 variant to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.InputStream",
            "name": "InputStream",
            "isArray": false
          },
          "name": "data"
        },
        "comment": "InputStream to use for reading binary data to write. . data is not closed after successful write operation.",
        "kind": "PARAM",
        "condition": "(receiverObjectID.isClosed()) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dataLength"
        },
        "comment": "(optional) number of bytes that . dataLength is available; or -1 to be indicate number is not known. If a positive length is given data MUST provide at least that many bytes: if not an exception . dataLength is thrown. Note that implementations need not support cases where length is not known in advance; this depends on underlying data format: JSON output does NOT require length other formats may.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "Number of bytes read from data and written as binary payload.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "writeNumber(short v)",
    "name": "writeNumber",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "short",
          "name": "short",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "short",
            "name": "short",
            "isArray": false
          },
          "name": "v"
        },
        "comment": "Number value to write.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "writeNumber(int v)",
    "name": "writeNumber",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "v"
        },
        "comment": "Number value to write.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "writeNumber(long v)",
    "name": "writeNumber",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "v"
        },
        "comment": "Number value to write.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "writeNumber(java.math.BigInteger v)",
    "name": "writeNumber",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.math.BigInteger",
          "name": "BigInteger",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.math.BigInteger",
            "name": "BigInteger",
            "isArray": false
          },
          "name": "v"
        },
        "comment": "Number value to write.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "writeNumber(double v)",
    "name": "writeNumber",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "v"
        },
        "comment": "Number value to write.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "writeNumber(float v)",
    "name": "writeNumber",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "v"
        },
        "comment": "Number value to write.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "writeNumber(java.math.BigDecimal v)",
    "name": "writeNumber",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.math.BigDecimal",
          "name": "BigDecimal",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.math.BigDecimal",
            "name": "BigDecimal",
            "isArray": false
          },
          "name": "v"
        },
        "comment": "Number value to write.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "writeNumber(java.lang.String encodedValue)",
    "name": "writeNumber",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "encodedValue"
      }
    ],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "underlying data format does not support numbers serialized textually AND if generator is not allowed to just output a String instead (Schema-based formats may require actual number for example).",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "writeBoolean(boolean state)",
    "name": "writeBoolean",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "state"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeNull()",
    "name": "writeNull",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeEmbeddedObject(java.lang.Object object)",
    "name": "writeEmbeddedObject",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeObjectId(java.lang.Object id)",
    "name": "writeObjectId",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeObjectRef(java.lang.Object id)",
    "name": "writeObjectRef",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeTypeId(java.lang.Object id)",
    "name": "writeTypeId",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeObject(java.lang.Object pojo)",
    "name": "writeObject",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "pojo"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeTree(com.fasterxml.jackson.core.TreeNode rootNode)",
    "name": "writeTree",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.TreeNode",
          "name": "TreeNode",
          "isArray": false
        },
        "name": "rootNode"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeStringField(java.lang.String fieldName, java.lang.String value)",
    "name": "writeStringField",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fieldName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeBooleanField(java.lang.String fieldName, boolean value)",
    "name": "writeBooleanField",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fieldName"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeNullField(java.lang.String fieldName)",
    "name": "writeNullField",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fieldName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeNumberField(java.lang.String fieldName, int value)",
    "name": "writeNumberField",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fieldName"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeNumberField(java.lang.String fieldName, long value)",
    "name": "writeNumberField",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fieldName"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeNumberField(java.lang.String fieldName, double value)",
    "name": "writeNumberField",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fieldName"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeNumberField(java.lang.String fieldName, float value)",
    "name": "writeNumberField",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fieldName"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeNumberField(java.lang.String fieldName, java.math.BigDecimal value)",
    "name": "writeNumberField",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fieldName"
      },
      {
        "type": {
          "qualifiedName": "java.math.BigDecimal",
          "name": "BigDecimal",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeBinaryField(java.lang.String fieldName, byte[] data)",
    "name": "writeBinaryField",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fieldName"
      },
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "data"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeArrayFieldStart(java.lang.String fieldName)",
    "name": "writeArrayFieldStart",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fieldName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeObjectFieldStart(java.lang.String fieldName)",
    "name": "writeObjectFieldStart",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fieldName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeObjectField(java.lang.String fieldName, java.lang.Object pojo)",
    "name": "writeObjectField",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fieldName"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "pojo"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeOmittedField(java.lang.String fieldName)",
    "name": "writeOmittedField",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fieldName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "copyCurrentEvent(com.fasterxml.jackson.core.JsonParser p)",
    "name": "copyCurrentEvent",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.JsonParser",
          "name": "JsonParser",
          "isArray": false
        },
        "name": "p"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "copyCurrentStructure(com.fasterxml.jackson.core.JsonParser p)",
    "name": "copyCurrentStructure",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.JsonParser",
          "name": "JsonParser",
          "isArray": false
        },
        "name": "p"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getOutputContext()",
    "name": "getOutputContext",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonStreamContext",
      "name": "com.fasterxml.jackson.core.JsonStreamContext",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Context object that can give information about logical position within generated json content.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "flush()",
    "name": "flush",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isClosed()",
    "name": "isClosed",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "close()",
    "name": "close",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_reportError(java.lang.String msg)",
    "name": "_reportError",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "msg"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_throwInternal()",
    "name": "_throwInternal",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_reportUnsupportedOperation()",
    "name": "_reportUnsupportedOperation",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_verifyOffsets(int arrayLength, int offset, int length)",
    "name": "_verifyOffsets",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "arrayLength"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_writeSimpleObject(java.lang.Object value)",
    "name": "_writeSimpleObject",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
      "name": "JsonGenerator",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.JsonGenerator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "Non-null value to write.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  }
]