[
  {
    "signature": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser(com.fasterxml.jackson.core.io.IOContext ctxt, int features, java.io.InputStream in, com.fasterxml.jackson.core.ObjectCodec codec, com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer sym, byte[] inputBuffer, int start, int end, boolean bufferRecyclable)",
    "name": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.io.IOContext",
          "name": "IOContext",
          "isArray": false
        },
        "name": "ctxt"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "features"
      },
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "in"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.ObjectCodec",
          "name": "ObjectCodec",
          "isArray": false
        },
        "name": "codec"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer",
          "name": "ByteQuadsCanonicalizer",
          "isArray": false
        },
        "name": "sym"
      },
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "inputBuffer"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "end"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "bufferRecyclable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getCodec()",
    "name": "getCodec",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.ObjectCodec",
      "name": "com.fasterxml.jackson.core.ObjectCodec",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setCodec(com.fasterxml.jackson.core.ObjectCodec c)",
    "name": "setCodec",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.ObjectCodec",
          "name": "ObjectCodec",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "releaseBuffered(java.io.OutputStream out)",
    "name": "releaseBuffered",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getInputSource()",
    "name": "getInputSource",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "loadMore()",
    "name": "loadMore",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_loadToHaveAtLeast(int minAvailable)",
    "name": "_loadToHaveAtLeast",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minAvailable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_closeInput()",
    "name": "_closeInput",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_releaseBuffers()",
    "name": "_releaseBuffers",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getText()",
    "name": "getText",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getValueAsString()",
    "name": "getValueAsString",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getValueAsString(java.lang.String defValue)",
    "name": "getValueAsString",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "defValue"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getValueAsInt()",
    "name": "getValueAsInt",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getValueAsInt(int defValue)",
    "name": "getValueAsInt",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "defValue"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_getText2(com.fasterxml.jackson.core.JsonToken t)",
    "name": "_getText2",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.JsonToken",
          "name": "JsonToken",
          "isArray": false
        },
        "name": "t"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTextCharacters()",
    "name": "getTextCharacters",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char[]",
      "name": "char[]",
      "isArray": true
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTextLength()",
    "name": "getTextLength",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTextOffset()",
    "name": "getTextOffset",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant)",
    "name": "getBinaryValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "byte[]",
      "name": "byte[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.Base64Variant",
          "name": "Base64Variant",
          "isArray": false
        },
        "name": "b64variant"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "readBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant, java.io.OutputStream out)",
    "name": "readBinaryValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.Base64Variant",
          "name": "Base64Variant",
          "isArray": false
        },
        "name": "b64variant"
      },
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_readBinary(com.fasterxml.jackson.core.Base64Variant b64variant, java.io.OutputStream out, byte[] buffer)",
    "name": "_readBinary",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.Base64Variant",
          "name": "Base64Variant",
          "isArray": false
        },
        "name": "b64variant"
      },
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "out"
      },
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "buffer"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTokenLocation()",
    "name": "getTokenLocation",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonLocation",
      "name": "com.fasterxml.jackson.core.JsonLocation",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getCurrentLocation()",
    "name": "getCurrentLocation",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonLocation",
      "name": "com.fasterxml.jackson.core.JsonLocation",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "nextToken()",
    "name": "nextToken",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonToken",
      "name": "com.fasterxml.jackson.core.JsonToken",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Next token from the stream, if any found, or null to indicate end-of-input.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "nextFieldName(com.fasterxml.jackson.core.SerializableString str)",
    "name": "nextFieldName",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.SerializableString",
          "name": "SerializableString",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "nextFieldName()",
    "name": "nextFieldName",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "nextTextValue()",
    "name": "nextTextValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "nextIntValue(int defaultValue)",
    "name": "nextIntValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "nextLongValue(long defaultValue)",
    "name": "nextLongValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "nextBooleanValue()",
    "name": "nextBooleanValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Boolean",
      "name": "java.lang.Boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_parsePosNumber(int c)",
    "name": "_parsePosNumber",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonToken",
      "name": "com.fasterxml.jackson.core.JsonToken",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_parseNegNumber()",
    "name": "_parseNegNumber",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonToken",
      "name": "com.fasterxml.jackson.core.JsonToken",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_parseName(int i)",
    "name": "_parseName",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "i"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parseMediumName(int q2)",
    "name": "parseMediumName",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "q2"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parseMediumName2(int q3, int q2)",
    "name": "parseMediumName2",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "q3"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "q2"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parseLongName(int q, int q2, int q3)",
    "name": "parseLongName",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "q"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "q2"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "q3"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "slowParseName()",
    "name": "slowParseName",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parseEscapedName(int[] quads, int qlen, int currQuad, int ch, int currQuadBytes)",
    "name": "parseEscapedName",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "quads"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "qlen"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "currQuad"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "ch"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "currQuadBytes"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_handleOddName(int ch)",
    "name": "_handleOddName",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "ch"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_parseAposName()",
    "name": "_parseAposName",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_finishString()",
    "name": "_finishString",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_finishAndReturnString()",
    "name": "_finishAndReturnString",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_skipString()",
    "name": "_skipString",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_handleUnexpectedValue(int c)",
    "name": "_handleUnexpectedValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonToken",
      "name": "com.fasterxml.jackson.core.JsonToken",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_handleApos()",
    "name": "_handleApos",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonToken",
      "name": "com.fasterxml.jackson.core.JsonToken",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_handleInvalidNumberStart(int ch, boolean neg)",
    "name": "_handleInvalidNumberStart",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonToken",
      "name": "com.fasterxml.jackson.core.JsonToken",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "ch"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "neg"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_matchToken(java.lang.String matchStr, int i)",
    "name": "_matchToken",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "matchStr"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "i"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_decodeEscaped()",
    "name": "_decodeEscaped",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char",
      "name": "char",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_decodeCharForError(int firstByte)",
    "name": "_decodeCharForError",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "firstByte"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_skipCR()",
    "name": "_skipCR",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_reportInvalidToken(java.lang.String matchedPart)",
    "name": "_reportInvalidToken",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "matchedPart"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_reportInvalidToken(java.lang.String matchedPart, java.lang.String msg)",
    "name": "_reportInvalidToken",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "matchedPart"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "msg"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_reportInvalidChar(int c)",
    "name": "_reportInvalidChar",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_reportInvalidInitial(int mask)",
    "name": "_reportInvalidInitial",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "mask"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_reportInvalidOther(int mask)",
    "name": "_reportInvalidOther",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "mask"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_reportInvalidOther(int mask, int ptr)",
    "name": "_reportInvalidOther",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "mask"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "ptr"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "growArrayBy(int[] arr, int more)",
    "name": "growArrayBy",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int[]",
      "name": "int[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "arr"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "more"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant)",
    "name": "_decodeBase64",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "name": "UTF8StreamJsonParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "byte[]",
      "name": "byte[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.Base64Variant",
          "name": "Base64Variant",
          "isArray": false
        },
        "name": "b64variant"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]