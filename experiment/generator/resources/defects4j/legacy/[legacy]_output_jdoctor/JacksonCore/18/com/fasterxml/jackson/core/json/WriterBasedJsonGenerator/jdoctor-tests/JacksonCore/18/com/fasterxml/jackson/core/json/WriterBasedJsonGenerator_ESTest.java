/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 20 03:04:16 GMT 2023
 */
package com.fasterxml.jackson.core.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.core.SerializableString;
import com.fasterxml.jackson.core.base.GeneratorBase;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.io.SerializedString;
import com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.StringWriter;
import java.io.Writer;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class WriterBasedJsonGenerator_ESTest extends WriterBasedJsonGenerator_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        Object object0 = writerBasedJsonGenerator0.getOutputTarget();
        object0.toString();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        int int0 = writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1107, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[0];
        writerBasedJsonGenerator0.writeUTF8String(byteArray0, 55296, 1);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[0];
        writerBasedJsonGenerator0.writeRawUTF8String(byteArray0, 1, 2514);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFu|s#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeFieldName("Can not write a field name, expecting a value");
        writerBasedJsonGenerator0.writeFieldName("nFu|s#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        writerBasedJsonGenerator0.writeFieldName((SerializableString) serializedString0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator0._rootValueSeparator;
        writerBasedJsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2322, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0);
        SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator0._rootValueSeparator;
        writerBasedJsonGenerator0.writeFieldName((SerializableString) serializedString0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        JsonGenerator jsonGenerator0 = writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        jsonGenerator0.writeFieldName("nFs#Qt^1:");
        jsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeFieldName("Can not write a field name, expecting a value");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0._writeFieldName(defaultPrettyPrinter0.DEFAULT_ROOT_VALUE_SEPARATOR, false);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 8, (ObjectCodec) null, stringWriter0);
        SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator0._rootValueSeparator;
        writerBasedJsonGenerator0._writeFieldName(serializedString0, false);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        JsonGenerator jsonGenerator0 = writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        jsonGenerator0.writeStartArray();
        jsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeEndArray();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        JsonGenerator jsonGenerator0 = writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        jsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeString((SerializableString) defaultPrettyPrinter0.DEFAULT_ROOT_VALUE_SEPARATOR);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber((long) 0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeEndObject();
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.useDefaultPrettyPrinter();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        char[] charArray0 = iOContext0.allocNameCopyBuffer(32768);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeString(charArray0, 94, 253);
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._writePPFieldName("nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        JsonGenerator jsonGenerator0 = writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        jsonGenerator0.writeFieldName("u:UZA>&O:8");
        jsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.useDefaultPrettyPrinter();
        SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator1._rootValueSeparator;
        writerBasedJsonGenerator0._writeFieldName(serializedString0, true);
        writerBasedJsonGenerator1.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.useDefaultPrettyPrinter();
        SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator1._rootValueSeparator;
        writerBasedJsonGenerator0._writeFieldName(serializedString0, true);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 97, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString((String) null);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.writeFieldName("Can not write a field name, expecting a value");
        writerBasedJsonGenerator0.writeNumber((short) 115);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.writeString("1");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        SerializedString serializedString0 = new SerializedString("com.fasterxml.jackson.core.json.WriterBasedJsonGenerator");
        writerBasedJsonGenerator0.writeString((SerializableString) serializedString0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString((SerializableString) null);
    }

    @Test(timeout = 4000)
    public void test2930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator0._rootValueSeparator;
        writerBasedJsonGenerator0.writeString((SerializableString) serializedString0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test3031() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber((long) 0);
        SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator0._rootValueSeparator;
        writerBasedJsonGenerator0._writeFieldName(serializedString0, true);
        writerBasedJsonGenerator0.writeString((SerializableString) serializedString0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test3132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        SerializedString serializedString0 = new SerializedString("JF@&7");
        writerBasedJsonGenerator0.writeString((SerializableString) serializedString0);
        writerBasedJsonGenerator0.writeNumber("V");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test3233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeRaw("", 1, 3);
    }

    @Test(timeout = 4000)
    public void test3334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeRaw((String) null, 497, 55296);
    }

    @Test(timeout = 4000)
    public void test3435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        SerializedString serializedString0 = new SerializedString("com.fasterxml.jackson.core.json.WriterBasedJsonGenerator");
        writerBasedJsonGenerator0._writeFieldName(serializedString0, true);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test3536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3987);
        byte[] byteArray0 = new byte[5];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 0);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        SerializedString serializedString0 = new SerializedString(", expecting field name");
        writerBasedJsonGenerator0._writeFieldName(serializedString0, true);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test3637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator0._rootValueSeparator;
        writerBasedJsonGenerator0._writeFieldName(serializedString0, true);
        writerBasedJsonGenerator0.writeRaw(',');
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test3738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber((-203.99656708310306));
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test3839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber((long) 0);
        writerBasedJsonGenerator0.writeFieldName("write a string");
        byte[] byteArray0 = new byte[3];
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeBinary(byteArray0, 57343, 3);
    }

    @Test(timeout = 4000)
    public void test3940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        byte[] byteArray0 = new byte[3];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4041() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = (-2193);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) mockFileInputStream0, 0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4042() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = (-2193);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) mockFileInputStream0, 0);
    }

    @Test(timeout = 4000)
    public void test4143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 10);
    }

    @Test(timeout = 4000)
    public void test4244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._checkStdFeatureChanges(364, 754);
        writerBasedJsonGenerator0.writeNumber((short) 3930);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1{", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.writeFieldName("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer");
        writerBasedJsonGenerator0.writeNumber((short) 933);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.writeFieldName("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer");
        writerBasedJsonGenerator0._checkStdFeatureChanges(364, 754);
        writerBasedJsonGenerator0.writeNumber((short) 3930);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4547() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test4548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test4549() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test4550() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test4551() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test4552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test4553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test4554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test4555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test4556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test4557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test4558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test4559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test4560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test4561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test4562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test4563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test4564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test4565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test4566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test4567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test4568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test4569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test4570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test4571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test4572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test4573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test4574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test4576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test4577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test4578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test4579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test4580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test4581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test4582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test4583() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test4584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test4585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test4586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test4587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test4588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test4589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test4590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test4591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test4592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test4593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test4594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test4595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test4596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test4597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test4598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test4599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test45100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test45101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test45102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test45103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test45104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test45105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test45106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test45107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test45108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
    }

    @Test(timeout = 4000)
    public void test45109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
    }

    @Test(timeout = 4000)
    public void test45110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
    }

    @Test(timeout = 4000)
    public void test45111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
    }

    @Test(timeout = 4000)
    public void test45112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
    }

    @Test(timeout = 4000)
    public void test45113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
    }

    @Test(timeout = 4000)
    public void test45114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
    }

    @Test(timeout = 4000)
    public void test45115() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
    }

    @Test(timeout = 4000)
    public void test45116() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
    }

    @Test(timeout = 4000)
    public void test45117() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
    }

    @Test(timeout = 4000)
    public void test45118() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
    }

    @Test(timeout = 4000)
    public void test45119() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
    }

    @Test(timeout = 4000)
    public void test46120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test46121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test46122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test46123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test46124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test46125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test46126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test46127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test46128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test46129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test46130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test46131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test46132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test46133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test46134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test46135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test46136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test46137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test46138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test46139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test46140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test46141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test46142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test46143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test46144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test46145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test46146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test46147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test46148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test46149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test46150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test46151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test46152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test46153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test46154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test46155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test46156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test46157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test46158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test46159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test46160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test46161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test46162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test46163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test46164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test46165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test46166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test46167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test46168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test46169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test46170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test46171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test46172() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test46173() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test46174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test46175() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test46176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test46177() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test46178() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test46179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test46180() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test46181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test46182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test46183() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test46184() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test46185() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test46186() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test46187() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test46188() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test46189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test46190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test46191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test46192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test47193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test47194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test47195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test47196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test47197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test47198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test47199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test47200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test47201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test47202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test47203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
    }

    @Test(timeout = 4000)
    public void test47204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test47205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
    }

    @Test(timeout = 4000)
    public void test47206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    }

    @Test(timeout = 4000)
    public void test47207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test47208() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test47209() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test47210() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test47211() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test47212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test47213() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test47214() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test47215() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test47216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test47217() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test47218() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test47219() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test47220() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test47221() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test47222() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test47223() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test47224() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test47225() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test47226() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test47227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test47228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test47229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test47230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test47231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test47232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test47233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test47234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test47235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test47236() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test47237() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test47238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test47239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test47240() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test47241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test47242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test47243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test47244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test47245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test47246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test47247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test47248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test47249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test47250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test47251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test47252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test47253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test47254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test47255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test47256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test47257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test47258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test47259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test47260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test47261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test47262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test47263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test47264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test47265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test47266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test47267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test47268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test47269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test47270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test47271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test47272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test47273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test47274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test47275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test47276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test47277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test47278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test47279() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test47280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test47281() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test47282() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test47283() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test47284() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test47285() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test48286() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test48287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test48288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test48289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test48290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test48291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test48292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test48293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test48294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test48295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test48296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test48297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test48298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test48299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test48300() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test48301() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test48302() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test48303() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test48304() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test48305() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test48306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test48307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test48308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test48309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test48310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test48311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test48312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test48313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test48314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test48315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test48316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test48317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test48318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test48319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test48320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test48321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test48322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test48323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test48324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test48325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test48326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test48327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test48328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test48329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test48330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test48331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test48332() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test48333() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test48334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test48335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test48336() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test48337() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test48338() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test48339() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test48340() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test48341() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test48342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test48343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test48344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test48345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test48346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test48347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
    }

    @Test(timeout = 4000)
    public void test48348() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
    }

    @Test(timeout = 4000)
    public void test48349() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
    }

    @Test(timeout = 4000)
    public void test48350() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
    }

    @Test(timeout = 4000)
    public void test48351() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
    }

    @Test(timeout = 4000)
    public void test48352() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
    }

    @Test(timeout = 4000)
    public void test48353() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
    }

    @Test(timeout = 4000)
    public void test48354() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
    }

    @Test(timeout = 4000)
    public void test48355() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
    }

    @Test(timeout = 4000)
    public void test48356() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
    }

    @Test(timeout = 4000)
    public void test48357() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
    }

    @Test(timeout = 4000)
    public void test48358() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
    }

    @Test(timeout = 4000)
    public void test49359() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test49360() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test49361() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test49362() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test49363() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test49364() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test49365() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test49366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test49367() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test49368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test49369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test49370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test49371() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test49372() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test49373() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test49374() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test49375() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test49376() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test49377() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test49378() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test49379() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test49380() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
    }

    @Test(timeout = 4000)
    public void test49381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test49382() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test49383() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test49384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test49385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test49386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test49387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test49388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test49389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test49390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test49391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test49392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test49393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test49394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test49395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test49396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test49397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test49398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test49399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test49400() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test49401() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test49402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test49403() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test49404() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test49405() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test49406() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test49407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test49408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test49409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
    }

    @Test(timeout = 4000)
    public void test49410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test49411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test49412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test49413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test49414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test49415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test49416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test49417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test49418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test49419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test49420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test49421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test49422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test49423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test49424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test49425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test49426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test49427() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test49428() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test49429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test49430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test49431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test49432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test49433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test49434() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test49435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test49436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test50437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test50438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test50439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test50440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test50441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test50442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test50443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test50444() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test50445() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test50446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test50447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test50448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test50449() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test50450() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test50451() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test50452() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test50453() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test50454() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test50455() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test50456() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test50457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test50458() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test50459() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test50460() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test50461() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test50462() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test50463() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test50464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test50465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test50466() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test50467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test50468() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test50469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test50470() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test50471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test50472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test50473() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test50474() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test50475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test50476() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test50477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test50478() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test50479() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test50480() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test50481() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test50482() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test50483() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test50484() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test50485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test50486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test50487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test50488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test50489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test50490() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test50491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test50492() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test50493() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test50494() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test50495() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test50496() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test50497() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test50498() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test50499() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test50500() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test50501() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test50502() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test50503() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test50504() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test50505() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test50506() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test50507() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test50508() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test50509() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test51510() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test51511() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test51512() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test51513() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test51514() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test51515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test51516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test51517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test51518() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test51519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test51520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test51521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test51522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test51523() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test51524() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test51525() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test51526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test51527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test51528() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test51529() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test51530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test51531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test51532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test51533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test51534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test51535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test51536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test51537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test51538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test51539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test51540() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test51541() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test51542() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test51543() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test51544() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test51545() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test51546() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test51547() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test51548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test51549() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test51550() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test51551() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test51552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test51553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test51554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test51555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test51556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test51557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test51558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test51559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test51560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
    }

    @Test(timeout = 4000)
    public void test51561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
    }

    @Test(timeout = 4000)
    public void test51562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
    }

    @Test(timeout = 4000)
    public void test51563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test51564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test51565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test51566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test51567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test51568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test51569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test51570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test51571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test51572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test51573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test51574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test51575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test51576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test51577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test51578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test51579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test51580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test51581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test51582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test51583() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test51584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test51585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test51586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test51587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test51588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test51589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test51590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test51591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test52592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test52593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test52594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test52595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test52596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test52597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test52598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test52599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test52600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test52601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test52602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test52603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test52604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test52605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test52606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test52607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test52608() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test52609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test52610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test52611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test52612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test52613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
    }

    @Test(timeout = 4000)
    public void test52614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test52615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test52616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test52617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test52618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test52619() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test52620() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test52621() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test52622() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test52623() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test52624() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test52625() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test52626() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test52627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test52628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test52629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test52630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test52631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test52632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test52633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test52634() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test52635() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test52636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test52637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test52638() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test52639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test52640() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test52641() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test52642() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test52643() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test52644() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test52645() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test52646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test52647() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test52648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test52649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test52650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test52651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test52652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test52653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
    }

    @Test(timeout = 4000)
    public void test52654() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
    }

    @Test(timeout = 4000)
    public void test52655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
    }

    @Test(timeout = 4000)
    public void test52656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
    }

    @Test(timeout = 4000)
    public void test52657() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
    }

    @Test(timeout = 4000)
    public void test52658() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
    }

    @Test(timeout = 4000)
    public void test52659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
    }

    @Test(timeout = 4000)
    public void test52660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
    }

    @Test(timeout = 4000)
    public void test52661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
    }

    @Test(timeout = 4000)
    public void test52662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
    }

    @Test(timeout = 4000)
    public void test52663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
    }

    @Test(timeout = 4000)
    public void test52664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
    }

    @Test(timeout = 4000)
    public void test53665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test53666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test53667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test53668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test53669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test53670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test53671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test53672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test53673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test53674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test53675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test53676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test53677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test53678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test53679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test53680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test53681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test53682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test53683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test53684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test53685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test53686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
    }

    @Test(timeout = 4000)
    public void test53687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test53688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test53689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test53690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test53691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test53692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test53693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test53694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test53695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test53696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test53697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test53698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test53699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test53700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test53701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test53702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test53703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test53704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test53705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test53706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test53707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test53708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test53709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test53710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test53711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test53712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test53713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test53714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test53715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test53716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test53717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test53718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test53719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test53720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test53721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test53722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test53723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test53724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test53725() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test53726() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test53727() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test53728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test53729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test53730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test53731() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test53732() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test53733() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test53734() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test53735() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test53736() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test53737() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test54738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test54739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test54740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test54741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test54742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test54743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test54744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test54745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test54746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test54747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        serializedString0.toString();
    }

    @Test(timeout = 4000)
    public void test54748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        serializedString0.getValue();
    }

    @Test(timeout = 4000)
    public void test54749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        serializedString0.charLength();
    }

    @Test(timeout = 4000)
    public void test54750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    }

    @Test(timeout = 4000)
    public void test54751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test54752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test54753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        serializedString0.toString();
    }

    @Test(timeout = 4000)
    public void test54754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        serializedString0.getValue();
    }

    @Test(timeout = 4000)
    public void test54755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        serializedString0.charLength();
    }

    @Test(timeout = 4000)
    public void test54756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test54757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test54758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    }

    @Test(timeout = 4000)
    public void test54759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    }

    @Test(timeout = 4000)
    public void test54760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    }

    @Test(timeout = 4000)
    public void test54761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    }

    @Test(timeout = 4000)
    public void test54762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    }

    @Test(timeout = 4000)
    public void test54763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    }

    @Test(timeout = 4000)
    public void test54764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    }

    @Test(timeout = 4000)
    public void test54765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    }

    @Test(timeout = 4000)
    public void test54766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    }

    @Test(timeout = 4000)
    public void test54767() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        serializedString0.toString();
    }

    @Test(timeout = 4000)
    public void test54768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        serializedString0.getValue();
    }

    @Test(timeout = 4000)
    public void test54769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        serializedString0.charLength();
    }

    @Test(timeout = 4000)
    public void test54770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test54771() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test54772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test54773() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test54774() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test54775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test54776() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test54777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test54778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test54779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test54780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test54781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test54782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test54783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test54784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test54785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test54786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test54787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test54788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test54789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test54790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test54791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test54792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test54793() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test54794() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test54795() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test54796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        serializedString0.toString();
    }

    @Test(timeout = 4000)
    public void test54797() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        serializedString0.getValue();
    }

    @Test(timeout = 4000)
    public void test54798() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        serializedString0.charLength();
    }

    @Test(timeout = 4000)
    public void test54799() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test54800() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test54801() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test54802() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test54803() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test54804() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test54805() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test54806() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test54807() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test54808() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test54809() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test54810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test54811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test54812() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
    }

    @Test(timeout = 4000)
    public void test54813() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
    }

    @Test(timeout = 4000)
    public void test54814() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
    }

    @Test(timeout = 4000)
    public void test54815() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
    }

    @Test(timeout = 4000)
    public void test54816() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
    }

    @Test(timeout = 4000)
    public void test54817() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
    }

    @Test(timeout = 4000)
    public void test54818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
    }

    @Test(timeout = 4000)
    public void test54819() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
    }

    @Test(timeout = 4000)
    public void test54820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
    }

    @Test(timeout = 4000)
    public void test54821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
    }

    @Test(timeout = 4000)
    public void test54822() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
    }

    @Test(timeout = 4000)
    public void test54823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
    }

    @Test(timeout = 4000)
    public void test55824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test55825() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test55826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test55827() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test55828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test55829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test55830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test55831() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test55832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test55833() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test55834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test55835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test55836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test55837() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test55838() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test55839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test55840() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test55841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test55842() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test55843() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test55844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test55845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test55846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test55847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test55848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test55849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test55850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test55851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test55852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test55853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test55854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test55855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test55856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test55857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test55858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test55859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test55860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test55861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test55862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test55863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test55864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test55865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test55866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test55867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test55868() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test55869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test55870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test55871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test55872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test55873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test55874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test55875() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test55876() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test55877() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test55878() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test55879() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test55880() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test55881() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test55882() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test55883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test55884() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test55885() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
    }

    @Test(timeout = 4000)
    public void test55886() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
    }

    @Test(timeout = 4000)
    public void test55887() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
    }

    @Test(timeout = 4000)
    public void test55888() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
    }

    @Test(timeout = 4000)
    public void test55889() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
    }

    @Test(timeout = 4000)
    public void test55890() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
    }

    @Test(timeout = 4000)
    public void test55891() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
    }

    @Test(timeout = 4000)
    public void test55892() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
    }

    @Test(timeout = 4000)
    public void test55893() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
    }

    @Test(timeout = 4000)
    public void test55894() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
    }

    @Test(timeout = 4000)
    public void test55895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
    }

    @Test(timeout = 4000)
    public void test55896() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
    }

    @Test(timeout = 4000)
    public void test56897() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test56898() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test56899() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test56900() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test56901() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test56902() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test56903() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test56904() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test56905() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test56906() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test56907() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test56908() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test56909() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test56910() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test56911() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test56912() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test56913() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test56914() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test56915() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test56916() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test56917() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test56918() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test56919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test56920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test56921() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
    }

    @Test(timeout = 4000)
    public void test56922() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test56923() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test56924() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test56925() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test56926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test56927() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test56928() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test56929() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test56930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test56931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test56932() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test56933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test56934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test56935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test56936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test56937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test56938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test56939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test56940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test56941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test56942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test56943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test56944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test56945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test56946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test56947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test56948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test56949() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test56950() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test56951() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test56952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test56953() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test56954() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test56955() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test56956() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test56957() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test56958() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test56959() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test56960() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test56961() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test56962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test56963() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test56964() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test56965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test56966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test56967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test56968() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test56969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test56970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test56971() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test56972() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test56973() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test56974() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test57975() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test57976() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test57977() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test57978() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test57979() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test57980() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test57981() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test57982() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test57983() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test57984() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test57985() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test57986() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test57987() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test57988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test57989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test57990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test57991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test57992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test57993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test57994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test57995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test57996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test57997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test57998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test57999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test571000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test571001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test571002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test571003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test571004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test571005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test571006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test571007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test571008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test571009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test571010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test571011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test571012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test571013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test571014() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test571015() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test571016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test571017() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test571018() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test571019() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test571020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test571021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test571022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test571023() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test571024() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test571025() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test571026() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test571027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test571028() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test571029() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test571030() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test571031() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test571032() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test571033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test571034() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test571035() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test571036() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
    }

    @Test(timeout = 4000)
    public void test571037() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
    }

    @Test(timeout = 4000)
    public void test571038() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
    }

    @Test(timeout = 4000)
    public void test571039() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
    }

    @Test(timeout = 4000)
    public void test571040() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
    }

    @Test(timeout = 4000)
    public void test571041() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
    }

    @Test(timeout = 4000)
    public void test571042() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
    }

    @Test(timeout = 4000)
    public void test571043() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
    }

    @Test(timeout = 4000)
    public void test571044() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
    }

    @Test(timeout = 4000)
    public void test571045() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
    }

    @Test(timeout = 4000)
    public void test571046() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
    }

    @Test(timeout = 4000)
    public void test571047() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
    }

    @Test(timeout = 4000)
    public void test581048() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test581049() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test581050() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test581051() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test581052() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test581053() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test581054() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test581055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test581056() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test581057() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test581058() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test581059() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test581060() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test581061() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test581062() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test581063() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test581064() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test581065() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test581066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test581067() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test581068() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test581069() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test581070() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test581071() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test581072() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
    }

    @Test(timeout = 4000)
    public void test581073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test581074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test581075() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test581076() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test581077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test581078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test581079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test581080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test581081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test581082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test581083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test581084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test581085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test581086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test581087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test581088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test581089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test581090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test581091() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test581092() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test581093() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test581094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test581095() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test581096() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test581097() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test581098() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test581099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test581100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test581101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test581102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test581103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test581104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test581105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test581106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test581107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test581108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test581109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test581110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test581111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test581112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test581113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test581114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test581115() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test581116() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test581117() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test581118() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test581119() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test581120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test581121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test581122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test581123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test581124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test581125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test591126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test591127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test591128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test591129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test591130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test591131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test591132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test591133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test591134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test591135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test591136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test591137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test591138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test591139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test591140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test591141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test591142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test591143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test591144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test591145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test591146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test591147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
    }

    @Test(timeout = 4000)
    public void test591148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test591149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test591150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
    }

    @Test(timeout = 4000)
    public void test591151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test591152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test591153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test591154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test591155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test591156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test591157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test591158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test591159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test591160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test591161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test591162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test591163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test591164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test591165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test591166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test591167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test591168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test591169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test591170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test591171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test591172() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test591173() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test591174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test591175() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test591176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test591177() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test591178() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test591179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test591180() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test591181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test591182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test591183() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test591184() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test591185() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test591186() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test591187() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test591188() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test591189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test591190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test591191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test591192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test591193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test591194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test591195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test591196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test591197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test591198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test591199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test591200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test591201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test591202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test591203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test601204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test601205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test601206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test601207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test601208() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test601209() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test601210() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test601211() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test601212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test601213() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test601214() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test601215() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test601216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test601217() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test601218() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test601219() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test601220() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test601221() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test601222() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test601223() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test601224() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test601225() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test601226() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test601227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test601228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test601229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test601230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test601231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test601232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test601233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test601234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test601235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test601236() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test601237() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test601238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test601239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test601240() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test601241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test601242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test601243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test601244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test601245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test601246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test601247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test601248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test601249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test601250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test601251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test601252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test601253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test601254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
    }

    @Test(timeout = 4000)
    public void test601255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test601256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test601257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test601258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test601259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test601260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test601261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test601262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test601263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test601264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test601265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test601266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test601267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test601268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test601269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test601270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test601271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test601272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test601273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test601274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test601275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test601276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test601277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test601278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test601279() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test601280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test601281() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test601282() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test601283() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test601284() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test601285() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test601286() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test601287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test601288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test611289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test611290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test611291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test611292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test611293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test611294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test611295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test611296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test611297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test611298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test611299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test611300() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test611301() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test611302() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test611303() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test611304() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test611305() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test611306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test611307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test611308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test611309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test611310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
    }

    @Test(timeout = 4000)
    public void test611311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test611312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test611313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test611314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test611315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test611316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test611317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test611318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test611319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test611320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test611321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test611322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test611323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test611324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test611325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test611326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test611327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test611328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test611329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test611330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test611331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test611332() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test611333() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test611334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test611335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test611336() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test611337() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test611338() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test611339() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test611340() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test611341() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test611342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test611343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test611344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test611345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test611346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test611347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test611348() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test611349() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test611350() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
    }

    @Test(timeout = 4000)
    public void test611351() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
    }

    @Test(timeout = 4000)
    public void test611352() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
    }

    @Test(timeout = 4000)
    public void test611353() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
    }

    @Test(timeout = 4000)
    public void test611354() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
    }

    @Test(timeout = 4000)
    public void test611355() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
    }

    @Test(timeout = 4000)
    public void test611356() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
    }

    @Test(timeout = 4000)
    public void test611357() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
    }

    @Test(timeout = 4000)
    public void test611358() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
    }

    @Test(timeout = 4000)
    public void test611359() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
    }

    @Test(timeout = 4000)
    public void test611360() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
    }

    @Test(timeout = 4000)
    public void test611361() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
    }

    @Test(timeout = 4000)
    public void test621362() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test621363() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test621364() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test621365() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test621366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test621367() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test621368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test621369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test621370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test621371() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test621372() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
    }

    @Test(timeout = 4000)
    public void test621373() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test621374() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
    }

    @Test(timeout = 4000)
    public void test621375() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    }

    @Test(timeout = 4000)
    public void test621376() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test621377() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test621378() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test621379() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test621380() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test621381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test621382() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test621383() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test621384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test621385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test621386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test621387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test621388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test621389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test621390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test621391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test621392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test621393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test621394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test621395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test621396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test621397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test621398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test621399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test621400() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test621401() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test621402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test621403() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test621404() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test621405() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test621406() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test621407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test621408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test621409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test621410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test621411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test621412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test621413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test621414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test621415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test621416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test621417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test621418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test621419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test621420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test621421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test621422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test621423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test621424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test621425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test621426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test621427() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test621428() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test621429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test621430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test621431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test621432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test621433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test621434() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test621435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test621436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test621437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test621438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test621439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test621440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test621441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test621442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test621443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
    }

    @Test(timeout = 4000)
    public void test621444() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
    }

    @Test(timeout = 4000)
    public void test621445() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
    }

    @Test(timeout = 4000)
    public void test621446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
    }

    @Test(timeout = 4000)
    public void test621447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
    }

    @Test(timeout = 4000)
    public void test621448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
    }

    @Test(timeout = 4000)
    public void test621449() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
    }

    @Test(timeout = 4000)
    public void test621450() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
    }

    @Test(timeout = 4000)
    public void test621451() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
    }

    @Test(timeout = 4000)
    public void test621452() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
    }

    @Test(timeout = 4000)
    public void test621453() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
    }

    @Test(timeout = 4000)
    public void test621454() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
    }

    @Test(timeout = 4000)
    public void test631455() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test631456() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test631457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test631458() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test631459() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test631460() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test631461() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test631462() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test631463() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test631464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test631465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
    }

    @Test(timeout = 4000)
    public void test631466() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test631467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
    }

    @Test(timeout = 4000)
    public void test631468() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    }

    @Test(timeout = 4000)
    public void test631469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test631470() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test631471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test631472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test631473() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test631474() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test631475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test631476() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test631477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test631478() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test631479() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test631480() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test631481() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test631482() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test631483() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test631484() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test631485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test631486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test631487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test631488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test631489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test631490() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test631491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test631492() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test631493() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test631494() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test631495() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test631496() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test631497() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test631498() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test631499() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test631500() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test631501() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test631502() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test631503() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test631504() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test631505() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test631506() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test631507() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test631508() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test631509() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test631510() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test631511() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test631512() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test631513() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test631514() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test631515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test631516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test631517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test631518() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test631519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test631520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test631521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test631522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test631523() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test631524() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test631525() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test631526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test631527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test631528() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test631529() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test631530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test631531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test631532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test631533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test631534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test641535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test641536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test641537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test641538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test641539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test641540() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test641541() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test641542() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test641543() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test641544() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test641545() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test641546() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test641547() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test641548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test641549() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test641550() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test641551() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test641552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test641553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test641554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test641555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test641556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test641557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test641558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test641559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test641560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test641561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test641562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test641563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test641564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test641565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test641566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test641567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test641568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test641569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test641570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test641571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test641572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test641573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test641574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test641575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test641576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test641577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test641578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test641579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test641580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test641581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test641582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test641583() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test641584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test641585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test641586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test641587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test641588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test641589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test641590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test641591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test641592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test641593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test641594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test641595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test641596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test641597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test641598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test641599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test641600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test641601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test641602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test641603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test641604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test641605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test641606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test641607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test641608() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test641609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test641610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test641611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test641612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test641613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test641614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test641615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test641616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test641617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test641618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test641619() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test641620() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test641621() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    }

    @Test(timeout = 4000)
    public void test641622() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    }

    @Test(timeout = 4000)
    public void test641623() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    }

    @Test(timeout = 4000)
    public void test641624() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test641625() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test641626() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test641627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test641628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test641629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test641630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test641631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test641632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test641633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test641634() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test641635() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test641636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test641637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test641638() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test641639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test641640() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test641641() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test641642() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test641643() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test641644() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test641645() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test641646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test641647() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test641648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test641649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test641650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test641651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test641652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test641653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test641654() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test641655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test641656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test641657() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test641658() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test641659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test641660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test641661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test641662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test641663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test651664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test651665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test651666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test651667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test651668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test651669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test651670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test651671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test651672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test651673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test651674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
    }

    @Test(timeout = 4000)
    public void test651675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
    }

    @Test(timeout = 4000)
    public void test651677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    }

    @Test(timeout = 4000)
    public void test651678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test651680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test651681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test651682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test651683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test651684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test651685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test651686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test651687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test651688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test651689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test651690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test651691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test651693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test651694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test651695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test651696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test651697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test651698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test651699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test651700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test651701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test651702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test651703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test651704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test651705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test651706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test651707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test651708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test651709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test651710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test651711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test651712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test651713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test651714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test651715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test651716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test651717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test651718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test651720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test651721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test651722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test651723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test651724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test651725() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test651726() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test651727() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test651728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test651729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test651730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test651731() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651732() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651733() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651734() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651735() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651736() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651737() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test651744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test651746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test651747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test651748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test651749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test651750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test651751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test651752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test651753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test651754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test651755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test651756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test651757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test651758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test651760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test651761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test651762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test651763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test651764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test651765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test651766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test651767() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test651768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test651769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test651770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test651771() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test651772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test651773() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test651774() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test651775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test651776() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test651777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test651778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test651779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test651780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test651781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test651782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test651783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test651784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test651786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test651787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test651788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test651789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test651790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test651791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test651792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test651793() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test651794() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test651795() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test651796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test651797() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651798() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651799() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651800() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651801() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651802() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651803() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651804() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651805() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651806() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651807() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651808() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651809() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test651810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test651812() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test651813() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test651814() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test651815() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test651816() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test651817() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test651818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test651819() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test651820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test651821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test651822() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test651823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651825() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651827() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651831() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651833() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test651836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651837() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test651838() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test651839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test651840() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test651841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test651842() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test651843() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test651844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test651845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test651846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test651847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test651848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test651849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
    }

    @Test(timeout = 4000)
    public void test651850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
    }

    @Test(timeout = 4000)
    public void test651851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
    }

    @Test(timeout = 4000)
    public void test651852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
    }

    @Test(timeout = 4000)
    public void test651853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
    }

    @Test(timeout = 4000)
    public void test651854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
    }

    @Test(timeout = 4000)
    public void test651855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
    }

    @Test(timeout = 4000)
    public void test651856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
    }

    @Test(timeout = 4000)
    public void test651857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
    }

    @Test(timeout = 4000)
    public void test651858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
    }

    @Test(timeout = 4000)
    public void test651859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
    }

    @Test(timeout = 4000)
    public void test651860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
    }

    @Test(timeout = 4000)
    public void test651861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test651862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test651864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test651865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test651866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test651867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test651868() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test651869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test651870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test651871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test651872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test651873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test651874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test651875() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
    }

    @Test(timeout = 4000)
    public void test651876() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
    }

    @Test(timeout = 4000)
    public void test651877() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
    }

    @Test(timeout = 4000)
    public void test651878() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
    }

    @Test(timeout = 4000)
    public void test651879() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
    }

    @Test(timeout = 4000)
    public void test651880() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
    }

    @Test(timeout = 4000)
    public void test651881() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
    }

    @Test(timeout = 4000)
    public void test651882() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
    }

    @Test(timeout = 4000)
    public void test651883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
    }

    @Test(timeout = 4000)
    public void test651884() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
    }

    @Test(timeout = 4000)
    public void test651885() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
    }

    @Test(timeout = 4000)
    public void test651886() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
    }

    @Test(timeout = 4000)
    public void test651887() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test651888() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651889() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test651890() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test651891() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test651892() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test651893() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test651894() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test651895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test651896() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test651897() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test651898() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test651899() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test651900() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test651901() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651902() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651903() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651904() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651905() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651906() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651907() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651908() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651909() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651910() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651911() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651912() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test661913() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test661914() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test661915() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test661916() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test661917() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test661918() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test661919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test661920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test661921() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test661922() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test661923() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test661924() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test661925() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test661926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test661927() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test661928() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test661929() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test661930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test661931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test661932() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test661933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test661934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
    }

    @Test(timeout = 4000)
    public void test661935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test661936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test661937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test661938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test661939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test661940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test661941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test661942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test661943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test661944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test661945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test661946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test661947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test661948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test661949() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test661950() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test661951() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test661952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test661953() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test661954() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test661955() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test661956() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test661957() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test661958() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test661959() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test661960() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test661961() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test661962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test661963() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test661964() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test661965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test661966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test661967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test661968() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test661969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test661970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test661971() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test661972() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test661973() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test661974() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test661975() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test661976() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test661977() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test661978() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test661979() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test661980() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test661981() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test661982() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test661983() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test661984() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test661985() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test661986() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test661987() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test661988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test661989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test661990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test661991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test661992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test661993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test661994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test661995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test661996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test661997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test661998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test661999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test662000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test662001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.isClosed();
    }

    @Test(timeout = 4000)
    public void test662002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test662003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test662004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test662005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test662006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test662007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test662008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test662009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test662010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662014() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662015() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662017() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662018() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662019() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662023() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662024() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662025() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662026() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662028() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662029() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test662030() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test662031() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test662032() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test662033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test662034() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test662035() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test662036() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test662037() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test662038() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test662039() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test662040() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test662041() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test662042() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test662043() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.isClosed();
    }

    @Test(timeout = 4000)
    public void test662044() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test662045() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test662046() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test662047() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test662048() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test662049() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test662050() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test662051() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test662052() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662053() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662054() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662056() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662057() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662058() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662059() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662060() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662061() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662062() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662063() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662064() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662065() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662067() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662068() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662069() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662070() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test662071() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test662072() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test662073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test662074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test662075() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test662076() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test662077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test662078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test662079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test662080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test662081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test662082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test662083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test662084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.isClosed();
    }

    @Test(timeout = 4000)
    public void test662085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test662086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test662087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test662088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test662089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test662090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test662091() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test662092() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test662093() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test662094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test662095() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test662096() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test662097() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test662098() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test662099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test662100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test662101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test662102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test662103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test662104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test662105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test662106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test662107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test662108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test662109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test662110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test672111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test672112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test672113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test672114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test672115() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test672116() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test672117() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test672118() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test672119() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test672120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test672121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
    }

    @Test(timeout = 4000)
    public void test672122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test672123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
    }

    @Test(timeout = 4000)
    public void test672124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    }

    @Test(timeout = 4000)
    public void test672125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test672126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test672127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test672128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test672129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test672130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test672131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test672132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test672133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test672134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test672135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test672136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test672137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test672138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test672139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test672140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test672141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test672142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test672143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test672144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test672145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test672146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test672147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test672148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test672149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test672150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test672151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test672152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test672153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test672154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test672155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test672156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test672157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test672158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test672159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test672160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test672161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test672162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test672163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test672164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test672165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test672166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test672167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test672168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test672169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test672170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test672171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test672172() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test672173() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test672174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test672175() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test672176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test672177() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test672178() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test672179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test672180() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test672181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test672182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test672183() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test672184() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test672185() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test672186() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test672187() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test672188() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test672189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test672190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test672191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test672192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test672193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test672194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test672195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test672196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test672197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test672198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test672199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test672200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test672201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test672202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test672203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test672204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
    }

    @Test(timeout = 4000)
    public void test672205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
    }

    @Test(timeout = 4000)
    public void test672206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
    }

    @Test(timeout = 4000)
    public void test672207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
    }

    @Test(timeout = 4000)
    public void test672208() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
    }

    @Test(timeout = 4000)
    public void test672209() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
    }

    @Test(timeout = 4000)
    public void test672210() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
    }

    @Test(timeout = 4000)
    public void test672211() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
    }

    @Test(timeout = 4000)
    public void test672212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
    }

    @Test(timeout = 4000)
    public void test672213() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
    }

    @Test(timeout = 4000)
    public void test672214() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
    }

    @Test(timeout = 4000)
    public void test672215() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
    }

    @Test(timeout = 4000)
    public void test672216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0._verifyPrettyValueWrite(" (R,Q'46;l^");
    }

    @Test(timeout = 4000)
    public void test682217() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test682218() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test682219() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test682220() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test682221() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test682222() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test682223() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test682224() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test682225() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test682226() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test682227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test682228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test682229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test682230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test682231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test682232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test682233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test682234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test682235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test682236() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test682237() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test682238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test682239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test682240() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test682241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test682242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test682243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test682244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test682245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test682246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test682247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test682248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test682249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test682250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test682251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test682252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test682253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test682254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test682255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test682256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test682257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test682258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test682259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test682260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test682261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test682262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test682263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test682264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test682265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test682266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test682267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test682268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test682269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test682270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test682271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test682272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test682273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test682274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test682275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test682276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test682277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test682278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test682279() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test682280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test682281() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test682282() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test682283() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test682284() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test682285() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test692286() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test692287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test692288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test692289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test692290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test692291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test692292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test692293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test692294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test692295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test692296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test692297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test692298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test692299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test692300() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test692301() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test692302() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test692303() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test692304() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test692305() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test692306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test692307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
    }

    @Test(timeout = 4000)
    public void test692308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test692309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test692310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test692311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test692312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test692313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test692314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test692315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test692316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test692317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test692318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test692319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test692320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test692321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test692322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test692323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test692324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test692325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test692326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test692327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test692328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test692329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test692330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test692331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test692332() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test692333() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test692334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test692335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test692336() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test692337() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test692338() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test692339() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test692340() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test692341() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test692342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test692343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test692344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test692345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test692346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test692347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test692348() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test692349() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test692350() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test692351() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test692352() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test692353() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test692354() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test692355() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test692356() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test692357() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test692358() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test702359() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test702360() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test702361() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test702362() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test702363() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test702364() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test702365() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test702366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test702367() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test702368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test702369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
    }

    @Test(timeout = 4000)
    public void test702370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test702371() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
    }

    @Test(timeout = 4000)
    public void test702372() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    }

    @Test(timeout = 4000)
    public void test702373() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test702374() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test702375() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test702376() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test702377() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test702378() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test702379() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test702380() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test702381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test702382() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test702383() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test702384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test702385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test702386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test702387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test702388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test702389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test702390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test702391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test702392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test702393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test702394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test702395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test702396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test702397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test702398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test702399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test702400() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test702401() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test702402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test702403() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test702404() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test702405() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test702406() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test702407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test702408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test702409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test702410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test702411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test702412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test702413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test702414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test702415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test702416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test702417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test702418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test702419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test702420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test702421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test702422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test702423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test702424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test702425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test702426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test702427() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test702428() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test702429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test702430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test702431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test702432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test702433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test702434() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test702435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test702436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test702437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test712438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test712439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test712440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test712441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test712442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test712443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test712444() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test712445() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test712446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test712447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test712448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test712449() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test712450() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test712451() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test712452() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test712453() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test712454() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test712455() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test712456() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test712457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test712458() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test712459() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test712460() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test712461() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test712462() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test712463() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test712464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test712465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test712466() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test712467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test712468() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test712469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test712470() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test712471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test712472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test712473() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test712474() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test712475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test712476() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test712477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test712478() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test712479() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test712480() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test712481() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test712482() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test712483() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test712484() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test712485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test712486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test712487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test712488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test712489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test712490() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test712491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test712492() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test712493() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test712494() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test712495() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test712496() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test712497() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test712498() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test712499() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712500() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712501() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712502() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712503() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712504() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712505() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712506() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712507() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712508() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712509() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712510() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712511() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test712512() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test712513() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test712514() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test712515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test712516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test712517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test712518() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test712519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test712520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test712521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test712522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test712523() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test712524() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712525() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712528() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712529() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test722536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test722537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test722538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test722539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test722540() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test722541() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test722542() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test722543() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test722544() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test722545() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test722546() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test722547() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test722548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test722549() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test722550() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test722551() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test722552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test722553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test722554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test722555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test722556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test722557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
    }

    @Test(timeout = 4000)
    public void test722558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test722559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test722560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test722561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test722562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test722563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test722564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test722565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test722566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test722567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test722568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test722569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test722570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test722571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test722572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test722573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test722574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test722575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test722576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test722577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test722578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test722579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test722580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test722581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test722582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test722583() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test722584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test722585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test722586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test722587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test722588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test722589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test722590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test722591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test722592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test722593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test722594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test722595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test722596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test722597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test722598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test722599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test722600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test722601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test722602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test722603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test722604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test722605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test722606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test722607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test722608() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test722609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test722610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test722611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test722612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test722613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test722614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test722615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test722616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test722617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test722618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test722619() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test722620() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test722621() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test722622() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test722623() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test722624() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test722625() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test722626() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test722627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test722628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test722629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test722630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test722631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test722632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test722633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test732634() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test732635() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test732636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test732637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test732638() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test732639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test732640() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test732641() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test732642() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test732643() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test732644() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test732645() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test732646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test732647() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test732648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test732649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test732650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test732651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test732652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test732653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test732654() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test732655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test732656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test732657() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test732658() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test732659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test732660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test732661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test732662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test732663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test732664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test732665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test732666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test732667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test732668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test732669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test732670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test732671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test732672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test732673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test732674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test732675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test732676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test732677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test732678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test732679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test732680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test732681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test732682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test732683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test732684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test732685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test732686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test732687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test732688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test732689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test732690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test732691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test732692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test732693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test732694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test732695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test732696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test732697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test732698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test732699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test732700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test732701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test732702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test732703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test732704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test732705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test732706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test732707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test732708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test732709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test732710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test732711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test732712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test732713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test732714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test732715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test732716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test732717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test732718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test732719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test732720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test732721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test732722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test732723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test732724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test732725() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test732726() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test732727() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test732728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test732729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test732730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test732731() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test742732() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test742733() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test742734() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test742735() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test742736() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test742737() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test742738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test742739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test742740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test742741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test742742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test742743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test742744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test742745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test742746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test742747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test742748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test742749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test742750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test742751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test742752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test742753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test742754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test742755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test742756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test742757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test742758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test742759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test742760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test742761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test742762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test742763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test742764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test742765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test742766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test742767() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test742768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test742769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test742770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test742771() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test742772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test742773() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test742774() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test742775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test742776() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test742777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test742778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test742779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test742780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test742781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test742782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test742783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test742784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test742785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test742786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test742787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test742788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test742789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test742790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test742791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test742792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test742793() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test742794() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test742795() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test742796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test742797() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test742798() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test742799() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test742800() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test752801() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test752802() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test752803() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test752804() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test752805() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test752806() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test752807() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test752808() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test752809() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test752810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test752811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test752812() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test752813() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test752814() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test752815() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test752816() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test752817() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test752818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test752819() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test752820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test752821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test752822() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test752823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test752824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test752825() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test752826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test752827() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test752828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test752829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test752830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test752831() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test752832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test752833() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test752834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test752835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test752836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test752837() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test752838() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test752839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test752840() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test752841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test752842() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test752843() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test752844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test752845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test752846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test752847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test752848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test752849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test752850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test752851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test752852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test752853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test752854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test752855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test752856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test752857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test752858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test752859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test752860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test752861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test752862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test752863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test752864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test752865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test752866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test752867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test752868() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test752869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test752870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test752871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test752872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test752873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test762874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test762875() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test762876() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test762877() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test762878() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test762879() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test762880() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test762881() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test762882() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test762883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test762884() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test762885() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
    }

    @Test(timeout = 4000)
    public void test762886() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
    }

    @Test(timeout = 4000)
    public void test762887() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
    }

    @Test(timeout = 4000)
    public void test762888() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
    }

    @Test(timeout = 4000)
    public void test762889() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
    }

    @Test(timeout = 4000)
    public void test762890() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
    }

    @Test(timeout = 4000)
    public void test762891() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
    }

    @Test(timeout = 4000)
    public void test762892() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
    }

    @Test(timeout = 4000)
    public void test762893() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
    }

    @Test(timeout = 4000)
    public void test762894() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test762895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test762896() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test762897() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test762898() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test762899() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test762900() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test762901() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test762902() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test762903() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test762904() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test762905() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test762906() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test762907() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test762908() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test762909() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test762910() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test762911() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test762912() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test762913() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test762914() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test762915() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test762916() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test762917() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test762918() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test762919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test762920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test762921() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test762922() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test762923() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test762924() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test762925() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test762926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test762927() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test762928() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test762929() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test762930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test762931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test762932() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test762933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test762934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test762935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test762936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test762937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test762938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test762939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test762940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test762941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test762942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test762943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test762944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test762945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test762946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test762947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test762948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test762949() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test762950() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test762951() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test762952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test762953() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test762954() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test762955() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test762956() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test762957() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test762958() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test762959() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test762960() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test762961() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test762962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test762963() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test762964() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test762965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test762966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test762967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test762968() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test762969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test762970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test762971() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test762972() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test762973() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test762974() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test762975() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test762976() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test762977() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test762978() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test762979() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test762980() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test762981() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test762982() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test762983() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test762984() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test762985() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test762986() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test762987() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test762988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test762989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test762990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test762991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test762992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test762993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test762994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test762995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test762996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    }

    @Test(timeout = 4000)
    public void test762997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    }

    @Test(timeout = 4000)
    public void test762998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    }

    @Test(timeout = 4000)
    public void test762999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    }

    @Test(timeout = 4000)
    public void test763000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    }

    @Test(timeout = 4000)
    public void test763001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    }

    @Test(timeout = 4000)
    public void test763002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    }

    @Test(timeout = 4000)
    public void test763003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    }

    @Test(timeout = 4000)
    public void test763004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    }

    @Test(timeout = 4000)
    public void test763005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    }

    @Test(timeout = 4000)
    public void test763006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    }

    @Test(timeout = 4000)
    public void test763007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    }

    @Test(timeout = 4000)
    public void test763008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    }

    @Test(timeout = 4000)
    public void test763009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test763010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test763011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test763012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test763013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test763014() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test763015() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test763016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test763017() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test763018() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test763019() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test763020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test763021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
    }

    @Test(timeout = 4000)
    public void test763022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
    }

    @Test(timeout = 4000)
    public void test763023() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
    }

    @Test(timeout = 4000)
    public void test763024() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
    }

    @Test(timeout = 4000)
    public void test763025() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
    }

    @Test(timeout = 4000)
    public void test763026() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
    }

    @Test(timeout = 4000)
    public void test763027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
    }

    @Test(timeout = 4000)
    public void test763028() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
    }

    @Test(timeout = 4000)
    public void test763029() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
    }

    @Test(timeout = 4000)
    public void test763030() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
    }

    @Test(timeout = 4000)
    public void test763031() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
    }

    @Test(timeout = 4000)
    public void test763032() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
    }

    @Test(timeout = 4000)
    public void test773033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test773034() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test773035() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test773036() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test773037() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test773038() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test773039() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test773040() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test773041() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test773042() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test773043() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
    }

    @Test(timeout = 4000)
    public void test773044() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test773045() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
    }

    @Test(timeout = 4000)
    public void test773046() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    }

    @Test(timeout = 4000)
    public void test773047() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test773048() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test773049() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test773050() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test773051() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test773052() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test773053() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test773054() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test773055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test773056() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test773057() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test773058() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test773059() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test773060() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test773061() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test773062() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test773063() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test773064() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test773065() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test773066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test773067() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test773068() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test773069() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test773070() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test773071() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test773072() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test773073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test773074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test773075() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test773076() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test773077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test773078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test773079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test773080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test773081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test773082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test773083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test773084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test773085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test773086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test773087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test773088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test773089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test773090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test773091() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test773092() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test773093() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test773094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test773095() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test773096() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test773097() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test773098() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test773099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test773100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test773101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test773102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test773103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test773104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test773105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test773106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test773107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test773108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test773109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test773110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test773111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test773112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test773113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test773114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
    }

    @Test(timeout = 4000)
    public void test773115() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
    }

    @Test(timeout = 4000)
    public void test773116() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
    }

    @Test(timeout = 4000)
    public void test773117() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
    }

    @Test(timeout = 4000)
    public void test773118() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
    }

    @Test(timeout = 4000)
    public void test773119() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
    }

    @Test(timeout = 4000)
    public void test773120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
    }

    @Test(timeout = 4000)
    public void test773121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
    }

    @Test(timeout = 4000)
    public void test773122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
    }

    @Test(timeout = 4000)
    public void test773123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
    }

    @Test(timeout = 4000)
    public void test773124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
    }

    @Test(timeout = 4000)
    public void test773125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
    }

    @Test(timeout = 4000)
    public void test783126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test783127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test783128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test783129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test783130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test783131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test783132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test783133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test783134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test783135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test783136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test783137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test783138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test783139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test783140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test783141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test783142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test783143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test783144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test783145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test783146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test783147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test783148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test783149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test783150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test783151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test783152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test783153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test783154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test783155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test783156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test783157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test783158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test783159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test783160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test783161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test783162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test783163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test783164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test783165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test783166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test783167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test783168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test783169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test783170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test783171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test783172() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test783173() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test783174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[8];
        charArray0[5] = '\u0084';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 56320);
    }

    @Test(timeout = 4000)
    public void test793175() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test793176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test793177() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test793178() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test793179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test793180() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test793181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test793182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test793183() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test793184() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test793185() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test793186() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test793187() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test793188() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test793189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test793190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test793191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test793192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test793193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test793194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test793195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test793196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test793197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test793198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test793199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test793200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test793201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test793202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test793203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test793204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test793205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test793206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test793207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test793208() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test793209() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test793210() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test793211() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test793212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test793213() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test793214() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test793215() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test793216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test793217() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test793218() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test793219() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test793220() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test793221() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test793222() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test793223() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[8];
        charArray0[2] = '0';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 56320);
    }

    @Test(timeout = 4000)
    public void test803224() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test803225() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test803226() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test803227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test803228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test803229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test803230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test803231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test803232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test803233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test803234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test803235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test803236() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test803237() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test803238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test803239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test803240() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test803241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test803242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test803243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test803244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test803245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test803246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test803247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test803248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test803249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test803250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test803251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test803252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test803253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test803254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test803255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test803256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test803257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test803258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test803259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test803260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test803261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test803262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test803263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test803264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test803265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test803266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test803267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test803268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test803269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test803270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test803271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test803272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test803273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test803274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test803275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test803276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test803277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test803278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test803279() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test803280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test803281() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test803282() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test803283() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test803284() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test803285() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    }

    @Test(timeout = 4000)
    public void test803286() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    }

    @Test(timeout = 4000)
    public void test803287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    }

    @Test(timeout = 4000)
    public void test803288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    }

    @Test(timeout = 4000)
    public void test803289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    }

    @Test(timeout = 4000)
    public void test803290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    }

    @Test(timeout = 4000)
    public void test803291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    }

    @Test(timeout = 4000)
    public void test803292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    }

    @Test(timeout = 4000)
    public void test803293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    }

    @Test(timeout = 4000)
    public void test803294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    }

    @Test(timeout = 4000)
    public void test803295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    }

    @Test(timeout = 4000)
    public void test803296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    }

    @Test(timeout = 4000)
    public void test803297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    }

    @Test(timeout = 4000)
    public void test803298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    }

    @Test(timeout = 4000)
    public void test813299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test813300() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test813301() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test813302() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test813303() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test813304() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test813305() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test813306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test813307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test813308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test813309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test813310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
    }

    @Test(timeout = 4000)
    public void test813311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
    }

    @Test(timeout = 4000)
    public void test813312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
    }

    @Test(timeout = 4000)
    public void test813313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
    }

    @Test(timeout = 4000)
    public void test813314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
    }

    @Test(timeout = 4000)
    public void test813315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
    }

    @Test(timeout = 4000)
    public void test813316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
    }

    @Test(timeout = 4000)
    public void test813317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
    }

    @Test(timeout = 4000)
    public void test813318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
    }

    @Test(timeout = 4000)
    public void test813319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test813320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test813321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test813322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test813323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test813324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test813325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test813326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test813327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test813328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test813329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test813330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test813331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test813332() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test813333() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test813334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test813335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test813336() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test813337() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test813338() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test813339() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test813340() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test813341() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test813342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test813343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test813344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test813345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test813346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test813347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test813348() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test813349() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test813350() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test813351() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test813352() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test813353() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test813354() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test813355() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test813356() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test813357() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test813358() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test813359() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test813360() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test813361() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test813362() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test813363() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test813364() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test813365() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test813366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test813367() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.isClosed();
    }

    @Test(timeout = 4000)
    public void test813368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test813369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test813370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813371() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813372() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813373() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813374() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813375() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813376() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813377() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813378() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813379() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813380() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813382() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813383() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test813390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test813391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test813392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test813393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test813394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test813395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test813396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test813397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test813398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test813399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test813400() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test813401() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test813402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
    }

    @Test(timeout = 4000)
    public void test813403() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
    }

    @Test(timeout = 4000)
    public void test813404() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
    }

    @Test(timeout = 4000)
    public void test813405() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
    }

    @Test(timeout = 4000)
    public void test813406() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
    }

    @Test(timeout = 4000)
    public void test813407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
    }

    @Test(timeout = 4000)
    public void test813408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
    }

    @Test(timeout = 4000)
    public void test813409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
    }

    @Test(timeout = 4000)
    public void test813410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
    }

    @Test(timeout = 4000)
    public void test813411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
    }

    @Test(timeout = 4000)
    public void test813412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
    }

    @Test(timeout = 4000)
    public void test813413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
    }

    @Test(timeout = 4000)
    public void test813414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
    }

    @Test(timeout = 4000)
    public void test823415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test823416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test823417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test823418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test823419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test823420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test823421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test823422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test823423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test823424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test823425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test823426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test823427() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test823428() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test823429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test823430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test823431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test823432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test823433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test823434() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test823435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test823436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test823437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test823438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test823439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test823440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test823441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test823442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test823443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test823444() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test823445() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test823446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test823447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test823448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test823449() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test823450() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test823451() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test823452() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test823453() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test823454() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test823455() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test823456() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test823457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test823458() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test823459() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test823460() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test823461() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test823462() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test823463() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test823464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test823465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test823466() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test823467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test823468() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test823469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test823470() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test823471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test823472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test823473() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test823474() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test823475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test823476() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test823477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test823478() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test823479() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test823480() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test823481() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test823482() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test823483() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test823484() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test823485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test823486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test823487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test823488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test823489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
    }

    @Test(timeout = 4000)
    public void test823490() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
    }

    @Test(timeout = 4000)
    public void test823491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
    }

    @Test(timeout = 4000)
    public void test823492() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
    }

    @Test(timeout = 4000)
    public void test823493() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
    }

    @Test(timeout = 4000)
    public void test823494() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
    }

    @Test(timeout = 4000)
    public void test823495() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
    }

    @Test(timeout = 4000)
    public void test823496() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
    }

    @Test(timeout = 4000)
    public void test823497() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
    }

    @Test(timeout = 4000)
    public void test823498() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
    }

    @Test(timeout = 4000)
    public void test823499() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
    }

    @Test(timeout = 4000)
    public void test823500() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
    }

    @Test(timeout = 4000)
    public void test833501() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test833502() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test833503() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test833504() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test833505() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test833506() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test833507() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test833508() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test833509() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test833510() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test833511() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test833512() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test833513() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test833514() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test833515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test833516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test833517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test833518() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test833519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test833520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test833521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    }

    @Test(timeout = 4000)
    public void test833522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    }

    @Test(timeout = 4000)
    public void test833523() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test833524() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test833525() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test833526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test833527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test833528() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test833529() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test833530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test833531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test833532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test833533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test833534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test833535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test833536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test833537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test833538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test833539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test833540() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test833541() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test833542() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test833543() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test833544() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test833545() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test833546() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test833547() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test833548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test833549() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test833550() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test833551() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test833552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test833553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test833554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test833555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test833556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test833557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test833558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test833559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test833560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test833561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test833562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test833563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test833564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test833565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.isClosed();
    }

    @Test(timeout = 4000)
    public void test833566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test833567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test833568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test833569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test833570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test833571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test833572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test833573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test833574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833583() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test833594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test833595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test833596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test833597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test833598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test833599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test833600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test833601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test833602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test833603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test833604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test833605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test833606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    }

    @Test(timeout = 4000)
    public void test833607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    }

    @Test(timeout = 4000)
    public void test833608() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    }

    @Test(timeout = 4000)
    public void test833609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    }

    @Test(timeout = 4000)
    public void test833610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    }

    @Test(timeout = 4000)
    public void test833611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    }

    @Test(timeout = 4000)
    public void test833612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    }

    @Test(timeout = 4000)
    public void test833613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    }

    @Test(timeout = 4000)
    public void test833614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    }

    @Test(timeout = 4000)
    public void test833615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    }

    @Test(timeout = 4000)
    public void test833616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    }

    @Test(timeout = 4000)
    public void test833617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    }

    @Test(timeout = 4000)
    public void test833618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    }

    @Test(timeout = 4000)
    public void test833619() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    }

    @Test(timeout = 4000)
    public void test843620() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test843621() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test843622() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test843623() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test843624() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test843625() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test843626() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test843627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test843628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test843629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test843630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test843631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test843632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test843633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test843634() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test843635() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test843636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test843637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test843638() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test843639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test843640() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test843641() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
    }

    @Test(timeout = 4000)
    public void test843642() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test843643() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test843644() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test843645() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test843646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test843647() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test843648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test843649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test843650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test843651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test843652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test843653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test843654() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test843655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test843656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test843657() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test843658() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test843659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test843660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test843661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test843662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test843663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test843664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test843665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test843666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test843667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test843668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[7];
        charArray0[4] = 'M';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 11);
    }

    @Test(timeout = 4000)
    public void test853669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test853670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test853671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test853672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test853673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test853674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test853675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test853676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test853677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test853678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test853679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test853680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test853681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test853682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test853683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test853684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test853685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test853686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test853687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test853688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test853689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test853690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test853691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test853692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test853693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test853694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test853695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test853696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test853697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test853698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test853699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test853700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test853701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test853702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test853703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test853704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test853705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test853706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test853707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test853708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test853709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test853710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test853711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test853712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test853713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test853714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test853715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test853716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test853717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test853718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test853719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test853720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test853721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test853722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test853723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test853724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test853725() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test853726() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test853727() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test853728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test853729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test853730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        char[] charArray0 = new char[9];
        charArray0[2] = '_';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 56320);
    }

    @Test(timeout = 4000)
    public void test863731() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test863732() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test863733() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test863734() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test863735() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test863736() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test863737() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test863738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test863739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test863740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test863741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test863742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
    }

    @Test(timeout = 4000)
    public void test863743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
    }

    @Test(timeout = 4000)
    public void test863744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
    }

    @Test(timeout = 4000)
    public void test863745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
    }

    @Test(timeout = 4000)
    public void test863746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
    }

    @Test(timeout = 4000)
    public void test863747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
    }

    @Test(timeout = 4000)
    public void test863748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
    }

    @Test(timeout = 4000)
    public void test863749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
    }

    @Test(timeout = 4000)
    public void test863750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
    }

    @Test(timeout = 4000)
    public void test863751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test863752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
    }

    @Test(timeout = 4000)
    public void test863753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test863754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test863755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test863756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test863757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test863758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test863759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test863760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test863761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test863762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test863763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test863764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test863765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test863766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test863767() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test863768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test863769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test863770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test863771() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test863772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test863773() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test863774() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test863775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test863776() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test863777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test863778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test863779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test863780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test863781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test863782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test863783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test863784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test863785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test863786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test863787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test863788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test863789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test863790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test863791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test863792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    }

    @Test(timeout = 4000)
    public void test863793() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    }

    @Test(timeout = 4000)
    public void test863794() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    }

    @Test(timeout = 4000)
    public void test863795() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    }

    @Test(timeout = 4000)
    public void test863796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    }

    @Test(timeout = 4000)
    public void test863797() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    }

    @Test(timeout = 4000)
    public void test863798() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    }

    @Test(timeout = 4000)
    public void test863799() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    }

    @Test(timeout = 4000)
    public void test863800() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    }

    @Test(timeout = 4000)
    public void test863801() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    }

    @Test(timeout = 4000)
    public void test863802() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    }

    @Test(timeout = 4000)
    public void test863803() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    }

    @Test(timeout = 4000)
    public void test863804() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    }

    @Test(timeout = 4000)
    public void test863805() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    }

    @Test(timeout = 4000)
    public void test873806() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test873807() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test873808() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test873809() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test873810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test873811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test873812() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test873813() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test873814() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test873815() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test873816() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test873817() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test873818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test873819() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test873820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test873821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test873822() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test873823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test873824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test873825() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test873826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test873827() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test873828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test873829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test873830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test873831() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test873832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test873833() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test873834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test873835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test873836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test873837() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test873838() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test873839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test873840() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test873841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test873842() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test873843() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test873844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test873845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test873846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test873847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test873848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test873849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test873850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test873851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test873852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test873853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test873854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test873855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test873856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test873857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test873858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test873859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test873860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test873861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test873862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test873863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test873864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test873865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test873866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test873867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test873868() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test873869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test873870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test873871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test873872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test873873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test873874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test873875() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test873876() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test873877() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test873878() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test873879() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
    }

    @Test(timeout = 4000)
    public void test873880() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
    }

    @Test(timeout = 4000)
    public void test873881() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
    }

    @Test(timeout = 4000)
    public void test873882() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
    }

    @Test(timeout = 4000)
    public void test873883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
    }

    @Test(timeout = 4000)
    public void test873884() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
    }

    @Test(timeout = 4000)
    public void test873885() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
    }

    @Test(timeout = 4000)
    public void test873886() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
    }

    @Test(timeout = 4000)
    public void test873887() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
    }

    @Test(timeout = 4000)
    public void test873888() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
    }

    @Test(timeout = 4000)
    public void test873889() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
    }

    @Test(timeout = 4000)
    public void test873890() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
    }

    @Test(timeout = 4000)
    public void test873891() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test873892() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test873893() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test873894() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test873895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test873896() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test873897() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test873898() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test873899() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test873900() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test873901() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test873902() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test873903() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test873904() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test873905() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test873906() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test873907() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test873908() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test873909() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test873910() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test873911() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test873912() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test873913() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test873914() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test873915() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test873916() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test873917() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test873918() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test873919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test873920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test873921() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test873922() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test873923() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test873924() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test873925() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test873926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test873927() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test873928() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873929() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873932() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test873942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test873943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test873944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test873945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test873946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test873947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test873948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test873949() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test873950() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test873951() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test873952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test873953() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873954() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873955() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873956() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873957() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873958() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873959() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873960() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873961() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873963() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873964() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test883966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test883967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test883968() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test883969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test883970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test883971() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test883972() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test883973() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test883974() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test883975() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test883976() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test883977() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test883978() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test883979() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test883980() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test883981() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test883982() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test883983() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test883984() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test883985() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test883986() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test883987() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test883988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test883989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test883990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test883991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test883992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test883993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test883994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test883995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test883996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test883997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test883998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test883999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test884000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test884001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test884002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test884003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test884004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test884005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test884006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test884007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test884008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test884009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test884010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test884011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test884012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test884013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test884014() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test884015() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test884016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test884017() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test884018() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test884019() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test884020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test884021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test884022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test884023() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test884024() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test884025() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test884026() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test884027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test884028() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test884029() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test884030() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test884031() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test884032() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test884033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test884034() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test884035() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test884036() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test884037() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test884038() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test884039() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test884040() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test884041() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test884042() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test884043() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test884044() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test884045() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test884046() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test884047() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test884048() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test884049() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test884050() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test884051() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test884052() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test884053() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test884054() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    }

    @Test(timeout = 4000)
    public void test884055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    }

    @Test(timeout = 4000)
    public void test884056() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    }

    @Test(timeout = 4000)
    public void test884057() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    }

    @Test(timeout = 4000)
    public void test884058() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    }

    @Test(timeout = 4000)
    public void test884059() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    }

    @Test(timeout = 4000)
    public void test884060() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    }

    @Test(timeout = 4000)
    public void test884061() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    }

    @Test(timeout = 4000)
    public void test884062() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    }

    @Test(timeout = 4000)
    public void test884063() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    }

    @Test(timeout = 4000)
    public void test884064() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test884065() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test884066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test884067() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test884068() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test884069() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test884070() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test884071() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test884072() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test884073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test884074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test884075() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test884076() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test884077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test884078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test884079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test884080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test884081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test884082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test884083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test884084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test884085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test884086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test884087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test884088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test884089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test884090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    }

    @Test(timeout = 4000)
    public void test884091() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    }

    @Test(timeout = 4000)
    public void test884092() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    }

    @Test(timeout = 4000)
    public void test884093() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    }

    @Test(timeout = 4000)
    public void test884094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    }

    @Test(timeout = 4000)
    public void test884095() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    }

    @Test(timeout = 4000)
    public void test884096() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    }

    @Test(timeout = 4000)
    public void test884097() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    }

    @Test(timeout = 4000)
    public void test884098() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    }

    @Test(timeout = 4000)
    public void test884099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    }

    @Test(timeout = 4000)
    public void test884100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    }

    @Test(timeout = 4000)
    public void test884101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    }

    @Test(timeout = 4000)
    public void test884102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    }

    @Test(timeout = 4000)
    public void test884103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    }

    @Test(timeout = 4000)
    public void test894104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test894105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test894106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test894107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test894108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test894109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test894110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test894111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test894112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test894113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test894114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test894115() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
    }

    @Test(timeout = 4000)
    public void test894116() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
    }

    @Test(timeout = 4000)
    public void test894117() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
    }

    @Test(timeout = 4000)
    public void test894118() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
    }

    @Test(timeout = 4000)
    public void test894119() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
    }

    @Test(timeout = 4000)
    public void test894120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
    }

    @Test(timeout = 4000)
    public void test894121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
    }

    @Test(timeout = 4000)
    public void test894122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
    }

    @Test(timeout = 4000)
    public void test894123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
    }

    @Test(timeout = 4000)
    public void test894124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test894125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test894126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test894127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test894128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test894129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test894130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test894131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test894132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test894133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test894134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test894135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test894136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test894137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test894138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test894139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test894140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test894141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test894142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test894143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test894144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test894145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test894146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test894147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test894148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test894149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test894150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test894151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test894152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test894153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test894154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test894155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test894156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test894157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test894158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test894159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test894160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test894161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test894162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test894163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test894164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test894165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test894166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test894167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test894168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test894169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test894170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test894171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test894172() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test894173() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test894174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test894175() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test894176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test894177() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test894178() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test894179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test894180() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test894181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test894182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test894183() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test894184() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test894185() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test894186() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test894187() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test894188() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test894189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test894190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test894191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test894192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test894193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test894194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test894195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test894196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test894197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test894198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test894199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test894200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test894201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test894202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test894203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test894204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test894205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test894206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test894207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test894208() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test894209() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test894210() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test894211() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test894212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test894213() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test894214() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test894215() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test894216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test894217() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test894218() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test894219() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test894220() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test894221() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test894222() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test894223() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test894224() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test894225() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test894226() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test894227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
    }

    @Test(timeout = 4000)
    public void test894228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
    }

    @Test(timeout = 4000)
    public void test894229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
    }

    @Test(timeout = 4000)
    public void test894230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
    }

    @Test(timeout = 4000)
    public void test894231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
    }

    @Test(timeout = 4000)
    public void test894232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
    }

    @Test(timeout = 4000)
    public void test894233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
    }

    @Test(timeout = 4000)
    public void test894234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
    }

    @Test(timeout = 4000)
    public void test894235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
    }

    @Test(timeout = 4000)
    public void test894236() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
    }

    @Test(timeout = 4000)
    public void test894237() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
    }

    @Test(timeout = 4000)
    public void test894238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
    }

    @Test(timeout = 4000)
    public void test894239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test894240() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test894241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test894242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test894243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test894244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test894245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test894246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test894247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test894248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test894249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test894250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test894251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
    }

    @Test(timeout = 4000)
    public void test894252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
    }

    @Test(timeout = 4000)
    public void test894253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
    }

    @Test(timeout = 4000)
    public void test894254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
    }

    @Test(timeout = 4000)
    public void test894255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
    }

    @Test(timeout = 4000)
    public void test894256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
    }

    @Test(timeout = 4000)
    public void test894257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
    }

    @Test(timeout = 4000)
    public void test894258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
    }

    @Test(timeout = 4000)
    public void test894259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
    }

    @Test(timeout = 4000)
    public void test894260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
    }

    @Test(timeout = 4000)
    public void test894261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
    }

    @Test(timeout = 4000)
    public void test894262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
    }

    @Test(timeout = 4000)
    public void test894263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test894264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test894265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test894266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test894267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test894268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test894269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test894270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test894271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test894272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test894273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test894274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test894275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
    }

    @Test(timeout = 4000)
    public void test894276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
    }

    @Test(timeout = 4000)
    public void test894277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
    }

    @Test(timeout = 4000)
    public void test894278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
    }

    @Test(timeout = 4000)
    public void test894279() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
    }

    @Test(timeout = 4000)
    public void test894280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
    }

    @Test(timeout = 4000)
    public void test894281() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
    }

    @Test(timeout = 4000)
    public void test894282() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
    }

    @Test(timeout = 4000)
    public void test894283() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
    }

    @Test(timeout = 4000)
    public void test894284() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
    }

    @Test(timeout = 4000)
    public void test894285() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
    }

    @Test(timeout = 4000)
    public void test894286() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
    }

    @Test(timeout = 4000)
    public void test894287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test894288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    }

    @Test(timeout = 4000)
    public void test894289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    }

    @Test(timeout = 4000)
    public void test894290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    }

    @Test(timeout = 4000)
    public void test894291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test894292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
    }

    @Test(timeout = 4000)
    public void test894293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
    }

    @Test(timeout = 4000)
    public void test894294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
    }

    @Test(timeout = 4000)
    public void test894295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test894296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test894297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test894298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test894299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test894300() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test894301() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test894302() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test894303() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test894304() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test894305() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test894306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test894307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
    }

    @Test(timeout = 4000)
    public void test894308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
    }

    @Test(timeout = 4000)
    public void test894309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
    }

    @Test(timeout = 4000)
    public void test894310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
    }

    @Test(timeout = 4000)
    public void test894311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
    }

    @Test(timeout = 4000)
    public void test894312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
    }

    @Test(timeout = 4000)
    public void test894313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
    }

    @Test(timeout = 4000)
    public void test894314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
    }

    @Test(timeout = 4000)
    public void test894315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
    }

    @Test(timeout = 4000)
    public void test894316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
    }

    @Test(timeout = 4000)
    public void test894317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
    }

    @Test(timeout = 4000)
    public void test894318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
    }

    @Test(timeout = 4000)
    public void test894319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 10);
    }

    @Test(timeout = 4000)
    public void test904320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test904321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test904322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test904323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test904324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test904325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test904326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test904327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test904328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test904329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test904330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test904331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test904332() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test904333() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test904334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test904335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test904336() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test904337() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test904338() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test904339() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test904340() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test904341() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test904342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test904343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test904344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test904345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test904346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test904347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test904348() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test904349() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test904350() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test904351() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test904352() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test904353() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test904354() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test904355() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test904356() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test904357() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test904358() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test904359() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test904360() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test904361() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test904362() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test904363() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test904364() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test904365() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test904366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test904367() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test904368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test904369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test904370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test904371() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test904372() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test904373() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test904374() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test904375() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test904376() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test904377() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test904378() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test904379() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test904380() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test904381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test904382() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test904383() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test904384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test904385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test904386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test904387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test904388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test904389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test904390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test904391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test904392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test904393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 56319);
    }

    @Test(timeout = 4000)
    public void test914394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test914395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test914396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test914397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test914398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test914399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test914400() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test914401() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test914402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test914403() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test914404() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test914405() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test914406() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test914407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test914408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test914409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test914410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test914411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test914412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test914413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test914414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test914415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test914416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test914417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test914418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    }

    @Test(timeout = 4000)
    public void test914419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    }

    @Test(timeout = 4000)
    public void test914420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    }

    @Test(timeout = 4000)
    public void test914421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    }

    @Test(timeout = 4000)
    public void test914422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    }

    @Test(timeout = 4000)
    public void test914423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    }

    @Test(timeout = 4000)
    public void test914424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    }

    @Test(timeout = 4000)
    public void test914425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    }

    @Test(timeout = 4000)
    public void test914426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    }

    @Test(timeout = 4000)
    public void test914427() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    }

    @Test(timeout = 4000)
    public void test914428() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test914429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test914430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test914431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test914432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test914433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test914434() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test914435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test914436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test914437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test914438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test914439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test914440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test914441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test914442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test914443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test914444() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test914445() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test914446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test914447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test914448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test914449() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test914450() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test914451() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test914452() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test914453() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test914454() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test914455() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test914456() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test914457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test914458() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test914459() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test914460() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test914461() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test914462() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test914463() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test914464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test914465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test914466() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test914467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test914468() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test914469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test914470() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test914471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test914472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test914473() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test914474() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test914475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test914476() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test914477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test914478() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test914479() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test914480() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    }

    @Test(timeout = 4000)
    public void test914481() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    }

    @Test(timeout = 4000)
    public void test914482() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    }

    @Test(timeout = 4000)
    public void test914483() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    }

    @Test(timeout = 4000)
    public void test914484() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    }

    @Test(timeout = 4000)
    public void test914485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    }

    @Test(timeout = 4000)
    public void test914486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    }

    @Test(timeout = 4000)
    public void test914487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    }

    @Test(timeout = 4000)
    public void test914488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    }

    @Test(timeout = 4000)
    public void test914489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    }

    @Test(timeout = 4000)
    public void test914490() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    }

    @Test(timeout = 4000)
    public void test914491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    }

    @Test(timeout = 4000)
    public void test914492() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    }

    @Test(timeout = 4000)
    public void test914493() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    }

    @Test(timeout = 4000)
    public void test924494() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test924495() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test924496() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test924497() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test924498() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test924499() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test924500() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test924501() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test924502() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test924503() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test924504() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test924505() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test924506() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test924507() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test924508() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test924509() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test924510() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test924511() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test924512() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test924513() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test924514() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test924515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test924516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test924517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test924518() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test924519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test924520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test924521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test924522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test924523() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test924524() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test924525() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test924526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test924527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test924528() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test924529() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test924530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test924531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test924532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test924533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test924534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test924535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test924536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test924537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test924538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test924539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test924540() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test924541() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test924542() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test924543() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test924544() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test924545() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test924546() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test924547() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test924548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test924549() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test924550() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test924551() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test924552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test924553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test924554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test924555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test924556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test924557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test924558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test924559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test924560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test924561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test924562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test924563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test924564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test924565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test924566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test924567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test924568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test924569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test924570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test924571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test924572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test924573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test924574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test924575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test924576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test924577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test924578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test924579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test924580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test924581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test924582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test924583() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test924584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test924585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test924586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test924587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test924588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test924589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test924590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test924591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test924592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test924593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test924594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test924595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test924596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test924597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test924598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test924599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test924600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test924601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test924602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test924603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test924604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test924605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test924606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test924607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test924608() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test924609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test924610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test924611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test924612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test924613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test924614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test924615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test924616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test924617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924619() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924620() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924621() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924622() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924623() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924624() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924625() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924626() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test924630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test924631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test924632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test924633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test924634() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test924635() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test924636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test924637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test924638() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test924639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test924640() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test924641() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
    }

    @Test(timeout = 4000)
    public void test924642() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
    }

    @Test(timeout = 4000)
    public void test924643() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
    }

    @Test(timeout = 4000)
    public void test924644() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
    }

    @Test(timeout = 4000)
    public void test924645() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
    }

    @Test(timeout = 4000)
    public void test924646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
    }

    @Test(timeout = 4000)
    public void test924647() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
    }

    @Test(timeout = 4000)
    public void test924648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
    }

    @Test(timeout = 4000)
    public void test924649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
    }

    @Test(timeout = 4000)
    public void test924650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
    }

    @Test(timeout = 4000)
    public void test924651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
    }

    @Test(timeout = 4000)
    public void test924652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
    }

    @Test(timeout = 4000)
    public void test924653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test924654() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    }

    @Test(timeout = 4000)
    public void test924655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    }

    @Test(timeout = 4000)
    public void test924656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    }

    @Test(timeout = 4000)
    public void test924657() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test924658() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test924659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test924660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test924661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test924662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test924663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test924664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test924665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test924666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test924667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test924668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test924669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test924682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test924683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test924684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test924685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test924686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test924687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test924688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test924689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test924690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test924691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test924692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test924693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test924694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test924695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test924696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test924697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test924698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test924699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test924700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test924701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test924702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test924703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test924704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test924705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test924706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test924707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test924708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test934709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test934710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test934711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test934712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test934713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test934714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test934715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test934716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test934717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test934718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test934719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test934720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
    }

    @Test(timeout = 4000)
    public void test934721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
    }

    @Test(timeout = 4000)
    public void test934722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
    }

    @Test(timeout = 4000)
    public void test934723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
    }

    @Test(timeout = 4000)
    public void test934724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
    }

    @Test(timeout = 4000)
    public void test934725() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
    }

    @Test(timeout = 4000)
    public void test934726() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
    }

    @Test(timeout = 4000)
    public void test934727() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
    }

    @Test(timeout = 4000)
    public void test934728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
    }

    @Test(timeout = 4000)
    public void test934729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test934730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test934731() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test934732() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test934733() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test934734() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test934735() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test934736() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test934737() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test934738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test934739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test934740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test934741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test934742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test934743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test934744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test934745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test934746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test934747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test934748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test934749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test934750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test934751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test934752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test934753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test934754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test934755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test934756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test934757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test934758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test934759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test934760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test934761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test934762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test934763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test934764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test934765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test934766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test934767() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test934768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test934769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test934770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test934771() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test934772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    }

    @Test(timeout = 4000)
    public void test934773() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    }

    @Test(timeout = 4000)
    public void test934774() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    }

    @Test(timeout = 4000)
    public void test934775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    }

    @Test(timeout = 4000)
    public void test934776() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    }

    @Test(timeout = 4000)
    public void test934777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    }

    @Test(timeout = 4000)
    public void test934778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    }

    @Test(timeout = 4000)
    public void test934779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    }

    @Test(timeout = 4000)
    public void test934780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    }

    @Test(timeout = 4000)
    public void test934781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    }

    @Test(timeout = 4000)
    public void test934782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test934783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test934784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test934785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test934786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test934787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test934788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test934789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test934790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test934791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test934792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test934793() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test934794() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test934795() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test934796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    }

    @Test(timeout = 4000)
    public void test934797() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    }

    @Test(timeout = 4000)
    public void test934798() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    }

    @Test(timeout = 4000)
    public void test934799() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    }

    @Test(timeout = 4000)
    public void test934800() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    }

    @Test(timeout = 4000)
    public void test934801() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    }

    @Test(timeout = 4000)
    public void test934802() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    }

    @Test(timeout = 4000)
    public void test934803() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    }

    @Test(timeout = 4000)
    public void test934804() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    }

    @Test(timeout = 4000)
    public void test934805() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    }

    @Test(timeout = 4000)
    public void test934806() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    }

    @Test(timeout = 4000)
    public void test934807() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    }

    @Test(timeout = 4000)
    public void test934808() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    }

    @Test(timeout = 4000)
    public void test934809() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    }

    @Test(timeout = 4000)
    public void test944810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test944811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test944812() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test944813() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test944814() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test944815() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test944816() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test944817() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test944818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test944819() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test944820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test944821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test944822() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test944823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test944824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test944825() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test944826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test944827() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test944828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test944829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test944830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test944831() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test944832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test944833() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test944834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test944835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test944836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test944837() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test944838() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test944839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test944840() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test944841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test944842() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test944843() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test944844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test944845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test944846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test944847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test944848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test944849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test944850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test944851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test944852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test944853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test944854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test944855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test944856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test944857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test944858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test944859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test944860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test944861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test944862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test944863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test944864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test944865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test944866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test944867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test944868() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test944869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test944870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test944871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test944872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test944873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    }

    @Test(timeout = 4000)
    public void test944874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    }

    @Test(timeout = 4000)
    public void test944875() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    }

    @Test(timeout = 4000)
    public void test944876() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    }

    @Test(timeout = 4000)
    public void test944877() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    }

    @Test(timeout = 4000)
    public void test944878() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    }

    @Test(timeout = 4000)
    public void test944879() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    }

    @Test(timeout = 4000)
    public void test944880() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    }

    @Test(timeout = 4000)
    public void test944881() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    }

    @Test(timeout = 4000)
    public void test944882() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    }

    @Test(timeout = 4000)
    public void test944883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test944884() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test944885() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test944886() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test944887() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test944888() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test944889() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test944890() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test944891() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test944892() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test944893() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test944894() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test944895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test944896() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test944897() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    }

    @Test(timeout = 4000)
    public void test944898() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    }

    @Test(timeout = 4000)
    public void test944899() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    }

    @Test(timeout = 4000)
    public void test944900() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    }

    @Test(timeout = 4000)
    public void test944901() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    }

    @Test(timeout = 4000)
    public void test944902() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    }

    @Test(timeout = 4000)
    public void test944903() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    }

    @Test(timeout = 4000)
    public void test944904() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    }

    @Test(timeout = 4000)
    public void test944905() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    }

    @Test(timeout = 4000)
    public void test944906() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    }

    @Test(timeout = 4000)
    public void test944907() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    }

    @Test(timeout = 4000)
    public void test944908() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    }

    @Test(timeout = 4000)
    public void test944909() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    }

    @Test(timeout = 4000)
    public void test944910() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    }

    @Test(timeout = 4000)
    public void test954911() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test954912() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test954913() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test954914() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test954915() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test954916() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test954917() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test954918() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test954919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test954920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test954921() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test954922() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test954923() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test954924() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test954925() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test954926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test954927() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test954928() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test954929() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test954930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test954931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test954932() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test954933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test954934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test954935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test954936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test954937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test954938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test954939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test954940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test954941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test954942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test954943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test954944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test954945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test954946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test954947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test954948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test954949() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test954950() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test954951() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test954952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test954953() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test954954() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test954955() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test954956() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test954957() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test954958() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test954959() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test954960() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test954961() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test954962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test954963() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test954964() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test954965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test954966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test954967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test954968() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test954969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test954970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test954971() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test954972() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.writeNull();
    }

    @Test(timeout = 4000)
    public void test964973() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test964974() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test964975() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test964976() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test964977() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test964978() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test964979() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test964980() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test964981() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test964982() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test964983() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test964984() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test964985() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test964986() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test964987() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test964988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test964989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test964990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test964991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test964992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test964993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test964994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test964995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test964996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test964997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test964998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test964999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test965000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test965001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test965002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test965003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test965004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test965005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test965006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test965007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test965008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test965009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test965010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test965011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test965012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test965013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test965014() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test965015() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test965016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test965017() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test965018() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test965019() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test965020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test965021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[7];
        charArray0[5] = '\"';
        writerBasedJsonGenerator0.writeString(charArray0, 1, 482);
    }
}
