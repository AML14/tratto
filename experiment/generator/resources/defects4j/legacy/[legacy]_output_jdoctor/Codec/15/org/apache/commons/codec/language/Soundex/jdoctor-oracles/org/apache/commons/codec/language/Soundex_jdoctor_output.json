[
  {
    "signature": "org.apache.commons.codec.language.Soundex()",
    "name": "org.apache.commons.codec.language.Soundex",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.Soundex",
      "name": "Soundex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.Soundex",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.codec.language.Soundex(char[] mapping)",
    "name": "org.apache.commons.codec.language.Soundex",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.Soundex",
      "name": "Soundex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.Soundex",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "mapping"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[C",
            "name": "char[]",
            "isArray": true
          },
          "name": "mapping"
        },
        "comment": "Mapping array to use when finding the corresponding code for a given character.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.codec.language.Soundex(java.lang.String mapping)",
    "name": "org.apache.commons.codec.language.Soundex",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.Soundex",
      "name": "Soundex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.Soundex",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "mapping"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "mapping"
        },
        "comment": "Mapping string to use when finding the corresponding code for a given character.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "difference(java.lang.String s1, java.lang.String s2)",
    "name": "difference",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.Soundex",
      "name": "Soundex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.Soundex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "s1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "s2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "s1"
        },
        "comment": "A String that . s1 is encoded and compared.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "s2"
        },
        "comment": "A String that . s2 is encoded and compared.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The number of characters in the two encoded Strings that are the same from 0 to 4.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.codec.EncoderException",
          "name": "EncoderException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an error occurs encoding one of the strings.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "encode(java.lang.Object obj)",
    "name": "encode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.Soundex",
      "name": "Soundex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.Soundex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "Object to encode.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "An object (or type java.lang.String) containing the soundex code which corresponds to the String supplied.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.codec.EncoderException",
          "name": "EncoderException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the parameter supplied is not of type java.lang.String.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "a character is not mapped.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "encode(java.lang.String str)",
    "name": "encode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.Soundex",
      "name": "Soundex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.Soundex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "A String object to encode.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A Soundex code corresponding to the String supplied.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "a character is not mapped.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getMaxLength()",
    "name": "getMaxLength",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.Soundex",
      "name": "Soundex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.Soundex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "int.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setMaxLength(int maxLength)",
    "name": "setMaxLength",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.Soundex",
      "name": "Soundex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.Soundex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxLength"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxLength"
        },
        "comment": "The maxLength to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "soundex(java.lang.String str)",
    "name": "soundex",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.Soundex",
      "name": "Soundex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.Soundex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "String to encode using the Soundex algorithm.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A soundex code for the String supplied.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "a character is not mapped.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]