[
  {
    "signature": "org.apache.commons.codec.binary.BaseNCodecInputStream(java.io.InputStream in, org.apache.commons.codec.binary.BaseNCodec baseNCodec, boolean doEncode)",
    "name": "org.apache.commons.codec.binary.BaseNCodecInputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.binary.BaseNCodecInputStream",
      "name": "BaseNCodecInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.binary.BaseNCodecInputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "in"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.codec.binary.BaseNCodec",
          "name": "BaseNCodec",
          "isArray": false
        },
        "name": "baseNCodec"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "doEncode"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "read()",
    "name": "read",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.binary.BaseNCodecInputStream",
      "name": "BaseNCodecInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.binary.BaseNCodecInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the byte as an integer in the range 0 to 255. Returns -1 if EOF has been reached.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an I/O error occurs.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "read(byte[] b, int offset, int len)",
    "name": "read",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.binary.BaseNCodecInputStream",
      "name": "BaseNCodecInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.binary.BaseNCodecInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "len"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "b"
        },
        "comment": "destination byte array.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "where to start writing the bytes.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "len"
        },
        "comment": "len is maximum. maximum number of bytes to read.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "number of bytes read.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an I/O error occurs.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the byte array parameter is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "offset len or buffer size are invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "markSupported()",
    "name": "markSupported",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.binary.BaseNCodecInputStream",
      "name": "BaseNCodecInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.binary.BaseNCodecInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "false.",
      "kind": "RETURN",
      "condition": "true ? methodResultID==false"
    },
    "throwsTags": []
  }
]