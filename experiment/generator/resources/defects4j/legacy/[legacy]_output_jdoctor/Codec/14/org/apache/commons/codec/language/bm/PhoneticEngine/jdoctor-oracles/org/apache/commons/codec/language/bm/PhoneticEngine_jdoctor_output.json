[
  {
    "signature": "org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.NameType nameType, org.apache.commons.codec.language.bm.RuleType ruleType, boolean concat)",
    "name": "org.apache.commons.codec.language.bm.PhoneticEngine",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.bm.PhoneticEngine",
      "name": "PhoneticEngine",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.bm.PhoneticEngine",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.codec.language.bm.NameType",
          "name": "NameType",
          "isArray": false
        },
        "name": "nameType"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.codec.language.bm.RuleType",
          "name": "RuleType",
          "isArray": false
        },
        "name": "ruleType"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "concat"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.codec.language.bm.NameType",
            "name": "NameType",
            "isArray": false
          },
          "name": "nameType"
        },
        "comment": "the type of names type will use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.codec.language.bm.RuleType",
            "name": "RuleType",
            "isArray": false
          },
          "name": "ruleType"
        },
        "comment": "the type of rules type will apply.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "concat"
        },
        "comment": "if encodings will concatenate multiple encodings.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.NameType nameType, org.apache.commons.codec.language.bm.RuleType ruleType, boolean concat, int maxPhonemes)",
    "name": "org.apache.commons.codec.language.bm.PhoneticEngine",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.bm.PhoneticEngine",
      "name": "PhoneticEngine",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.bm.PhoneticEngine",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.codec.language.bm.NameType",
          "name": "NameType",
          "isArray": false
        },
        "name": "nameType"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.codec.language.bm.RuleType",
          "name": "RuleType",
          "isArray": false
        },
        "name": "ruleType"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "concat"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxPhonemes"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.codec.language.bm.NameType",
            "name": "NameType",
            "isArray": false
          },
          "name": "nameType"
        },
        "comment": "the type of names type will use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.codec.language.bm.RuleType",
            "name": "RuleType",
            "isArray": false
          },
          "name": "ruleType"
        },
        "comment": "the type of rules type will apply.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "concat"
        },
        "comment": "if encodings will concatenate multiple encodings.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxPhonemes"
        },
        "comment": "the maximum number of phonemes that . maxPhonemes is handled.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "encode(java.lang.String input)",
    "name": "encode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.bm.PhoneticEngine",
      "name": "PhoneticEngine",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.bm.PhoneticEngine",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "input"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "input"
        },
        "comment": "the String to encode.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the encoding of the input.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "encode(java.lang.String input, org.apache.commons.codec.language.bm.Languages$LanguageSet languageSet)",
    "name": "encode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.bm.PhoneticEngine",
      "name": "PhoneticEngine",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.bm.PhoneticEngine",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "input"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.codec.language.bm.Languages$LanguageSet",
          "name": "LanguageSet",
          "isArray": false
        },
        "name": "languageSet"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "input"
        },
        "comment": "String to phoneticise a String with dashes or spaces separating each word.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.codec.language.bm.Languages$LanguageSet",
            "name": "LanguageSet",
            "isArray": false
          },
          "name": "languageSet"
        },
        "comment": ".",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a phonetic representation of the input; a String containing '-'-separated phonetic representations of the input.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLang()",
    "name": "getLang",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.bm.PhoneticEngine",
      "name": "PhoneticEngine",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.bm.PhoneticEngine",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.codec.language.bm.Lang",
      "name": "org.apache.commons.codec.language.bm.Lang",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the Lang in use.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNameType()",
    "name": "getNameType",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.bm.PhoneticEngine",
      "name": "PhoneticEngine",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.bm.PhoneticEngine",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.codec.language.bm.NameType",
      "name": "org.apache.commons.codec.language.bm.NameType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the NameType in use.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getRuleType()",
    "name": "getRuleType",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.bm.PhoneticEngine",
      "name": "PhoneticEngine",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.bm.PhoneticEngine",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.codec.language.bm.RuleType",
      "name": "org.apache.commons.codec.language.bm.RuleType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the RuleType in use.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isConcat()",
    "name": "isConcat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.bm.PhoneticEngine",
      "name": "PhoneticEngine",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.bm.PhoneticEngine",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if multiple phonetic encodings are returned, false if just the first is.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMaxPhonemes()",
    "name": "getMaxPhonemes",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.bm.PhoneticEngine",
      "name": "PhoneticEngine",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.bm.PhoneticEngine",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the maximum number of phonemes.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]