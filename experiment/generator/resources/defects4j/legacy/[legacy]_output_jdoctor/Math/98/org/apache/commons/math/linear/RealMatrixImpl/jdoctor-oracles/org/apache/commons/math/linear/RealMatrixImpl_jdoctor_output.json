[
  {
    "signature": "org.apache.commons.math.linear.RealMatrixImpl()",
    "name": "org.apache.commons.math.linear.RealMatrixImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.math.linear.RealMatrixImpl(int rowDimension, int columnDimension)",
    "name": "org.apache.commons.math.linear.RealMatrixImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "rowDimension"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "columnDimension"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "rowDimension"
        },
        "comment": "the number of rows in the new matrix.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "columnDimension"
        },
        "comment": "the number of columns in the new matrix.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "row or column dimension is not positive.",
        "kind": "THROWS",
        "condition": "(args[0]>0) == false"
      }
    ]
  },
  {
    "signature": "org.apache.commons.math.linear.RealMatrixImpl(double[][] d)",
    "name": "org.apache.commons.math.linear.RealMatrixImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "[[D",
          "name": "double[][]",
          "isArray": true
        },
        "name": "d"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[[D",
            "name": "double[][]",
            "isArray": true
          },
          "name": "d"
        },
        "comment": "data for new matrix.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "d is not rectangular (not all rows have the same length) or empty.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "d is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "org.apache.commons.math.linear.RealMatrixImpl(double[][] d, boolean copyArray)",
    "name": "org.apache.commons.math.linear.RealMatrixImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "[[D",
          "name": "double[][]",
          "isArray": true
        },
        "name": "d"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "copyArray"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[[D",
            "name": "double[][]",
            "isArray": true
          },
          "name": "d"
        },
        "comment": "data for new matrix.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "copyArray"
        },
        "comment": "if true the input array . copyArray is copied otherwise input . copyArray is referenced.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "d is not rectangular (not all rows have the same length) or empty.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "d is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "org.apache.commons.math.linear.RealMatrixImpl(double[] v)",
    "name": "org.apache.commons.math.linear.RealMatrixImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "v"
        },
        "comment": "column vector holding data for new matrix.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "copy()",
    "name": "copy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
      "name": "org.apache.commons.math.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the cloned matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "add(org.apache.commons.math.linear.RealMatrix m)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
      "name": "org.apache.commons.math.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
          "name": "RealMatrix",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
            "name": "RealMatrix",
            "isArray": false
          },
          "name": "m"
        },
        "comment": "matrix to be added.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this + m.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "m is not the same size as this.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "add(org.apache.commons.math.linear.RealMatrixImpl m)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "org.apache.commons.math.linear.RealMatrixImpl",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
          "name": "RealMatrixImpl",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
            "name": "RealMatrixImpl",
            "isArray": false
          },
          "name": "m"
        },
        "comment": "matrix to be added.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this + m.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "m is not the same size as this.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "subtract(org.apache.commons.math.linear.RealMatrix m)",
    "name": "subtract",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
      "name": "org.apache.commons.math.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
          "name": "RealMatrix",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
            "name": "RealMatrix",
            "isArray": false
          },
          "name": "m"
        },
        "comment": "matrix to be subtracted.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this + m.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "m is not the same size as this.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "subtract(org.apache.commons.math.linear.RealMatrixImpl m)",
    "name": "subtract",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "org.apache.commons.math.linear.RealMatrixImpl",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
          "name": "RealMatrixImpl",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
            "name": "RealMatrixImpl",
            "isArray": false
          },
          "name": "m"
        },
        "comment": "matrix to be subtracted.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this + m.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "m is not the same size as this.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "scalarAdd(double d)",
    "name": "scalarAdd",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
      "name": "org.apache.commons.math.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "d"
        },
        "comment": "value to be added to each entry.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "d + this.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "scalarMultiply(double d)",
    "name": "scalarMultiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
      "name": "org.apache.commons.math.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "d"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "d"
        },
        "comment": "value to multiply all entries by.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "d * this.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "multiply(org.apache.commons.math.linear.RealMatrix m)",
    "name": "multiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
      "name": "org.apache.commons.math.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
          "name": "RealMatrix",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
            "name": "RealMatrix",
            "isArray": false
          },
          "name": "m"
        },
        "comment": "matrix to postmultiply by.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this*m.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "columnDimension(this) != rowDimension(m).",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "multiply(org.apache.commons.math.linear.RealMatrixImpl m)",
    "name": "multiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "org.apache.commons.math.linear.RealMatrixImpl",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
          "name": "RealMatrixImpl",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
            "name": "RealMatrixImpl",
            "isArray": false
          },
          "name": "m"
        },
        "comment": "matrix to postmultiply by.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this*m.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "columnDimension(this) != rowDimension(m).",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "preMultiply(org.apache.commons.math.linear.RealMatrix m)",
    "name": "preMultiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
      "name": "org.apache.commons.math.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
          "name": "RealMatrix",
          "isArray": false
        },
        "name": "m"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
            "name": "RealMatrix",
            "isArray": false
          },
          "name": "m"
        },
        "comment": "matrix to premultiply by.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "m * this.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "rowDimension(this) != columnDimension(m).",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getData()",
    "name": "getData",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[][]",
      "name": "double[][]",
      "isArray": true
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "2-dimensional array of entries.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDataRef()",
    "name": "getDataRef",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[][]",
      "name": "double[][]",
      "isArray": true
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "2-dimensional array of entries.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNorm()",
    "name": "getNorm",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "norm.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSubMatrix(int startRow, int endRow, int startColumn, int endColumn)",
    "name": "getSubMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
      "name": "org.apache.commons.math.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endRow"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startColumn"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endColumn"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startRow"
        },
        "comment": "startRow is Initial. Initial row index.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endRow"
        },
        "comment": "endRow is Final. Final row index.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startColumn"
        },
        "comment": "startColumn is Initial. Initial column index.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endColumn"
        },
        "comment": "endColumn is Final. Final column index.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The subMatrix containing the data of the specified rows and columns.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.linear.MatrixIndexException",
          "name": "MatrixIndexException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "row or column selections are not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getSubMatrix(int[] selectedRows, int[] selectedColumns)",
    "name": "getSubMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
      "name": "org.apache.commons.math.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "selectedRows"
      },
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "selectedColumns"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[I",
            "name": "int[]",
            "isArray": true
          },
          "name": "selectedRows"
        },
        "comment": "Array of row indices . selectedRows is not empty.",
        "kind": "PARAM",
        "condition": "(args[0].length==0) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[I",
            "name": "int[]",
            "isArray": true
          },
          "name": "selectedColumns"
        },
        "comment": "Array of column indices . selectedColumns is not empty.",
        "kind": "PARAM",
        "condition": "(args[1].length==0) == false"
      }
    ],
    "returnTag": {
      "comment": "The subMatrix containing the data in the specified rows and columns.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.linear.MatrixIndexException",
          "name": "MatrixIndexException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "supplied row or column index arrays are not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setSubMatrix(double[][] subMatrix, int row, int column)",
    "name": "setSubMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[[D",
          "name": "double[][]",
          "isArray": true
        },
        "name": "subMatrix"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[[D",
            "name": "double[][]",
            "isArray": true
          },
          "name": "subMatrix"
        },
        "comment": "array containing the submatrix replacement data.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "row"
        },
        "comment": "row coordinate of the top left element to be replaced.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "column"
        },
        "comment": "column coordinate of the top left element to be replaced.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.linear.MatrixIndexException",
          "name": "MatrixIndexException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "subMatrix does not fit into this matrix from element in (row column).",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "subMatrix is not rectangular (not all rows have the same length) or empty.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "subMatrix is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "getRowMatrix(int row)",
    "name": "getRowMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
      "name": "org.apache.commons.math.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "row"
        },
        "comment": "the row to be fetched.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "row matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.linear.MatrixIndexException",
          "name": "MatrixIndexException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the specified row index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getColumnMatrix(int column)",
    "name": "getColumnMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
      "name": "org.apache.commons.math.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "column"
        },
        "comment": "the column to be fetched.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "column matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.linear.MatrixIndexException",
          "name": "MatrixIndexException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the specified column index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getRow(int row)",
    "name": "getRow",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "row"
        },
        "comment": "the row to be fetched.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "array of entries in the row.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.linear.MatrixIndexException",
          "name": "MatrixIndexException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the specified row index is not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getColumn(int col)",
    "name": "getColumn",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "col"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "col"
        },
        "comment": "the column to be fetched.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "array of entries in the column.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.linear.MatrixIndexException",
          "name": "MatrixIndexException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the specified column index is not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getEntry(int row, int column)",
    "name": "getEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "row"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "column"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "row"
        },
        "comment": "row location of entry to be fetched.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "column"
        },
        "comment": "column location of entry to be fetched.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "matrix entry in row,column.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.linear.MatrixIndexException",
          "name": "MatrixIndexException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the row or column index is not valid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "transpose()",
    "name": "transpose",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
      "name": "org.apache.commons.math.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "transpose matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "inverse()",
    "name": "inverse",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
      "name": "org.apache.commons.math.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "inverse matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.linear.InvalidMatrixException",
          "name": "InvalidMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "this is not invertible.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getDeterminant()",
    "name": "getDeterminant",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "determinant.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.linear.InvalidMatrixException",
          "name": "InvalidMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "matrix is not square.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "isSquare()",
    "name": "isSquare",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if the matrix is square (rowDimension = columnDimension).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSingular()",
    "name": "isSingular",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if the matrix is singular.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getRowDimension()",
    "name": "getRowDimension",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "rowDimension.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getColumnDimension()",
    "name": "getColumnDimension",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "columnDimension.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getTrace()",
    "name": "getTrace",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "trace.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the matrix is not square.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "operate(double[] v)",
    "name": "operate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "v"
        },
        "comment": "vector to operate on.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "resulting vector.",
      "kind": "RETURN",
      "condition": "true ? methodResultID.equals(args[0])"
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "columnDimension != v.length.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "preMultiply(double[] v)",
    "name": "preMultiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "v"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "v"
        },
        "comment": "vector to premultiply by.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "resulting matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "rowDimension != v.length.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "solve(double[] b)",
    "name": "solve",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "b"
        },
        "comment": "array of constant forming RHS of linear systems to to solve.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "solution array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "this.rowDimension != row dimension.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.linear.InvalidMatrixException",
          "name": "InvalidMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "this matrix is not square or is singular.",
        "kind": "THROWS",
        "condition": "(receiverObjectID.isSquare()) == false || receiverObjectID.isSingular()"
      }
    ]
  },
  {
    "signature": "solve(org.apache.commons.math.linear.RealMatrix b)",
    "name": "solve",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
      "name": "org.apache.commons.math.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
          "name": "RealMatrix",
          "isArray": false
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
            "name": "RealMatrix",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "matrix of constant vectors forming RHS of linear systems to to solve.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "matrix of solution vectors.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "this.rowDimension != row dimension.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.linear.InvalidMatrixException",
          "name": "InvalidMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "this matrix is not square or is singular.",
        "kind": "THROWS",
        "condition": "(receiverObjectID.isSquare()) == false || receiverObjectID.isSingular()"
      }
    ]
  },
  {
    "signature": "luDecompose()",
    "name": "luDecompose",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.linear.InvalidMatrixException",
          "name": "InvalidMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the matrix is non-square or singular.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a string representation for this matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object object)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "the object to test equality against.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if object equals this.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "hashcode for matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLUMatrix()",
    "name": "getLUMatrix",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
      "name": "org.apache.commons.math.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "LU decomposition matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.linear.InvalidMatrixException",
          "name": "InvalidMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the matrix is non-square or singular.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getPermutation()",
    "name": "getPermutation",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrixImpl",
      "name": "RealMatrixImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.RealMatrixImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int[]",
      "name": "int[]",
      "isArray": true
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the permutation.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]