/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 21 17:53:25 GMT 2023
 */
package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.function.Power;
import org.apache.commons.math.linear.ArrayRealVector;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class OpenMapRealVector_ESTest extends OpenMapRealVector_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-901), (-901));
        openMapRealVector0.append(1.0E-12);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
        double[] doubleArray0 = openMapRealVector0.toArray();
        openMapRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test012() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
        double[] doubleArray0 = openMapRealVector0.toArray();
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 40.19140625);
        openMapRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test024() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 40.19140625);
        double double0 = openMapRealVector0.getL1Distance(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test025() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 40.19140625);
        double double0 = openMapRealVector0.getL1Distance(doubleArray0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test036() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(0, 159);
        double double0 = openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test047() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-457.556));
        openMapRealVector0.setSubVector(2145163657, (RealVector) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test058() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-181.396));
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.projection(doubleArray0);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test059() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-181.396));
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.projection(doubleArray0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test0610() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-500.9359379458425));
        OpenMapRealVector openMapRealVector1 = (OpenMapRealVector) openMapRealVector0.mapMultiply((-500.9359379458425));
        openMapRealVector1.equals((Object) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test0611() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-500.9359379458425));
        OpenMapRealVector openMapRealVector1 = (OpenMapRealVector) openMapRealVector0.mapMultiply((-500.9359379458425));
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test0712() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-498.7073));
        openMapRealVector0.dotProduct(doubleArray0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test0813() throws Throwable {
        double[] doubleArray0 = new double[0];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealVector.OpenMapSparseIterator openMapRealVector_OpenMapSparseIterator0 = openMapRealVector0.new OpenMapSparseIterator();
        openMapRealVector_OpenMapSparseIterator0.remove();
    }

    @Test(timeout = 4000)
    public void test0914() throws Throwable {
        Double[] doubleArray0 = new Double[2];
        doubleArray0[0] = (Double) 854.7044674360784;
        doubleArray0[1] = (Double) 1.0E-12;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test1015() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(249, 249);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        openMapRealVector0.add((RealVector) arrayRealVector0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test1116() throws Throwable {
        double[] doubleArray0 = new double[8];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-498.0941672164758));
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(doubleArray0, 1.0E-12);
        OpenMapRealVector openMapRealVector2 = openMapRealVector0.add(openMapRealVector1);
        openMapRealVector2.equals((Object) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test1117() throws Throwable {
        double[] doubleArray0 = new double[8];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-498.0941672164758));
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(doubleArray0, 1.0E-12);
        OpenMapRealVector openMapRealVector2 = openMapRealVector0.add(openMapRealVector1);
        openMapRealVector2.getSparsity();
    }

    @Test(timeout = 4000)
    public void test1118() throws Throwable {
        double[] doubleArray0 = new double[8];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-498.0941672164758));
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(doubleArray0, 1.0E-12);
        OpenMapRealVector openMapRealVector2 = openMapRealVector0.add(openMapRealVector1);
    }

    @Test(timeout = 4000)
    public void test1219() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[1] = 854.7044674360784;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 40.19140625);
        Double[] doubleArray1 = new Double[2];
        doubleArray1[0] = (Double) 854.7044674360784;
        doubleArray1[1] = (Double) 1.0E-12;
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(doubleArray1, 15.0);
        OpenMapRealVector openMapRealVector2 = openMapRealVector1.add(openMapRealVector0);
        openMapRealVector2.getSparsity();
    }

    @Test(timeout = 4000)
    public void test1220() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[1] = 854.7044674360784;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 40.19140625);
        Double[] doubleArray1 = new Double[2];
        doubleArray1[0] = (Double) 854.7044674360784;
        doubleArray1[1] = (Double) 1.0E-12;
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(doubleArray1, 15.0);
        OpenMapRealVector openMapRealVector2 = openMapRealVector1.add(openMapRealVector0);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test1221() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[1] = 854.7044674360784;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 40.19140625);
        Double[] doubleArray1 = new Double[2];
        doubleArray1[0] = (Double) 854.7044674360784;
        doubleArray1[1] = (Double) 1.0E-12;
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(doubleArray1, 15.0);
        OpenMapRealVector openMapRealVector2 = openMapRealVector1.add(openMapRealVector0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test1322() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[1] = 36.372181253585396;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 36.372181253585396);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.append((RealVector) openMapRealVector0);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test1323() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[1] = 36.372181253585396;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 36.372181253585396);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.append((RealVector) openMapRealVector0);
        openMapRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test1424() throws Throwable {
        double[] doubleArray0 = new double[20];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-498.7073));
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.append((RealVector) arrayRealVector0);
        openMapRealVector1.equals((Object) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test1425() throws Throwable {
        double[] doubleArray0 = new double[20];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-498.7073));
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.append((RealVector) arrayRealVector0);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test1426() throws Throwable {
        double[] doubleArray0 = new double[20];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-498.7073));
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.append((RealVector) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test1527() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-500.9359379458425));
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.append(doubleArray0);
        openMapRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test1528() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-500.9359379458425));
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.append(doubleArray0);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test1629() throws Throwable {
        double[] doubleArray0 = new double[20];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1.0));
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(doubleArray0);
        double double0 = openMapRealVector1.dotProduct(openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test1630() throws Throwable {
        double[] doubleArray0 = new double[20];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1.0));
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(doubleArray0);
        double double0 = openMapRealVector1.dotProduct(openMapRealVector0);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test1631() throws Throwable {
        double[] doubleArray0 = new double[20];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1.0));
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(doubleArray0);
        double double0 = openMapRealVector1.dotProduct(openMapRealVector0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test1732() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-498.70730381676447));
        double double0 = openMapRealVector0.dotProduct(openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test1733() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-498.70730381676447));
        double double0 = openMapRealVector0.dotProduct(openMapRealVector0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test1834() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.ebeDivide((RealVector) openMapRealVector0);
        openMapRealVector1.equals((Object) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test1835() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.ebeDivide((RealVector) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test1836() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.ebeDivide((RealVector) openMapRealVector0);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test1937() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 36.372181253585396);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.ebeDivide(doubleArray0);
        openMapRealVector1.set(730519.7266551905);
        openMapRealVector0.subtract(openMapRealVector1);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test1938() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 36.372181253585396);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.ebeDivide(doubleArray0);
        openMapRealVector1.set(730519.7266551905);
        openMapRealVector0.subtract(openMapRealVector1);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test2039() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 840.3684411499372;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 36.372181253585396);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.ebeDivide(doubleArray0);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test2040() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 840.3684411499372;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 36.372181253585396);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.ebeDivide(doubleArray0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test2141() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(249, 249);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.ebeMultiply((RealVector) arrayRealVector0);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test2142() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(249, 249);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.ebeMultiply((RealVector) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test2143() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(249, 249);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.ebeMultiply((RealVector) arrayRealVector0);
        openMapRealVector1.equals((Object) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test2244() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-500.9359379458425));
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.ebeMultiply(doubleArray0);
        openMapRealVector1.equals((Object) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test2245() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-500.9359379458425));
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.ebeMultiply(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test2246() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-500.9359379458425));
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.ebeMultiply(doubleArray0);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test2347() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.getSubVector(1, 1);
        openMapRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test2348() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.getSubVector(1, 1);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test2349() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.getSubVector(1, 1);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test2450() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[1] = 854.7044674360784;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 36.372181253585396);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.getSubVector(0, 1);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test2451() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[1] = 854.7044674360784;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 36.372181253585396);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.getSubVector(0, 1);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test2452() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[1] = 854.7044674360784;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 36.372181253585396);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.getSubVector(0, 1);
        openMapRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test2553() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        double[] doubleArray1 = openMapRealVector0.getData();
    }

    @Test(timeout = 4000)
    public void test2554() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        double[] doubleArray1 = openMapRealVector0.getData();
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test2655() throws Throwable {
        double[] doubleArray0 = new double[5];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-498.70730381676447));
        double double0 = openMapRealVector0.getDistance((RealVector) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test2656() throws Throwable {
        double[] doubleArray0 = new double[5];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-498.70730381676447));
        double double0 = openMapRealVector0.getDistance((RealVector) openMapRealVector0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test2757() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(249, 249);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector();
        double double0 = openMapRealVector1.getDistance(openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test2758() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(249, 249);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector();
        double double0 = openMapRealVector1.getDistance(openMapRealVector0);
        openMapRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test2859() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
        double double0 = openMapRealVector0.getDistance((RealVector) arrayRealVector0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test2860() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
        double double0 = openMapRealVector0.getDistance((RealVector) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test2961() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-499.0));
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector();
        double double0 = openMapRealVector1.getL1Distance(openMapRealVector0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test2962() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-499.0));
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector();
        double double0 = openMapRealVector1.getL1Distance(openMapRealVector0);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test2963() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-499.0));
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector();
        double double0 = openMapRealVector1.getL1Distance(openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test3064() throws Throwable {
        ArrayRealVector arrayRealVector0 = new ArrayRealVector();
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        double double0 = openMapRealVector0.getL1Distance((RealVector) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test3165() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        double double0 = openMapRealVector0.getL1Distance((RealVector) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test3166() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        double double0 = openMapRealVector0.getL1Distance((RealVector) openMapRealVector0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test3267() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-310.5358554));
        double double0 = openMapRealVector0.getLInfDistance((RealVector) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test3268() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-310.5358554));
        double double0 = openMapRealVector0.getLInfDistance((RealVector) openMapRealVector0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test3369() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(1753, 1753, 1753);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapAdd(1753);
        double double0 = openMapRealVector1.getLInfDistance((RealVector) openMapRealVector0);
        openMapRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test3370() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(1753, 1753, 1753);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapAdd(1753);
        double double0 = openMapRealVector1.getLInfDistance((RealVector) openMapRealVector0);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test3371() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(1753, 1753, 1753);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapAdd(1753);
        double double0 = openMapRealVector1.getLInfDistance((RealVector) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test3472() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 36.372181253585396);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.subtract(openMapRealVector0);
        openMapRealVector1.set(806.3884);
        double double0 = openMapRealVector0.getLInfDistance((RealVector) openMapRealVector1);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test3473() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 36.372181253585396);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.subtract(openMapRealVector0);
        openMapRealVector1.set(806.3884);
        double double0 = openMapRealVector0.getLInfDistance((RealVector) openMapRealVector1);
        openMapRealVector1.equals((Object) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test3474() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 36.372181253585396);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.subtract(openMapRealVector0);
        openMapRealVector1.set(806.3884);
        double double0 = openMapRealVector0.getLInfDistance((RealVector) openMapRealVector1);
    }

    @Test(timeout = 4000)
    public void test3575() throws Throwable {
        double[] doubleArray0 = new double[2];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, false);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        double double0 = openMapRealVector0.getLInfDistance((RealVector) arrayRealVector0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test3576() throws Throwable {
        double[] doubleArray0 = new double[2];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, false);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        double double0 = openMapRealVector0.getLInfDistance((RealVector) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test3677() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = (-390.0);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, false);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test3678() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = (-390.0);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, false);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(arrayRealVector0);
        openMapRealVector0.unitize();
        double double0 = openMapRealVector0.getLInfDistance(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test3779() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[1] = 36.372181253585396;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 36.372181253585396);
        boolean boolean0 = openMapRealVector0.isInfinite();
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test3780() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[1] = 36.372181253585396;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 36.372181253585396);
        boolean boolean0 = openMapRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test3881() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        openMapRealVector0.unitize();
        boolean boolean0 = openMapRealVector0.isInfinite();
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test3882() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        openMapRealVector0.unitize();
        boolean boolean0 = openMapRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test3983() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-500.9359379458425));
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test3984() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-500.9359379458425));
        Power power0 = new Power((-500.9359379458425));
        openMapRealVector0.mapToSelf(power0);
        boolean boolean0 = openMapRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test4085() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[1] = 854.7044674360784;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 40.19140625);
        boolean boolean0 = openMapRealVector0.isNaN();
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test4086() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[1] = 854.7044674360784;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 40.19140625);
        boolean boolean0 = openMapRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test4187() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        openMapRealVector0.unitize();
        boolean boolean0 = openMapRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test4188() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        openMapRealVector0.unitize();
        boolean boolean0 = openMapRealVector0.isNaN();
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test4289() throws Throwable {
        double[] doubleArray0 = new double[17];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test4290() throws Throwable {
        double[] doubleArray0 = new double[17];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test4291() throws Throwable {
        double[] doubleArray0 = new double[17];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test4392() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test4393() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test4394() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        RealMatrix realMatrix0 = openMapRealVector0.outerProduct(doubleArray0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test4495() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(1736, (-1.0));
        double[] doubleArray0 = new double[2];
        openMapRealVector0.setSubVector(102, doubleArray0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test4596() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.subtract((RealVector) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test4597() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.subtract((RealVector) openMapRealVector0);
        openMapRealVector1.equals((Object) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test4598() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.subtract((RealVector) openMapRealVector0);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test4699() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-498.7073));
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(openMapRealVector0);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.subtract((RealVector) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test46100() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-498.7073));
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(openMapRealVector0);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.subtract((RealVector) arrayRealVector0);
        openMapRealVector1.equals((Object) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test47101() throws Throwable {
        double[] doubleArray0 = new double[10];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 4.0E-12);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.subtract(doubleArray0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test47102() throws Throwable {
        double[] doubleArray0 = new double[10];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 4.0E-12);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.subtract(doubleArray0);
        openMapRealVector1.equals((Object) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test47103() throws Throwable {
        double[] doubleArray0 = new double[10];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 4.0E-12);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.subtract(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test47104() throws Throwable {
        double[] doubleArray0 = new double[10];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 4.0E-12);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.subtract(doubleArray0);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test48105() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
        openMapRealVector0.unitVector();
    }

    @Test(timeout = 4000)
    public void test49106() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        openMapRealVector0.hashCode();
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test50107() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
        boolean boolean0 = openMapRealVector0.equals(openMapRealVector1);
    }

    @Test(timeout = 4000)
    public void test50108() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-497.689));
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(openMapRealVector0);
        boolean boolean0 = openMapRealVector0.equals(openMapRealVector1);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test51109() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-1), (-1));
        boolean boolean0 = openMapRealVector0.equals(openMapRealVector0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test51110() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector((-1), (-1));
        boolean boolean0 = openMapRealVector0.equals(openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test52111() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 36.372181253585396);
        Object object0 = new Object();
        boolean boolean0 = openMapRealVector0.equals(object0);
    }

    @Test(timeout = 4000)
    public void test52112() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 36.372181253585396);
        Object object0 = new Object();
        boolean boolean0 = openMapRealVector0.equals(object0);
        openMapRealVector0.getSparsity();
    }

    @Test(timeout = 4000)
    public void test53113() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(1509);
        boolean boolean0 = openMapRealVector0.equals(openMapRealVector1);
    }

    @Test(timeout = 4000)
    public void test53114() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(1509);
        boolean boolean0 = openMapRealVector0.equals(openMapRealVector1);
        openMapRealVector1.equals((Object) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test53115() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(1509);
        boolean boolean0 = openMapRealVector0.equals(openMapRealVector1);
        openMapRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test54116() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(1753, 1753, 1753);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(1753, 1753);
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(arrayRealVector0);
        boolean boolean0 = openMapRealVector1.equals(openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test54117() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(1753, 1753, 1753);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(1753, 1753);
        OpenMapRealVector openMapRealVector1 = new OpenMapRealVector(arrayRealVector0);
        boolean boolean0 = openMapRealVector1.equals(openMapRealVector0);
        openMapRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test55118() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[1] = 854.7044674360784;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 36.372181253585396);
        OpenMapRealVector openMapRealVector1 = (OpenMapRealVector) openMapRealVector0.add((RealVector) openMapRealVector0);
        boolean boolean0 = openMapRealVector0.equals(openMapRealVector1);
        openMapRealVector1.getSparsity();
    }

    @Test(timeout = 4000)
    public void test55119() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[1] = 854.7044674360784;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 36.372181253585396);
        OpenMapRealVector openMapRealVector1 = (OpenMapRealVector) openMapRealVector0.add((RealVector) openMapRealVector0);
        boolean boolean0 = openMapRealVector0.equals(openMapRealVector1);
    }

    @Test(timeout = 4000)
    public void test56120() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(1753, 1753, 1753);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapAdd(1753);
        boolean boolean0 = openMapRealVector0.equals(openMapRealVector1);
        openMapRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test56121() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(1753, 1753, 1753);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapAdd(1753);
        boolean boolean0 = openMapRealVector0.equals(openMapRealVector1);
    }

    @Test(timeout = 4000)
    public void test56122() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(1753, 1753, 1753);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapAdd(1753);
        boolean boolean0 = openMapRealVector0.equals(openMapRealVector1);
        openMapRealVector1.equals((Object) openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test56123() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(1753, 1753, 1753);
        OpenMapRealVector openMapRealVector1 = openMapRealVector0.mapAdd(1753);
        boolean boolean0 = openMapRealVector0.equals(openMapRealVector1);
        openMapRealVector1.getSparsity();
    }
}
