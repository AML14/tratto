[
  {
    "signature": "org.apache.commons.math.optimization.linear.SimplexSolver()",
    "name": "org.apache.commons.math.optimization.linear.SimplexSolver",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.linear.SimplexSolver",
      "name": "SimplexSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.linear.SimplexSolver",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.math.optimization.linear.SimplexSolver(double epsilon)",
    "name": "org.apache.commons.math.optimization.linear.SimplexSolver",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.linear.SimplexSolver",
      "name": "SimplexSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.linear.SimplexSolver",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "epsilon"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "epsilon"
        },
        "comment": "the amount of error to accept in floating point comparisons.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "doIteration(org.apache.commons.math.optimization.linear.SimplexTableau tableau)",
    "name": "doIteration",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.linear.SimplexSolver",
      "name": "SimplexSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.linear.SimplexSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.optimization.linear.SimplexTableau",
          "name": "SimplexTableau",
          "isArray": false
        },
        "name": "tableau"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.optimization.linear.SimplexTableau",
            "name": "SimplexTableau",
            "isArray": false
          },
          "name": "tableau"
        },
        "comment": "tableau is simple. simple tableau for the problem.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.optimization.OptimizationException",
          "name": "OptimizationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the maximal iteration count has been exceeded or if the model is found not to have a bounded solution.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "isOptimal(org.apache.commons.math.optimization.linear.SimplexTableau tableau)",
    "name": "isOptimal",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.linear.SimplexSolver",
      "name": "SimplexSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.linear.SimplexSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.optimization.linear.SimplexTableau",
          "name": "SimplexTableau",
          "isArray": false
        },
        "name": "tableau"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.optimization.linear.SimplexTableau",
            "name": "SimplexTableau",
            "isArray": false
          },
          "name": "tableau"
        },
        "comment": "tableau is simple. simple tableau for the problem.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the model has been solved., false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "solvePhase1(org.apache.commons.math.optimization.linear.SimplexTableau tableau)",
    "name": "solvePhase1",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.linear.SimplexSolver",
      "name": "SimplexSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.linear.SimplexSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.optimization.linear.SimplexTableau",
          "name": "SimplexTableau",
          "isArray": false
        },
        "name": "tableau"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.optimization.linear.SimplexTableau",
            "name": "SimplexTableau",
            "isArray": false
          },
          "name": "tableau"
        },
        "comment": "tableau is simple. simple tableau for the problem.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.optimization.OptimizationException",
          "name": "OptimizationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the maximal number of iterations is exceeded or if the problem is found not to have a bounded solution or if there is no feasible solution.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "doOptimize()",
    "name": "doOptimize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.linear.SimplexSolver",
      "name": "SimplexSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.linear.SimplexSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.optimization.RealPointValuePair",
      "name": "org.apache.commons.math.optimization.RealPointValuePair",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]