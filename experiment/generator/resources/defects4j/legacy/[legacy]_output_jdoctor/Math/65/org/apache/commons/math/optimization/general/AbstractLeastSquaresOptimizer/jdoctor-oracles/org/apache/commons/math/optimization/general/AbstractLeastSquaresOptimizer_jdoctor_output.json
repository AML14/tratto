[
  {
    "signature": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer()",
    "name": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setMaxIterations(int maxIterations)",
    "name": "setMaxIterations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxIterations"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getMaxIterations()",
    "name": "getMaxIterations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getIterations()",
    "name": "getIterations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setMaxEvaluations(int maxEvaluations)",
    "name": "setMaxEvaluations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxEvaluations"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getMaxEvaluations()",
    "name": "getMaxEvaluations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getEvaluations()",
    "name": "getEvaluations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getJacobianEvaluations()",
    "name": "getJacobianEvaluations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setConvergenceChecker(org.apache.commons.math.optimization.VectorialConvergenceChecker convergenceChecker)",
    "name": "setConvergenceChecker",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.optimization.VectorialConvergenceChecker",
          "name": "VectorialConvergenceChecker",
          "isArray": false
        },
        "name": "convergenceChecker"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getConvergenceChecker()",
    "name": "getConvergenceChecker",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.optimization.VectorialConvergenceChecker",
      "name": "org.apache.commons.math.optimization.VectorialConvergenceChecker",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "incrementIterationsCounter()",
    "name": "incrementIterationsCounter",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.optimization.OptimizationException",
          "name": "OptimizationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the maximal number of iterations is exceeded.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "updateJacobian()",
    "name": "updateJacobian",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.FunctionEvaluationException",
          "name": "FunctionEvaluationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the function jacobian cannot be evaluated or its dimension doesn't match problem dimension.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "updateResidualsAndCost()",
    "name": "updateResidualsAndCost",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.FunctionEvaluationException",
          "name": "FunctionEvaluationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the function cannot be evaluated or its dimension doesn't match problem dimension or maximal number of of evaluations is exceeded.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getRMS()",
    "name": "getRMS",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "RMS value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getChiSquare()",
    "name": "getChiSquare",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "chi-square value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getCovariances()",
    "name": "getCovariances",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[][]",
      "name": "double[][]",
      "isArray": true
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "covariance matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.FunctionEvaluationException",
          "name": "FunctionEvaluationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the function jacobian cannot be evaluated.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.optimization.OptimizationException",
          "name": "OptimizationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the covariance matrix cannot be computed (singular problem).",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "guessParametersErrors()",
    "name": "guessParametersErrors",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "errors in optimized parameters.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.FunctionEvaluationException",
          "name": "FunctionEvaluationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the function jacobian cannot b evaluated.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.optimization.OptimizationException",
          "name": "OptimizationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the covariances matrix cannot be computed or the number of degrees of freedom is not positive (number of measurements lesser or equal to number of parameters).",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "optimize(org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction f, double[] target, double[] weights, double[] startPoint)",
    "name": "optimize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.optimization.VectorialPointValuePair",
      "name": "org.apache.commons.math.optimization.VectorialPointValuePair",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction",
          "name": "DifferentiableMultivariateVectorialFunction",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "target"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "weights"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "startPoint"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "doOptimize()",
    "name": "doOptimize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.optimization.VectorialPointValuePair",
      "name": "org.apache.commons.math.optimization.VectorialPointValuePair",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the point/value pair giving the optimal value for objective function.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.FunctionEvaluationException",
          "name": "FunctionEvaluationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the objective function throws one during the search.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.optimization.OptimizationException",
          "name": "OptimizationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the algorithm failed to converge.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the start point dimension is wrong.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]