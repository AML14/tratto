--- org.apache.commons.math.analysis.BrentSolver_ESTest::test212
org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Initial guess is not in search interval.  Initial: 1.0E-6  Endpoints: [0.0,-1886.83536996]
	at org.apache.commons.math.analysis.BrentSolver.solve(BrentSolver.java:68)
	at org.apache.commons.math.analysis.BrentSolver_ESTest.test212(BrentSolver_ESTest.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)
--- org.apache.commons.math.analysis.BrentSolver_ESTest::test020
org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Polynomial coefficient array must have postive length.
	at org.apache.commons.math.analysis.PolynomialFunction.<init>(PolynomialFunction.java:57)
	at org.apache.commons.math.analysis.BrentSolver_ESTest.test020(BrentSolver_ESTest.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)
--- org.apache.commons.math.analysis.BrentSolver_ESTest::test031
org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException: Number of polynomial interpolants must match the number of segments.
	at org.apache.commons.math.analysis.PolynomialSplineFunction.<init>(PolynomialSplineFunction.java:104)
	at org.apache.commons.math.analysis.BrentSolver_ESTest.test031(BrentSolver_ESTest.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)
