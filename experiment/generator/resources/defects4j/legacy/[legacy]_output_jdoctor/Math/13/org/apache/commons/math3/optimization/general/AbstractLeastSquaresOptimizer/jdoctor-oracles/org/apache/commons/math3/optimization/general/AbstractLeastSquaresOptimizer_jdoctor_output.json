[
  {
    "signature": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer()",
    "name": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer(org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointVectorValuePair> checker)",
    "name": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.optimization.ConvergenceChecker",
          "name": "ConvergenceChecker",
          "isArray": false
        },
        "name": "checker"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.optimization.ConvergenceChecker",
            "name": "ConvergenceChecker",
            "isArray": false
          },
          "name": "checker"
        },
        "comment": "Convergence checker.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getJacobianEvaluations()",
    "name": "getJacobianEvaluations",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the number of evaluations of the Jacobian function.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "updateJacobian()",
    "name": "updateJacobian",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the Jacobian dimension does not match problem dimension.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "computeWeightedJacobian(double[] params)",
    "name": "computeWeightedJacobian",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "org.apache.commons.math3.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "params"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "params"
        },
        "comment": "Model parameters at which to compute the Jacobian.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the weighted Jacobian: W1/2 J.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the Jacobian dimension does not match problem dimension.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "updateResidualsAndCost()",
    "name": "updateResidualsAndCost",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the dimension does not match the problem dimension.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.TooManyEvaluationsException",
          "name": "TooManyEvaluationsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the maximal number of evaluations is exceeded.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "computeCost(double[] residuals)",
    "name": "computeCost",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "residuals"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "residuals"
        },
        "comment": "Residuals.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the cost.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getRMS()",
    "name": "getRMS",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "RMS value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getChiSquare()",
    "name": "getChiSquare",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "chi-square value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getWeightSquareRoot()",
    "name": "getWeightSquareRoot",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.linear.RealMatrix",
      "name": "org.apache.commons.math3.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the square-root of the weight matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setCost(double cost)",
    "name": "setCost",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "cost"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "cost"
        },
        "comment": "Cost value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getCovariances()",
    "name": "getCovariances",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[][]",
      "name": "double[][]",
      "isArray": true
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the covariance matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.linear.SingularMatrixException",
          "name": "SingularMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the covariance matrix cannot be computed (singular problem).",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getCovariances(double threshold)",
    "name": "getCovariances",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[][]",
      "name": "double[][]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "threshold"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "threshold"
        },
        "comment": "Singularity threshold.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the covariance matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.linear.SingularMatrixException",
          "name": "SingularMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the covariance matrix cannot be computed (singular problem).",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "computeCovariances(double[] params, double threshold)",
    "name": "computeCovariances",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[][]",
      "name": "double[][]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "params"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "threshold"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "params"
        },
        "comment": "Model parameters.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "threshold"
        },
        "comment": "Singularity threshold.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the covariance matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.linear.SingularMatrixException",
          "name": "SingularMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the covariance matrix cannot be computed (singular problem).",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "guessParametersErrors()",
    "name": "guessParametersErrors",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "an estimate of the standard deviation of the optimized parameters.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.linear.SingularMatrixException",
          "name": "SingularMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the covariance matrix cannot be computed.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.NumberIsTooSmallException",
          "name": "NumberIsTooSmallException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the number of degrees of freedom is not positive i.e. the number of measurements is less or equal to the number of parameters.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "computeSigma(double[] params, double covarianceSingularityThreshold)",
    "name": "computeSigma",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "params"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "covarianceSingularityThreshold"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "params"
        },
        "comment": "Model parameters.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "covarianceSingularityThreshold"
        },
        "comment": "Singularity threshold (see computeCovariances(double[] double) computeCovariances).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an estimate of the standard deviation of the optimized parameters.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.linear.SingularMatrixException",
          "name": "SingularMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the covariance matrix cannot be computed.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "optimize(int maxEval, org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction f, double[] target, double[] weights, double[] startPoint)",
    "name": "optimize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.optimization.PointVectorValuePair",
      "name": "org.apache.commons.math3.optimization.PointVectorValuePair",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxEval"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction",
          "name": "DifferentiableMultivariateVectorFunction",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "target"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "weights"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "startPoint"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "optimize(int maxEval, org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction f, double[] target, double[] weights, double[] startPoint)",
    "name": "optimize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.optimization.PointVectorValuePair",
      "name": "org.apache.commons.math3.optimization.PointVectorValuePair",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxEval"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction",
          "name": "MultivariateDifferentiableVectorFunction",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "target"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "weights"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "startPoint"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction",
            "name": "MultivariateDifferentiableVectorFunction",
            "isArray": false
          },
          "name": "f"
        },
        "comment": "Objective function.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "target"
        },
        "comment": "Target value for the objective functions at optimum.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "weights"
        },
        "comment": "Weights for the least squares cost computation.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "startPoint"
        },
        "comment": "Start point for optimization.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxEval"
        },
        "comment": "maxEval is Maximum. Maximum number of function evaluations.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the point/value pair giving the optimal value for objective function.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the start point dimension is wrong.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.TooManyEvaluationsException",
          "name": "TooManyEvaluationsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the maximal number of evaluations is exceeded.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any argument is null.",
        "kind": "THROWS",
        "condition": "args[1]==null || args[2]==null || args[3]==null || args[4]==null"
      }
    ]
  },
  {
    "signature": "optimizeInternal(int maxEval, org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction f, org.apache.commons.math3.optimization.OptimizationData... optData)",
    "name": "optimizeInternal",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.optimization.PointVectorValuePair",
      "name": "org.apache.commons.math3.optimization.PointVectorValuePair",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxEval"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction",
          "name": "MultivariateDifferentiableVectorFunction",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "[Lorg.apache.commons.math3.optimization.OptimizationData;",
          "name": "OptimizationData[]",
          "isArray": true
        },
        "name": "optData"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxEval"
        },
        "comment": "maxEval is Allowed. Allowed number of evaluations of the objective function.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction",
            "name": "MultivariateDifferentiableVectorFunction",
            "isArray": false
          },
          "name": "f"
        },
        "comment": "Objective function.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Lorg.apache.commons.math3.optimization.OptimizationData;",
            "name": "OptimizationData[]",
            "isArray": true
          },
          "name": "optData"
        },
        "comment": "Optimization data. The following data . optData is looked for: Target Weight InitialGuess.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the point/value pair giving the optimal value of the objective function.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.TooManyEvaluationsException",
          "name": "TooManyEvaluationsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the maximal number of evaluations is exceeded.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the target and weight arguments have inconsistent dimensions.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setUp()",
    "name": "setUp",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "computeResiduals(double[] objectiveValue)",
    "name": "computeResiduals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
      "name": "AbstractLeastSquaresOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "objectiveValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "objectiveValue"
        },
        "comment": "Value of the the objective function. This is the value returned from a call to computeObjectiveValue(double[]) computeObjectiveValue (whose array argument contains the model parameters).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the residuals.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.DimensionMismatchException",
          "name": "DimensionMismatchException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "params has a wrong length.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]