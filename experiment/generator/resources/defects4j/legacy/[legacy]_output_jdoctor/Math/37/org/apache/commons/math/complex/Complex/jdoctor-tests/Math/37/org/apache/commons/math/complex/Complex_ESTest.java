/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 14:18:04 GMT 2023
 */
package org.apache.commons.math.complex;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.complex.Complex;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class Complex_ESTest extends Complex_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test060() throws Throwable {
        Complex complex0 = Complex.INF;
        Object object0 = complex0.readResolve();
        complex0.equals(object0);
        Complex complex1 = complex0.conjugate();
        Complex complex2 = complex1.ONE.log();
        Complex complex3 = complex2.pow(1.5129516124725342);
        Complex complex4 = complex2.reciprocal();
        complex4.I.hashCode();
        Complex complex5 = complex1.atan();
        Complex complex6 = Complex.ONE;
        complex0.add(complex6);
        Complex complex7 = complex0.I.reciprocal();
        complex1.divide(complex4);
        Complex complex8 = complex1.divide(1.5129516124725342);
        complex2.divide(1.5129516124725342);
        complex4.cosh();
        complex8.sinh();
        complex2.subtract(complex5);
        org.apache.commons.math.complex.Complex default0;
        if ((Complex) null == null) {
            try {
                default0 = complex3.pow((Complex) null);
                fail();
            } catch (org.apache.commons.math.exception.NullArgumentException e) {
                // Successfully thrown exception
            }
        } else {
            default0 = complex3.pow((Complex) null);
        }
        complex7.log();
        complex1.negate();
    }

    @Test(timeout = 4000)
    public void test221() throws Throwable {
        Complex complex0 = Complex.NaN;
        Complex complex1 = complex0.sqrt1z();
        Complex complex2 = complex1.NaN.cos();
        Complex complex3 = complex1.atan();
        complex3.ONE.conjugate();
        complex1.NaN.toString();
        Complex complex4 = complex0.createComplex(0.0, 0.0);
        complex4.NaN.abs();
        complex0.NaN.abs();
        complex0.INF.createComplex(0.0, 0.0);
        complex4.readResolve();
        complex1.ONE.sqrt();
        Complex complex5 = complex0.tan();
        complex5.I.atan();
        complex5.multiply(complex2);
        complex1.NaN.toString();
        java.util.List default1;
        if ((-3728) <= 0) {
            try {
                default1 = complex0.nthRoot((-3728));
                fail();
            } catch (org.apache.commons.math.exception.NotPositiveException e) {
                // Successfully thrown exception
            }
        } else {
            default1 = complex0.nthRoot((-3728));
        }
        complex3.tanh();
        complex1.getImaginary();
    }

    @Test(timeout = 4000)
    public void test882() throws Throwable {
        double double0 = 0.0;
        Complex complex0 = new Complex(0.0);
        Complex complex1 = complex0.INF.negate();
        Complex complex2 = complex1.conjugate();
        Complex complex3 = complex2.INF.pow(complex0);
        Complex complex4 = complex1.divide(0.0);
        complex4.NaN.getField();
        Complex complex5 = complex3.INF.sqrt();
        Complex complex6 = complex3.I.add(Double.NaN);
        complex6.I.toString();
        complex2.tan();
        java.util.List default2;
        if ((-725) <= 0) {
            try {
                default2 = complex0.nthRoot((-725));
                fail();
            } catch (org.apache.commons.math.exception.NotPositiveException e) {
                // Successfully thrown exception
            }
        } else {
            default2 = complex0.nthRoot((-725));
        }
        complex3.cos();
        complex5.asin();
    }
}
