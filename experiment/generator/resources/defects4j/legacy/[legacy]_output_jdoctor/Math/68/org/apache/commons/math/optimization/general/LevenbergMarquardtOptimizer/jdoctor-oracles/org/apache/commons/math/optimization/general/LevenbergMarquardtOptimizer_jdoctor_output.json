[
  {
    "signature": "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer()",
    "name": "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setInitialStepBoundFactor(double initialStepBoundFactor)",
    "name": "setInitialStepBoundFactor",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "initialStepBoundFactor"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "initialStepBoundFactor"
        },
        "comment": "initialStepBoundFactor is initial. initial step bound factor.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setCostRelativeTolerance(double costRelativeTolerance)",
    "name": "setCostRelativeTolerance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "costRelativeTolerance"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "costRelativeTolerance"
        },
        "comment": "desired relative error in the sum of squares.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setParRelativeTolerance(double parRelativeTolerance)",
    "name": "setParRelativeTolerance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "parRelativeTolerance"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "parRelativeTolerance"
        },
        "comment": "desired relative error in the approximate solution parameters.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setOrthoTolerance(double orthoTolerance)",
    "name": "setOrthoTolerance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "orthoTolerance"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "orthoTolerance"
        },
        "comment": "desired max cosine on the orthogonality between the function vector and the columns of the jacobian.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "doOptimize()",
    "name": "doOptimize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.optimization.VectorialPointValuePair",
      "name": "org.apache.commons.math.optimization.VectorialPointValuePair",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]