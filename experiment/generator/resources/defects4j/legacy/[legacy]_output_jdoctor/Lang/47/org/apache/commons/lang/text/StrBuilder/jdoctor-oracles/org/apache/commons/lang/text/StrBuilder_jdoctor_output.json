[
  {
    "signature": "org.apache.commons.lang.text.StrBuilder()",
    "name": "org.apache.commons.lang.text.StrBuilder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.lang.text.StrBuilder(int initialCapacity)",
    "name": "org.apache.commons.lang.text.StrBuilder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "initialCapacity"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "initialCapacity"
        },
        "comment": "the initial capacity zero or less . initialCapacity is converted to 32.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.lang.text.StrBuilder(java.lang.String str)",
    "name": "org.apache.commons.lang.text.StrBuilder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to copy. str is null treated as blank string.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getNewLineText()",
    "name": "getNewLineText",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the new line text, null means use system default.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setNewLineText(java.lang.String newLine)",
    "name": "setNewLineText",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "newLine"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "newLine"
        },
        "comment": "the new line text. newLine is null means use system default.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNullText()",
    "name": "getNullText",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the null text, null means no append.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setNullText(java.lang.String nullText)",
    "name": "setNullText",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "nullText"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "nullText"
        },
        "comment": "the null text. nullText is null means no append.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "length()",
    "name": "length",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the length.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setLength(int length)",
    "name": "setLength",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the length to set to. length is zero or positive.",
        "kind": "PARAM",
        "condition": "args[0]==0 || args[0]>0"
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the length is negative.",
        "kind": "THROWS",
        "condition": "args[0]<0"
      }
    ]
  },
  {
    "signature": "capacity()",
    "name": "capacity",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the capacity.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "ensureCapacity(int capacity)",
    "name": "ensureCapacity",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "capacity"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "capacity"
        },
        "comment": "the capacity to ensure.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "minimizeCapacity()",
    "name": "minimizeCapacity",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the length.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isEmpty()",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if the size is 0.",
      "kind": "RETURN",
      "condition": "receiverObjectID.size()==0 ? methodResultID == true : methodResultID == false"
    },
    "throwsTags": []
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "charAt(int index)",
    "name": "charAt",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char",
      "name": "char",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to retrieve. index is valid.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the character at the index.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setCharAt(int index, char ch)",
    "name": "setCharAt",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "ch"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "ch"
        },
        "comment": "ch is new. new character.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "deleteCharAt(int index)",
    "name": "deleteCharAt",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to delete.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toCharArray()",
    "name": "toCharArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char[]",
      "name": "char[]",
      "isArray": true
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a new array that represents the contents of the builder.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toCharArray(int startIndex, int endIndex)",
    "name": "toCharArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char[]",
      "name": "char[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the start index inclusive. startIndex is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endIndex"
        },
        "comment": "the end index exclusive. endIndex is valid except that if too large end is treated as end of string.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new array that holds part of the contents of the builder.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "startIndex is invalid or if endIndex is invalid (but endIndex greater than size is valid).",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getChars(char[] destination)",
    "name": "getChars",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char[]",
      "name": "char[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "destination"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[C",
            "name": "char[]",
            "isArray": true
          },
          "name": "destination"
        },
        "comment": "the destination array. destination is null will cause an array to be created.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "returnTag": {
      "comment": "the input array, unless that was null or too small.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getChars(int startIndex, int endIndex, char[] destination, int destinationIndex)",
    "name": "getChars",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endIndex"
      },
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "destination"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "destinationIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "first index to copy inclusive. startIndex is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endIndex"
        },
        "comment": "last index exclusive. endIndex is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[C",
            "name": "char[]",
            "isArray": true
          },
          "name": "destination"
        },
        "comment": "the destination array. destination is not null or too small.",
        "kind": "PARAM",
        "condition": "(args[2]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "destinationIndex"
        },
        "comment": "the index to start copying in destination.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the array is null.",
        "kind": "THROWS",
        "condition": "args[2]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "appendNewLine()",
    "name": "appendNewLine",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendNull()",
    "name": "appendNull",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(java.lang.Object obj)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "the object to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(java.lang.String str)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(java.lang.String str, int startIndex, int length)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to append.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the start index inclusive. startIndex is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the length to append. length is valid.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(java.lang.StringBuffer str)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.StringBuffer",
          "name": "StringBuffer",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.StringBuffer",
            "name": "StringBuffer",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string buffer to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(java.lang.StringBuffer str, int startIndex, int length)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.StringBuffer",
          "name": "StringBuffer",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.StringBuffer",
            "name": "StringBuffer",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to append.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the start index inclusive. startIndex is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the length to append. length is valid.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(org.apache.commons.lang.text.StrBuilder str)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
          "name": "StrBuilder",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
            "name": "StrBuilder",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string builder to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(org.apache.commons.lang.text.StrBuilder str, int startIndex, int length)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
          "name": "StrBuilder",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
            "name": "StrBuilder",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to append.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the start index inclusive. startIndex is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the length to append. length is valid.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(char[] chars)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "chars"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[C",
            "name": "char[]",
            "isArray": true
          },
          "name": "chars"
        },
        "comment": "the char array to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(char[] chars, int startIndex, int length)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "chars"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[C",
            "name": "char[]",
            "isArray": true
          },
          "name": "chars"
        },
        "comment": "the char array to append.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the start index inclusive. startIndex is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the length to append. length is valid.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(boolean value)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(char ch)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "ch"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "ch"
        },
        "comment": "the value to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(int value)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(long value)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(float value)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(double value)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendln(java.lang.Object obj)",
    "name": "appendln",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "the object to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendln(java.lang.String str)",
    "name": "appendln",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendln(java.lang.String str, int startIndex, int length)",
    "name": "appendln",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to append.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the start index inclusive. startIndex is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the length to append. length is valid.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendln(java.lang.StringBuffer str)",
    "name": "appendln",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.StringBuffer",
          "name": "StringBuffer",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.StringBuffer",
            "name": "StringBuffer",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string buffer to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendln(java.lang.StringBuffer str, int startIndex, int length)",
    "name": "appendln",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.StringBuffer",
          "name": "StringBuffer",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.StringBuffer",
            "name": "StringBuffer",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to append.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the start index inclusive. startIndex is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the length to append. length is valid.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendln(org.apache.commons.lang.text.StrBuilder str)",
    "name": "appendln",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
          "name": "StrBuilder",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
            "name": "StrBuilder",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string builder to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendln(org.apache.commons.lang.text.StrBuilder str, int startIndex, int length)",
    "name": "appendln",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
          "name": "StrBuilder",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
            "name": "StrBuilder",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to append.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the start index inclusive. startIndex is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the length to append. length is valid.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendln(char[] chars)",
    "name": "appendln",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "chars"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[C",
            "name": "char[]",
            "isArray": true
          },
          "name": "chars"
        },
        "comment": "the char array to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendln(char[] chars, int startIndex, int length)",
    "name": "appendln",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "chars"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[C",
            "name": "char[]",
            "isArray": true
          },
          "name": "chars"
        },
        "comment": "the char array to append.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the start index inclusive. startIndex is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the length to append. length is valid.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendln(boolean value)",
    "name": "appendln",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendln(char ch)",
    "name": "appendln",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "ch"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "ch"
        },
        "comment": "the value to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendln(int value)",
    "name": "appendln",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendln(long value)",
    "name": "appendln",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendln(float value)",
    "name": "appendln",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendln(double value)",
    "name": "appendln",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendAll(java.lang.Object[] array)",
    "name": "appendAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.Object;",
            "name": "Object[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "the array to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendAll(java.util.Collection coll)",
    "name": "appendAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "coll"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "coll"
        },
        "comment": "the collection to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendAll(java.util.Iterator it)",
    "name": "appendAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "it"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "it"
        },
        "comment": "the iterator to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendWithSeparators(java.lang.Object[] array, java.lang.String separator)",
    "name": "appendWithSeparators",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "separator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.Object;",
            "name": "Object[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "the array to append.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "separator"
        },
        "comment": "the separator to use. separator is null means no separator.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendWithSeparators(java.util.Collection coll, java.lang.String separator)",
    "name": "appendWithSeparators",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "coll"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "separator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "coll"
        },
        "comment": "the collection to append.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "separator"
        },
        "comment": "the separator to use. separator is null means no separator.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendWithSeparators(java.util.Iterator it, java.lang.String separator)",
    "name": "appendWithSeparators",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "it"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "separator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "it"
        },
        "comment": "the iterator to append.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "separator"
        },
        "comment": "the separator to use. separator is null means no separator.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendSeparator(java.lang.String separator)",
    "name": "appendSeparator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "separator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "separator"
        },
        "comment": "the separator to use. separator is null means no separator.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendSeparator(char separator)",
    "name": "appendSeparator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "separator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "separator"
        },
        "comment": "the separator to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendSeparator(java.lang.String separator, int loopIndex)",
    "name": "appendSeparator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "separator"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "loopIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "separator"
        },
        "comment": "the separator to use. separator is null means no separator.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "loopIndex"
        },
        "comment": "loopIndex is loop. loop index.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendSeparator(char separator, int loopIndex)",
    "name": "appendSeparator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "separator"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "loopIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "separator"
        },
        "comment": "the separator to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "loopIndex"
        },
        "comment": "loopIndex is loop. loop index.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendPadding(int length, char padChar)",
    "name": "appendPadding",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      },
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "padChar"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the length to append. length is negative means no append.",
        "kind": "PARAM",
        "condition": "args[0]<0"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "padChar"
        },
        "comment": "the character to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendFixedWidthPadLeft(java.lang.Object obj, int width, char padChar)",
    "name": "appendFixedWidthPadLeft",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "width"
      },
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "padChar"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "the object to append. obj is null uses null text.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "width"
        },
        "comment": "the fixed field width. width is zero or negative has no effect.",
        "kind": "PARAM",
        "condition": "args[1]==0"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "padChar"
        },
        "comment": "the pad character to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendFixedWidthPadLeft(int value, int width, char padChar)",
    "name": "appendFixedWidthPadLeft",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "width"
      },
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "padChar"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to append.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "width"
        },
        "comment": "the fixed field width. width is zero or negative has no effect.",
        "kind": "PARAM",
        "condition": "args[1]==0"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "padChar"
        },
        "comment": "the pad character to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendFixedWidthPadRight(java.lang.Object obj, int width, char padChar)",
    "name": "appendFixedWidthPadRight",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "width"
      },
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "padChar"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "the object to append. obj is null uses null text.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "width"
        },
        "comment": "the fixed field width. width is zero or negative has no effect.",
        "kind": "PARAM",
        "condition": "args[1]==0"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "padChar"
        },
        "comment": "the pad character to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendFixedWidthPadRight(int value, int width, char padChar)",
    "name": "appendFixedWidthPadRight",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "width"
      },
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "padChar"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to append.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "width"
        },
        "comment": "the fixed field width. width is zero or negative has no effect.",
        "kind": "PARAM",
        "condition": "args[1]==0"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "padChar"
        },
        "comment": "the pad character to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "insert(int index, java.lang.Object obj)",
    "name": "insert",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to add at. index is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "the object to insert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "insert(int index, java.lang.String str)",
    "name": "insert",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to add at. index is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to insert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "insert(int index, char[] chars)",
    "name": "insert",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "chars"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to add at. index is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[C",
            "name": "char[]",
            "isArray": true
          },
          "name": "chars"
        },
        "comment": "the char array to insert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "insert(int index, char[] chars, int offset, int length)",
    "name": "insert",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "chars"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to add at. index is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[C",
            "name": "char[]",
            "isArray": true
          },
          "name": "chars"
        },
        "comment": "the char array to insert.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "the offset into the character array to start at. offset is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the length of the character array part to copy. length is positive.",
        "kind": "PARAM",
        "condition": "args[3]>0"
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "insert(int index, boolean value)",
    "name": "insert",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to add at. index is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to insert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "insert(int index, char value)",
    "name": "insert",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to add at. index is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to insert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "insert(int index, int value)",
    "name": "insert",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to add at. index is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to insert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "insert(int index, long value)",
    "name": "insert",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to add at. index is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to insert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "insert(int index, float value)",
    "name": "insert",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to add at. index is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to insert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "insert(int index, double value)",
    "name": "insert",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to add at. index is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to insert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "delete(int startIndex, int endIndex)",
    "name": "delete",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the start index inclusive. startIndex is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endIndex"
        },
        "comment": "the end index exclusive. endIndex is valid except that if too large end is treated as end of string.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "deleteAll(char ch)",
    "name": "deleteAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "ch"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "ch"
        },
        "comment": "the character to delete.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "deleteFirst(char ch)",
    "name": "deleteFirst",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "ch"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "ch"
        },
        "comment": "the character to delete.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "deleteAll(java.lang.String str)",
    "name": "deleteAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to delete. str is null causes no action.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "deleteFirst(java.lang.String str)",
    "name": "deleteFirst",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to delete. str is null causes no action.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "deleteAll(org.apache.commons.lang.text.StrMatcher matcher)",
    "name": "deleteAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
          "name": "StrMatcher",
          "isArray": false
        },
        "name": "matcher"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
            "name": "StrMatcher",
            "isArray": false
          },
          "name": "matcher"
        },
        "comment": "the matcher to use to find the deletion. matcher is null causes no action.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "deleteFirst(org.apache.commons.lang.text.StrMatcher matcher)",
    "name": "deleteFirst",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
          "name": "StrMatcher",
          "isArray": false
        },
        "name": "matcher"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
            "name": "StrMatcher",
            "isArray": false
          },
          "name": "matcher"
        },
        "comment": "the matcher to use to find the deletion. matcher is null causes no action.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "replace(int startIndex, int endIndex, java.lang.String replaceStr)",
    "name": "replace",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endIndex"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "replaceStr"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the start index inclusive. startIndex is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endIndex"
        },
        "comment": "the end index exclusive. endIndex is valid except that if too large end is treated as end of string.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "replaceStr"
        },
        "comment": "the string to replace with. replaceStr is null means delete range.",
        "kind": "PARAM",
        "condition": "args[2]==null"
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "replaceAll(char search, char replace)",
    "name": "replaceAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "search"
      },
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "replace"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "search"
        },
        "comment": "the search character.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "replace"
        },
        "comment": "the replace character.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "replaceFirst(char search, char replace)",
    "name": "replaceFirst",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "search"
      },
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "replace"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "search"
        },
        "comment": "the search character.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "replace"
        },
        "comment": "the replace character.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "replaceAll(java.lang.String searchStr, java.lang.String replaceStr)",
    "name": "replaceAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "searchStr"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "replaceStr"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "searchStr"
        },
        "comment": "the search string. searchStr is null causes no action to occur.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "replaceStr"
        },
        "comment": "the replace string. replaceStr is null is equivalent to an empty string.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "replaceFirst(java.lang.String searchStr, java.lang.String replaceStr)",
    "name": "replaceFirst",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "searchStr"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "replaceStr"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "searchStr"
        },
        "comment": "the search string. searchStr is null causes no action to occur.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "replaceStr"
        },
        "comment": "the replace string. replaceStr is null is equivalent to an empty string.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "replaceAll(org.apache.commons.lang.text.StrMatcher matcher, java.lang.String replaceStr)",
    "name": "replaceAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
          "name": "StrMatcher",
          "isArray": false
        },
        "name": "matcher"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "replaceStr"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
            "name": "StrMatcher",
            "isArray": false
          },
          "name": "matcher"
        },
        "comment": "the matcher to use to find the deletion. matcher is null causes no action.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "replaceStr"
        },
        "comment": "the replace string. replaceStr is null is equivalent to an empty string.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "replaceFirst(org.apache.commons.lang.text.StrMatcher matcher, java.lang.String replaceStr)",
    "name": "replaceFirst",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
          "name": "StrMatcher",
          "isArray": false
        },
        "name": "matcher"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "replaceStr"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
            "name": "StrMatcher",
            "isArray": false
          },
          "name": "matcher"
        },
        "comment": "the matcher to use to find the deletion. matcher is null causes no action.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "replaceStr"
        },
        "comment": "the replace string. replaceStr is null is equivalent to an empty string.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "replace(org.apache.commons.lang.text.StrMatcher matcher, java.lang.String replaceStr, int startIndex, int endIndex, int replaceCount)",
    "name": "replace",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
          "name": "StrMatcher",
          "isArray": false
        },
        "name": "matcher"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "replaceStr"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "replaceCount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
            "name": "StrMatcher",
            "isArray": false
          },
          "name": "matcher"
        },
        "comment": "the matcher to use to find the deletion. matcher is null causes no action.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "replaceStr"
        },
        "comment": "the string to replace the match with. replaceStr is null is a delete.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the start index inclusive. startIndex is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endIndex"
        },
        "comment": "the end index exclusive. endIndex is valid except that if too large end is treated as end of string.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "replaceCount"
        },
        "comment": "the number of times to replace -1 for replace all.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "start index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "reverse()",
    "name": "reverse",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "trim()",
    "name": "trim",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "org.apache.commons.lang.text.StrBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this, to enable chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "startsWith(java.lang.String str)",
    "name": "startsWith",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to search for. str is null returns false.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the builder starts with the string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "endsWith(java.lang.String str)",
    "name": "endsWith",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to search for. str is null returns false.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the builder ends with the string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "substring(int start)",
    "name": "substring",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the start index inclusive. start is valid.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "substring(int startIndex, int endIndex)",
    "name": "substring",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the start index inclusive. startIndex is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endIndex"
        },
        "comment": "the end index exclusive. endIndex is valid except that if too large end is treated as end of string.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "leftString(int length)",
    "name": "leftString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the number of characters to extract. length is negative returns empty string.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "rightString(int length)",
    "name": "rightString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the number of characters to extract. length is negative returns empty string.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "midString(int index, int length)",
    "name": "midString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to start at. index is negative means zero.",
        "kind": "PARAM",
        "condition": "args[0]<0"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the number of characters to extract. length is negative returns empty string.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "contains(char ch)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "ch"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "ch"
        },
        "comment": "the character to find.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the builder contains the character.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "contains(java.lang.String str)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to find.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the builder contains the string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "contains(org.apache.commons.lang.text.StrMatcher matcher)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
          "name": "StrMatcher",
          "isArray": false
        },
        "name": "matcher"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
            "name": "StrMatcher",
            "isArray": false
          },
          "name": "matcher"
        },
        "comment": "the matcher to use. matcher is null returns -1.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the matcher finds a match in the builder.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(char ch)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "ch"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "ch"
        },
        "comment": "the character to find.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index of the character, or -1 if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(char ch, int startIndex)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "ch"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "ch"
        },
        "comment": "the character to find.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the index to start at. startIndex is invalid index rounded to edge.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index of the character, or -1 if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(java.lang.String str)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to find. str is null returns -1.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index of the string, or -1 if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(java.lang.String str, int startIndex)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to find. str is null returns -1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the index to start at. startIndex is invalid index rounded to edge.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index of the string, or -1 if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(org.apache.commons.lang.text.StrMatcher matcher)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
          "name": "StrMatcher",
          "isArray": false
        },
        "name": "matcher"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
            "name": "StrMatcher",
            "isArray": false
          },
          "name": "matcher"
        },
        "comment": "the matcher to use. matcher is null returns -1.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index matched, or -1 if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "indexOf(org.apache.commons.lang.text.StrMatcher matcher, int startIndex)",
    "name": "indexOf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
          "name": "StrMatcher",
          "isArray": false
        },
        "name": "matcher"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
            "name": "StrMatcher",
            "isArray": false
          },
          "name": "matcher"
        },
        "comment": "the matcher to use. matcher is null returns -1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the index to start at. startIndex is invalid index rounded to edge.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first index matched, or -1 if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "lastIndexOf(char ch)",
    "name": "lastIndexOf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "ch"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "ch"
        },
        "comment": "the character to find.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the last index of the character, or -1 if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "lastIndexOf(char ch, int startIndex)",
    "name": "lastIndexOf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "ch"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "ch"
        },
        "comment": "the character to find.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the index to start at. startIndex is invalid index rounded to edge.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the last index of the character, or -1 if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "lastIndexOf(java.lang.String str)",
    "name": "lastIndexOf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to find. str is null returns -1.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the last index of the string, or -1 if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "lastIndexOf(java.lang.String str, int startIndex)",
    "name": "lastIndexOf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to find. str is null returns -1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the index to start at. startIndex is invalid index rounded to edge.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the last index of the string, or -1 if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "lastIndexOf(org.apache.commons.lang.text.StrMatcher matcher)",
    "name": "lastIndexOf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
          "name": "StrMatcher",
          "isArray": false
        },
        "name": "matcher"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
            "name": "StrMatcher",
            "isArray": false
          },
          "name": "matcher"
        },
        "comment": "the matcher to use. matcher is null returns -1.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the last index matched, or -1 if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "lastIndexOf(org.apache.commons.lang.text.StrMatcher matcher, int startIndex)",
    "name": "lastIndexOf",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
          "name": "StrMatcher",
          "isArray": false
        },
        "name": "matcher"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.text.StrMatcher",
            "name": "StrMatcher",
            "isArray": false
          },
          "name": "matcher"
        },
        "comment": "the matcher to use. matcher is null returns -1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the index to start at. startIndex is invalid index rounded to edge.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the last index matched, or -1 if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "asTokenizer()",
    "name": "asTokenizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.text.StrTokenizer",
      "name": "org.apache.commons.lang.text.StrTokenizer",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a tokenizer that is linked to this builder.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "asReader()",
    "name": "asReader",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.io.Reader",
      "name": "java.io.Reader",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a reader that reads from this builder.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "asWriter()",
    "name": "asWriter",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.io.Writer",
      "name": "java.io.Writer",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a writer that populates this builder.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "equalsIgnoreCase(org.apache.commons.lang.text.StrBuilder other)",
    "name": "equalsIgnoreCase",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
          "name": "StrBuilder",
          "isArray": false
        },
        "name": "other"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
            "name": "StrBuilder",
            "isArray": false
          },
          "name": "other"
        },
        "comment": "the object to check. other is null returns false.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the builders contain the same characters in the same order.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "equals(org.apache.commons.lang.text.StrBuilder other)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
          "name": "StrBuilder",
          "isArray": false
        },
        "name": "other"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
            "name": "StrBuilder",
            "isArray": false
          },
          "name": "other"
        },
        "comment": "the object to check. other is null returns false.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the builders contain the same characters in the same order.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object obj)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "the object to check. obj is null returns false.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the builders contain the same characters in the same order.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a hash code.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the builder as a String.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toStringBuffer()",
    "name": "toStringBuffer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.StringBuffer",
      "name": "java.lang.StringBuffer",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the builder as a StringBuffer.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "validateRange(int startIndex, int endIndex)",
    "name": "validateRange",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "startIndex"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "endIndex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "startIndex"
        },
        "comment": "the start index inclusive. startIndex is valid.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "endIndex"
        },
        "comment": "the end index exclusive. endIndex is valid except that if too large end is treated as end of string.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "validateIndex(int index)",
    "name": "validateIndex",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.text.StrBuilder",
      "name": "StrBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.text.StrBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index. index is valid.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]