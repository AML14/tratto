[
  {
    "signature": "org.apache.commons.lang.builder.EqualsBuilder()",
    "name": "org.apache.commons.lang.builder.EqualsBuilder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "reflectionEquals(java.lang.Object lhs, java.lang.Object rhs)",
    "name": "reflectionEquals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "this object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "rhs is other. other object.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the two Objects have tested equals.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "reflectionEquals(java.lang.Object lhs, java.lang.Object rhs, java.util.Collection excludeFields)",
    "name": "reflectionEquals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rhs"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "excludeFields"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "this object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "rhs is other. other object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "excludeFields"
        },
        "comment": "Collection of String field names to exclude from testing.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the two Objects have tested equals.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "reflectionEquals(java.lang.Object lhs, java.lang.Object rhs, java.lang.String[] excludeFields)",
    "name": "reflectionEquals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rhs"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "excludeFields"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "this object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "rhs is other. other object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.String;",
            "name": "String[]",
            "isArray": true
          },
          "name": "excludeFields"
        },
        "comment": "array of field names to exclude from testing.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the two Objects have tested equals.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "reflectionEquals(java.lang.Object lhs, java.lang.Object rhs, boolean testTransients)",
    "name": "reflectionEquals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rhs"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "testTransients"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "this object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "rhs is other. other object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "testTransients"
        },
        "comment": "whether to include transient fields.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the two Objects have tested equals.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "reflectionEquals(java.lang.Object lhs, java.lang.Object rhs, boolean testTransients, java.lang.Class reflectUpToClass)",
    "name": "reflectionEquals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rhs"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "testTransients"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "reflectUpToClass"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "this object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "rhs is other. other object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "testTransients"
        },
        "comment": "whether to include transient fields.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "reflectUpToClass"
        },
        "comment": "the superclass to reflect up to (inclusive) null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the two Objects have tested equals.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "reflectionEquals(java.lang.Object lhs, java.lang.Object rhs, boolean testTransients, java.lang.Class reflectUpToClass, java.lang.String[] excludeFields)",
    "name": "reflectionEquals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rhs"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "testTransients"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "reflectUpToClass"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "excludeFields"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "this object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "rhs is other. other object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "testTransients"
        },
        "comment": "whether to include transient fields.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "reflectUpToClass"
        },
        "comment": "the superclass to reflect up to (inclusive) null.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.String;",
            "name": "String[]",
            "isArray": true
          },
          "name": "excludeFields"
        },
        "comment": "array of field names to exclude from testing.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the two Objects have tested equals.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendSuper(boolean superEquals)",
    "name": "appendSuper",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "superEquals"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "superEquals"
        },
        "comment": "the result of calling super.equals().",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(java.lang.Object lhs, java.lang.Object rhs)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "lhs is left. left hand object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "rhs is right. right hand object.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(long lhs, long rhs)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "lhs is left. left hand long.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "the right hand long.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(int lhs, int rhs)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "lhs is left. left hand int.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "rhs is right. right hand int.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(short lhs, short rhs)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "short",
          "name": "short",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "short",
          "name": "short",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "short",
            "name": "short",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "lhs is left. left hand short.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "short",
            "name": "short",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "the right hand short.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(char lhs, char rhs)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "lhs is left. left hand char.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "rhs is right. right hand char.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(byte lhs, byte rhs)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "byte",
          "name": "byte",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "byte",
          "name": "byte",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "lhs is left. left hand byte.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "rhs is right. right hand byte.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(double lhs, double rhs)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "lhs is left. left hand double.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "rhs is right. right hand double.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(float lhs, float rhs)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "lhs is left. left hand float.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "rhs is right. right hand float.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(boolean lhs, boolean rhs)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "lhs is left. left hand boolean.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "rhs is right. right hand boolean.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(java.lang.Object[] lhs, java.lang.Object[] rhs)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.Object;",
            "name": "Object[]",
            "isArray": true
          },
          "name": "lhs"
        },
        "comment": "lhs is left. left hand Object[].",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.Object;",
            "name": "Object[]",
            "isArray": true
          },
          "name": "rhs"
        },
        "comment": "rhs is right. right hand Object[].",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(long[] lhs, long[] rhs)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[J",
          "name": "long[]",
          "isArray": true
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "[J",
          "name": "long[]",
          "isArray": true
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[J",
            "name": "long[]",
            "isArray": true
          },
          "name": "lhs"
        },
        "comment": "lhs is left. left hand long[].",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[J",
            "name": "long[]",
            "isArray": true
          },
          "name": "rhs"
        },
        "comment": "rhs is right. right hand long[].",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(int[] lhs, int[] rhs)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[I",
            "name": "int[]",
            "isArray": true
          },
          "name": "lhs"
        },
        "comment": "lhs is left. left hand int[].",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[I",
            "name": "int[]",
            "isArray": true
          },
          "name": "rhs"
        },
        "comment": "rhs is right. right hand int[].",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(short[] lhs, short[] rhs)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[S",
          "name": "short[]",
          "isArray": true
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "[S",
          "name": "short[]",
          "isArray": true
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[S",
            "name": "short[]",
            "isArray": true
          },
          "name": "lhs"
        },
        "comment": "the left hand short[].",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[S",
            "name": "short[]",
            "isArray": true
          },
          "name": "rhs"
        },
        "comment": "rhs is right. right hand short[].",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(char[] lhs, char[] rhs)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[C",
            "name": "char[]",
            "isArray": true
          },
          "name": "lhs"
        },
        "comment": "lhs is left. left hand char[].",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[C",
            "name": "char[]",
            "isArray": true
          },
          "name": "rhs"
        },
        "comment": "rhs is right. right hand char[].",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(byte[] lhs, byte[] rhs)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "lhs"
        },
        "comment": "lhs is left. left hand byte[].",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "rhs"
        },
        "comment": "rhs is right. right hand byte[].",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(double[] lhs, double[] rhs)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "lhs"
        },
        "comment": "lhs is left. left hand double[].",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "rhs"
        },
        "comment": "rhs is right. right hand double[].",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(float[] lhs, float[] rhs)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[F",
          "name": "float[]",
          "isArray": true
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "[F",
          "name": "float[]",
          "isArray": true
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[F",
            "name": "float[]",
            "isArray": true
          },
          "name": "lhs"
        },
        "comment": "lhs is left. left hand float[].",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[F",
            "name": "float[]",
            "isArray": true
          },
          "name": "rhs"
        },
        "comment": "rhs is right. right hand float[].",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(boolean[] lhs, boolean[] rhs)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "org.apache.commons.lang.builder.EqualsBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Z",
          "name": "boolean[]",
          "isArray": true
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "[Z",
          "name": "boolean[]",
          "isArray": true
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Z",
            "name": "boolean[]",
            "isArray": true
          },
          "name": "lhs"
        },
        "comment": "lhs is left. left hand boolean[].",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Z",
            "name": "boolean[]",
            "isArray": true
          },
          "name": "rhs"
        },
        "comment": "rhs is right. right hand boolean[].",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "EqualsBuilder - used to chain calls.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isEquals()",
    "name": "isEquals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "boolean.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setEquals(boolean isEquals)",
    "name": "setEquals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.builder.EqualsBuilder",
      "name": "EqualsBuilder",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.builder.EqualsBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "isEquals"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "isEquals"
        },
        "comment": "The value to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  }
]