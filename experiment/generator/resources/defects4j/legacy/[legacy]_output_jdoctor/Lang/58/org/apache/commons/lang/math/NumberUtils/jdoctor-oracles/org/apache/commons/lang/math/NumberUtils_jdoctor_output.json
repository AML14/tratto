[
  {
    "signature": "org.apache.commons.lang.math.NumberUtils()",
    "name": "org.apache.commons.lang.math.NumberUtils",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "stringToInt(java.lang.String str)",
    "name": "stringToInt",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to convert null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the int represented by the string, or zero if conversion fails.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toInt(java.lang.String str)",
    "name": "toInt",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to convert null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the int represented by the string, or zero if conversion fails.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "stringToInt(java.lang.String str, int defaultValue)",
    "name": "stringToInt",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to convert null.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "the default value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the int represented by the string, or the default if conversion fails.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toInt(java.lang.String str, int defaultValue)",
    "name": "toInt",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to convert null.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "the default value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the int represented by the string, or the default if conversion fails.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toLong(java.lang.String str)",
    "name": "toLong",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to convert null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the long represented by the string, or 0 if conversion fails.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toLong(java.lang.String str, long defaultValue)",
    "name": "toLong",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to convert null.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "the default value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the long represented by the string, or the default if conversion fails.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toFloat(java.lang.String str)",
    "name": "toFloat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to convert null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the float represented by the string, or 0.0f if conversion fails.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toFloat(java.lang.String str, float defaultValue)",
    "name": "toFloat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to convert null.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "the default value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the float represented by the string, or defaultValue if conversion fails.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toDouble(java.lang.String str)",
    "name": "toDouble",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to convert null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the double represented by the string, or 0.0d if conversion fails.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toDouble(java.lang.String str, double defaultValue)",
    "name": "toDouble",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to convert null.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "the default value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the double represented by the string, or defaultValue if conversion fails.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "createNumber(java.lang.String str)",
    "name": "createNumber",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "java.lang.Number",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "String containing a number null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "Number created from the string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NumberFormatException",
          "name": "NumberFormatException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value cannot be converted.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "createFloat(java.lang.String str)",
    "name": "createFloat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Float",
      "name": "java.lang.Float",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "a String to convert null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "converted Float.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NumberFormatException",
          "name": "NumberFormatException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value cannot be converted.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "createDouble(java.lang.String str)",
    "name": "createDouble",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Double",
      "name": "java.lang.Double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "a String to convert null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "converted Double.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NumberFormatException",
          "name": "NumberFormatException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value cannot be converted.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "createInteger(java.lang.String str)",
    "name": "createInteger",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Integer",
      "name": "java.lang.Integer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "a String to convert null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "converted Integer.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NumberFormatException",
          "name": "NumberFormatException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value cannot be converted.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "createLong(java.lang.String str)",
    "name": "createLong",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Long",
      "name": "java.lang.Long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "a String to convert null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "converted Long.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NumberFormatException",
          "name": "NumberFormatException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value cannot be converted.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "createBigInteger(java.lang.String str)",
    "name": "createBigInteger",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.math.BigInteger",
      "name": "java.math.BigInteger",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "a String to convert null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "converted BigInteger.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NumberFormatException",
          "name": "NumberFormatException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value cannot be converted.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "createBigDecimal(java.lang.String str)",
    "name": "createBigDecimal",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.math.BigDecimal",
      "name": "java.math.BigDecimal",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "a String to convert null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "converted BigDecimal.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NumberFormatException",
          "name": "NumberFormatException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value cannot be converted.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "equals(byte[] array1, byte[] array2)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "array1"
      },
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "array2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "array1"
        },
        "comment": "array1 is first. first array to compare.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "array2"
        },
        "comment": "array2 is second. second array to compare.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the two arrays are equal., false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "equals(short[] array1, short[] array2)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[S",
          "name": "short[]",
          "isArray": true
        },
        "name": "array1"
      },
      {
        "type": {
          "qualifiedName": "[S",
          "name": "short[]",
          "isArray": true
        },
        "name": "array2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[S",
            "name": "short[]",
            "isArray": true
          },
          "name": "array1"
        },
        "comment": "array1 is first. first array to compare.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[S",
            "name": "short[]",
            "isArray": true
          },
          "name": "array2"
        },
        "comment": "array2 is second. second array to compare.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the two arrays are equal., false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "equals(int[] array1, int[] array2)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "array1"
      },
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "array2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[I",
            "name": "int[]",
            "isArray": true
          },
          "name": "array1"
        },
        "comment": "array1 is first. first array to compare.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[I",
            "name": "int[]",
            "isArray": true
          },
          "name": "array2"
        },
        "comment": "array2 is second. second array to compare.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the two arrays are equal., false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "equals(long[] array1, long[] array2)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[J",
          "name": "long[]",
          "isArray": true
        },
        "name": "array1"
      },
      {
        "type": {
          "qualifiedName": "[J",
          "name": "long[]",
          "isArray": true
        },
        "name": "array2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[J",
            "name": "long[]",
            "isArray": true
          },
          "name": "array1"
        },
        "comment": "array1 is first. first array to compare.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[J",
            "name": "long[]",
            "isArray": true
          },
          "name": "array2"
        },
        "comment": "array2 is second. second array to compare.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the two arrays are equal., false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "equals(float[] array1, float[] array2)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[F",
          "name": "float[]",
          "isArray": true
        },
        "name": "array1"
      },
      {
        "type": {
          "qualifiedName": "[F",
          "name": "float[]",
          "isArray": true
        },
        "name": "array2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[F",
            "name": "float[]",
            "isArray": true
          },
          "name": "array1"
        },
        "comment": "array1 is first. first array to compare.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[F",
            "name": "float[]",
            "isArray": true
          },
          "name": "array2"
        },
        "comment": "array2 is second. second array to compare.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the two arrays are equal., false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "equals(double[] array1, double[] array2)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "array1"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "array2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "array1"
        },
        "comment": "array1 is first. first array to compare.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "array2"
        },
        "comment": "array2 is second. second array to compare.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the two arrays are equal., false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "min(long[] array)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[J",
          "name": "long[]",
          "isArray": true
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[J",
            "name": "long[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "an array. array is not null or empty.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false || args[0].length==0"
      }
    ],
    "returnTag": {
      "comment": "the minimum value in the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is empty.",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "min(int[] array)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[I",
            "name": "int[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "an array. array is not null or empty.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false || args[0].length==0"
      }
    ],
    "returnTag": {
      "comment": "the minimum value in the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is empty.",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "min(short[] array)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "short",
      "name": "short",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[S",
          "name": "short[]",
          "isArray": true
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[S",
            "name": "short[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "an array. array is not null or empty.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false || args[0].length==0"
      }
    ],
    "returnTag": {
      "comment": "the minimum value in the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is empty.",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "min(byte[] array)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "byte",
      "name": "byte",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "an array. array is not null or empty.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false || args[0].length==0"
      }
    ],
    "returnTag": {
      "comment": "the minimum value in the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is empty.",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "min(double[] array)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "an array. array is not null or empty.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false || args[0].length==0"
      }
    ],
    "returnTag": {
      "comment": "the minimum value in the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is empty.",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "min(float[] array)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[F",
          "name": "float[]",
          "isArray": true
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[F",
            "name": "float[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "an array. array is not null or empty.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false || args[0].length==0"
      }
    ],
    "returnTag": {
      "comment": "the minimum value in the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is empty.",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "max(long[] array)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[J",
          "name": "long[]",
          "isArray": true
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[J",
            "name": "long[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "an array. array is not null or empty.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false || args[0].length==0"
      }
    ],
    "returnTag": {
      "comment": "the minimum value in the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is empty.",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "max(int[] array)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[I",
          "name": "int[]",
          "isArray": true
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[I",
            "name": "int[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "an array. array is not null or empty.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false || args[0].length==0"
      }
    ],
    "returnTag": {
      "comment": "the minimum value in the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is empty.",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "max(short[] array)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "short",
      "name": "short",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[S",
          "name": "short[]",
          "isArray": true
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[S",
            "name": "short[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "an array. array is not null or empty.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false || args[0].length==0"
      }
    ],
    "returnTag": {
      "comment": "the minimum value in the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is empty.",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "max(byte[] array)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "byte",
      "name": "byte",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "an array. array is not null or empty.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false || args[0].length==0"
      }
    ],
    "returnTag": {
      "comment": "the minimum value in the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is empty.",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "max(double[] array)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "an array. array is not null or empty.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false || args[0].length==0"
      }
    ],
    "returnTag": {
      "comment": "the minimum value in the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is empty.",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "max(float[] array)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[F",
          "name": "float[]",
          "isArray": true
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[F",
            "name": "float[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "an array. array is not null or empty.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false || args[0].length==0"
      }
    ],
    "returnTag": {
      "comment": "the minimum value in the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is empty.",
        "kind": "THROWS",
        "condition": "args[0].length==0"
      }
    ]
  },
  {
    "signature": "min(long a, long b, long c)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "value 1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "value 2.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "value 3.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the smallest of the values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "min(int a, int b, int c)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "value 1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "value 2.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "value 3.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the smallest of the values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "min(short a, short b, short c)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "short",
      "name": "short",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "short",
          "name": "short",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "short",
          "name": "short",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "short",
          "name": "short",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "short",
            "name": "short",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "value 1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "short",
            "name": "short",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "value 2.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "short",
            "name": "short",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "value 3.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the smallest of the values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "min(byte a, byte b, byte c)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "byte",
      "name": "byte",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "byte",
          "name": "byte",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "byte",
          "name": "byte",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "byte",
          "name": "byte",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "value 1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "value 2.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "value 3.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the smallest of the values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "min(double a, double b, double c)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "value 1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "value 2.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "value 3.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the smallest of the values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "min(float a, float b, float c)",
    "name": "min",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "value 1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "value 2.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "value 3.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the smallest of the values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "max(long a, long b, long c)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "value 1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "value 2.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "value 3.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the largest of the values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "max(int a, int b, int c)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "value 1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "value 2.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "value 3.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the largest of the values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "max(short a, short b, short c)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "short",
      "name": "short",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "short",
          "name": "short",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "short",
          "name": "short",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "short",
          "name": "short",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "short",
            "name": "short",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "value 1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "short",
            "name": "short",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "value 2.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "short",
            "name": "short",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "value 3.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the largest of the values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "max(byte a, byte b, byte c)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "byte",
      "name": "byte",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "byte",
          "name": "byte",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "byte",
          "name": "byte",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "byte",
          "name": "byte",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "value 1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "value 2.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "byte",
            "name": "byte",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "value 3.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the largest of the values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "max(double a, double b, double c)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "value 1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "value 2.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "value 3.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the largest of the values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "max(float a, float b, float c)",
    "name": "max",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "value 1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "value 2.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "value 3.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the largest of the values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "compare(double lhs, double rhs)",
    "name": "compare",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "lhs is first. first double.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "the second double.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "-1 if lhs is less, +1 if greater, 0 if equal to rhs.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "compare(float lhs, float rhs)",
    "name": "compare",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "lhs is first. first float.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "the second float.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "-1 if lhs is less, +1 if greater, 0 if equal to rhs.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isDigits(java.lang.String str)",
    "name": "isDigits",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the String to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if str contains only unicode numeric.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isNumber(java.lang.String str)",
    "name": "isNumber",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the String to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the string is a correctly formatted number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]