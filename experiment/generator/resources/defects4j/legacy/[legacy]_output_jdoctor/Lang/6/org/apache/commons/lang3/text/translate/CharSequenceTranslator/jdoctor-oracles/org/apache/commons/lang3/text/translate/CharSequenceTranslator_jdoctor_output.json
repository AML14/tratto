[
  {
    "signature": "translate(java.lang.CharSequence input, int index, java.io.Writer out)",
    "name": "translate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang3.text.translate.CharSequenceTranslator",
      "name": "CharSequenceTranslator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang3.text.translate.CharSequenceTranslator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.CharSequence",
          "name": "CharSequence",
          "isArray": false
        },
        "name": "input"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "java.io.Writer",
          "name": "Writer",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.CharSequence",
            "name": "CharSequence",
            "isArray": false
          },
          "name": "input"
        },
        "comment": "CharSequence that is being translated.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "int representing the current point of translation.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.Writer",
            "name": "Writer",
            "isArray": false
          },
          "name": "out"
        },
        "comment": "Writer to translate the text to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "int count of codepoints consumed.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the Writer produces an IOException",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "translate(java.lang.CharSequence input)",
    "name": "translate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang3.text.translate.CharSequenceTranslator",
      "name": "CharSequenceTranslator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang3.text.translate.CharSequenceTranslator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.CharSequence",
          "name": "CharSequence",
          "isArray": false
        },
        "name": "input"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.CharSequence",
            "name": "CharSequence",
            "isArray": false
          },
          "name": "input"
        },
        "comment": "CharSequence to be translated.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "String output of translation.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "translate(java.lang.CharSequence input, java.io.Writer out)",
    "name": "translate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang3.text.translate.CharSequenceTranslator",
      "name": "CharSequenceTranslator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang3.text.translate.CharSequenceTranslator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.CharSequence",
          "name": "CharSequence",
          "isArray": false
        },
        "name": "input"
      },
      {
        "type": {
          "qualifiedName": "java.io.Writer",
          "name": "Writer",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.CharSequence",
            "name": "CharSequence",
            "isArray": false
          },
          "name": "input"
        },
        "comment": "CharSequence that is being translated.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.Writer",
            "name": "Writer",
            "isArray": false
          },
          "name": "out"
        },
        "comment": "Writer to translate the text to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the Writer produces an IOException",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "with(org.apache.commons.lang3.text.translate.CharSequenceTranslator... translators)",
    "name": "with",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang3.text.translate.CharSequenceTranslator",
      "name": "CharSequenceTranslator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang3.text.translate.CharSequenceTranslator",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang3.text.translate.CharSequenceTranslator",
      "name": "org.apache.commons.lang3.text.translate.CharSequenceTranslator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Lorg.apache.commons.lang3.text.translate.CharSequenceTranslator;",
          "name": "CharSequenceTranslator[]",
          "isArray": true
        },
        "name": "translators"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Lorg.apache.commons.lang3.text.translate.CharSequenceTranslator;",
            "name": "CharSequenceTranslator[]",
            "isArray": true
          },
          "name": "translators"
        },
        "comment": "translators is CharSequenceTranslator. CharSequenceTranslator array of translators to merge with this one.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "CharSequenceTranslator merging this translator with the others.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hex(int codepoint)",
    "name": "hex",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang3.text.translate.CharSequenceTranslator",
      "name": "CharSequenceTranslator",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang3.text.translate.CharSequenceTranslator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "codepoint"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "codepoint"
        },
        "comment": "The codepoint to convert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "An upper case hexadecimal String.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]