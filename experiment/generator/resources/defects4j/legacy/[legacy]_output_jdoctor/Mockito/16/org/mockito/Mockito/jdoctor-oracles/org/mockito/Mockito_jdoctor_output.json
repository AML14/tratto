[
  {
    "signature": "mock(java.lang.Class<T> classToMock)",
    "name": "mock",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "classToMock"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "classToMock"
        },
        "comment": "class or interface to mock.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "mock object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "mock(java.lang.Class<T> classToMock, java.lang.String name)",
    "name": "mock",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "classToMock"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "classToMock"
        },
        "comment": "class or interface to mock.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "of the mock.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "mock object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "mock(java.lang.Class<T> classToMock, org.mockito.ReturnValues returnValues)",
    "name": "mock",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "classToMock"
      },
      {
        "type": {
          "qualifiedName": "org.mockito.ReturnValues",
          "name": "ReturnValues",
          "isArray": false
        },
        "name": "returnValues"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "classToMock"
        },
        "comment": "class or interface to mock.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.mockito.ReturnValues",
            "name": "ReturnValues",
            "isArray": false
          },
          "name": "returnValues"
        },
        "comment": "default return values for unstubbed methods.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "mock object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "mock(java.lang.Class<T> classToMock, org.mockito.stubbing.Answer defaultAnswer)",
    "name": "mock",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "classToMock"
      },
      {
        "type": {
          "qualifiedName": "org.mockito.stubbing.Answer",
          "name": "Answer",
          "isArray": false
        },
        "name": "defaultAnswer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "classToMock"
        },
        "comment": "class or interface to mock.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.mockito.stubbing.Answer",
            "name": "Answer",
            "isArray": false
          },
          "name": "defaultAnswer"
        },
        "comment": "default answer for unstubbed methods.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "mock object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "mock(java.lang.Class<T> classToMock, org.mockito.MockSettings mockSettings)",
    "name": "mock",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "classToMock"
      },
      {
        "type": {
          "qualifiedName": "org.mockito.MockSettings",
          "name": "MockSettings",
          "isArray": false
        },
        "name": "mockSettings"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "classToMock"
        },
        "comment": "class or interface to mock.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.mockito.MockSettings",
            "name": "MockSettings",
            "isArray": false
          },
          "name": "mockSettings"
        },
        "comment": "mockSettings is additional. additional mock settings.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "mock object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "spy(T object)",
    "name": "spy",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "to spy on.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a spy of the real object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "stub(T methodCall)",
    "name": "stub",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.stubbing.DeprecatedOngoingStubbing<T>",
      "name": "org.mockito.stubbing.DeprecatedOngoingStubbing<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "methodCall"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "methodCall"
        },
        "comment": "method call.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "DeprecatedOngoingStubbing object to set stubbed value/exception.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "when(T methodCall)",
    "name": "when",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.stubbing.OngoingStubbing<T>",
      "name": "org.mockito.stubbing.OngoingStubbing<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "methodCall"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "methodCall"
        },
        "comment": "method to be stubbed.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "verify(T mock)",
    "name": "verify",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "mock"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "mock"
        },
        "comment": "to be verified.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "mock object itself.",
      "kind": "RETURN",
      "condition": "true ? methodResultID.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "verify(T mock, org.mockito.internal.verification.api.VerificationMode mode)",
    "name": "verify",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "mock"
      },
      {
        "type": {
          "qualifiedName": "org.mockito.internal.verification.api.VerificationMode",
          "name": "VerificationMode",
          "isArray": false
        },
        "name": "mode"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "mock"
        },
        "comment": "to be verified.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.mockito.internal.verification.api.VerificationMode",
            "name": "VerificationMode",
            "isArray": false
          },
          "name": "mode"
        },
        "comment": "times(x) atLeastOnce() or never().",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "mock object itself.",
      "kind": "RETURN",
      "condition": "true ? methodResultID.equals(args[0])"
    },
    "throwsTags": []
  },
  {
    "signature": "reset(T... mocks)",
    "name": "reset",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "mocks"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.Object;",
            "name": "Object[]",
            "isArray": true
          },
          "name": "mocks"
        },
        "comment": "to be reset.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "verifyNoMoreInteractions(java.lang.Object... mocks)",
    "name": "verifyNoMoreInteractions",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "mocks"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.Object;",
            "name": "Object[]",
            "isArray": true
          },
          "name": "mocks"
        },
        "comment": "to be verified.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "verifyZeroInteractions(java.lang.Object... mocks)",
    "name": "verifyZeroInteractions",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "mocks"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.Object;",
            "name": "Object[]",
            "isArray": true
          },
          "name": "mocks"
        },
        "comment": "to be verified.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "stubVoid(T mock)",
    "name": "stubVoid",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.stubbing.VoidMethodStubbable<T>",
      "name": "org.mockito.stubbing.VoidMethodStubbable<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "mock"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "mock"
        },
        "comment": "to stub.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "stubbable object that allows stubbing with throwable.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "doThrow(java.lang.Throwable toBeThrown)",
    "name": "doThrow",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.stubbing.Stubber",
      "name": "org.mockito.stubbing.Stubber",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Throwable",
          "name": "Throwable",
          "isArray": false
        },
        "name": "toBeThrown"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Throwable",
            "name": "Throwable",
            "isArray": false
          },
          "name": "toBeThrown"
        },
        "comment": "to be thrown when the stubbed method is called.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "stubber - to select a method for stubbing.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "doCallRealMethod()",
    "name": "doCallRealMethod",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.stubbing.Stubber",
      "name": "org.mockito.stubbing.Stubber",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "stubber - to select a method for stubbing.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "doAnswer(org.mockito.stubbing.Answer answer)",
    "name": "doAnswer",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.stubbing.Stubber",
      "name": "org.mockito.stubbing.Stubber",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.mockito.stubbing.Answer",
          "name": "Answer",
          "isArray": false
        },
        "name": "answer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.mockito.stubbing.Answer",
            "name": "Answer",
            "isArray": false
          },
          "name": "answer"
        },
        "comment": "to answer when the stubbed method is called.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "stubber - to select a method for stubbing.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "doNothing()",
    "name": "doNothing",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.stubbing.Stubber",
      "name": "org.mockito.stubbing.Stubber",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "stubber - to select a method for stubbing.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "doReturn(java.lang.Object toBeReturned)",
    "name": "doReturn",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.stubbing.Stubber",
      "name": "org.mockito.stubbing.Stubber",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "toBeReturned"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "toBeReturned"
        },
        "comment": "to be returned when the stubbed method is called.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "stubber - to select a method for stubbing.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "inOrder(java.lang.Object... mocks)",
    "name": "inOrder",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "org.mockito.InOrder",
      "name": "org.mockito.InOrder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "mocks"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.Object;",
            "name": "Object[]",
            "isArray": true
          },
          "name": "mocks"
        },
        "comment": "to be verified in order.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "InOrder object to be used to verify in order.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "times(int wantedNumberOfInvocations)",
    "name": "times",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.internal.verification.api.VerificationMode",
      "name": "org.mockito.internal.verification.api.VerificationMode",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "wantedNumberOfInvocations"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "wantedNumberOfInvocations"
        },
        "comment": "wanted number of invocations.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "verification mode.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "never()",
    "name": "never",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.internal.verification.api.VerificationMode",
      "name": "org.mockito.internal.verification.api.VerificationMode",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "verification mode.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "atLeastOnce()",
    "name": "atLeastOnce",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.internal.verification.api.VerificationMode",
      "name": "org.mockito.internal.verification.api.VerificationMode",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "verification mode.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "atLeast(int minNumberOfInvocations)",
    "name": "atLeast",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.internal.verification.api.VerificationMode",
      "name": "org.mockito.internal.verification.api.VerificationMode",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minNumberOfInvocations"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minNumberOfInvocations"
        },
        "comment": "minNumberOfInvocations is minimum. minimum number of invocations.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "verification mode.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "atMost(int maxNumberOfInvocations)",
    "name": "atMost",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.internal.verification.api.VerificationMode",
      "name": "org.mockito.internal.verification.api.VerificationMode",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxNumberOfInvocations"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxNumberOfInvocations"
        },
        "comment": "max number of invocations.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "verification mode.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "only()",
    "name": "only",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.internal.verification.api.VerificationMode",
      "name": "org.mockito.internal.verification.api.VerificationMode",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "verification mode.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "validateMockitoUsage()",
    "name": "validateMockitoUsage",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "withSettings()",
    "name": "withSettings",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.MockSettings",
      "name": "org.mockito.MockSettings",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "mock settings instance with defaults.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "debug()",
    "name": "debug",
    "containingClass": {
      "qualifiedName": "org.mockito.Mockito",
      "name": "Mockito",
      "isArray": false
    },
    "targetClass": "org.mockito.Mockito",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.MockitoDebugger",
      "name": "org.mockito.MockitoDebugger",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]