[
  {
    "signature": "injectMocksOnFields(java.util.Set<java.lang.reflect.Field> injectMocksFields, java.util.Set<java.lang.Object> mocks, java.lang.Object testClassInstance)",
    "name": "injectMocksOnFields",
    "containingClass": {
      "qualifiedName": "org.mockito.internal.configuration.DefaultInjectionEngine",
      "name": "DefaultInjectionEngine",
      "isArray": false
    },
    "targetClass": "org.mockito.internal.configuration.DefaultInjectionEngine",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Set",
          "name": "Set",
          "isArray": false
        },
        "name": "injectMocksFields"
      },
      {
        "type": {
          "qualifiedName": "java.util.Set",
          "name": "Set",
          "isArray": false
        },
        "name": "mocks"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "testClassInstance"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Set",
            "name": "Set",
            "isArray": false
          },
          "name": "injectMocksFields"
        },
        "comment": "Fields annotated by @InjectMocks.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Set",
            "name": "Set",
            "isArray": false
          },
          "name": "mocks"
        },
        "comment": "Mocks.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "testClassInstance"
        },
        "comment": "The test class instance.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  }
]