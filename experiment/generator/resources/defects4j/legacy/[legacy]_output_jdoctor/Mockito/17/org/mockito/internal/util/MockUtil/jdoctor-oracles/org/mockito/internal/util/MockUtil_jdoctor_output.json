[
  {
    "signature": "org.mockito.internal.util.MockUtil(org.mockito.internal.util.CreationValidator creationValidator)",
    "name": "org.mockito.internal.util.MockUtil",
    "containingClass": {
      "qualifiedName": "org.mockito.internal.util.MockUtil",
      "name": "MockUtil",
      "isArray": false
    },
    "targetClass": "org.mockito.internal.util.MockUtil",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.mockito.internal.util.CreationValidator",
          "name": "CreationValidator",
          "isArray": false
        },
        "name": "creationValidator"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "org.mockito.internal.util.MockUtil()",
    "name": "org.mockito.internal.util.MockUtil",
    "containingClass": {
      "qualifiedName": "org.mockito.internal.util.MockUtil",
      "name": "MockUtil",
      "isArray": false
    },
    "targetClass": "org.mockito.internal.util.MockUtil",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "createMock(java.lang.Class<T> classToMock, org.mockito.internal.creation.MockSettingsImpl settings)",
    "name": "createMock",
    "containingClass": {
      "qualifiedName": "org.mockito.internal.util.MockUtil",
      "name": "MockUtil",
      "isArray": false
    },
    "targetClass": "org.mockito.internal.util.MockUtil",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "classToMock"
      },
      {
        "type": {
          "qualifiedName": "org.mockito.internal.creation.MockSettingsImpl",
          "name": "MockSettingsImpl",
          "isArray": false
        },
        "name": "settings"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "resetMock(T mock)",
    "name": "resetMock",
    "containingClass": {
      "qualifiedName": "org.mockito.internal.util.MockUtil",
      "name": "MockUtil",
      "isArray": false
    },
    "targetClass": "org.mockito.internal.util.MockUtil",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "mock"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getMockHandler(T mock)",
    "name": "getMockHandler",
    "containingClass": {
      "qualifiedName": "org.mockito.internal.util.MockUtil",
      "name": "MockUtil",
      "isArray": false
    },
    "targetClass": "org.mockito.internal.util.MockUtil",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.internal.MockHandlerInterface<T>",
      "name": "org.mockito.internal.MockHandlerInterface<T>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "mock"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isMock(java.lang.Object mock)",
    "name": "isMock",
    "containingClass": {
      "qualifiedName": "org.mockito.internal.util.MockUtil",
      "name": "MockUtil",
      "isArray": false
    },
    "targetClass": "org.mockito.internal.util.MockUtil",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "mock"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getMockName(java.lang.Object mock)",
    "name": "getMockName",
    "containingClass": {
      "qualifiedName": "org.mockito.internal.util.MockUtil",
      "name": "MockUtil",
      "isArray": false
    },
    "targetClass": "org.mockito.internal.util.MockUtil",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.internal.util.MockName",
      "name": "org.mockito.internal.util.MockName",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "mock"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]