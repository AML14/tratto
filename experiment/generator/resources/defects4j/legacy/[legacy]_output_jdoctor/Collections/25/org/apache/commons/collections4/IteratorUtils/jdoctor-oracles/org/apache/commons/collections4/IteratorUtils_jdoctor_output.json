[
  {
    "signature": "emptyIterator()",
    "name": "emptyIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableIterator<E>",
      "name": "org.apache.commons.collections4.ResettableIterator<E>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "an iterator over nothing.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "emptyListIterator()",
    "name": "emptyListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableListIterator<E>",
      "name": "org.apache.commons.collections4.ResettableListIterator<E>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a list iterator over nothing.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "emptyOrderedIterator()",
    "name": "emptyOrderedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.OrderedIterator<E>",
      "name": "org.apache.commons.collections4.OrderedIterator<E>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "an ordered iterator over nothing.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "emptyMapIterator()",
    "name": "emptyMapIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.MapIterator<K, V>",
      "name": "org.apache.commons.collections4.MapIterator<K, V>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a map iterator over nothing.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "emptyOrderedMapIterator()",
    "name": "emptyOrderedMapIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.OrderedMapIterator<K, V>",
      "name": "org.apache.commons.collections4.OrderedMapIterator<K, V>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a map iterator over nothing.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "singletonIterator(E object)",
    "name": "singletonIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableIterator<E>",
      "name": "org.apache.commons.collections4.ResettableIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "object is single. single object over which to iterate.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a singleton iterator over the object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "singletonListIterator(E object)",
    "name": "singletonListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.ListIterator<E>",
      "name": "java.util.ListIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "object is single. single object over which to iterate.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a singleton list iterator over the object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "arrayIterator(E... array)",
    "name": "arrayIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableIterator<E>",
      "name": "org.apache.commons.collections4.ResettableIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.Object;",
            "name": "Object[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "the array over which to iterate.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterator over the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayIterator(java.lang.Object array)",
    "name": "arrayIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableIterator<E>",
      "name": "org.apache.commons.collections4.ResettableIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "array"
        },
        "comment": "the array over which to iterate.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterator over the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the array is not an array.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayIterator(E[] array, int start)",
    "name": "arrayIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableIterator<E>",
      "name": "org.apache.commons.collections4.ResettableIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.Object;",
            "name": "Object[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "the array over which to iterate.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index to start iterating at.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterator over part of the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "start is less than zero or greater than the length of the array.",
        "kind": "THROWS",
        "condition": "args[1]<0"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayIterator(java.lang.Object array, int start)",
    "name": "arrayIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableIterator<E>",
      "name": "org.apache.commons.collections4.ResettableIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "array"
        },
        "comment": "the array over which to iterate.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index to start iterating at.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterator over part of the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the array is not an array.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "start is less than zero or greater than the length of the array.",
        "kind": "THROWS",
        "condition": "args[1]<0"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayIterator(E[] array, int start, int end)",
    "name": "arrayIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableIterator<E>",
      "name": "org.apache.commons.collections4.ResettableIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.Object;",
            "name": "Object[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "the array over which to iterate.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index to start iterating at.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the index to finish iterating at.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterator over part of the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array bounds are invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "end is before start.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayIterator(java.lang.Object array, int start, int end)",
    "name": "arrayIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableIterator<E>",
      "name": "org.apache.commons.collections4.ResettableIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "array"
        },
        "comment": "the array over which to iterate.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index to start iterating at.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the index to finish iterating at.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterator over part of the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the array is not an array or end is before start.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array bounds are invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayListIterator(E... array)",
    "name": "arrayListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableListIterator<E>",
      "name": "org.apache.commons.collections4.ResettableListIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.Object;",
            "name": "Object[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "the array over which to iterate.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a list iterator over the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayListIterator(java.lang.Object array)",
    "name": "arrayListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableListIterator<E>",
      "name": "org.apache.commons.collections4.ResettableListIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "array"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "array"
        },
        "comment": "the array over which to iterate.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a list iterator over the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the array is not an array.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayListIterator(E[] array, int start)",
    "name": "arrayListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableListIterator<E>",
      "name": "org.apache.commons.collections4.ResettableListIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.Object;",
            "name": "Object[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "the array over which to iterate.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index to start iterating at.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a list iterator over part of the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "start is less than zero.",
        "kind": "THROWS",
        "condition": "args[1]<0"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayListIterator(java.lang.Object array, int start)",
    "name": "arrayListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableListIterator<E>",
      "name": "org.apache.commons.collections4.ResettableListIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "array"
        },
        "comment": "the array over which to iterate.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index to start iterating at.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a list iterator over part of the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the array is not an array.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "start is less than zero.",
        "kind": "THROWS",
        "condition": "args[1]<0"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayListIterator(E[] array, int start, int end)",
    "name": "arrayListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableListIterator<E>",
      "name": "org.apache.commons.collections4.ResettableListIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.Object;",
          "name": "Object[]",
          "isArray": true
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.Object;",
            "name": "Object[]",
            "isArray": true
          },
          "name": "array"
        },
        "comment": "the array over which to iterate.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index to start iterating at.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the index to finish iterating at.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a list iterator over part of the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array bounds are invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "end is before start.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "arrayListIterator(java.lang.Object array, int start, int end)",
    "name": "arrayListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableListIterator<E>",
      "name": "org.apache.commons.collections4.ResettableListIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "array"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "array"
        },
        "comment": "the array over which to iterate.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the index to start iterating at.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the index to finish iterating at.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a list iterator over part of the array.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the array is not an array or end is before start.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array bounds are invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "boundedIterator(java.util.Iterator<? extends E> iterator, long max)",
    "name": "boundedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.iterators.BoundedIterator<E>",
      "name": "org.apache.commons.collections4.iterators.BoundedIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "max"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to decorate.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "max"
        },
        "comment": "max is maximum. maximum number of elements returned by this iterator.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new bounded iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the iterator is null or max is negative.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]<0"
      }
    ]
  },
  {
    "signature": "boundedIterator(java.util.Iterator<? extends E> iterator, long offset, long max)",
    "name": "boundedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.iterators.BoundedIterator<E>",
      "name": "org.apache.commons.collections4.iterators.BoundedIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "max"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to decorate.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "the index of the first element of the decorated iterator to return.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "max"
        },
        "comment": "max is maximum. maximum number of elements returned by this iterator.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new bounded iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the iterator is null or either offset or max is negative.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]<0 || args[2]<0"
      }
    ]
  },
  {
    "signature": "unmodifiableIterator(java.util.Iterator<E> iterator)",
    "name": "unmodifiableIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<E>",
      "name": "java.util.Iterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to make immutable.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an immutable version of the iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "unmodifiableListIterator(java.util.ListIterator<E> listIterator)",
    "name": "unmodifiableListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.ListIterator<E>",
      "name": "java.util.ListIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.ListIterator",
          "name": "ListIterator",
          "isArray": false
        },
        "name": "listIterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.ListIterator",
            "name": "ListIterator",
            "isArray": false
          },
          "name": "listIterator"
        },
        "comment": "the iterator to make immutable.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an immutable version of the iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "unmodifiableMapIterator(org.apache.commons.collections4.MapIterator<K, V> mapIterator)",
    "name": "unmodifiableMapIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.MapIterator<K, V>",
      "name": "org.apache.commons.collections4.MapIterator<K, V>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.MapIterator",
          "name": "MapIterator",
          "isArray": false
        },
        "name": "mapIterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.MapIterator",
            "name": "MapIterator",
            "isArray": false
          },
          "name": "mapIterator"
        },
        "comment": "the iterator to make immutable.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an immutable version of the iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "chainedIterator(java.util.Iterator<? extends E> iterator1, java.util.Iterator<? extends E> iterator2)",
    "name": "chainedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<E>",
      "name": "java.util.Iterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator1"
      },
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator1"
        },
        "comment": "the first iterator to use. iterator1 is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator2"
        },
        "comment": "the second iterator to use. iterator2 is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a combination iterator over the iterators.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "either iterator is null.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "chainedIterator(java.util.Iterator<? extends E>... iterators)",
    "name": "chainedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "java.util.Iterator<E>",
      "name": "java.util.Iterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.util.Iterator;",
          "name": "Iterator[]",
          "isArray": true
        },
        "name": "iterators"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.util.Iterator;",
            "name": "Iterator[]",
            "isArray": true
          },
          "name": "iterators"
        },
        "comment": "the iterators to use. iterators is not null or empty or contain nulls.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false || args[0].length==0"
      }
    ],
    "returnTag": {
      "comment": "a combination iterator over the iterators.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "iterators array is null or contains a null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "chainedIterator(java.util.Collection<java.util.Iterator<? extends E>> iterators)",
    "name": "chainedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<E>",
      "name": "java.util.Iterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "iterators"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "iterators"
        },
        "comment": "the iterators to use. iterators is not null or empty or contain nulls.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false || args[0].isEmpty() || args[0].contains(null)"
      }
    ],
    "returnTag": {
      "comment": "a combination iterator over the iterators.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "iterators collection is null or contains a null.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[0].contains(null)"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the iterators collection contains the wrong object type.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "collatedIterator(java.util.Comparator<? super E> comparator, java.util.Iterator<? extends E> iterator1, java.util.Iterator<? extends E> iterator2)",
    "name": "collatedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<E>",
      "name": "java.util.Iterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Comparator",
          "name": "Comparator",
          "isArray": false
        },
        "name": "comparator"
      },
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator1"
      },
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Comparator",
            "name": "Comparator",
            "isArray": false
          },
          "name": "comparator"
        },
        "comment": "the comparator to use null for natural order.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator1"
        },
        "comment": "the first iterators to use. iterator1 is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator2"
        },
        "comment": "the first iterators to use. iterator2 is not null.",
        "kind": "PARAM",
        "condition": "(args[2]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a combination iterator over the iterators.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "either iterator is null.",
        "kind": "THROWS",
        "condition": "args[1]==null || args[2]==null"
      }
    ]
  },
  {
    "signature": "collatedIterator(java.util.Comparator<? super E> comparator, java.util.Iterator<? extends E>... iterators)",
    "name": "collatedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "java.util.Iterator<E>",
      "name": "java.util.Iterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Comparator",
          "name": "Comparator",
          "isArray": false
        },
        "name": "comparator"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.util.Iterator;",
          "name": "Iterator[]",
          "isArray": true
        },
        "name": "iterators"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Comparator",
            "name": "Comparator",
            "isArray": false
          },
          "name": "comparator"
        },
        "comment": "the comparator to use null for natural order.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.util.Iterator;",
            "name": "Iterator[]",
            "isArray": true
          },
          "name": "iterators"
        },
        "comment": "the iterators to use. iterators is not null or empty or contain nulls.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false || args[1].length==0"
      }
    ],
    "returnTag": {
      "comment": "a combination iterator over the iterators.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "iterators array is null or contains a null value.",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "collatedIterator(java.util.Comparator<? super E> comparator, java.util.Collection<java.util.Iterator<? extends E>> iterators)",
    "name": "collatedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<E>",
      "name": "java.util.Iterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Comparator",
          "name": "Comparator",
          "isArray": false
        },
        "name": "comparator"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "iterators"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Comparator",
            "name": "Comparator",
            "isArray": false
          },
          "name": "comparator"
        },
        "comment": "the comparator to use null for natural order.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "iterators"
        },
        "comment": "the iterators to use. iterators is not null or empty or contain nulls.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false || args[1].isEmpty() || args[1].contains(null)"
      }
    ],
    "returnTag": {
      "comment": "a combination iterator over the iterators.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "iterators collection is null or contains a null.",
        "kind": "THROWS",
        "condition": "args[1]==null || args[1].contains(null)"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the iterators collection contains the wrong object type.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "objectGraphIterator(E root, org.apache.commons.collections4.Transformer<? super E, ? extends E> transformer)",
    "name": "objectGraphIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<E>",
      "name": "java.util.Iterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "root"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "transformer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "root"
        },
        "comment": "the root object to start iterating from. root is null results in an empty iterator.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "transformer"
        },
        "comment": "the transformer to use see above. transformer is null uses no effect transformer.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      }
    ],
    "returnTag": {
      "comment": "a new object graph iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "transformedIterator(java.util.Iterator<? extends I> iterator, org.apache.commons.collections4.Transformer<? super I, ? extends O> transform)",
    "name": "transformedIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<O>",
      "name": "java.util.Iterator<O>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "transform"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use. iterator is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "transform"
        },
        "comment": "the transform to use. transform is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new transforming iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "either parameter is null.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "filteredIterator(java.util.Iterator<? extends E> iterator, org.apache.commons.collections4.Predicate<? super E> predicate)",
    "name": "filteredIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<E>",
      "name": "java.util.Iterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use. iterator is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to use as a filter. predicate is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new filtered iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "either parameter is null.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "filteredListIterator(java.util.ListIterator<? extends E> listIterator, org.apache.commons.collections4.Predicate<? super E> predicate)",
    "name": "filteredListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.ListIterator<E>",
      "name": "java.util.ListIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.ListIterator",
          "name": "ListIterator",
          "isArray": false
        },
        "name": "listIterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.ListIterator",
            "name": "ListIterator",
            "isArray": false
          },
          "name": "listIterator"
        },
        "comment": "the list iterator to use. listIterator is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to use as a filter. predicate is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new filtered iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "either parameter is null.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "loopingIterator(java.util.Collection<? extends E> coll)",
    "name": "loopingIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableIterator<E>",
      "name": "org.apache.commons.collections4.ResettableIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "coll"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "coll"
        },
        "comment": "the collection to iterate over. coll is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new looping iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the collection is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "loopingListIterator(java.util.List<E> list)",
    "name": "loopingListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.ResettableListIterator<E>",
      "name": "org.apache.commons.collections4.ResettableListIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.List",
          "name": "List",
          "isArray": false
        },
        "name": "list"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.List",
            "name": "List",
            "isArray": false
          },
          "name": "list"
        },
        "comment": "the list to iterate over. list is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new looping iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the list is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "nodeListIterator(org.w3c.dom.NodeList nodeList)",
    "name": "nodeListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.iterators.NodeListIterator",
      "name": "org.apache.commons.collections4.iterators.NodeListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.w3c.dom.NodeList",
          "name": "NodeList",
          "isArray": false
        },
        "name": "nodeList"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.NodeList",
            "name": "NodeList",
            "isArray": false
          },
          "name": "nodeList"
        },
        "comment": "the node list to use. nodeList is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new, single use Iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "nodeList is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "nodeListIterator(org.w3c.dom.Node node)",
    "name": "nodeListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.iterators.NodeListIterator",
      "name": "org.apache.commons.collections4.iterators.NodeListIterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.w3c.dom.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.w3c.dom.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "the node to use. node is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new, single use Iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "node is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "peekingIterator(java.util.Iterator<? extends E> iterator)",
    "name": "peekingIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<E>",
      "name": "java.util.Iterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to decorate. iterator is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a peeking iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the iterator is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "pushbackIterator(java.util.Iterator<? extends E> iterator)",
    "name": "pushbackIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<E>",
      "name": "java.util.Iterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to decorate. iterator is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a pushback iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the iterator is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "skippingIterator(java.util.Iterator<E> iterator, long offset)",
    "name": "skippingIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.iterators.SkippingIterator<E>",
      "name": "org.apache.commons.collections4.iterators.SkippingIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "offset"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to decorate.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "offset is first. first number of elements to skip.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new skipping iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the iterator is null or offset is negative.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]<0"
      }
    ]
  },
  {
    "signature": "zippingIterator(java.util.Iterator<? extends E> a, java.util.Iterator<? extends E> b)",
    "name": "zippingIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ZippingIterator<E>",
      "name": "org.apache.commons.collections4.iterators.ZippingIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "b"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "a is first. first iterator to interleave.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "the second iterator to interleave.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterator, interleaving the decorated iterators.",
      "kind": "RETURN",
      "condition": "true ? methodResultID.equals(args[0])"
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any iterator is null.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "zippingIterator(java.util.Iterator<? extends E> a, java.util.Iterator<? extends E> b, java.util.Iterator<? extends E> c)",
    "name": "zippingIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ZippingIterator<E>",
      "name": "org.apache.commons.collections4.iterators.ZippingIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "a is first. first iterator to interleave.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "the second iterator to interleave.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "c is third. third iterator to interleave.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterator, interleaving the decorated iterators.",
      "kind": "RETURN",
      "condition": "true ? methodResultID.equals(args[0])"
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any iterator is null.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null || args[2]==null"
      }
    ]
  },
  {
    "signature": "zippingIterator(java.util.Iterator<? extends E>... iterators)",
    "name": "zippingIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "org.apache.commons.collections4.iterators.ZippingIterator<E>",
      "name": "org.apache.commons.collections4.iterators.ZippingIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.util.Iterator;",
          "name": "Iterator[]",
          "isArray": true
        },
        "name": "iterators"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.util.Iterator;",
            "name": "Iterator[]",
            "isArray": true
          },
          "name": "iterators"
        },
        "comment": "the array of iterators to interleave.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an iterator, interleaving the decorated iterators.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any iterator is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "asIterator(java.util.Enumeration<? extends E> enumeration)",
    "name": "asIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<E>",
      "name": "java.util.Iterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Enumeration",
          "name": "Enumeration",
          "isArray": false
        },
        "name": "enumeration"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Enumeration",
            "name": "Enumeration",
            "isArray": false
          },
          "name": "enumeration"
        },
        "comment": "the enumeration to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "asIterator(java.util.Enumeration<? extends E> enumeration, java.util.Collection<? super E> removeCollection)",
    "name": "asIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<E>",
      "name": "java.util.Iterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Enumeration",
          "name": "Enumeration",
          "isArray": false
        },
        "name": "enumeration"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "removeCollection"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Enumeration",
            "name": "Enumeration",
            "isArray": false
          },
          "name": "enumeration"
        },
        "comment": "the enumeration to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "removeCollection"
        },
        "comment": "the collection to remove elements from.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "asEnumeration(java.util.Iterator<? extends E> iterator)",
    "name": "asEnumeration",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<E>",
      "name": "java.util.Enumeration<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use. iterator is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new enumeration.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "iterator is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "asIterable(java.util.Iterator<? extends E> iterator)",
    "name": "asIterable",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable<E>",
      "name": "java.lang.Iterable<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use. iterator is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new, single use Iterable.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "iterator is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "asMultipleUseIterable(java.util.Iterator<? extends E> iterator)",
    "name": "asMultipleUseIterable",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable<E>",
      "name": "java.lang.Iterable<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use. iterator is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new, multiple use iterable.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "iterator is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "toListIterator(java.util.Iterator<? extends E> iterator)",
    "name": "toListIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.ListIterator<E>",
      "name": "java.util.ListIterator<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use. iterator is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a new iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "iterator parameter is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "toArray(java.util.Iterator<?> iterator)",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object[]",
      "name": "java.lang.Object[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use. iterator is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "an array of the iterator contents.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "iterator parameter is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "toArray(java.util.Iterator<? extends E> iterator, java.lang.Class<E> arrayClass)",
    "name": "toArray",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E[]",
      "name": "E[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "arrayClass"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use. iterator is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "arrayClass"
        },
        "comment": "the class of array to create.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an array of the iterator contents.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "iterator parameter or arrayClass is null.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the arrayClass is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toList(java.util.Iterator<? extends E> iterator)",
    "name": "toList",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<E>",
      "name": "java.util.List<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use. iterator is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a list of the iterator contents.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "iterator parameter is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "toList(java.util.Iterator<? extends E> iterator, int estimatedSize)",
    "name": "toList",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<E>",
      "name": "java.util.List<E>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "estimatedSize"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use. iterator is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "estimatedSize"
        },
        "comment": "estimatedSize is initial. initial size of the ArrayList.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a list of the iterator contents.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "iterator parameter is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the size is less than 1.",
        "kind": "THROWS",
        "condition": "args[1]<1"
      }
    ]
  },
  {
    "signature": "getIterator(java.lang.Object obj)",
    "name": "getIterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<?>",
      "name": "java.util.Iterator<?>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "the object to convert to an iterator.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a suitable iterator, never null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "apply(java.util.Iterator<E> iterator, org.apache.commons.collections4.Closure<? super E> closure)",
    "name": "apply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Closure",
          "name": "Closure",
          "isArray": false
        },
        "name": "closure"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to use null.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Closure",
            "name": "Closure",
            "isArray": false
          },
          "name": "closure"
        },
        "comment": "the closure to apply to each element. closure is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "closure is null.",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "find(java.util.Iterator<E> iterator, org.apache.commons.collections4.Predicate<? super E> predicate)",
    "name": "find",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to search null.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to use. predicate is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the first element of the iterator which matches the predicate or null if none could be found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "predicate is null.",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "matchesAny(java.util.Iterator<E> iterator, org.apache.commons.collections4.Predicate<? super E> predicate)",
    "name": "matchesAny",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the Iterator to use null.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to use. predicate is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "true if any element of the collection matches the predicate, false otherwise.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "predicate is null.",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "matchesAll(java.util.Iterator<E> iterator, org.apache.commons.collections4.Predicate<? super E> predicate)",
    "name": "matchesAll",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "predicate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the Iterator to use null.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Predicate",
            "name": "Predicate",
            "isArray": false
          },
          "name": "predicate"
        },
        "comment": "the predicate to use. predicate is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "true if every element of the collection matches the predicate or if the collection is empty, false otherwise.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "predicate is null.",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "isEmpty(java.util.Iterator<?> iterator)",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the Iterator to use null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the iterator is exhausted or null, false otherwise.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "contains(java.util.Iterator<E> iterator, java.lang.Object object)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to check null.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "the object to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the object is contained in the iterator, false otherwise.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "get(java.util.Iterator<E> iterator, int index)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "E",
      "name": "E",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to get a value from.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to get.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the object at the specified index.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the object type is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "size(java.util.Iterator<?> iterator)",
    "name": "size",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to check null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the number of elements contained in the iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString(java.util.Iterator<E> iterator)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to convert to a string.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString(java.util.Iterator<E> iterator, org.apache.commons.collections4.Transformer<? super E, java.lang.String> transformer)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "transformer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to convert to a string null.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "transformer"
        },
        "comment": "the transformer used to get a string representation of an element.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "transformer is null.",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "toString(java.util.Iterator<E> iterator, org.apache.commons.collections4.Transformer<? super E, java.lang.String> transformer, java.lang.String delimiter, java.lang.String prefix, java.lang.String suffix)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.collections4.IteratorUtils",
      "name": "IteratorUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.collections4.IteratorUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Iterator",
          "name": "Iterator",
          "isArray": false
        },
        "name": "iterator"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.collections4.Transformer",
          "name": "Transformer",
          "isArray": false
        },
        "name": "transformer"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "delimiter"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "prefix"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "suffix"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Iterator",
            "name": "Iterator",
            "isArray": false
          },
          "name": "iterator"
        },
        "comment": "the iterator to convert to a string null.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.collections4.Transformer",
            "name": "Transformer",
            "isArray": false
          },
          "name": "transformer"
        },
        "comment": "the transformer used to get a string representation of an element.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "delimiter"
        },
        "comment": "the string to delimit elements.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "prefix"
        },
        "comment": "the prefix prepended to the string representation.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "suffix"
        },
        "comment": "the suffix appended to the string representation.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a string representation of iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "either transformer delimiter prefix or suffix is null.",
        "kind": "THROWS",
        "condition": "args[1]==null || args[2]==null || args[3]==null || args[4]==null"
      }
    ]
  }
]