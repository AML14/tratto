[
  {
    "signature": "isNamedEntity(java.lang.String name)",
    "name": "isNamedEntity",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Entities",
      "name": "Entities",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Entities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "name is possible. possible entity name (e.g. \"lt\" or \"amp\").",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if a known named entity.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isBaseNamedEntity(java.lang.String name)",
    "name": "isBaseNamedEntity",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Entities",
      "name": "Entities",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Entities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "name is possible. possible entity name (e.g. \"lt\" or \"amp\").",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if a known named entity in the base set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getCharacterByName(java.lang.String name)",
    "name": "getCharacterByName",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Entities",
      "name": "Entities",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Entities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Character",
      "name": "java.lang.Character",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "named entity (e.g. \"lt\" or \"amp\").",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the Character value of the named entity (e.g. '{@literal <}' or '{@literal &}').",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "escape(java.lang.String string, org.jsoup.nodes.Document$OutputSettings out)",
    "name": "escape",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Entities",
      "name": "Entities",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Entities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "string"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Document$OutputSettings",
          "name": "OutputSettings",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "escape(java.lang.StringBuilder accum, java.lang.String string, org.jsoup.nodes.Document$OutputSettings out, boolean inAttribute, boolean normaliseWhite, boolean stripLeadingWhite)",
    "name": "escape",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Entities",
      "name": "Entities",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Entities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.StringBuilder",
          "name": "StringBuilder",
          "isArray": false
        },
        "name": "accum"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "string"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Document$OutputSettings",
          "name": "OutputSettings",
          "isArray": false
        },
        "name": "out"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "inAttribute"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "normaliseWhite"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "stripLeadingWhite"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "unescape(java.lang.String string)",
    "name": "unescape",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Entities",
      "name": "Entities",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Entities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "string"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "unescape(java.lang.String string, boolean strict)",
    "name": "unescape",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Entities",
      "name": "Entities",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Entities",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "string"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "strict"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "string"
        },
        "comment": "to un-HTML-escape.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "strict"
        },
        "comment": "if \"strict\" (that is requires trailing ' ' char. strict is otherwise that's optional).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "unescaped string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]