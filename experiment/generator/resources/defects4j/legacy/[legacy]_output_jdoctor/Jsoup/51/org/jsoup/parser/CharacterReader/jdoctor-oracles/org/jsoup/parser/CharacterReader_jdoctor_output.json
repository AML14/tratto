[
  {
    "signature": "org.jsoup.parser.CharacterReader(java.lang.String input)",
    "name": "org.jsoup.parser.CharacterReader",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "input"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "pos()",
    "name": "pos",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isEmpty()",
    "name": "isEmpty",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "current()",
    "name": "current",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char",
      "name": "char",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "consume()",
    "name": "consume",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char",
      "name": "char",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "unconsume()",
    "name": "unconsume",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "advance()",
    "name": "advance",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "mark()",
    "name": "mark",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "rewindToMark()",
    "name": "rewindToMark",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "consumeAsString()",
    "name": "consumeAsString",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "nextIndexOf(char c)",
    "name": "nextIndexOf",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "char",
            "name": "char",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "scan target.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "offset between current position and next instance of target. -1 if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "nextIndexOf(java.lang.CharSequence seq)",
    "name": "nextIndexOf",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.CharSequence",
          "name": "CharSequence",
          "isArray": false
        },
        "name": "seq"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.CharSequence",
            "name": "CharSequence",
            "isArray": false
          },
          "name": "seq"
        },
        "comment": "scan target.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "offset between current position and next instance of target. -1 if not found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "consumeTo(char c)",
    "name": "consumeTo",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "consumeTo(java.lang.String seq)",
    "name": "consumeTo",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "seq"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "consumeToAny(char... chars)",
    "name": "consumeToAny",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "chars"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "consumeToAnySorted(char... chars)",
    "name": "consumeToAnySorted",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "chars"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "consumeData()",
    "name": "consumeData",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "consumeTagName()",
    "name": "consumeTagName",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "consumeToEnd()",
    "name": "consumeToEnd",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "consumeLetterSequence()",
    "name": "consumeLetterSequence",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "consumeLetterThenDigitSequence()",
    "name": "consumeLetterThenDigitSequence",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "consumeHexSequence()",
    "name": "consumeHexSequence",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "consumeDigitSequence()",
    "name": "consumeDigitSequence",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "matches(char c)",
    "name": "matches",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "matches(java.lang.String seq)",
    "name": "matches",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "seq"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "matchesIgnoreCase(java.lang.String seq)",
    "name": "matchesIgnoreCase",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "seq"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "matchesAny(char... seq)",
    "name": "matchesAny",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "seq"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "matchesAnySorted(char[] seq)",
    "name": "matchesAnySorted",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[C",
          "name": "char[]",
          "isArray": true
        },
        "name": "seq"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "matchesLetter()",
    "name": "matchesLetter",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "matchesDigit()",
    "name": "matchesDigit",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "matchConsume(java.lang.String seq)",
    "name": "matchConsume",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "seq"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "matchConsumeIgnoreCase(java.lang.String seq)",
    "name": "matchConsumeIgnoreCase",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "seq"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "containsIgnoreCase(java.lang.String seq)",
    "name": "containsIgnoreCase",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "seq"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "rangeEquals(int start, int count, java.lang.String cached)",
    "name": "rangeEquals",
    "containingClass": {
      "qualifiedName": "org.jsoup.parser.CharacterReader",
      "name": "CharacterReader",
      "isArray": false
    },
    "targetClass": "org.jsoup.parser.CharacterReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "count"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "cached"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]