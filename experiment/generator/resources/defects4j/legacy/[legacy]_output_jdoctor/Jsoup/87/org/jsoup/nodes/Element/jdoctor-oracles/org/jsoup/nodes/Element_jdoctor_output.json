[
  {
    "signature": "org.jsoup.nodes.Element(java.lang.String tag)",
    "name": "org.jsoup.nodes.Element",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "tag"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "tag"
        },
        "comment": "tag name.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.jsoup.nodes.Element(org.jsoup.parser.Tag tag, java.lang.String baseUri, org.jsoup.nodes.Attributes attributes)",
    "name": "org.jsoup.nodes.Element",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.parser.Tag",
          "name": "Tag",
          "isArray": false
        },
        "name": "tag"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "baseUri"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Attributes",
          "name": "Attributes",
          "isArray": false
        },
        "name": "attributes"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jsoup.parser.Tag",
            "name": "Tag",
            "isArray": false
          },
          "name": "tag"
        },
        "comment": "tag of this element.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "baseUri"
        },
        "comment": "the base URI.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jsoup.nodes.Attributes",
            "name": "Attributes",
            "isArray": false
          },
          "name": "attributes"
        },
        "comment": "attributes is initial. initial attributes.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.jsoup.nodes.Element(org.jsoup.parser.Tag tag, java.lang.String baseUri)",
    "name": "org.jsoup.nodes.Element",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.parser.Tag",
          "name": "Tag",
          "isArray": false
        },
        "name": "tag"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "baseUri"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jsoup.parser.Tag",
            "name": "Tag",
            "isArray": false
          },
          "name": "tag"
        },
        "comment": "element tag.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "baseUri"
        },
        "comment": "the base URI of this element. It is acceptable for the base URI to be an empty string. baseUri is but not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "ensureChildNodes()",
    "name": "ensureChildNodes",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<org.jsoup.nodes.Node>",
      "name": "java.util.List<org.jsoup.nodes.Node>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hasAttributes()",
    "name": "hasAttributes",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "attributes()",
    "name": "attributes",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Attributes",
      "name": "org.jsoup.nodes.Attributes",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "baseUri()",
    "name": "baseUri",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "doSetBaseUri(java.lang.String baseUri)",
    "name": "doSetBaseUri",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "baseUri"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "childNodeSize()",
    "name": "childNodeSize",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "nodeName()",
    "name": "nodeName",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "tagName()",
    "name": "tagName",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the tag name.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "tagName(java.lang.String tagName)",
    "name": "tagName",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "tagName"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "tagName"
        },
        "comment": "tagName is new. new tag name for this element.",
        "kind": "PARAM",
        "condition": "receiverObjectID.is(args[0])"
      }
    ],
    "returnTag": {
      "comment": "this element, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "tag()",
    "name": "tag",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.parser.Tag",
      "name": "org.jsoup.parser.Tag",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the tag object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isBlock()",
    "name": "isBlock",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if block, false if not (and thus inline).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "id()",
    "name": "id",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The id attribute, if present, or an empty string if not.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "attr(java.lang.String attributeKey, java.lang.String attributeValue)",
    "name": "attr",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeKey"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeValue"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "this element.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "attr(java.lang.String attributeKey, boolean attributeValue)",
    "name": "attr",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "attributeKey"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "attributeValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "attributeKey"
        },
        "comment": "the attribute key.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "attributeValue"
        },
        "comment": "the attribute value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this element.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "dataset()",
    "name": "dataset",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map<java.lang.String, java.lang.String>",
      "name": "java.util.Map<java.lang.String, java.lang.String>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a map of key=value custom data attributes.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "parent()",
    "name": "parent",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parents()",
    "name": "parents",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this element's stack of parents, closest first.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "child(int index)",
    "name": "child",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index number of the element to retrieve.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the child element, if child exists, otherwise throws an IndexOutOfBoundsException.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "children()",
    "name": "children",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "child elements. If this element has no children, returns an empty list.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "nodelistChanged()",
    "name": "nodelistChanged",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "textNodes()",
    "name": "textNodes",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<org.jsoup.nodes.TextNode>",
      "name": "java.util.List<org.jsoup.nodes.TextNode>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "child text nodes. If this element has no text nodes, returns an empty list. </p> For example, with the input HTML: One Two Three <br> Four with the p element selected: p.text() = \"One Two Three Four\" p.ownText() = \"One Three Four\" p.children() = Elements[<span>, <br>] p.childNodes() = List<Node>[\"One \", <span>, \" Three \", <br>, \" Four\"] p.textNodes() = List<TextNode>[\"One \", \" Three \", \" Four\"].",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "dataNodes()",
    "name": "dataNodes",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<org.jsoup.nodes.DataNode>",
      "name": "java.util.List<org.jsoup.nodes.DataNode>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "child data nodes. If this element has no data nodes, returns an empty list.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "select(java.lang.String cssQuery)",
    "name": "select",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "cssQuery"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "cssQuery"
        },
        "comment": "a Selector CSS-like query.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "elements that match the query (empty if none match).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "selectFirst(java.lang.String cssQuery)",
    "name": "selectFirst",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "cssQuery"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "cssQuery"
        },
        "comment": "cssQuery a Selector CSS-like query.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the first matching element, or null if there is no match.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "is(java.lang.String cssQuery)",
    "name": "is",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "cssQuery"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "cssQuery"
        },
        "comment": "a Selector CSS query.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "if this element matches the query.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "is(org.jsoup.select.Evaluator evaluator)",
    "name": "is",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.select.Evaluator",
          "name": "Evaluator",
          "isArray": false
        },
        "name": "evaluator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jsoup.select.Evaluator",
            "name": "Evaluator",
            "isArray": false
          },
          "name": "evaluator"
        },
        "comment": "an element evaluator.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "if this element matches.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendChild(org.jsoup.nodes.Node child)",
    "name": "appendChild",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "child"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jsoup.nodes.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "child"
        },
        "comment": "node to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this element, so that you can add more child nodes or elements.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendTo(org.jsoup.nodes.Element parent)",
    "name": "appendTo",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Element",
          "name": "Element",
          "isArray": false
        },
        "name": "parent"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jsoup.nodes.Element",
            "name": "Element",
            "isArray": false
          },
          "name": "parent"
        },
        "comment": "element to which this element . parent is appended.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this element, so that you can continue modifying the element.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "prependChild(org.jsoup.nodes.Node child)",
    "name": "prependChild",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "child"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jsoup.nodes.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "child"
        },
        "comment": "node to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this element, so that you can add more child nodes or elements.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "insertChildren(int index, java.util.Collection<? extends org.jsoup.nodes.Node> children)",
    "name": "insertChildren",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "java.util.Collection",
          "name": "Collection",
          "isArray": false
        },
        "name": "children"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "index is 0-based. 0-based index to insert children at. Specify 0 to insert at the start -1 at the end.",
        "kind": "PARAM",
        "condition": "args[0]==0"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Collection",
            "name": "Collection",
            "isArray": false
          },
          "name": "children"
        },
        "comment": "child nodes to insert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this element, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "insertChildren(int index, org.jsoup.nodes.Node... children)",
    "name": "insertChildren",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": true,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "[Lorg.jsoup.nodes.Node;",
          "name": "Node[]",
          "isArray": true
        },
        "name": "children"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "index is 0-based. 0-based index to insert children at. Specify 0 to insert at the start -1 at the end.",
        "kind": "PARAM",
        "condition": "args[0]==0"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Lorg.jsoup.nodes.Node;",
            "name": "Node[]",
            "isArray": true
          },
          "name": "children"
        },
        "comment": "child nodes to insert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this element, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendElement(java.lang.String tagName)",
    "name": "appendElement",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "tagName"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "tagName"
        },
        "comment": "the name of the tag (e.g. div).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new element, to allow you to add content to it, e.g.: parent.appendElement(\"h1\").attr(\"id\", \"header\").text(\"Welcome\");.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "prependElement(java.lang.String tagName)",
    "name": "prependElement",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "tagName"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "tagName"
        },
        "comment": "the name of the tag (e.g. div).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new element, to allow you to add content to it, e.g.: parent.prependElement(\"h1\").attr(\"id\", \"header\").text(\"Welcome\");.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendText(java.lang.String text)",
    "name": "appendText",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "text"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "text"
        },
        "comment": "text is unencoded. unencoded text to add.",
        "kind": "PARAM",
        "condition": "receiverObjectID.is(args[0])"
      }
    ],
    "returnTag": {
      "comment": "this element.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "prependText(java.lang.String text)",
    "name": "prependText",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "text"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "text"
        },
        "comment": "text is unencoded. unencoded text to add.",
        "kind": "PARAM",
        "condition": "receiverObjectID.is(args[0])"
      }
    ],
    "returnTag": {
      "comment": "this element.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "append(java.lang.String html)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "html"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "html"
        },
        "comment": "HTML to add inside this element after the existing HTML.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this element.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "prepend(java.lang.String html)",
    "name": "prepend",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "html"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "html"
        },
        "comment": "HTML to add inside this element before the existing HTML.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this element.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "before(java.lang.String html)",
    "name": "before",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "html"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "html"
        },
        "comment": "HTML to add before this element.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this element, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "before(org.jsoup.nodes.Node node)",
    "name": "before",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jsoup.nodes.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "to add before this element.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this Element, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "after(java.lang.String html)",
    "name": "after",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "html"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "html"
        },
        "comment": "HTML to add after this element.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this element, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "after(org.jsoup.nodes.Node node)",
    "name": "after",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.jsoup.nodes.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "node"
        },
        "comment": "to add after this element.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this element, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "empty()",
    "name": "empty",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this element.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "wrap(java.lang.String html)",
    "name": "wrap",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "html"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "html"
        },
        "comment": "HTML to wrap around this element. html is e.g. . Can be arbitrarily deep.",
        "kind": "PARAM",
        "condition": "receiverObjectID.is(args[0])"
      }
    ],
    "returnTag": {
      "comment": "this element, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "cssSelector()",
    "name": "cssSelector",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the CSS Path that can be used to retrieve the element in a selector.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "siblingElements()",
    "name": "siblingElements",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "sibling elements.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "nextElementSibling()",
    "name": "nextElementSibling",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the next element, or null if there is no next element.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "nextElementSiblings()",
    "name": "nextElementSiblings",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "each of the element siblings after this element, or an empty list if there are no next sibling elements.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "previousElementSibling()",
    "name": "previousElementSibling",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the previous element, or null if there is no previous element.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "previousElementSiblings()",
    "name": "previousElementSiblings",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the previous element siblings, or an empty list if there are none.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "firstElementSibling()",
    "name": "firstElementSibling",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the first sibling that is an element (aka the parent's first element child).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "elementSiblingIndex()",
    "name": "elementSiblingIndex",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "position in element sibling list.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "lastElementSibling()",
    "name": "lastElementSibling",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the last sibling that is an element (aka the parent's last element child).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsByTag(java.lang.String tagName)",
    "name": "getElementsByTag",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "tagName"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "tagName"
        },
        "comment": "The tag name to search for (case insensitively).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a matching unmodifiable list of elements. Will be empty if this element and none of its children match.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementById(java.lang.String id)",
    "name": "getElementById",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "id"
        },
        "comment": "The ID to search for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The first matching element by ID, starting with this element, or null if none found.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsByClass(java.lang.String className)",
    "name": "getElementsByClass",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "className"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "className"
        },
        "comment": "the name of the class to search for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "elements with the supplied class name, empty if none.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsByAttribute(java.lang.String key)",
    "name": "getElementsByAttribute",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "name of the attribute e.g. href.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "elements that have this attribute, empty if none.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsByAttributeStarting(java.lang.String keyPrefix)",
    "name": "getElementsByAttributeStarting",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "keyPrefix"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "keyPrefix"
        },
        "comment": "name prefix of the attribute e.g. data-.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "elements that have attribute names that start with with the prefix, empty if none.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsByAttributeValue(java.lang.String key, java.lang.String value)",
    "name": "getElementsByAttributeValue",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "name of the attribute.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "value of the attribute.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "elements that have this attribute with this value, empty if none.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsByAttributeValueNot(java.lang.String key, java.lang.String value)",
    "name": "getElementsByAttributeValueNot",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "name of the attribute.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "value of the attribute.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "elements that do not have a matching attribute.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsByAttributeValueStarting(java.lang.String key, java.lang.String valuePrefix)",
    "name": "getElementsByAttributeValueStarting",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "valuePrefix"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "name of the attribute.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "valuePrefix"
        },
        "comment": "start of attribute value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "elements that have attributes that start with the value prefix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsByAttributeValueEnding(java.lang.String key, java.lang.String valueSuffix)",
    "name": "getElementsByAttributeValueEnding",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "valueSuffix"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "name of the attribute.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "valueSuffix"
        },
        "comment": "end of the attribute value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "elements that have attributes that end with the value suffix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsByAttributeValueContaining(java.lang.String key, java.lang.String match)",
    "name": "getElementsByAttributeValueContaining",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "match"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "name of the attribute.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "match"
        },
        "comment": "substring of value to search for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "elements that have attributes containing this text.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsByAttributeValueMatching(java.lang.String key, java.util.regex.Pattern pattern)",
    "name": "getElementsByAttributeValueMatching",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.util.regex.Pattern",
          "name": "Pattern",
          "isArray": false
        },
        "name": "pattern"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "name of the attribute.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.regex.Pattern",
            "name": "Pattern",
            "isArray": false
          },
          "name": "pattern"
        },
        "comment": "compiled regular expression to match against attribute values.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "elements that have attributes matching this regular expression.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsByAttributeValueMatching(java.lang.String key, java.lang.String regex)",
    "name": "getElementsByAttributeValueMatching",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "key"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "regex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "key"
        },
        "comment": "name of the attribute.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "regex"
        },
        "comment": "regex is regular. regular expression to match against attribute values. You can use embedded flags (such as (?i) and (?m) to control regex options.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "elements that have attributes matching this regular expression.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsByIndexLessThan(int index)",
    "name": "getElementsByIndexLessThan",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "index is 0-based. 0-based index.",
        "kind": "PARAM",
        "condition": "args[0]==0"
      }
    ],
    "returnTag": {
      "comment": "elements less than index.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsByIndexGreaterThan(int index)",
    "name": "getElementsByIndexGreaterThan",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "index is 0-based. 0-based index.",
        "kind": "PARAM",
        "condition": "args[0]==0"
      }
    ],
    "returnTag": {
      "comment": "elements greater than index.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsByIndexEquals(int index)",
    "name": "getElementsByIndexEquals",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "index is 0-based. 0-based index.",
        "kind": "PARAM",
        "condition": "args[0]==0"
      }
    ],
    "returnTag": {
      "comment": "elements equal to index.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsContainingText(java.lang.String searchText)",
    "name": "getElementsContainingText",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "searchText"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "searchText"
        },
        "comment": "to look for in the element's text.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "elements that contain the string, case insensitive.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsContainingOwnText(java.lang.String searchText)",
    "name": "getElementsContainingOwnText",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "searchText"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "searchText"
        },
        "comment": "to look for in the element's own text.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "elements that contain the string, case insensitive.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsMatchingText(java.util.regex.Pattern pattern)",
    "name": "getElementsMatchingText",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.regex.Pattern",
          "name": "Pattern",
          "isArray": false
        },
        "name": "pattern"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.regex.Pattern",
            "name": "Pattern",
            "isArray": false
          },
          "name": "pattern"
        },
        "comment": "pattern is regular. regular expression to match text against.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "elements matching the supplied regular expression.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsMatchingText(java.lang.String regex)",
    "name": "getElementsMatchingText",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "regex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "regex"
        },
        "comment": "regex is regular. regular expression to match text against. You can use embedded flags (such as (?i) and (?m) to control regex options.",
        "kind": "PARAM",
        "condition": "receiverObjectID.is(args[0])"
      }
    ],
    "returnTag": {
      "comment": "elements matching the supplied regular expression.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsMatchingOwnText(java.util.regex.Pattern pattern)",
    "name": "getElementsMatchingOwnText",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.regex.Pattern",
          "name": "Pattern",
          "isArray": false
        },
        "name": "pattern"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.regex.Pattern",
            "name": "Pattern",
            "isArray": false
          },
          "name": "pattern"
        },
        "comment": "pattern is regular. regular expression to match text against.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "elements matching the supplied regular expression.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getElementsMatchingOwnText(java.lang.String regex)",
    "name": "getElementsMatchingOwnText",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "regex"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "regex"
        },
        "comment": "regex is regular. regular expression to match text against. You can use embedded flags (such as (?i) and (?m) to control regex options.",
        "kind": "PARAM",
        "condition": "receiverObjectID.is(args[0])"
      }
    ],
    "returnTag": {
      "comment": "elements matching the supplied regular expression.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAllElements()",
    "name": "getAllElements",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.select.Elements",
      "name": "org.jsoup.select.Elements",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "all elements.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "text()",
    "name": "text",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "unencoded, normalized text, or empty string if none.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "wholeText()",
    "name": "wholeText",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "unencoded, un-normalized text.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "ownText()",
    "name": "ownText",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "unencoded text, or empty string if none.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "preserveWhitespace(org.jsoup.nodes.Node node)",
    "name": "preserveWhitespace",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "text(java.lang.String text)",
    "name": "text",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "text"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "text"
        },
        "comment": "text is unencoded. unencoded text.",
        "kind": "PARAM",
        "condition": "receiverObjectID.is(args[0])"
      }
    ],
    "returnTag": {
      "comment": "this element.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasText()",
    "name": "hasText",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "data()",
    "name": "data",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the data, or empty string if none.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "className()",
    "name": "className",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The literal class attribute, or empty string if no class attribute set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "classNames()",
    "name": "classNames",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set<java.lang.String>",
      "name": "java.util.Set<java.lang.String>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "set of classnames, empty if no class attribute.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "classNames(java.util.Set<java.lang.String> classNames)",
    "name": "classNames",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Set",
          "name": "Set",
          "isArray": false
        },
        "name": "classNames"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hasClass(java.lang.String className)",
    "name": "hasClass",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "className"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addClass(java.lang.String className)",
    "name": "addClass",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "className"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "removeClass(java.lang.String className)",
    "name": "removeClass",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "className"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toggleClass(java.lang.String className)",
    "name": "toggleClass",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "className"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "val()",
    "name": "val",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the value of the form element, or empty string if not set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "val(java.lang.String value)",
    "name": "val",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "value to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this element (for chaining).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "outerHtmlHead(java.lang.Appendable accum, int depth, org.jsoup.nodes.Document$OutputSettings out)",
    "name": "outerHtmlHead",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Appendable",
          "name": "Appendable",
          "isArray": false
        },
        "name": "accum"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "depth"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Document$OutputSettings",
          "name": "OutputSettings",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "outerHtmlTail(java.lang.Appendable accum, int depth, org.jsoup.nodes.Document$OutputSettings out)",
    "name": "outerHtmlTail",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Appendable",
          "name": "Appendable",
          "isArray": false
        },
        "name": "accum"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "depth"
      },
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Document$OutputSettings",
          "name": "OutputSettings",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "html()",
    "name": "html",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "String of HTML.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "html(T appendable)",
    "name": "html",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "T",
      "name": "T",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Appendable",
          "name": "Appendable",
          "isArray": false
        },
        "name": "appendable"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "html(java.lang.String html)",
    "name": "html",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "html"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "html"
        },
        "comment": "HTML to parse and set into this element.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this element.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "clone()",
    "name": "clone",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "shallowClone()",
    "name": "shallowClone",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "doClone(org.jsoup.nodes.Node parent)",
    "name": "doClone",
    "containingClass": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "Element",
      "isArray": false
    },
    "targetClass": "org.jsoup.nodes.Element",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.jsoup.nodes.Element",
      "name": "org.jsoup.nodes.Element",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.jsoup.nodes.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "parent"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]