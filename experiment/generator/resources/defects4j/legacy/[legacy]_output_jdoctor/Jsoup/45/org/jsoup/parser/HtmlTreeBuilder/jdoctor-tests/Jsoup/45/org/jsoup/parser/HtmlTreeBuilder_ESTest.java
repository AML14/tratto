/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 21:44:54 GMT 2023
 */
package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.TextNode;
import org.jsoup.parser.CharacterReader;
import org.jsoup.parser.HtmlTreeBuilder;
import org.jsoup.parser.HtmlTreeBuilderState;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.Tag;
import org.jsoup.parser.Token;
import org.jsoup.parser.Tokeniser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class HtmlTreeBuilder_ESTest extends HtmlTreeBuilder_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "aside");
        Document document1 = document0.clone();
        htmlTreeBuilder0.replaceActiveFormattingElement(document1, document0);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String[] stringArray0 = new String[1];
        htmlTreeBuilder0.inScope(stringArray0);
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test0023() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        boolean boolean0 = htmlTreeBuilder0.inScope("textarea", htmlTreeBuilder0.TagsSearchInScope);
    }

    @Test(timeout = 4000)
    public void test0034() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("Q[{bt1CoW<8", "Q[{bt1CoW<8");
        Element element0 = document0.head();
        htmlTreeBuilder0.replaceOnStack(document0, element0);
    }

    @Test(timeout = 4000)
    public void test0045() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("TreeBuilder{currentToken=org.jsoup.parser.Token$EOF@13, state=InBody, currentElement=<body>\n _\n</body>}", "aV");
        Document document1 = document0.clone();
        htmlTreeBuilder0.insertOnStackAfter(document1, document0);
    }

    @Test(timeout = 4000)
    public void test0056() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("F", "F", (ParseErrorList) null);
        htmlTreeBuilder0.insertInFosterParent(document0);
        document0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test0067() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("Q[{bt1CoW<8", "Q[{bt1CoW<8");
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.Character token_Character0 = tokeniser0.charPending;
        htmlTreeBuilder0.insert(token_Character0);
        token_Character0.toString();
    }

    @Test(timeout = 4000)
    public void test0078() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("sGCm Tw\"jt+7rNsfGIS", "sGCm Tw\"jt+7rNsfGIS", (ParseErrorList) null);
        htmlTreeBuilder0.insert(document0);
        document0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test0079() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("sGCm Tw\"jt+7rNsfGIS", "sGCm Tw\"jt+7rNsfGIS", (ParseErrorList) null);
        htmlTreeBuilder0.insert(document0);
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test00910() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("", "");
        htmlTreeBuilder0.setHeadElement(document0);
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test01211() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.StartTag token_StartTag0 = new Token.StartTag();
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("h6", attributes0);
        htmlTreeBuilder0.insertEmpty(token_StartTag1);
    }

    @Test(timeout = 4000)
    public void test01512() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        String string0 = htmlTreeBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test01713() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        CharacterReader characterReader0 = htmlTreeBuilder0.reader;
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.Comment token_Comment0 = tokeniser0.commentPending;
        boolean boolean0 = htmlTreeBuilder0.process(token_Comment0);
    }

    @Test(timeout = 4000)
    public void test01814() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        Element element0 = htmlTreeBuilder0.pop();
        element0.baseUri();
    }

    @Test(timeout = 4000)
    public void test01815() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        Element element0 = htmlTreeBuilder0.pop();
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test01816() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        Element element0 = htmlTreeBuilder0.pop();
        boolean boolean0 = htmlTreeBuilder0.inSelectScope("'TjF");
    }

    @Test(timeout = 4000)
    public void test01917() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("Q[{btCo,W<8", "Q[{btCo,W<8");
        Element element0 = document0.head();
        boolean boolean0 = htmlTreeBuilder0.isSpecial(element0);
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test01918() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("Q[{btCo,W<8", "Q[{btCo,W<8");
        Element element0 = document0.head();
        boolean boolean0 = htmlTreeBuilder0.isSpecial(element0);
    }

    @Test(timeout = 4000)
    public void test02019() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("colgroup");
        boolean boolean0 = htmlTreeBuilder0.isSpecial(document0);
    }

    @Test(timeout = 4000)
    public void test02120() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        boolean boolean0 = htmlTreeBuilder0.isFosterInserts();
    }

    @Test(timeout = 4000)
    public void test02221() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        Element element0 = htmlTreeBuilder0.insertStartTag("style");
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test02322() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("Vl};:e", "progress");
        CharacterReader characterReader0 = new CharacterReader("noscript");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, (ParseErrorList) null);
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("RKjuL-3TR3)%", attributes0);
        Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test02323() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("Vl};:e", "progress");
        CharacterReader characterReader0 = new CharacterReader("noscript");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, (ParseErrorList) null);
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        Attributes attributes0 = new Attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("RKjuL-3TR3)%", attributes0);
        Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
        element0.baseUri();
    }

    @Test(timeout = 4000)
    public void test02424() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("thead", " > ");
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test02425() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("thead", " > ");
        document0.baseUri();
    }

    @Test(timeout = 4000)
    public void test02426() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("thead", " > ");
        boolean boolean0 = htmlTreeBuilder0.inTableScope("EgTf$");
    }

    @Test(timeout = 4000)
    public void test02527() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        document0.location();
    }

    @Test(timeout = 4000)
    public void test02528() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test02529() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        boolean boolean0 = htmlTreeBuilder0.inScope("body", htmlTreeBuilder0.TagsSearchInScope);
    }

    @Test(timeout = 4000)
    public void test02630() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
    }

    @Test(timeout = 4000)
    public void test02731() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.initialiseParse("v)V_&+nFix/y`DM", "e9 Mx_#;-a(", parseErrorList0);
        ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
        arrayList0.size();
    }

    @Test(timeout = 4000)
    public void test02832() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        Element element0 = htmlTreeBuilder0.getHeadElement();
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test02833() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        Element element0 = htmlTreeBuilder0.getHeadElement();
        element0.baseUri();
    }

    @Test(timeout = 4000)
    public void test02834() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        Element element0 = htmlTreeBuilder0.getHeadElement();
        element0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test02935() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        Element element0 = htmlTreeBuilder0.getFromStack("TreeBuilder{currentToken=org.jsoup.parser.Token$EOF@13, state=InBody, currentElement=<body />}");
    }

    @Test(timeout = 4000)
    public void test03036() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.initialiseParse("Ca", "'jF", (ParseErrorList) null);
        Document document0 = htmlTreeBuilder0.getDocument();
        document0.location();
    }

    @Test(timeout = 4000)
    public void test03137() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("F", "F", (ParseErrorList) null);
        Document document0 = htmlTreeBuilder0.getDocument();
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test03238() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        String string0 = htmlTreeBuilder0.getBaseUri();
    }

    @Test(timeout = 4000)
    public void test03339() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        boolean boolean0 = htmlTreeBuilder0.framesetOk();
    }

    @Test(timeout = 4000)
    public void test03440() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test03441() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        document0.baseUri();
    }

    @Test(timeout = 4000)
    public void test03442() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        boolean boolean0 = htmlTreeBuilder0.framesetOk();
    }

    @Test(timeout = 4000)
    public void test03543() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.resetInsertionMode();
    }

    @Test(timeout = 4000)
    public void test03644() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.replaceOnStack((Element) null, (Element) null);
    }

    @Test(timeout = 4000)
    public void test03745() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = new Document("WyEI]'7rN");
        htmlTreeBuilder0.removeFromStack(document0);
    }

    @Test(timeout = 4000)
    public void test03846() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.push((Element) null);
    }

    @Test(timeout = 4000)
    public void test03947() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterAfterFrameset;
        htmlTreeBuilder0.process((Token) null, htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test04048() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        CharacterReader characterReader0 = new CharacterReader("pre");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(1223);
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.Tag token_Tag0 = tokeniser0.createTagPending(true);
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InHeadNoscript;
        htmlTreeBuilder0.process(token_Tag0, htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test04149() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        CharacterReader characterReader0 = new CharacterReader("table");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.Doctype token_Doctype0 = tokeniser0.doctypePending;
        Token.TokenType token_TokenType0 = Token.TokenType.Character;
        token_Doctype0.type = token_TokenType0;
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.BeforeHead;
        htmlTreeBuilder0.process(token_Doctype0, htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test04250() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        CharacterReader characterReader0 = new CharacterReader("f2*BS>:okK]H<=p([+:");
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
        Token.Doctype token_Doctype0 = tokeniser0.doctypePending;
        htmlTreeBuilder0.process(token_Doctype0);
    }

    @Test(timeout = 4000)
    public void test04351() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("center", "center");
        Token.StartTag token_StartTag0 = new Token.StartTag();
        htmlTreeBuilder0.process(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test04452() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.popStackToClose("5");
    }

    @Test(timeout = 4000)
    public void test04553() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.popStackToBefore((String) null);
    }

    @Test(timeout = 4000)
    public void test04654() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.pop();
    }

    @Test(timeout = 4000)
    public void test04755() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("Q[{bt1CoW<8", "Q[{bt1CoW<8");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking((-684));
        htmlTreeBuilder0.parseFragment((String) null, document0, "utf", parseErrorList0);
    }

    @Test(timeout = 4000)
    public void test04856() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(1186);
        htmlTreeBuilder0.parse("StartTag", (String) null, parseErrorList0);
    }

    @Test(timeout = 4000)
    public void test04957() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.onStack((Element) null);
    }

    @Test(timeout = 4000)
    public void test05058() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.maybeSetBaseUri((Element) null);
    }

    @Test(timeout = 4000)
    public void test05159() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertStartTag("");
    }

    @Test(timeout = 4000)
    public void test05260() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Tag tag0 = Tag.valueOf("3y8r]MK(");
        TextNode textNode0 = TextNode.createFromEncoded("sQ+V0KT4wmmv6.e=t", "sQ+V0KT4wmmv6.e=t");
        Attributes attributes0 = textNode0.attributes();
        Element element0 = new Element(tag0, "sQ+V0KT4wmmv6.e=t", attributes0);
        htmlTreeBuilder0.insertOnStackAfter(element0, element0);
    }

    @Test(timeout = 4000)
    public void test05361() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertInFosterParent((Node) null);
    }

    @Test(timeout = 4000)
    public void test05462() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("Q[{bt1CoW<8", "Q[{bt1CoW<8");
        String[] stringArray0 = new String[2];
        stringArray0[0] = "Q[{bt1CoW<8";
        stringArray0[1] = "Q[{bt1CoW<8";
        htmlTreeBuilder0.popStackToClose(stringArray0);
        htmlTreeBuilder0.insertInFosterParent(document0);
    }

    @Test(timeout = 4000)
    public void test05563() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertForm((Token.StartTag) null, false);
    }

    @Test(timeout = 4000)
    public void test05664() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        CharacterReader characterReader0 = new CharacterReader("");
        Tokeniser tokeniser0 = new Tokeniser(characterReader0, (ParseErrorList) null);
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        htmlTreeBuilder0.insertForm(token_StartTag0, false);
    }

    @Test(timeout = 4000)
    public void test05765() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insertEmpty((Token.StartTag) null);
    }

    @Test(timeout = 4000)
    public void test05866() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insert((Token.StartTag) null);
    }

    @Test(timeout = 4000)
    public void test05967() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insert((Token.Comment) null);
    }

    @Test(timeout = 4000)
    public void test06068() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insert((Token.Character) null);
    }

    @Test(timeout = 4000)
    public void test06169() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insert((Element) null);
    }

    @Test(timeout = 4000)
    public void test06270() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("Q[{bt1CoW<8", "Q[{bt1CoW<8");
        String[] stringArray0 = new String[2];
        stringArray0[0] = "Q[{bt1CoW<8";
        stringArray0[1] = "Q[{bt1CoW<8";
        htmlTreeBuilder0.popStackToClose(stringArray0);
        htmlTreeBuilder0.inTableScope("Q[{bt1CoW<8");
    }

    @Test(timeout = 4000)
    public void test06371() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inSelectScope((String) null);
    }

    @Test(timeout = 4000)
    public void test06472() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        htmlTreeBuilder0.popStackToClose("AfterDoctypeSystemIdentifier");
        htmlTreeBuilder0.inScope("textarea", htmlTreeBuilder0.TagsSearchInScope);
    }

    @Test(timeout = 4000)
    public void test06573() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.getFromStack((String) null);
    }

    @Test(timeout = 4000)
    public void test06674() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.generateImpliedEndTags("");
    }

    @Test(timeout = 4000)
    public void test06775() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterFrameset;
        htmlTreeBuilder0.error(htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test06876() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.aboveOnStack((Element) null);
    }

    @Test(timeout = 4000)
    public void test07177() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        htmlTreeBuilder0.aboveOnStack(document0);
    }

    @Test(timeout = 4000)
    public void test07378() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("Q[{bt1CoW<8", "Q[{bt1CoW<8");
        Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
        Token.StartTag token_StartTag0 = tokeniser0.startPending;
        TextNode textNode0 = new TextNode("uS\"c%)-V", "Q[{bt1CoW<8");
        Attributes attributes0 = textNode0.attributes();
        Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("style", attributes0);
        FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag1, false);
        formElement0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test07479() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Tag tag0 = Tag.valueOf("BZ(%L.wD^u+");
        TextNode textNode0 = TextNode.createFromEncoded("BZ(%L.wD^u+", "2 =`hrBUh16cL=");
        Attributes attributes0 = textNode0.attributes();
        FormElement formElement0 = new FormElement(tag0, "BZ(%L.wD^u+", attributes0);
        htmlTreeBuilder0.maybeSetBaseUri(formElement0);
        formElement0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test07580() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inListItemScope("Q[{bt1CoW<8");
    }

    @Test(timeout = 4000)
    public void test07881() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.getDocument();
    }

    @Test(timeout = 4000)
    public void test07982() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        String string0 = htmlTreeBuilder0.getBaseUri();
    }

    @Test(timeout = 4000)
    public void test08083() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
        Element element0 = htmlTreeBuilder0.getActiveFormattingElement("7Sy~(C-Jv");
    }

    @Test(timeout = 4000)
    public void test08184() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getActiveFormattingElement("%>vDE");
    }

    @Test(timeout = 4000)
    public void test08385() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
    }

    @Test(timeout = 4000)
    public void test08486() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
        Element element0 = htmlTreeBuilder0.lastFormattingElement();
    }

    @Test(timeout = 4000)
    public void test08587() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("body", "body", parseErrorList0);
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test08588() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("body", "body", parseErrorList0);
        boolean boolean0 = htmlTreeBuilder0.inSelectScope("body");
    }

    @Test(timeout = 4000)
    public void test08689() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        htmlTreeBuilder0.popStackToClose("sGCm 3w\"jt+7rNsfIS");
        htmlTreeBuilder0.inSelectScope("'QjF");
    }

    @Test(timeout = 4000)
    public void test08790() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        document0.baseUri();
    }

    @Test(timeout = 4000)
    public void test08791() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test08792() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        boolean boolean0 = htmlTreeBuilder0.inButtonScope("Qu.e9l!");
    }

    @Test(timeout = 4000)
    public void test08893() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test08894() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        document0.baseUri();
    }

    @Test(timeout = 4000)
    public void test08895() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        boolean boolean0 = htmlTreeBuilder0.inButtonScope("body");
    }

    @Test(timeout = 4000)
    public void test09096() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("Q[{bt1CoW<8", "Q[{bt1CoW<8");
        Element element0 = document0.head();
        ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("Q[{bt1CoW<8", element0, "Q[{bt1CoW<8", parseErrorList0);
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test09097() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("Q[{bt1CoW<8", "Q[{bt1CoW<8");
        Element element0 = document0.head();
        ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("Q[{bt1CoW<8", element0, "Q[{bt1CoW<8", parseErrorList0);
        element0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test09098() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("Q[{bt1CoW<8", "Q[{bt1CoW<8");
        Element element0 = document0.head();
        ParseErrorList parseErrorList0 = htmlTreeBuilder0.errors;
        List<Node> list0 = htmlTreeBuilder0.parseFragment("Q[{bt1CoW<8", element0, "Q[{bt1CoW<8", parseErrorList0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test09199() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("Q[{bt1CoW<8", "Q[{bt1CoW<8");
        htmlTreeBuilder0.push(document0);
        htmlTreeBuilder0.replaceOnStack(document0, document0);
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test095100() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("Q[{bt1CoW<8", "Q[{bt1CoW<8");
        String[] stringArray0 = new String[2];
        stringArray0[0] = "Q[{bt1CoW<8";
        stringArray0[1] = "Q[{bt1CoW<8";
        htmlTreeBuilder0.popStackToClose(stringArray0);
        htmlTreeBuilder0.inScope("Q[{bt1CoW<8");
    }

    @Test(timeout = 4000)
    public void test096101() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
    }

    @Test(timeout = 4000)
    public void test096102() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
        document0.location();
    }

    @Test(timeout = 4000)
    public void test096103() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        Document document0 = htmlTreeBuilder0.parse("body", "uS\"c%)-V", parseErrorList0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test097104() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("body", "body", parseErrorList0);
        Element element0 = htmlTreeBuilder0.getFromStack("body");
    }

    @Test(timeout = 4000)
    public void test097105() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
        htmlTreeBuilder0.parse("body", "body", parseErrorList0);
        Element element0 = htmlTreeBuilder0.getFromStack("body");
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test098106() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("Q[{bt1CoW<8", "Q[{bt1CoW<8");
        Element element0 = htmlTreeBuilder0.currentElement();
        boolean boolean0 = htmlTreeBuilder0.onStack(element0);
    }

    @Test(timeout = 4000)
    public void test098107() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("Q[{bt1CoW<8", "Q[{bt1CoW<8");
        Element element0 = htmlTreeBuilder0.currentElement();
        boolean boolean0 = htmlTreeBuilder0.onStack(element0);
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test099108() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("Q[{bt1CoW<8", "Q[{bt1CoW<8");
        Element element0 = htmlTreeBuilder0.insertStartTag("input");
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test101109() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.parse("", "");
        htmlTreeBuilder0.setFosterInserts(true);
        Element element0 = htmlTreeBuilder0.insertStartTag("systemId");
        element0.siblingIndex();
    }

    @Test(timeout = 4000)
    public void test102110() throws Throwable {
        Token.StartTag token_StartTag0 = new Token.StartTag();
        token_StartTag0.selfClosing = true;
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.insert(token_StartTag0);
    }

    @Test(timeout = 4000)
    public void test103111() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(512, 512);
        Document document0 = htmlTreeBuilder0.parse("TreeBuilder{currentToken=org.jsoup.parser.Token$EOF@13, state=InBody, currentElement=<body />}", "TreeBuilder{currentToken=org.jsoup.parser.Token$EOF@13, state=InBody, currentElement=<body />}", parseErrorList0);
        parseErrorList0.size();
    }

    @Test(timeout = 4000)
    public void test103112() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = new ParseErrorList(512, 512);
        Document document0 = htmlTreeBuilder0.parse("TreeBuilder{currentToken=org.jsoup.parser.Token$EOF@13, state=InBody, currentElement=<body />}", "TreeBuilder{currentToken=org.jsoup.parser.Token$EOF@13, state=InBody, currentElement=<body />}", parseErrorList0);
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test104113() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("thead", " > ");
        ParseErrorList parseErrorList0 = ParseErrorList.tracking(1302);
        htmlTreeBuilder0.parseFragment("thead", document0, "-(<(LWqCI8<W5Pk", parseErrorList0);
        boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
    }

    @Test(timeout = 4000)
    public void test105114() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        ParseErrorList parseErrorList0 = ParseErrorList.tracking((-66453492));
        List<Node> list0 = htmlTreeBuilder0.parseFragment("", (Element) null, "", parseErrorList0);
        list0.size();
    }

    @Test(timeout = 4000)
    public void test106115() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableContext();
    }

    @Test(timeout = 4000)
    public void test108116() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inTableScope("Q[{bt1CoW<8");
    }

    @Test(timeout = 4000)
    public void test109117() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.Comment token_Comment0 = new Token.Comment();
        htmlTreeBuilder0.insert(token_Comment0);
    }

    @Test(timeout = 4000)
    public void test110118() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.isSpecial((Element) null);
    }

    @Test(timeout = 4000)
    public void test111119() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("Q[{bt1CoW<8", "Q[{bt1CoW<8");
        htmlTreeBuilder0.push(document0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
    }

    @Test(timeout = 4000)
    public void test111120() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("Q[{bt1CoW<8", "Q[{bt1CoW<8");
        htmlTreeBuilder0.push(document0);
        boolean boolean0 = htmlTreeBuilder0.removeFromStack(document0);
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test112121() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.setFosterInserts(true);
        boolean boolean0 = htmlTreeBuilder0.isFosterInserts();
    }

    @Test(timeout = 4000)
    public void test113122() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
    }

    @Test(timeout = 4000)
    public void test114123() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("Q[{bt1CoW<8", "Q[{bt1CoW<8");
        boolean boolean0 = htmlTreeBuilder0.onStack(document0);
    }

    @Test(timeout = 4000)
    public void test114124() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Document document0 = htmlTreeBuilder0.parse("Q[{bt1CoW<8", "Q[{bt1CoW<8");
        boolean boolean0 = htmlTreeBuilder0.onStack(document0);
        document0.childNodeSize();
    }

    @Test(timeout = 4000)
    public void test115125() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        List<String> list0 = htmlTreeBuilder0.getPendingTableCharacters();
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test116126() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.inScope("n7{>J#A%Cur/S3{A=");
    }

    @Test(timeout = 4000)
    public void test117127() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
        List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null);
        htmlTreeBuilder0.setPendingTableCharacters(list0);
        list0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test119128() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableRowContext();
    }

    @Test(timeout = 4000)
    public void test120129() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        FormElement formElement0 = htmlTreeBuilder0.getFormElement();
    }

    @Test(timeout = 4000)
    public void test124130() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Token.EOF token_EOF0 = new Token.EOF();
        HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.AfterAfterFrameset;
        boolean boolean0 = htmlTreeBuilder0.process(token_EOF0, htmlTreeBuilderState0);
    }

    @Test(timeout = 4000)
    public void test125131() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.toString();
    }

    @Test(timeout = 4000)
    public void test126132() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        htmlTreeBuilder0.clearStackToTableBodyContext();
    }

    @Test(timeout = 4000)
    public void test127133() throws Throwable {
        HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
        Element element0 = htmlTreeBuilder0.getHeadElement();
    }
}
