[
  {
    "signature": "org.joda.time.MutableDateTime()",
    "name": "org.joda.time.MutableDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.MutableDateTime(org.joda.time.DateTimeZone zone)",
    "name": "org.joda.time.MutableDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeZone",
          "name": "DateTimeZone",
          "isArray": false
        },
        "name": "zone"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeZone",
            "name": "DateTimeZone",
            "isArray": false
          },
          "name": "zone"
        },
        "comment": "the time zone. zone is null means default zone.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.MutableDateTime(org.joda.time.Chronology chronology)",
    "name": "org.joda.time.MutableDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chronology"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chronology"
        },
        "comment": "the chronology. chronology is null means ISOChronology in default zone.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.MutableDateTime(long instant)",
    "name": "org.joda.time.MutableDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "instant"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "instant"
        },
        "comment": "the milliseconds from 1970-01-01T00:00:00Z.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.MutableDateTime(long instant, org.joda.time.DateTimeZone zone)",
    "name": "org.joda.time.MutableDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "instant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeZone",
          "name": "DateTimeZone",
          "isArray": false
        },
        "name": "zone"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "instant"
        },
        "comment": "the milliseconds from 1970-01-01T00:00:00Z.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeZone",
            "name": "DateTimeZone",
            "isArray": false
          },
          "name": "zone"
        },
        "comment": "the time zone. zone is null means default zone.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.MutableDateTime(long instant, org.joda.time.Chronology chronology)",
    "name": "org.joda.time.MutableDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "instant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chronology"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "instant"
        },
        "comment": "the milliseconds from 1970-01-01T00:00:00Z.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chronology"
        },
        "comment": "the chronology. chronology is null means ISOChronology in default zone.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.MutableDateTime(java.lang.Object instant)",
    "name": "org.joda.time.MutableDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "instant"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "instant"
        },
        "comment": "the datetime object. instant is null means now.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the instant is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.joda.time.MutableDateTime(java.lang.Object instant, org.joda.time.DateTimeZone zone)",
    "name": "org.joda.time.MutableDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "instant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeZone",
          "name": "DateTimeZone",
          "isArray": false
        },
        "name": "zone"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "instant"
        },
        "comment": "the datetime object. instant is null means now.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeZone",
            "name": "DateTimeZone",
            "isArray": false
          },
          "name": "zone"
        },
        "comment": "the time zone. zone is null means default time zone.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the instant is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.joda.time.MutableDateTime(java.lang.Object instant, org.joda.time.Chronology chronology)",
    "name": "org.joda.time.MutableDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "instant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chronology"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "instant"
        },
        "comment": "the datetime object. instant is null means now.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chronology"
        },
        "comment": "the chronology. chronology is null means ISOChronology in default zone.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the instant is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.joda.time.MutableDateTime(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond)",
    "name": "org.joda.time.MutableDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "year"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "monthOfYear"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dayOfMonth"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hourOfDay"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minuteOfHour"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "secondOfMinute"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millisOfSecond"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "year"
        },
        "comment": "the year.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "monthOfYear"
        },
        "comment": "the month of the year.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dayOfMonth"
        },
        "comment": "the day of the month.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hourOfDay"
        },
        "comment": "the hour of the day.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minuteOfHour"
        },
        "comment": "the minute of the hour.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "secondOfMinute"
        },
        "comment": "the second of the minute.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millisOfSecond"
        },
        "comment": "the millisecond of the second.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.MutableDateTime(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond, org.joda.time.DateTimeZone zone)",
    "name": "org.joda.time.MutableDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "year"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "monthOfYear"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dayOfMonth"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hourOfDay"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minuteOfHour"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "secondOfMinute"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millisOfSecond"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeZone",
          "name": "DateTimeZone",
          "isArray": false
        },
        "name": "zone"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "year"
        },
        "comment": "the year.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "monthOfYear"
        },
        "comment": "the month of the year.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dayOfMonth"
        },
        "comment": "the day of the month.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hourOfDay"
        },
        "comment": "the hour of the day.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minuteOfHour"
        },
        "comment": "the minute of the hour.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "secondOfMinute"
        },
        "comment": "the second of the minute.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millisOfSecond"
        },
        "comment": "the millisecond of the second.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeZone",
            "name": "DateTimeZone",
            "isArray": false
          },
          "name": "zone"
        },
        "comment": "the time zone. zone is null means default time zone.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.MutableDateTime(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond, org.joda.time.Chronology chronology)",
    "name": "org.joda.time.MutableDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "year"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "monthOfYear"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dayOfMonth"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hourOfDay"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minuteOfHour"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "secondOfMinute"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millisOfSecond"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chronology"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "year"
        },
        "comment": "the year.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "monthOfYear"
        },
        "comment": "the month of the year.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dayOfMonth"
        },
        "comment": "the day of the month.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hourOfDay"
        },
        "comment": "the hour of the day.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minuteOfHour"
        },
        "comment": "the minute of the hour.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "secondOfMinute"
        },
        "comment": "the second of the minute.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millisOfSecond"
        },
        "comment": "the millisecond of the second.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chronology"
        },
        "comment": "the chronology. chronology is null means ISOChronology in default zone.",
        "kind": "PARAM",
        "condition": "args[7]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "now()",
    "name": "now",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "org.joda.time.MutableDateTime",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the current date-time, not null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "now(org.joda.time.DateTimeZone zone)",
    "name": "now",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "org.joda.time.MutableDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeZone",
          "name": "DateTimeZone",
          "isArray": false
        },
        "name": "zone"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeZone",
            "name": "DateTimeZone",
            "isArray": false
          },
          "name": "zone"
        },
        "comment": "the time zone. zone is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the current date-time, not null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "now(org.joda.time.Chronology chronology)",
    "name": "now",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "org.joda.time.MutableDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chronology"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chronology"
        },
        "comment": "the chronology. chronology is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the current date-time, not null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "parse(java.lang.String str)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "org.joda.time.MutableDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to parse. str is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "parse(java.lang.String str, org.joda.time.format.DateTimeFormatter formatter)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "org.joda.time.MutableDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.format.DateTimeFormatter",
          "name": "DateTimeFormatter",
          "isArray": false
        },
        "name": "formatter"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to parse. str is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.format.DateTimeFormatter",
            "name": "DateTimeFormatter",
            "isArray": false
          },
          "name": "formatter"
        },
        "comment": "the formatter to use. formatter is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getRoundingField()",
    "name": "getRoundingField",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.DateTimeField",
      "name": "org.joda.time.DateTimeField",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the rounding field.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getRoundingMode()",
    "name": "getRoundingMode",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the rounding mode constant.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setRounding(org.joda.time.DateTimeField field)",
    "name": "setRounding",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeField",
          "name": "DateTimeField",
          "isArray": false
        },
        "name": "field"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeField",
            "name": "DateTimeField",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "rounding field or null to disable.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setRounding(org.joda.time.DateTimeField field, int mode)",
    "name": "setRounding",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeField",
          "name": "DateTimeField",
          "isArray": false
        },
        "name": "field"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "mode"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeField",
            "name": "DateTimeField",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "rounding field or null to disable.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "mode"
        },
        "comment": "rounding mode or ROUND_NONE to disable.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "mode is unknown no exception if field is null.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setMillis(long instant)",
    "name": "setMillis",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "instant"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "instant"
        },
        "comment": "the milliseconds since 1970-01-01T00:00:00Z to set the datetime to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setMillis(org.joda.time.ReadableInstant instant)",
    "name": "setMillis",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableInstant",
          "name": "ReadableInstant",
          "isArray": false
        },
        "name": "instant"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableInstant",
            "name": "ReadableInstant",
            "isArray": false
          },
          "name": "instant"
        },
        "comment": "the instant to use. instant is null means now.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "add(long duration)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "duration"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the millis to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the result exceeds the capacity of the instant.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "add(org.joda.time.ReadableDuration duration)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableDuration",
          "name": "ReadableDuration",
          "isArray": false
        },
        "name": "duration"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableDuration",
            "name": "ReadableDuration",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the duration to add. duration is null means add zero.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the result exceeds the capacity of the instant.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "add(org.joda.time.ReadableDuration duration, int scalar)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableDuration",
          "name": "ReadableDuration",
          "isArray": false
        },
        "name": "duration"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "scalar"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableDuration",
            "name": "ReadableDuration",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the duration to add. duration is null means add zero.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "scalar"
        },
        "comment": "direction and amount to add. scalar is which negative.",
        "kind": "PARAM",
        "condition": "args[1]<0"
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the result exceeds the capacity of the instant.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "add(org.joda.time.ReadablePeriod period)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePeriod",
          "name": "ReadablePeriod",
          "isArray": false
        },
        "name": "period"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePeriod",
            "name": "ReadablePeriod",
            "isArray": false
          },
          "name": "period"
        },
        "comment": "the period to add. period is null means add zero.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the result exceeds the capacity of the instant.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "add(org.joda.time.ReadablePeriod period, int scalar)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePeriod",
          "name": "ReadablePeriod",
          "isArray": false
        },
        "name": "period"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "scalar"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePeriod",
            "name": "ReadablePeriod",
            "isArray": false
          },
          "name": "period"
        },
        "comment": "the period to add. period is null means add zero.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "scalar"
        },
        "comment": "direction and amount to add. scalar is which negative.",
        "kind": "PARAM",
        "condition": "args[1]<0"
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the result exceeds the capacity of the instant.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setChronology(org.joda.time.Chronology chronology)",
    "name": "setChronology",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chronology"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chronology"
        },
        "comment": "the chronology to use. chronology is null means ISOChronology in default zone.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setZone(org.joda.time.DateTimeZone newZone)",
    "name": "setZone",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeZone",
          "name": "DateTimeZone",
          "isArray": false
        },
        "name": "newZone"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeZone",
            "name": "DateTimeZone",
            "isArray": false
          },
          "name": "newZone"
        },
        "comment": "the time zone to use. newZone is null means default zone.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setZoneRetainFields(org.joda.time.DateTimeZone newZone)",
    "name": "setZoneRetainFields",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeZone",
          "name": "DateTimeZone",
          "isArray": false
        },
        "name": "newZone"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeZone",
            "name": "DateTimeZone",
            "isArray": false
          },
          "name": "newZone"
        },
        "comment": "the time zone to use. newZone is null means default zone.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "set(org.joda.time.DateTimeFieldType type, int value)",
    "name": "set",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeFieldType",
          "name": "DateTimeFieldType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeFieldType",
            "name": "DateTimeFieldType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "a field type usually obtained from DateTimeFieldType. type is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to set the field to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is null or invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "add(org.joda.time.DurationFieldType type, int amount)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DurationFieldType",
          "name": "DurationFieldType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DurationFieldType",
            "name": "DurationFieldType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "a field type usually obtained from DateTimeFieldType. type is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "the amount to add of this duration.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is null or invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the result exceeds the capacity of the instant.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setYear(int year)",
    "name": "setYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "year"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "year"
        },
        "comment": "the year.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "addYears(int years)",
    "name": "addYears",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "years"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "years"
        },
        "comment": "the years to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setWeekyear(int weekyear)",
    "name": "setWeekyear",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "weekyear"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "weekyear"
        },
        "comment": "the weekyear.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "addWeekyears(int weekyears)",
    "name": "addWeekyears",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "weekyears"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "weekyears"
        },
        "comment": "the weekyears to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setMonthOfYear(int monthOfYear)",
    "name": "setMonthOfYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "monthOfYear"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "monthOfYear"
        },
        "comment": "the month of the year.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "addMonths(int months)",
    "name": "addMonths",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "months"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "months"
        },
        "comment": "the months to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setWeekOfWeekyear(int weekOfWeekyear)",
    "name": "setWeekOfWeekyear",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "weekOfWeekyear"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "weekOfWeekyear"
        },
        "comment": "the week of the weekyear.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "addWeeks(int weeks)",
    "name": "addWeeks",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "weeks"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "weeks"
        },
        "comment": "the weeks to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setDayOfYear(int dayOfYear)",
    "name": "setDayOfYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dayOfYear"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dayOfYear"
        },
        "comment": "the day of the year.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setDayOfMonth(int dayOfMonth)",
    "name": "setDayOfMonth",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dayOfMonth"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dayOfMonth"
        },
        "comment": "the day of the month.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setDayOfWeek(int dayOfWeek)",
    "name": "setDayOfWeek",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dayOfWeek"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dayOfWeek"
        },
        "comment": "the day of the week.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "addDays(int days)",
    "name": "addDays",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "days"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "days"
        },
        "comment": "the days to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setHourOfDay(int hourOfDay)",
    "name": "setHourOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hourOfDay"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hourOfDay"
        },
        "comment": "the hour of day.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "addHours(int hours)",
    "name": "addHours",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hours"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hours"
        },
        "comment": "the hours to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setMinuteOfDay(int minuteOfDay)",
    "name": "setMinuteOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minuteOfDay"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minuteOfDay"
        },
        "comment": "the minute of day.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setMinuteOfHour(int minuteOfHour)",
    "name": "setMinuteOfHour",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minuteOfHour"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minuteOfHour"
        },
        "comment": "the minute of hour.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "addMinutes(int minutes)",
    "name": "addMinutes",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minutes"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minutes"
        },
        "comment": "the minutes to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setSecondOfDay(int secondOfDay)",
    "name": "setSecondOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "secondOfDay"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "secondOfDay"
        },
        "comment": "the second of day.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setSecondOfMinute(int secondOfMinute)",
    "name": "setSecondOfMinute",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "secondOfMinute"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "secondOfMinute"
        },
        "comment": "the second of minute.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "addSeconds(int seconds)",
    "name": "addSeconds",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "seconds"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "seconds"
        },
        "comment": "the seconds to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setMillisOfDay(int millisOfDay)",
    "name": "setMillisOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millisOfDay"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millisOfDay"
        },
        "comment": "the millis of day.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setMillisOfSecond(int millisOfSecond)",
    "name": "setMillisOfSecond",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millisOfSecond"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millisOfSecond"
        },
        "comment": "the millis of second.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "addMillis(int millis)",
    "name": "addMillis",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millis"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millis"
        },
        "comment": "the milliseconds to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setDate(long instant)",
    "name": "setDate",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "instant"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "instant"
        },
        "comment": "an instant to copy the date from time part ignored.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setDate(org.joda.time.ReadableInstant instant)",
    "name": "setDate",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableInstant",
          "name": "ReadableInstant",
          "isArray": false
        },
        "name": "instant"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableInstant",
            "name": "ReadableInstant",
            "isArray": false
          },
          "name": "instant"
        },
        "comment": "an instant to copy the date from time part ignored.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the object is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setDate(int year, int monthOfYear, int dayOfMonth)",
    "name": "setDate",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "year"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "monthOfYear"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dayOfMonth"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "year"
        },
        "comment": "the year.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "monthOfYear"
        },
        "comment": "the month of the year.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dayOfMonth"
        },
        "comment": "the day of the month.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setTime(long millis)",
    "name": "setTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "millis"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "millis"
        },
        "comment": "an instant to copy the time from date part ignored.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setTime(org.joda.time.ReadableInstant instant)",
    "name": "setTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableInstant",
          "name": "ReadableInstant",
          "isArray": false
        },
        "name": "instant"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableInstant",
            "name": "ReadableInstant",
            "isArray": false
          },
          "name": "instant"
        },
        "comment": "an instant to copy the time from date part ignored.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the object is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setTime(int hour, int minuteOfHour, int secondOfMinute, int millisOfSecond)",
    "name": "setTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hour"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minuteOfHour"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "secondOfMinute"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millisOfSecond"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hour"
        },
        "comment": "the hour.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minuteOfHour"
        },
        "comment": "the minute of the hour.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "secondOfMinute"
        },
        "comment": "the second of the minute.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millisOfSecond"
        },
        "comment": "the millisecond of the second.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setDateTime(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond)",
    "name": "setDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "year"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "monthOfYear"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dayOfMonth"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hourOfDay"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minuteOfHour"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "secondOfMinute"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millisOfSecond"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "year"
        },
        "comment": "the year.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "monthOfYear"
        },
        "comment": "the month of the year.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dayOfMonth"
        },
        "comment": "the day of the month.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hourOfDay"
        },
        "comment": "the hour of the day.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minuteOfHour"
        },
        "comment": "the minute of the hour.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "secondOfMinute"
        },
        "comment": "the second of the minute.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millisOfSecond"
        },
        "comment": "the millisecond of the second.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "property(org.joda.time.DateTimeFieldType type)",
    "name": "property",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeFieldType",
          "name": "DateTimeFieldType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeFieldType",
            "name": "DateTimeFieldType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "the field type to get the chronology for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the property object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is null or unsupported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "era()",
    "name": "era",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the era property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "centuryOfEra()",
    "name": "centuryOfEra",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the year of era property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "yearOfCentury()",
    "name": "yearOfCentury",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the year of era property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "yearOfEra()",
    "name": "yearOfEra",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the year of era property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "year()",
    "name": "year",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the year property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "weekyear()",
    "name": "weekyear",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the year of a week based year property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "monthOfYear()",
    "name": "monthOfYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the month of year property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "weekOfWeekyear()",
    "name": "weekOfWeekyear",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the week of a week based year property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "dayOfYear()",
    "name": "dayOfYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the day of year property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "dayOfMonth()",
    "name": "dayOfMonth",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the day of month property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "dayOfWeek()",
    "name": "dayOfWeek",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the day of week property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hourOfDay()",
    "name": "hourOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the hour of day property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "minuteOfDay()",
    "name": "minuteOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the minute of day property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "minuteOfHour()",
    "name": "minuteOfHour",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the minute of hour property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "secondOfDay()",
    "name": "secondOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the second of day property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "secondOfMinute()",
    "name": "secondOfMinute",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the second of minute property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "millisOfDay()",
    "name": "millisOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the millis of day property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "millisOfSecond()",
    "name": "millisOfSecond",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime$Property",
      "name": "org.joda.time.MutableDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the millis of second property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "copy()",
    "name": "copy",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "org.joda.time.MutableDateTime",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a clone of the this object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "clone()",
    "name": "clone",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a clone of this object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.joda.time.MutableDateTime",
      "name": "MutableDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.MutableDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "ISO8601 time formatted string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]